[{"title": "Session details: Opening Keynote", "link": "https://dl.acm.org/doi/10.1145/3385531", "abstract": "No abstract available.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia"}, {"name": "Jian Zhang", "affiliation": "Texas Woman's University"}, {"name": "Pamela Cutter", "affiliation": "Kalamazoo College"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University"}, {"name": "Alvaro Monge", "affiliation": "California State University Long Beach"}], "tags": []}, {"title": "Changing the Landscape of Computing: A Vision for the Next 25 Years", "link": "https://dl.acm.org/doi/10.1145/3328778.3372550", "abstract": "According to the U.S. Census, the United States of America will become a majority-minority country by 2045. As the U.S. experiences this demographic shift, what will happen to computer science? Will our discipline become more inclusive? What shifts will occur in computer science? Computer science does not have a good record addressing its diversity challenges. A simple Google search for \"Silicon Valley's Diversity Problem\", really makes this clear. Further exploration into data from the Computing Research Association (CRA), shows how underrepresented minority groups are in computing at the Bachelor, Master, Doctoral, and faculty levels. Can computer science improve its diversity during the demographic shift? Dr. Gilbert believe it is possible to change the demographics in computer science, but it will require a cultural shift in computing along with institutional change, starting with computer science education.", "authors": [{"name": "Juan E. Gilbert", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": []}, {"title": "Session details: Paper Session: Security A", "link": "https://dl.acm.org/doi/10.1145/3385532", "abstract": "No abstract available.", "authors": [{"name": "Muath Obaidat", "affiliation": "City University of New York"}], "tags": []}, {"title": "What Are Cybersecurity Education Papers About?: A Systematic Literature Review of SIGCSE and ITiCSE Conferences", "link": "https://dl.acm.org/doi/10.1145/3328778.3366816", "abstract": "Cybersecurity is now more important than ever, and so is education in this field. However, the cybersecurity domain encompasses an extensive set of concepts, which can be taught in different ways and contexts. To understand the state of the art of cybersecurity education and related research, we examine papers from the ACM SIGCSE and ACM ITiCSE conferences. From 2010 to 2019, a total of 1,748 papers were published at these conferences, and 71 of them focus on cybersecurity education. The papers discuss courses, tools, exercises, and teaching approaches. For each paper, we map the covered topics, teaching context, evaluation methods, impact, and the community of authors. We discovered that the technical topic areas are evenly covered (the most prominent being secure programming, network security, and offensive security), and human aspects, such as privacy and social engineering, are present as well. The interventions described in SIGCSE and ITiCSE papers predominantly focus on tertiary education in the USA. The subsequent evaluation mostly consists of collecting students' subjective perceptions via questionnaires. However, less than a third of the papers provide supplementary materials for other educators, and none of the authors published their dataset. Our results provide orientation in the area, a synthesis of trends, and implications for further research. Therefore, they are relevant for instructors, researchers, and anyone new in the field of cybersecurity education. The information we collected and synthesized from individual papers are organized in a publicly available dataset.", "authors": [{"name": "Valdemar \u0160v\u00e1bensk\u00fd", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Pavel \u010celeda", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Jan Vykopal", "affiliation": "Masaryk University, Brno, Czech Rep"}], "tags": ["systematic mapping study", "systematic literature review", "cybersecurity education", "sigcse community", "iticse community", "survey"]}, {"title": "Integration and Evaluation of Spiral Theory based Cybersecurity Modules into core Computer Science and Engineering Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3366798", "abstract": "Cybersecurity education has been emphasized by several national organizations in the United States, including the National Academy of Engineering, which recognizes securing cyberspace as one of the 14 Engineering Grand Challenges. To prepare students for such challenges and to enhance cybersecurity education opportunities at our large research university, we implemented an NSF-funded cybersecurity education project. This project is a collaborative effort between faculty and graduate students in the Engineering Education, Computer Science (CS) and Computer Engineering (CPE) departments at a major US research university. In this effort, we integrated cybersecurity learning modules into multiple existing core CS and CPE courses following Jerome Bruner's spiral-theory model, which has previously been used to reformulate several academic curricula. In this paper, we present our cybersecurity curriculum initiative, describe the spiral-theory based process we developed to implement the curriculum and provide an in-depth description of four reusable cybersecurity learning modules that we developed. A core tenet of spiral theory holds to revisit topics as students advance through their curriculum. This work applies this approach to Cybersecurity education by carefully designing the learning objectives of the modules and its contents. For evaluating these learning modules we implemented pre and post-tests to assess students' technical knowledge, their perceptions towards the modules' learning objectives, and how it influenced their motivation to learn cybersecurity. Our findings are overwhelmingly positive and the students' feedback has helped us improve these learning modules. Since its inception, our initiative has educated more than $2\\,000$ students and is currently being used to revise the affected courses' syllabi.", "authors": [{"name": "Debarati Basu", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Harinni K. Kumar", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}, {"name": "Dave McPherson", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}, {"name": "Calvin J. Ribbens", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}, {"name": "N. Dwight Barnette", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}, {"name": "Paul E. Plassmann", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}, {"name": "Vinod K. Lohani", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}, {"name": "Godmar Back", "affiliation": "Virginia Polytechnic and State University, Blacksburg, VA, USA"}], "tags": ["multidisciplinary", "curriculum design", "cybersecurity education", "conceptual learning", "spiral theory"]}, {"title": "A Case Study of a Cybersecurity Programme: Curriculum Design, Resource Management, and Reflections", "link": "https://dl.acm.org/doi/10.1145/3328778.3366918", "abstract": "Cybersecurity is an area of growing international importance. In response to global shortages of Cybersecurity skills, many universities have introduced degree programmes in Cybersecurity. These programmes aim to prepare students to become Cybersecurity practitioners with advanced skills in a timely manner. Several universities offer Cybersecurity degrees, but these have been developed ad hoc, as there is currently no internationally accepted Cybersecurity curriculum. Recently, an ITiCSE working group on global perspectives on Cybersecurity education developed a competency-based framework that aims to help institutions to implement Cybersecurity programmes. In this report, we present a case study of a Cybersecurity programme at the University of Auckland. We discuss how the curriculum and resource management of this programme evolved, and we present some challenges for the design and delivery of a Cybersecurity programme in the light of this competency-based framework.", "authors": [{"name": "Muhammad Rizwan Asghar", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Andrew Luxton-Reilly", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["cybersecurity curriculum", "cybersecurity education"]}, {"title": "Session details: Paper Session: Student Experiences", "link": "https://dl.acm.org/doi/10.1145/3385533", "abstract": "No abstract available.", "authors": [{"name": "Robert Beck", "affiliation": "Villanova University"}], "tags": []}, {"title": "A Longitudinal View of Gender Balance in a Large Computer Science Program", "link": "https://dl.acm.org/doi/10.1145/3328778.3366806", "abstract": "Computer Science has a persistent lack of women's participation. In order to best effect change, we require a more fine-grain analysis of the gender disparity as it changes throughout an undergraduate Computer Science curriculum. In this paper, we use a quantitative approach to highlight, with greater specificity, the point in an undergraduate career where gender balance changes. We also examine the role of grades in students' decisions to stay in the course sequence. Our goal is to enable targeted interventions that will make Computer Science a more welcoming discipline. Our study examines 30,890 unique student records over ten years at a large, public research institution. The records include students who took a Computer Science course over the past ten years. The dataset contains information about gender, majors, minors, academic level, and GPA. The dataset also includes a record from each course taken by each student and their final grade. We observed a modest increase in women's participation in all Computer Science courses over the past ten years. Despite this increase, the gender disparity is still large. Through our analysis, we found that women consistently choose not to continue through the Computer Science sequence at a higher rate than men. This higher attrition could be linked to women receiving lower grades in most introductory CS courses despite having the same or higher GPAs than men. Our results reveal specific areas where intervention can be the most effective in changing the stubborn gender disparity in Computer Science.", "authors": [{"name": "Andrew DeOrio", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Amy Baer", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}], "tags": ["gender diversity", "women in computer science", "cs2", "cs1", "cs3"]}, {"title": "Identifying the Prevalence of the Impostor Phenomenon Among Computer Science Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3366815", "abstract": "The Impostor Phenomenon (IP) is often discussed as a problem in the field of computer science, but there has yet to be an empirical study to establish its prevalence among CS students. One survey by the Blind app found that a high number of software engineers at some of the largest technology companies self-reported feelings of Impostor Syndrome; however, self-reporting of Impostor Syndrome is not the standard diagnostic for identifying whether an individual exhibits feelings of the Impostor Phenomenon. In this work, the established Clance IP Scale is used to identify the prevalence of IP among graduate and undergraduate computer science students at a large research-intensive North American institution. Among this population of over 200 students, 57% were found to exhibit frequent feelings of the Impostor Phenomenon with a larger fraction of women (71%) experiencing frequent feelings of the Imposter Phenomenon than men (52%). Additionally, IP was found to have greater prevalence among computer science students than among students of other populations from comparable studies. Due to the negative impacts associated with feelings of the Impostor Phenomenon, computer science education should work to improve student awareness and help student cope with these feelings.", "authors": [{"name": "Aishma Raghu", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Adam Rosenstein", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["impostor phenomenon", "imposter syndrome", "computing education"]}, {"title": "A Multi-level Analysis of the Relationship between Instructional Practices and Retention in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3366812", "abstract": "Increasing retention in computer science (CS) courses is a goal of many CS departments. A key step to increasing retention is to understand the factors that impact the likelihood students will continue to enroll in CS courses. Prior research on retention in CS has mostly examined factors such as prior exposure to programming and students' personality characteristics, which are outside the control of undergraduate instructors. This study focuses on factors within the control of instructors, namely, instructional practices that directly impact students' classroom experiences. Participants were recruited from 25 sections of 14 different courses over 4 semesters. A multi-level model tested the effects of individual and class-average perceptions of cooperative learning and teacher directedness on the probability of subsequent enrollment in a CS course, while controlling for students' mastery of CS concepts and status as a CS major. Results indicated that students' individual perceptions of instructional practices were not associated with retention, but the average rating of cooperative learning within a course section was negatively associated with retention. Consistent with prior research, greater mastery of CS concepts and considering or having declared a CS major were associated with a higher probability of taking a future CS courses. Implications for findings are discussed.", "authors": [{"name": "Leen-Kiat Soh", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Markeya S. Peteranetz", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}], "tags": ["student-centered classrooms", "cooperative learning", "retention", "computer science education", "multi-level models"]}, {"title": "Session details: Paper Session: Automated Systems", "link": "https://dl.acm.org/doi/10.1145/3385534", "abstract": "No abstract available.", "authors": [{"name": "Bob Edmison", "affiliation": "Virginia Tech"}], "tags": []}, {"title": "Effects of Human vs. Automatic Feedback on Students' Understanding of AI Concepts and Programming Style", "link": "https://dl.acm.org/doi/10.1145/3328778.3366921", "abstract": "The use of automatic grading tools has become nearly ubiquitous in large undergraduate programming courses, and recent work has focused on improving the quality of automatically generated feedback. However, there is a relative lack of data directly comparing student outcomes when receiving computer-generated feedback and human-written feedback. This paper addresses this gap by splitting one 90-student class into two feedback groups and analyzing differences in the two cohorts' performance. The class is an intro to AI with programming HW assignments. One group of students received detailed computer-generated feedback on their programming assignments describing which parts of the algorithms' logic was missing; the other group additionally received human-written feedback describing how their programs' syntax relates to issues with their logic, and qualitative (style) recommendations for improving their code. Results on quizzes and exam questions suggest that human feedback helps students obtain a better conceptual understanding, but analyses found no difference between the groups' ability to collaborate on the final project. The course grade distribution revealed that students who received human-written feedback performed better overall; this effect was the most pronounced in the middle two quartiles of each group. These results suggest that feedback about the syntax-logic relation may be a primary mechanism by which human feedback improves student outcomes.", "authors": [{"name": "Sa\u00fal A. Blanco", "affiliation": "Indiana University Bloomington, Bloomington, IN, USA"}, {"name": "Abe Leite", "affiliation": "Indiana University Bloomington, Bloomington, IN, USA"}], "tags": ["student outcomes", "references to syntax", "feedback", "programming style", "automatic grading", "syntax-logic relation"]}, {"title": "Automated Assessment of the Visual Design of Android Apps Developed with App Inventor", "link": "https://dl.acm.org/doi/10.1145/3328778.3366868", "abstract": "One way to teach computing in K-12 is through the development of mobile applications with App Inventor. Although already broadly used worldwide, there is still a need for support for the assessment of the applications created by the students. Existing rubrics focusing mostly on programming concepts do not cover more comprehensively the performance-based assessment of user interface design concepts, important for the usability and aesthetics of the applications. Thus, in order to support the assessment of the visual design of apps based on its compliance with design theory and guidelines, we developed the CodeMaster UI Design - App Inventor rubric in the context of computing education. In order to facilitate its application in practice, we automated the assessment of applications created with App Inventor through a static code analysis by an online tool. We evaluated the reliability and validity of the rubric based on the automated assessment of 1,775 projects from the App Inventor Gallery. The results indicate that the rubric can be considered reliable (Cronbach's alpha = 0.84). In terms of construct validity, there is also evidence of convergent validity. The results presented in this article can be used to support the assessment of computing education in practice as well as to point out further research opportunities.", "authors": [{"name": "Adriano Ferreti Borgatto", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Nathalia da Cruz Alves", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Jo\u00e3o Porto", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Jean Hauck", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Igor Solecki", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Christiane Gresse von Wangenheim", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}], "tags": ["mobile application", "visual design", "app inventor", "android", "k-12", "user interface design"]}, {"title": "Development and Adoption of an Adaptive Learning System: Reflections and Lessons Learned", "link": "https://dl.acm.org/doi/10.1145/3328778.3366900", "abstract": "Adaptive learning systems (ALSs) aim to provide an efficient, effective and customised learning experience for students by dynamically adapting learning content to suit their individual abilities or preferences. Despite consistent evidence of their effectiveness and success in improving student learning over the past three decades, the actual impact and adoption of ALSs in education remain restricted to mostly research projects. In this paper, we provide a brief overview of reflections and lessons learned from developing and piloting an ALS in a course on relational databases. While our focus has been on adaptive learning, many of the presented lessons are also applicable to the development and adoption of educational tools and technologies in general. Our aim is to provide insight for other instructors, educational researchers and developers that are interested in adopting ALSs or are involved in the implementation of educational tools and technologies.", "authors": [{"name": "Hassan Khosravi", "affiliation": "University of Queensland, Brisbane, Australia"}, {"name": "Dragan Gasevic", "affiliation": "Monash University, Clayton, Australia"}, {"name": "Shazia Sadiq", "affiliation": "University of Queensland, Brisbane, Australia"}], "tags": ["adaptive learning systems", "educational technologies", "crowdsourcing"]}, {"title": "Session details: Paper Session: Learning A", "link": "https://dl.acm.org/doi/10.1145/3385535", "abstract": "No abstract available.", "authors": [{"name": "Dennis Kafura", "affiliation": "Virginia Tech"}], "tags": []}, {"title": "Lessons Learned From Introducing Preteens in Parent-Led Homeschooling to Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3328778.3366925", "abstract": "Parents that homeschool their children ignore certain topics when they lack mastery or interest in them. Homeschool groups try to address this issue, cooperatively educating their children. We were contacted by such a group that wanted to introduce their children to computational thinking (CT). These children, aged 7-11, have showed an interest in technology, and use online educational resources. None of the parents felt capable of tutoring the group about CT. They also worried about losing control about how their children interact with technology. We report an intervention over 9 months to introduce eleven young homeschoolers to CT in a suburban environment, describing the impact on parent and children attitudes towards technology and CT. We conclude with three lessons: 1)~science-related activities should be used to introduce CT among homeschoolers, 2) \"success'' is establishing a meaningful relationship with a homeschool group, and 3) activities designed for school children need to be adapted to the homeschooling context.", "authors": [{"name": "Nancy Hitschfeld", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Francisco J. Gutierrez", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Carla Sep\u00falveda-D\u00edaz", "affiliation": "Universidad de Los Lagos, Puerto Montt, Chile"}, {"name": "Jocelyn Simmonds", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Elson Stuardo Rojas", "affiliation": "Universidad de Los Lagos, Puerto Montt, Chile"}, {"name": "Cecilia Casanova", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Cecilia Sotomayor", "affiliation": "University of Chile, Santiago, Chile"}], "tags": ["homeschooling", "young learners", "computational thinking"]}, {"title": "Understanding Wikipedia as a Resource for Opportunistic Learning of Computing Concepts", "link": "https://dl.acm.org/doi/10.1145/3328778.3366832", "abstract": "Posts on on-line forums where programmers look for information often include links to Wikipedia when it can be assumed the reader will not be familiar with the linked terms. A Wikipedia article will thus often be the first exposure to a new computing concept for a novice programmer. We conducted an exploratory study with 18 novice programmers by asking them to read a Wikipedia article on a common computing concept that was new to them, while using the think-aloud protocol. We performed a qualitative analysis of the session transcripts to better understand the experience of the novice programmer learning a new computing concept using Wikipedia. We elicited five themes that capture this experience: Concept Confusion, Need for Examples, New Terminology, Trivia Clutter, and Unfamiliar Notation. We conclude that Wikipedia is not well suited as a resource for the opportunistic learning of new computing concepts, and we recommend adapting information sharing practices in on-line programmer communities to better account for the learning needs of the users.", "authors": [{"name": "Christoph Treude", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Martin P. Robillard", "affiliation": "McGill University, Montreal, PQ, Canada"}], "tags": ["self-regulated learning", "wikipedia", "computing concepts"]}, {"title": "TIPP&SEE: A Learning Strategy to Guide Students through Use - Modify Scratch Activities", "link": "https://dl.acm.org/doi/10.1145/3328778.3366821", "abstract": "With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative that elementary computing instruction support a variety of learners. A popular pedagogical approach for this age group is Use-->Modify-->Create, which introduces a concept through a more scaffolded, guided instruction before culminating in a more open-ended project for student engagement. Yet, there is little research on student learning during the Use-->Modify step, nor strategies to promote learning in this step. This paper introduces TIPP&SEE, a metacognitive learning strategy that further scaffolds student learning during this step. Results from an experimental study show statistically-significant performance gains from students using the TIPP&SEE strategy on nearly all assessment questions of moderate and hard difficulty, suggesting its potential as an effective CS/CT learning strategy.", "authors": [{"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Ashley Sanchez", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Cathy Thomas", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Chloe Butler", "affiliation": "Texas State University, San Marcos, TX, USA"}], "tags": ["elementary education", "learning strategy", "scratch", "computational thinking"]}, {"title": "Session details: Paper Session: CS 2", "link": "https://dl.acm.org/doi/10.1145/3385536", "abstract": "No abstract available.", "authors": [{"name": "Sherrene Bogle", "affiliation": "Humboldt State University"}], "tags": []}, {"title": "MAADS: Mixed-Methods Approach for the Analysis of Debugging Sequences of Beginner Programmers", "link": "https://dl.acm.org/doi/10.1145/3328778.3366824", "abstract": "be especially problematic for beginners. While there has been some work trying to understand the difficulties that beginners face with debugging, investigating common mistakes or specific error types they struggle with, there is little work that focuses on in-depth analysis of how novice programmers approach debugging, and how it changes over time. In this paper, we present MAADS (Mixed-Methods Approach for the Analysis of Debugging Sequences), a scalable and generalizable approach that combines quantitative and qualitative methods by using a state/action representation and visualization to gain knowledge about the debugging process through a step by step analysis. To demonstrate the utility of MAADS, we analyzed the debugging processes of middle school students who developed code within May's Journey, a game designed to teach basic programming principles. The approach showed great utility in identifying differences in students' debugging techniques and learning paths.", "authors": [{"name": "Chaima Jemmali", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Mia Victoria Almeda", "affiliation": "EdGE at TERC, Cambridge, MA, USA"}, {"name": "Elizabeth Rowe", "affiliation": "EdGE at TERC, Cambridge, MA, USA"}, {"name": "Sara Bunian", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Magy Seif El-Nasr", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Erica Kleinman", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["learning sequence", "process", "mixed-methods", "programming", "debugging", "methodology", "beginners"]}, {"title": "Analyzing the Effects of Active Learning Classrooms in CS2", "link": "https://dl.acm.org/doi/10.1145/3328778.3366872", "abstract": "Active learning environments have only recently started to be analyzed in the CS discipline, in terms of their effect on student performance. Recent studies in CS1 found contradictory results, in part due to different control on the learning pedagogy used, and issued a call for further investigation. This study evaluates the effects of the learning space on student performance in CS2, as measured by their grades. We use a quasi-experimental setup with 529 participants across five lecture sections over one academic term. All sections employ the same active learning method (inverted classroom), identical lecture materials, and the same number of TAs for in-class support, but differ in terms of classroom type (active learning classroom vs traditional lecture hall), instructor, and lecture time of day. Similarly to a recent study in CS1, we find no significant impact of the learning space in CS2. We also inspect factors not analyzed in previous studies, such as student prior preparation (as measured by prerequisite CS1 grades), course drop rates, and exam failure rates, and find that the CS2 sections are statistically similar. This work also examines student survey responses, to assess student perception differences on properties of the learning space which may impact their learning experience, such as the use of technology, ability to hear the instructor, ability to get help during lectures, and conduciveness of desk types to group work.", "authors": [{"name": "Rutwa Engineer", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}, {"name": "Bogdan Simion", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}, {"name": "Ayesha Naeem Syeda", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}], "tags": ["computer science education", "inverted classroom", "active learning classrooms"]}, {"title": "Does Story Programming Prepare for Coding?", "link": "https://dl.acm.org/doi/10.1145/3328778.3366861", "abstract": "In this research study, we investigate the impact of using the Story Programming approach to teach CS concepts on student performance in a subsequent C++ class. In particular, we compare how students receiving little or no coding to learn and apply these concepts perform in comparison to students who learn these concepts only in the context of coding. While past research has shown that exposure to programming is not a predictor of success in such courses, these studies are based on a 15-week versus 10-week course and do not control for the CS concepts and programming to which the students have been exposed. Consequently, we hypothesize that students from the Story Programming approach will perform worse in the following C++ class. Surprisingly, we find that this is not true: Students from the Story Programming approach with little to no coding do not significantly differ from their peers receiving a traditional code-focused approach.", "authors": [{"name": "Martin Erwig", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Jennifer Parham-Mocello", "affiliation": "Oregon State University, Corvallis, OR, USA"}], "tags": ["introduction to computer science", "story telling", "computer science pedagogy"]}, {"title": "Session details: Paper Session: Accessibility", "link": "https://dl.acm.org/doi/10.1145/3385537", "abstract": "No abstract available.", "authors": [{"name": "Richard E. Ladner", "affiliation": "University of Washington"}], "tags": []}, {"title": "A Systematic Analysis of Accessibility in Computing Education Research", "link": "https://dl.acm.org/doi/10.1145/3328778.3366843", "abstract": "Recent interest in accessibility emphasizes including it in computer science curriculum as key to producing effective computing professionals. Despite a general consensus that teaching accessibility in computing curriculum is good, there exist few tools and resources to support instructors in higher education. To better understand the relationship between accessibility in curriculum and research, we conducted a systematic literature review of papers in computing education. We analyzed the papers for the courses accessibility is covered in, the topics that are covered and pedagogies and assessment approaches that are used. Across this body of work, we found a number of key learning objectives commonly covered in computing education research, though it appeared the research did not evenly cover these objectives throughout curricula, nor did the research systematically investigate how learning objectives were integrated. Based on these results, we offer suggestions for future directions of accessibility education research and curriculum building.", "authors": [{"name": "Catherine M. Baker", "affiliation": "Creighton University, Omaha, NE, USA"}, {"name": "Yasmine N. El-Glaly", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Kristen Shinohara", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["pedagogy", "learning objectives", "computing", "assessment", "education", "accessibility"]}, {"title": "Participation at What Cost? Teaching Accessibility Using Participatory Design: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3366931", "abstract": "As institutions respond to market demand in their training of the next generation of technology designers, there is an increasing awareness of the need to add accessibility to computer science and informatics curricula. Advocates have suggested three strategies for including accessibility and discussions of disability in courses: changing a lecture, adding a lecture or adding a new course. In this paper we report on our experiences with the latter; incorporating accessibility within two new graduate and undergraduate inclusive design courses taught concurrently. We found that while the use of participatory design was decidedly effective in supporting student learning and ameliorating ableist attitudes, creating and managing teams comprised of students and visually impaired co-designers proved challenging. Despite these challenges, overall, students demonstrated steady growth in their grasp of inclusive design concepts as they tackled accessibility challenges through a series of mobility-related group projects. Efficiencies were also realized through the concurrent teaching of both courses though the pace of course deliverables proved challenging at times for undergraduates. We argue that a review of our experience may help others interested in teaching accessibility related courses, specifically in course design and execution.", "authors": [{"name": "Julian Brinkley", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["assistive technology", "participatory design", "accessibility", "education"]}, {"title": "Teaching Accessibility to Software Engineering Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3366914", "abstract": "This paper describes the development process of a graduate course on accessibility that is offered as an elective for software engineering students. The paper reports on the three iterations of the course evolution as topics and pedagogy are updated from one iteration to the next. The main motivation of the course updates was to cover the educational needs of software engineering students, which are not the same as HCI or design students. Software engineering students learned better and became more engaged with the topic of accessibility when it was tied to programming and development- based activities. The final form of the course was evaluated using a survey, and the results showed that students found the course beneficial to their education and relevant to their career. We discuss the challenges of creating, teaching, and maintaining a course on accessibility, and we offer insights on what research is needed in this area to support accessibility educators.", "authors": [{"name": "Yasmine N. El-Glaly", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["software engineering", "design", "open source", "accessibility", "assistive technology"]}, {"title": "Session details: Paper Session: Mentoring", "link": "https://dl.acm.org/doi/10.1145/3385538", "abstract": "No abstract available.", "authors": [{"name": "Maria Jump", "affiliation": "Northeastern University"}], "tags": []}, {"title": "The Impact of Undergraduate Mentorship on Student Satisfaction and Engagement, Teamwork Performance, and Team Dysfunction in a Software Engineering Group Project", "link": "https://dl.acm.org/doi/10.1145/3328778.3366835", "abstract": "Mentorship schemes in software engineering education usually involve professional software engineers guiding and advising teams of undergraduate students working collaboratively to develop a software system. With or without mentorship, teams run the risk of experiencing team dysfunction: a situation where lack of engagement, internal conflicts, and/or poor team management lead to different assessment outcomes for individual team members and overall frustration and dissatisfaction within the team. The paper describes a mentorship scheme devised as part of a 33 week software engineering group project course, where the mentors were undergraduate students who had recently completed the course successfully and possessed at least a year's experience as professional software engineers. We measure and discuss the impact the scheme had on: (1) student satisfaction and engagement, (2) team performance, and (3) team dysfunction.", "authors": [{"name": "Shamal Faily", "affiliation": "Bournemouth University, Bournemouth, United Kingdom"}, {"name": "Claudia Iacob", "affiliation": "University of Portsmouth, Portsmouth, United Kingdom"}], "tags": ["teamwork", "mentorship scheme", "software engineering"]}, {"title": "Formal Methods and Computing Identity-based Mentorship for Early Stage Researchers", "link": "https://dl.acm.org/doi/10.1145/3328778.3366957", "abstract": "The field of formal methods relies on a large body of background knowledge that can dissuade researchers from engaging with younger students, such as undergraduates or high school students. However, we have found that formal methods can be an excellent entry point to computer science research - especially in the framing of Computing Identity-based Mentorship. We report on our experience in using a cascading mentorship model to involve early stage researchers in formal methods, covering our process with these students from recruitment to publication. We present case studies (N=12) of our cascading mentorship and how we were able to integrate formal methods research with the students' own interests. We outline some key strategies that have led to success and reflect on strategies that have been, in our experience, inefficient.", "authors": [{"name": "Ruzica Piskac", "affiliation": "Yale University, New Haven, CT, USA"}, {"name": "Mark Santolucito", "affiliation": "Yale University, New Haven, CT, USA"}], "tags": ["formal methods", "computing education"]}, {"title": "Undergraduate-Led Survey Class to Improve CS Education for New Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3366897", "abstract": "Many first-year undergraduate students do not have sufficient breadth of technical knowledge about subjects in Electrical Engineering (EE) and Computer Science (CS) to make informed choices toward their education. By the time students are exposed to subjects they may be interested in, the cost of switching areas of focus may be too high. With undergraduate enrollment in CS more than doubling in the past decade, many institutions lack adequate staff and infrastructure to address students' needs. To help newly enrolled students make better decisions with limited departmental resources, we present a first-semester, low-overhead survey course that covers a wide variety of topics. The class has been offered for five consecutive semesters by upper-class undergraduate volunteers with minimal faculty involvement. We report the format, content, and student feedback for the course. Our results suggest that such a class can provide new students with valuable guidance and better prepare them for an education in CS and EE.", "authors": [{"name": "Amanda Tomlinson", "affiliation": "Texas Instruments & University of California Berkeley, Santa Clara, CA, USA"}, {"name": "Nathan Zhang", "affiliation": "Stanford University & University of California Berkeley, Palo Alto, CA, USA"}, {"name": "Jacky Liang", "affiliation": "Carnegie Mellon University & University of California Berkeley, Pittsburg, PA, USA"}, {"name": "Anant Sahai", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Frank Boensch", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["undergraduate instruction", "managing enrollment growth", "experience report", "undergraduate studies", "cs1/2"]}, {"title": "Session details: Paper Session: Problem Solving", "link": "https://dl.acm.org/doi/10.1145/3385539", "abstract": "No abstract available.", "authors": [{"name": "Grace Mirsky", "affiliation": "Benedictine University"}], "tags": []}, {"title": "Investigating Novices' In Situ Reflections on Their Programming Process", "link": "https://dl.acm.org/doi/10.1145/3328778.3366846", "abstract": "Prior work on novice programmers' self-regulation have shown it to be inconsistent and shallow, but trainable through direct instruction. However, prior work has primarily studied self-regulation retrospectively, which relies on students to remember how they regulated their process, or in laboratory settings, limiting the ecological validity of findings. To address these limitations, we investigated 31 novice programmers' self-regulation in situ over 10 weeks. We had them to keep journals about their work and later had them to reflect on their journaling. Through a series of qualitative analyses of journals and survey responses, we found that all participants monitored their process and evaluated their work, that few interpreted the problems they were solving or adapted prior solutions. We also found that some students self-regulated their programming in many ways, while others in almost none. Students reported many difficulties integrating reflection into their work; some were completely unaware of their process, some struggled to integrate reflection into their process, and others found reflection conflicted with their work. These results suggest that self-regulation during programming is highly variable in practice, and that teaching self-regulation skills to improve programming outcomes may require differentiated instruction based on students self-awareness and existing programming practices.", "authors": [{"name": "Benjamin Xie", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Amy J. Ko", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Harrison Kwik", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Dastyni Loksa", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["metacognition", "programming", "self-regulation"]}, {"title": "Can Majoring in Computer Science Improve General Problem-solving Skills?", "link": "https://dl.acm.org/doi/10.1145/3328778.3366808", "abstract": "Teaching students to become skillful problem solvers is a goal of university education, but it has been difficult to measure such skill or demonstrate the benefits of particular educational experiences. This paper presents a study of college students solving a problem unrelated to their academic majors. The analysis suggests that the educational experiences of Computer Science (CS) students may better train them in problem-solving than the experiences of other majors. In this study, students from a variety of undergraduate majors and grade levels were given a 15-minute problem-solving task embedded in an interactive science simulation. The complex task calls upon many problem-solving practices needed by scientists and engineers in their professions. Although this task has little resemblance to the problems encountered in a computer science course, CS students performed significantly better than students in any other major. In addition, only for CS students was there an indication of improvement in problem-solving from lower to upper grade levels. We propose that general problem-solving and computational thinking share some common practices, such as problem decomposition and comprehensive data collection. Furthermore, we present preliminary evidence that training in computational thinking is transferable to problem-solving tasks across domains and discuss how the unique features of CS programming assignments could be generalized to other science and engineering courses to foster students' general problem-solving skills.", "authors": [{"name": "Carl Wieman", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Ruqayya Toorawa", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Shima Salehi", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Karen D. Wang", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["computational thinking", "student assessment", "simulations", "problem solving", "computer science education"]}, {"title": "Investigating Patterns of Study Persistence on Self-Assessment Platform of Programming Problem-Solving", "link": "https://dl.acm.org/doi/10.1145/3328778.3366827", "abstract": "A student's short-term study behavior may not necessary infer his/her long-term behavior. It is very common to see a student changes study strategy throughout a semester and adapts to learning condition. For example, a student may work very hard before the first exam but gradually reducing the effort due to several possible reasons, e.g., being overwhelmed by various course work or discouraged by increasing complexity in the subject. Consistency or differences of one student's behavior is more likely to be discovered by multiple granularity of learning analytics. In this study, we investigate students' study persistence on a self-assessment platform and explore how such a behavioral pattern is related to the performance in exams. A probabilistic mixture model trained by response streams of log data is applied to cluster students' behavior into persistence patterns, which are further categorized into \"micro\" (short-term) and \"macro\" (long-term) patterns according to the span of time being modeled. We found four types of micro persistence patterns and several macro patterns in the analysis and analyzed their relations with exam performances. The result suggests that the consistency of persistence patterns can be an important factor driving student's overall performance in the semester, and students achieving higher exam scores show relatively persistent behavior compared to students receiving lower scores.", "authors": [{"name": "I-Han Hsiao", "affiliation": "Arizona State University, Tempe, AZ, USA"}, {"name": "Cheng-Yu Chung", "affiliation": "Arizona State University, Tempe, AZ, USA"}], "tags": ["poisson mixture model", "self-regulated learning", "self-assessment", "learning analytics", "study persistence"]}, {"title": "CC2020 -- Visualization Tool Preview and Review", "link": "https://dl.acm.org/doi/10.1145/3328778.3366998", "abstract": "The CC2020 project was charged with two main objectives, to produce a comprehensive report and a visualization tool to provide global guidance in an evolving computing environment as it affects computing baccalaureate degree programs worldwide. The report is now in draft form and has undergone four rounds of review. The other goal of the CC2020 project is to develop a set of visualization-based tools that will help users to explore questions they may have concerning curricular guidelines, as well as local computing curricula. A visualization tool has been scoped and a prototype built. This special session will unveil the prototype for the SIGCSE community who will have the opportunity to view and review the tool.", "authors": [{"name": "Ernesto Cuadros Vargas", "affiliation": "UTEC, Lima, Peru"}, {"name": "Shingo Takada", "affiliation": "Keio University, Yokohama, Japan"}, {"name": "Alison Clear", "affiliation": "Eastern Institute of Technology, Auckland, New Zealand"}], "tags": ["cc2020", "computing curricula", "curricula visualization tools"]}, {"title": "Researching Race in Computer Science Education: Demystifying Key Vocabulary and Methods", "link": "https://dl.acm.org/doi/10.1145/3328778.3366965", "abstract": "Diversity and inclusion are popular topics at SIGCSE. However, few researchers examine questions specifically focused on race. Such research is of great interest to the SIGCSE community, but is typically conducted by education faculty and published in education journals. This panel attempts to introduce attendees to relevant background and methods, such that attendees can more easily understand and contribute to computer science education research related to race. This panel attempts to bridge our two communities by inviting race scholars from education to share their expertise with computer science education researchers and practitioners.", "authors": [{"name": "Niral Shah", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Joanna Goode", "affiliation": "University of Oregon, Eugene, OR, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Sepehr Vakil", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Allison Scott", "affiliation": "Kapor Center, Oakland, CA, USA"}], "tags": ["critical race theory", "diversity", "race", "intersectionality", "equity"]}, {"title": "RESET (Re-Enter STEM through Emerging Technology): Finding Re-Entry Pathways for Women", "link": "https://dl.acm.org/doi/10.1145/3328778.3366963", "abstract": "One of the critical needs of the 21st-century workforce development is the recruitment, retention, and graduation of women in STEM fields. Research suggests that women drop out of academic programs and leave the workforce to deal with financial setbacks, tend to personal obligations and offer service in military programs. It is important these women, i.e. returning women, have pathways for reentry to college and opportunities to advance their careers. Some areas within STEM fields, such as Emerging Technology (EmTech) in computer science are expected to experience increases in job opportunities more quickly than traditional areas. The demands of these jobs can only be fulfilled by creating pathways for untapped STEM talent pools, including returning women. Therefore, we propose a panel to discuss the barriers and opportunities women face (re-)entering the STEM education and career paths, especially in EmTech fields. The panel of experts will provide different perspectives to spark conversation and reflection. The objective of the panel is to share experiences, advice, and ideas to advance the current state of knowledge about the complex challenges that women encounter and support structures for their reentry to the education and professional pipeline.", "authors": [{"name": "Farzana Rahman", "affiliation": "Syracuse University, Syracuse, NY, USA"}, {"name": "Elodie Billionniere", "affiliation": "Miami Dade College, Miami, FL, USA"}, {"name": "Quincy Brown", "affiliation": "AnitaB.org, Upper Marlboro, MD, USA"}, {"name": "Ann Quiroz Gates", "affiliation": "University of Texas, El-Paso, TX, USA"}], "tags": ["internships", "women in tech", "emerging technologies", "cloud computing", "re-entry programs", "bootcamps"]}, {"title": "Using Data to Inform Computing Education Research and Practice", "link": "https://dl.acm.org/doi/10.1145/3328778.3366967", "abstract": "The analysis of data plays an increasingly critical role in computing education research, enabled by more and larger datasets, more powerful analysis techniques and better infrastructure for sharing. This panel brings together four panellists at various stages of work involving the collection and analysis of large datasets in different fields of computing education. The panellists will each discuss the current state of their work, the unique aspects of their data, and how that data fits into the larger landscape of computing education and research. Panellists will be asked to explain how they are employing AI and data mining techniques to learn about learners, the research methods they have used to make this happen, and any significant key findings they have discovered through this processes. The panel will discuss emerging topics, including: going beyond log data, handling global-scale datasets, efficiently collaborating with cross-dataset analysis, and ethical and privacy considerations. After the panelists present (5 minutes each), the moderator will pose follow-up questions and invite the audience to pose additional questions or provide other feedback. Key takeaways will include how data mining and artificial intelligence can contribute to improved insight and learning gains and how the larger computer education community can participate in data collection or analysis.", "authors": [{"name": "Thomas Price", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Baker Franke", "affiliation": "Code.org, Chicago, IL, USA"}, {"name": "Shuchi Grover", "affiliation": "Looking Glass Ventures & Stanford University, Palo Alto, CA, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College & csedresearch.org, Galesburg, IL, USA"}], "tags": ["datasets", "educational data mining", "learning analytics"]}, {"title": "Session details: First Timer's Lunch Keynote & 2020 SIGCSE Award for Lifetime Service to the Computer Science Education Community", "link": "https://dl.acm.org/doi/10.1145/3385540", "abstract": "No abstract available.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia"}, {"name": "Jian Zhang", "affiliation": "Texas Woman's University"}], "tags": []}, {"title": "Selected Insights Gathered for Computer Science Educators", "link": "https://dl.acm.org/doi/10.1145/3328778.3372551", "abstract": "A Lifetime Service award suggests many years of being involved in Computer Science Education. Over these years I have gained numerous active caring insights to promote support and guide Computer Science Educators. Being a successful CS educator does not just involve gaining a qualification and teaching classes. There are so many exciting and rewarding aspects to this career that enhance the classroom experience for all and also add to the promotion and excitement of the discipline. These insights are gathered from over 40 years of teaching and supervising students, 25 years as a Chair of Department and some exciting and innovative research projects. From the villages in the high Andes to local diversity issues, from coding in binary and hex to apps on smart phones the revolution of the digital age has been a major part of my journey in computer science education.", "authors": [{"name": "Alison Clear", "affiliation": "Eastern Institute of Technology, Auckland, New Zealand"}], "tags": ["computer science education", "computer science educators"]}, {"title": "Session details: Paper Session: Data Science A", "link": "https://dl.acm.org/doi/10.1145/3385541", "abstract": "No abstract available.", "authors": [{"name": "Karl Schmitt", "affiliation": "Valparaiso University"}], "tags": []}, {"title": "A Data Science Major: Building Skills and Confidence", "link": "https://dl.acm.org/doi/10.1145/3328778.3366791", "abstract": "Data science is a growing field at the intersection of mathematics, computer science, and domain expertise. Like many universities that are building data science degree programs for undergraduates, our small, liberal-arts university saw increasing opportunities in the region and decided to build a data science degree from the ground up, without a pre-existing computer science (CS) department to leverage for courses or culture. We designed and implemented an academically-demanding curriculum that combined mathematics, information systems, and new data science courses, and that also encouraged and supported student success. Each introductory course included active learning design to engage students. To increase retention, all major courses included assignments designed to build skills but also student confidence in their ability to learn challenging technical topics. Outside of the classroom, we created opportunities for professional advancement and developed a technical culture at the university. We will share our approach, course highlights, and lessons learned from building such a curriculum at an institution without a CS department.", "authors": [{"name": "Tingting (Rachel) Chung", "affiliation": "College of William & Mary, Williamsburg, VA, USA"}, {"name": "Stephanie Rosenthal", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["curriculum design", "data science curriculum", "data science major"]}, {"title": "Creating a Balanced Data Science Program", "link": "https://dl.acm.org/doi/10.1145/3328778.3366800", "abstract": "As we consider the next fifty years of computing education, a phenomenon that shows no signs of abating is the data deluge, in which commercial companies, the natural sciences, the social sciences, professional sports teams, government agencies, and other institutions are generating ever-increasing quantities of data. To address the challenges posed by the data deluge, the discipline of data science has arisen, and an increasing number of universities are offering undergraduate data science programs. Many of these programs have their origins in a computer science or a statistics department, leading to a data science curriculum that is more heavily weighted toward computing or statistics. By contrast, the data science program described in this paper is a joint endeavor between computer science and statistics that seeks to provide balanced training in both areas. Its broad goals are to produce students who (a) are well-trained in both computer science and statistics, (b) are equipped with specialized data-related skills that are not normally taught in either of those disciplines, and (c) can apply their skills to a domain area. This paper reports on the author's experiences leading the effort to create this program, which has seen good growth, received positive feedback from students, and is successfully preparing students for internships. We offer this report in the hope that it may serve as a model for other institutions considering the addition of an undergraduate data science program.", "authors": [{"name": "Joel C. Adams", "affiliation": "Calvin University, Grand Rapids, MI, USA"}], "tags": ["data", "data science", "data analytics", "computer science", "statistics"]}, {"title": "Insights for Curriculum Development: Identifying Emerging Data Science Topics through Analysis of Q&A Communities", "link": "https://dl.acm.org/doi/10.1145/3328778.3366817", "abstract": "Updating curricula in new computer science domains is a critical challenge faced by many instructors and programs. In this paper we present an approach for identifying emerging topics and issues in Data Science by using Question and Answer (Q&A) sites as a resource. Q&A sites provide a useful online platform for discussion of topics and through the sharing of information they become a valuable corpus of knowledge. We applied latent Dirichlet allocation (LDA), a statistical topic modeling technique, to analyze data science related threads from from two popular Q&A communities \"Stack Exchange and Reddit\". We uncovered both important topics as well as useful examples that can be incorporated into teaching. In addition to technical topics, our analysis also identified topics related to professional development. We believe that approaches such as these are critical in order to update curriculum and bridge the workplace-school divide in teaching of newer topics such as data science. Given the pace of technical development and frequent changes in the field, this is an inventive and effective method to keep teaching up to date. We also discuss the limitations of this approach whereby topics of importance such as data ethics are largely missing from online discussions.", "authors": [{"name": "Habib Karbasian", "affiliation": "George Mason University, Fairfax, VA, USA"}, {"name": "Aditya Johri", "affiliation": "George Mason University, Fairfax, VA, USA"}], "tags": ["text mining", "online q&a platforms", "topic modeling", "curriculum development", "reddit", "stackexchange"]}, {"title": "Session details: Paper Session: Diversity", "link": "https://dl.acm.org/doi/10.1145/3385542", "abstract": "No abstract available.", "authors": [{"name": "Adalbert Gerald Soosai Raj", "affiliation": "University of California, San Diego"}], "tags": []}, {"title": "The Intersectional Experiences of Black Women in Computing", "link": "https://dl.acm.org/doi/10.1145/3328778.3366873", "abstract": "Efforts to broaden participation in computing have led to gender-focused interventions intended to increase the number of women in the field of computing. However, such efforts have failed to significantly increase the percentage of Black women in computing. For example, only 1% of the 28,884 bachelor\\textquotesingle s degrees in computing were awarded to Black women in 2018. Moreover, too few empirical studies have intentionally explored the lived experiences of Black women, an often overlooked and understudied population in the computing ecosystem. In this paper, we introduce intersectionality - the complex overlap of socially constructed identities such as race, gender, class, sexuality, etc. - as a theoretical framework and springboard for exploring the lived experiences of Black women in computing. We interview 14 Black women in various stages of the computing ecosystem (undergraduate students, graduate students and early career professionals) to understand how intersectionality influences their ability to persist in computing. Preliminary findings from the analysis of the 14 interviews provides insights into how the interlocking systems of oppression (i.e., gendered racism) play out in computing education and negatively impact the recruitment and retention of Black women in the field of computing.", "authors": [{"name": "Yolanda A. Rankin", "affiliation": "Florida State University, Tallahassee, FL, USA"}, {"name": "Jakita O. Thomas", "affiliation": "Auburn University, Auburn, AL, USA"}], "tags": ["gendered racism", "computing", "intersectionality", "black women"]}, {"title": "Lessons Learned from Providing Hundreds of Hours of Diversity Training", "link": "https://dl.acm.org/doi/10.1145/3328778.3366930", "abstract": "The past thirty years have seen many advances in our understanding of issues that impede diversity, as well as interventions that can remove or mitigate those impediments. The advances are generally presented in psychology journals and are under-consumed by computing educators, leading to the need for diversity training tailored to said educators. We have hundreds of hours of experience providing diversity training to computing educators, and have learned many lessons about how training should and should not be delivered to engage participants in understanding diversity-impeding forces and implementing interventions to improve the attraction and retention of diverse students. This paper is a collection of those lessons learned. We focus on concrete approaches to presenting material rather than on training organization or content, including a dozen specific practices that have proven particularly effective or ineffective in reaching diverse audiences. Examples include how how to avoid offending participants, how to help experts not lose their audience, how to pace and organize material for maximum impact, how we tie many topics into a single cognitive framework, and how we've learned to handle participant-raised objections. We also include commentary as to why we believe they did or did not work. We also describe possible future research to validate and expand on our observations and a few open questions for diversity training.", "authors": [{"name": "Luther Tychonievich", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "James P. Cohoon", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["diversity", "teacher training", "professional development"]}, {"title": "When Twice as Good Isn't Enough: The Case for Cultural Competence in Computing", "link": "https://dl.acm.org/doi/10.1145/3328778.3366792", "abstract": "The commonly documented diversity, equity, and inclusion (DEI) issues in the computing workforce are the direct result of corporate cultures that benefit specific groups and marginalize others. This culture usually begins in undergraduate computing departments, where the demographic representation mirrors that of industry. With no formal courses that focus on the non-technical issues affecting marginalized groups and how to address and eradicate them, students are indirectly taught that the current status quo in computing departments and industry is not only acceptable, but also unproblematic. This directly affects students from marginalized groups (as the reasons for attrition are similar in both higher education and industry), as well as faculty (as biased student evaluations directly affect hiring, promotion, and tenure decisions). This position paper presents the need for cultural competence as a required focus for university computing departments nationwide. By improving these issues before students complete baccalaureate computing degrees, companies will have talent pools that better understand the importance and necessity of DEI and also work to ensure they help foster a more diverse, equitable, and inclusive environment. In addition, more students from marginalized groups will be retained in the major through degree completion.", "authors": [{"name": "Alicia Nicki Washington", "affiliation": "Winthrop University, Rock Hill, SC, USA"}], "tags": ["cultural competence", "diversity", "computing", "inclusion", "gender", "race"]}, {"title": "Session details: Paper Session: CS0", "link": "https://dl.acm.org/doi/10.1145/3385543", "abstract": "No abstract available.", "authors": [{"name": "Bill Siever", "affiliation": "Washington University in St. Louis"}], "tags": []}, {"title": "Design Principles behind Beauty and Joy of Computing", "link": "https://dl.acm.org/doi/10.1145/3328778.3366794", "abstract": "This paper shares the design principles of one Advanced Placement Computer Science Principles (AP CSP) course, Beauty and Joy of Computing (BJC), both for schools considering curriculum, and for developers in this still-new field. BJC students not only learn about CS, but do some and analyze its social implications; we feel that the job of enticing students into the field isn't complete until students find programming, itself, something they enjoy and know they can do, and its key ideas accessible. Students must feel invited to use their own creativity and logic, and enjoy the power of their logic and the beauty and elegance of the code by which they express it. All kids need genuine challenge and sensible support so all can have the joy of making-seeing themselves as creators, not just consumers, and seeing that it is their own intellect, not just our instructions, that is the source of that making. Framework standards are woven into a consistent social and intellectual storyline to give the curriculum integrity. Principles guide even our choice of programming language. Learners should focus on the logic and structure of their thinking, not on misplaced semicolons; attention to such syntactic detail is antithetical to broadening participation. We feature recursion and higher-order functions because they beautifully exemplify abstraction, a key idea in CS and the CSP framework. BJC also places significant emphasis on the social implications of computing, balancing fundamental optimism about computing technology with a critical view of specific uses of technology.", "authors": [{"name": "June Mark", "affiliation": "Education Development Center, Waltham, MA, USA"}, {"name": "Brian Harvey", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Paul Goldenberg", "affiliation": "Education Development Center, Waltham, MA, USA"}, {"name": "Al Cuoco", "affiliation": "Education Development Center, Waltham, MA, USA"}, {"name": "Mary Fries", "affiliation": "Education Development Center, Waltham, MA, USA"}], "tags": ["curriculum design", "advanced placement", "computer science principles", "cs education"]}, {"title": "CS 0: Culture and Coding", "link": "https://dl.acm.org/doi/10.1145/3328778.3366795", "abstract": "In 2018, Colorado State University redesigned their CS-0 course to become a general education requirement for the university within Arts and Humanities, and a guaranteed transfer course across the state for a similar category in other universities. The first CS course in the State to be accepted as a GT-Pathway course. This redesign had to be carefully done due to a need to introduce liberal arts style topics such as CS History, Philosophy and Ethics and Inclusive Design issues, while maintaining current coding and student success standards that were already expected for the CS-0 at the university. We termed this combination as Culture and Coding. In order to add more without reducing retention, the course was redesigned around the Psychology of Learning and spacing of topics in a \"Spiral\" Manner. Each topic was briefly introduced, and throughout the semester, students would dive deeper into the topics. This allowed for a 50% reduction of time focused on teaching coding topics, with students performing equivalent on exams compared to previous models of the course that focused 100% of the time on coding topics. Furthermore, students taught by the spiral teaching method outperformed students taught using traditional methods in the follow-on course. Our evaluation suggests that the spiral model of teaching computer science may allow for greater retention of topics, allowing classes to either cover additional concepts or go more in depth on current topics.", "authors": [{"name": "J. Ross Beveridge", "affiliation": "Colorado State University, Fort Collins, CO, USA"}, {"name": "Josette Grinslad", "affiliation": "Colorado State University, Fort Collins, CO, USA"}, {"name": "Albert Lionelle", "affiliation": "Colorado State University, Fort Collins, CO, USA"}], "tags": ["cs0", "course design", "spaced-based recall", "computing education"]}, {"title": "Introducing Computing to a Cohort of Incarcerated Youth", "link": "https://dl.acm.org/doi/10.1145/3328778.3366820", "abstract": "Computer Science and programming are changing the world, but not everyone has equal access to education about this field. In California, Juvenile hall students typically lack opportunities to learn computer programming. In this paper, we present an experience report about the course we created to address the needs of this population. Specifically, we created and taught an introductory computing course focused on engagement. This project-based game design curriculum was launched to a small cohort of the juvenile hall in spring 2019. This course focused on engaging students while introducing computing programming concepts such as variables, logic and function. Student surveys and reports from their teacher showed this class had a positive impact and was well received by students and staff. We hypothesize and show initial positive indication that creative, game-oriented curriculum had a positive impact on the demographic. We also present some of the challenges encountered when working within the juvenile hall system and our solutions and general recommendations for these types of classes.", "authors": [{"name": "Zo\u00eb Wood", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Theresa Migler", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Kirsten Mork", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["k-12 curriculum", "outreach", "incarcerated youth", "k-12 instruction", "gender and diversity", "accessibility"]}, {"title": "Session details: Paper Session: BPC Initiatives", "link": "https://dl.acm.org/doi/10.1145/3385544", "abstract": "No abstract available.", "authors": [{"name": "Susanne Hambrusch", "affiliation": "Purdue University"}], "tags": []}, {"title": "A State-Wide Effort to Provide Access to Authentic Computer Science Education to Underrepresented Populations", "link": "https://dl.acm.org/doi/10.1145/3328778.3366955", "abstract": "The Exploring Computer Science (ECS) curriculum provides foundational knowledge of Computer Science (CS) to high school students as a stand-alone course. ECS began in the Los Angeles Unified School District in the late 2000s where it gained eminence for broadening participation in computing (BPC), with Latinx students representing over 70% of enrollment. This experience report describes a partnership that consists of three Universities, dozens of school districts, the ECS team, and other stakeholders to bring the ECS curriculum in mainly rural school districts in Alabama that have a majority African-American student population. Sixty in-service teachers (one teacher per school) have received professional learning opportunities to gain knowledge and skills to teach ECS. Signs of early broader impacts are emerging: 78% of our ECS enrollment are underrepresented minority (URM) students with nearly half of the cohort consisting of female students. Students reported they were engaged in working collaboratively and sharing responsibilities with others. Furthermore, students who reported being more involved in the ECS course had deeper confidence in their ability to succeed in CS, reported greater overall outcomes, had more confidence in development of 21st century skills, found the course more relevant, were more motivated to persist in CS, and exhibited increased interest in CS careers. We provide a comprehensive description of the partnership's accomplishments and the evaluation findings on student CS experiences and on teacher self-efficacy in ECS preparation and instruction. Our findings contribute to the BPC literature, specifically for schools with predominantly African-American enrollment in rural communities.", "authors": [{"name": "Mohammed A. Qazi", "affiliation": "Tuskegee University, Tuskegee, AL, USA"}, {"name": "Melody Russell", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "David M. Shannon", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Misty Thomas", "affiliation": "Auburn University, Auburn, AL, USA"}], "tags": ["broadening participation in computing", "teacher professional development", "exploring computer science (ecs)", "equity"]}, {"title": "Promoting and Supporting Computer Science Among Middle School Girls of Color: Initial Findings from BRIGHT-CS", "link": "https://dl.acm.org/doi/10.1145/3328778.3366855", "abstract": "BRIGHT-CS (Building Student Retention through Individuated Guided coHort Training in Computer Science) is a research and development project that 1) creates a computer science learning ecosystem for middle school Black girls and other girls of color and 2) researches the merits of the ecosystem in supporting persistence in CS to determine best practices for broadening participation to other marginalized student groups in computing. First, this paper describes the BRIGHT-CS program, from the structural, instructional, and curricular designs of the program to partnerships with local and community organizations that make up the ecosystem. Second, it presents the initial findings of research on the program and its impacts on student outcomes such as social-emotional attributes associated with persistence. The study employs a multi-method descriptive design. Data includes student surveys, interviews (from students, parents, instructors, teachers, and mentors), artifact reviews, and student observations. The study includes 46 students across four middle schools in two states. At the start of the program, 37% of the students reported being very interested in CS, and 72% reported being very confident in learning CS. This is much higher than a national benchmark of students. After four months of program implementation, the qualitative results show a more nuanced picture of the value of a learning ecosystem. First, the ecosystem offers implicit messaging about equity and success. Second, the ecosystem offers explicit messaging about personal challenges and improvement. Third, following the implicit and explicit messaging to students, students went from na\u00efve confidence to authentic self-efficacy in CS.", "authors": [{"name": "Adam Hall", "affiliation": "Plus Alpha Research & Consulting, Arlington, VA, USA"}, {"name": "Jamika Burge", "affiliation": "blackcomputeHER, Washington, DC, USA"}, {"name": "Ryoko Yamaguchi", "affiliation": "Plus Alpha Research & Consulting, Arlington, VA, USA"}, {"name": "Veronica Madrigal", "affiliation": "Education First Consulting, Washington, DC, USA"}], "tags": ["qualitative", "learning environment", "k-12 instruction", "descriptive", "gender and diversity"]}, {"title": "Broadening Participation in Computing: The Role of Upward Transfer", "link": "https://dl.acm.org/doi/10.1145/3328778.3366807", "abstract": "Broadening participation in computing (BPC) has received increasing attention within the computing education community. Yet, much of the existing research on this topic focuses primarily on students who follow traditional pathways to four-year computing programs. This multi-institution study addresses this gap in the literature, providing insight into how upward transfer students (i.e., students who transfer from community colleges to four-year computing programs) fit into the larger BPC narrative. Specifically, I use survey data from computing majors across 15 universities to examine how the characteristics and experiences of upward transfer students differ from those of other computing majors. Findings reveal that while upward transfer students tend to be more diverse than other computing majors in terms of race/ethnicity, socioeconomic status, and other background characteristics, women are even more underrepresented among upward transfers compared to computing majors who began their degree at four-year institutions. These and other findings are discussed, focusing on implications for how institutions can support upward transfer students as part of their larger BPC efforts.", "authors": [{"name": "Jennifer M. Blaney", "affiliation": "Idaho State University, Pocatello, ID, USA"}], "tags": ["broadening participation", "upward transfer", "undergraduate computing"]}, {"title": "Session details: Paper Session: Math&CS", "link": "https://dl.acm.org/doi/10.1145/3385545", "abstract": "No abstract available.", "authors": [{"name": "Eric Snow", "affiliation": "ETS"}], "tags": []}, {"title": "Didactic Methods of Integrating Programming in Mathematics in Primary School: Findings from a Swedish National Project", "link": "https://dl.acm.org/doi/10.1145/3328778.3366839", "abstract": "The association between mathematics and programming in an educational context is not new. Today, programming has been introduced into curricula worldwide for younger children. In the Swedish case, primary school teachers are expected to integrate programming in mathematics education from autumn 2018. However, Swedish teachers' knowledge of programming and programming didactics is limited. Meanwhile, there is little research on K-9 programming education. This has led to the dilemma that the mathematics teachers have limited support in didactic knowledge and good examples. This study reports on a teacher professional development project in programming. More specifically, teachers used Lesson Study to plan, execute, and evaluate lessons that integrated programming into various school subjects in elementary school. This study analyzed the didactic strategies developed in 10 lesson studies, as well as mapped the opportunities and challenges of pupils' learning in the mathematics subject. The result was the identification of three didactic strategies, which were analog programming, robot programming and block programming, as well as 11 didactic methods applied within these strategies. The paper contributes with examples of the didactic methods that teachers have developed and evaluated using lesson study. The paper further provides insights on how teachers can take progression into account by applying the three didactic strategies. At last but not least, the study shows a great need for teachers to develop computational thinking abilities.", "authors": [{"name": "LeChen Zhang", "affiliation": "Stockholm University, Stockholm, Sweden"}, {"name": "Jalal Nouri", "affiliation": "Stockholm University, Stockholm, Sweden"}, {"name": "Eva Nor\u00e9n", "affiliation": "Stockholm University, Stockholm, Sweden"}, {"name": "Gashawa Ahmed", "affiliation": "Stockholm University, Stockholm, Sweden"}], "tags": ["mathematics", "computational thinking", "compulsory education", "programming", "didactic strategies"]}, {"title": "Comprehending Code: Understanding the Relationship between Reading and Math Proficiency, and 4th-Grade CS Learning Outcomes", "link": "https://dl.acm.org/doi/10.1145/3328778.3366822", "abstract": "As many school districts nationwide continue to incorporate Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial that we understand the factors and skills, such as reading and math proficiency, that contribute to the success of younger learners in a computing curriculum and are typically developed at this age. Yet, little is known about the relationship between reading and math proficiency, and the learning of key CS concepts at the elementary level. This study focused on 4th-grade students (ages 9-10) who were taught events, sequence, and repetition through an adaptation of the Creative Computing Curriculum. While all students benefited from access to such a curriculum, there were statistically-significant differences in learning outcomes, especially between students whose reading and math proficiency are below grade-level, and students whose proficiency are at or above grade-level. This performance gap suggests the need for curricular improvement and learning strategies that are CS specific for students who struggle with reading and math.", "authors": [{"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "William Marsland", "affiliation": "San Francisco Unified School District, San Francisco, CA, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Cathy Thomas", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Bryan Twarek", "affiliation": "Computer Science Teachers Association, New York City, NY, USA"}], "tags": ["reading comprehension", "computational thinking", "k-8 education", "math proficiency"]}, {"title": "Motivating Future Adventures in Computing by Unmasking Math Behind Movie Special Effects", "link": "https://dl.acm.org/doi/10.1145/3328778.3366934", "abstract": "Children and adolescents consume increasing hours of screen time, the largest share of which goes to viewing movies according to Common Sense Research. Recently, movies with the highest box office revenues typically feature computer-generated imagery (CGI). Despite this substantial consumption of computer-generated imagery, the typical young viewer is unaware of how large a role mathematics plays in creating these movies. Studies have shown that there is a link between proficiency in math and predicted success in computing. In this paper, we describe our efforts to develop and evaluate CS Unplugged and code-based activities that attempt to explicitly connect math concepts with the creation of movie special effects magic. The learning activities have been designed and evaluated with middle school and first-year college students to demonstrate their potential to increase awareness and knowledge of how math is used in movie effects and to increase desire for future study of math. The paper describes the motivating context, pedagogical strategies, math learning outcomes, and CS Unplugged and code-based activities so that others may apply the methods. The paper concludes with a presentation and analysis of results from a five-day STEM summer camp for middle-school children and activities presented in first-year college classrooms and discussion of limitations and directions for future work.", "authors": [{"name": "William Bares", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Katie Chea", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Christine Moore", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["mathematics", "special effects", "movies", "animation", "cs unplugged"]}, {"title": "Session details: Paper Session: Ethics&Academic Integrity", "link": "https://dl.acm.org/doi/10.1145/3385546", "abstract": "No abstract available.", "authors": [{"name": "Brian Railing", "affiliation": "Carnegie Mellon University"}], "tags": []}, {"title": "Teaching Academic Honesty in CS50", "link": "https://dl.acm.org/doi/10.1145/3328778.3366940", "abstract": "We aspire to teach academic honesty in CS50 at Harvard University not only by addressing academic dishonesty when it occurs but by addressing it before it does. By way of communication, course- and campus-wide awareness of policy, just-in-time prompts, interventional conversations, and problem sets have we tried to preempt submission of plagiarized work. But few interventions have had significant or lasting effects on the number of instances thereof. Most impactful has been the addition of one sentence to the course's syllabus, a \"regret clause\" that encourages students to come forward within 72 hours of some dishonest act on their part, before the course itself is even aware. While we might zero the work in question in such cases, we commit to not escalating the matter further to the university's honor council, where the outcome might instead be admonishment, probation, or even required withdrawal from the university itself. We instead advise students on how best to move forward and connect them as needed with support structures on campus for academics and mental health. Since 2014 have 89 students invoked the clause, between 1% and 3% of the course's student body each year.", "authors": [{"name": "Brian Yu", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Doug Lloyd", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["policy", "honor council", "academic honesty", "plagiarism", "code", "ethics", "academic dishonesty"]}, {"title": "What Do We Teach When We Teach Tech Ethics?: A Syllabi Analysis", "link": "https://dl.acm.org/doi/10.1145/3328778.3366825", "abstract": "As issues of technology ethics become more pervasive in the media and public discussions, there is increasing interest in what role ethics should play in computing education. Not only are there more standalone ethics classes being offered at universities, but calls for greater integration of ethics across computer science curriculum mean that a growing number of CS instructors may be including ethics as part of their courses. To both describe current trends in computing ethics coursework and to provide guidance for further ethics inclusion in computing, we present an in-depth qualitative analysis of 115 syllabi from university technology ethics courses. Our analysis contributes a snapshot of the content and goals of tech ethics classes, and recommendations for how these might be integrated across a computing curriculum.", "authors": [{"name": "Natalie Garrett", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Nathan Beard", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Casey Fiesler", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}], "tags": ["curriculum", "ethics", "syllabi", "professional responsibility"]}, {"title": "Teaching Computer Ethics: A Deeply Multidisciplinary Approach", "link": "https://dl.acm.org/doi/10.1145/3328778.3366951", "abstract": "We report on a curricular experiment at Stanford University focused on teaching computer ethics. After nearly a year of preparation, we launched a new course at the intersection of ethics, public policy, and technology that deeply marries the humanities, social sciences, and computer science. While the teaching of computer ethics courses dates back decades, such courses are often taught by a (single) CS faculty member without significant training in ethics, do not include a policy component, and are meant for CS students. By contrast, we take a deeply multidisciplinary approach, where three faculty instructors, from philosophy, political science, and CS, each bring their respective lens to four related course modules: algorithmic decision-making, data privacy and civil liberties, AI and autonomous systems, and the power of platform companies. Panels of guest speakers drawn from academia, industry, civil society, and government provide a practitioner's view of the topics addressed. Additionally, custom case studies were developed under the direction of the course staff. These materials (videos of the speaker panels and the case studies) are freely available for use by the broader community. We report on the details of the course structure, including how multiple disciplines are integrated throughout the course, including lectures, discussions, and assignments. We discuss aspects of the course that worked well as well as challenges in making the course broadly accessible (beyond just CS majors). Importantly, we also include a discussion of students' response to the course, showing that a deeply multidisciplinary approach resonates strongly with them.", "authors": [{"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Rob Reich", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Jeremy M. Weinstein", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Hilary Cohen", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["computer ethics", "humanities", "multidisciplinary", "social science"]}, {"title": "Session details: Paper Session: Student Motivation", "link": "https://dl.acm.org/doi/10.1145/3385547", "abstract": "No abstract available.", "authors": [{"name": "Geoffrey L. Herman", "affiliation": "University of Illinois at Urbana-Champaign"}], "tags": []}, {"title": "Influence of Course Design on Student Engagement and Motivation in an Online Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366828", "abstract": "We present a course design model for applying project-based learning to an online undergraduate object oriented systems course. In our model, projects and reflection are central to the curriculum. Our model challenges students through modularized, repetitive project cycles beginning with analysis and design (i.e. using pseudo- code, flowcharts, diagrams) then coding, debugging, testing, and finally, reflection. We analyzed student reflection responses from two semesters to extract major themes and sub-themes, then mapped these to the MUSIC model (eMpowerment, Usefulness, Success, Interest, Caring) to understand our model's influence on student engagement and motivation. We found that a rhythmic project cycle encourages self-regulation in online students to formulate project plans, track their progress, and evaluate their solutions. Online students feel empowered when course projects promote choice, flexibility, creativity, experimentation, and extensions to other applications. Online student success is dependent on the clarity of instructions, course scaffolding, level of challenge, instructor feedback, and opportunities to reflect on personal failure, success, and challenge. Online students are interested in projects that are familiar, real-world, and fun, but expect to be situated in team-based environments. Students appreciate instructors who are caring and accommodating to personal needs. We recommend six salient strategies for improving online course and project design: design a visible, rhythmic structure; set transparent expectations and instructions; encourage design before implementation; connect to real-world applications and tools; experience happy challenges; infuse sustained reflection.", "authors": [{"name": "Kiran Budhrani", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Kalpathi Subramanian", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["online courses", "real-world projects", "object oriented programming", "student motivation", "student reflection", "student engagement", "course design", "project-based learning"]}, {"title": "A Project-Based Learning Approach for Enhancing Learning Skills and Motivation in Software Engineering", "link": "https://dl.acm.org/doi/10.1145/3328778.3366891", "abstract": "Software engineers must be able to manage complex projects, so that skills such as teamwork, leadership or initiative are critical to their successful development. Because of this, it is fundamental that the learning of software engineering as an academic discipline provides solid links between theory and practice. Educational frameworks such as those derived from the European Higher Education Area state that student-centered approaches are a useful tool for achieving these objectives. In this context, we present a project-based learning (PBL) experience report in a software engineering program of a Spanish university. The experience is based on the formation of small heterogeneous teams, which face the initial phases of a software methodology during the development of a project close to a real one. Through a strategy of role rotation and documentation transfer, all students perform different tasks and face different challenges throughout the project. Summative assessment is also adopted, considering not only teacher ratings but also students' peer assessment. The results prove the positive effect of using PBL to improve the training of students in acquiring different skills as future software engineers.", "authors": [{"name": "Beatriz P\u00e9rez", "affiliation": "Universidad de La Rioja, Logro\u00f1o, Spain"}, {"name": "\u00c1ngel L. Rubio", "affiliation": "Universidad de La Rioja, Logro\u00f1o, Spain"}], "tags": ["project based learning", "uml", "software engineering"]}, {"title": "The Prevalence of Anxiety and Depression Symptoms among Brazilian Computer Science Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3366836", "abstract": "The mental health of undergraduate students has become a focus of attention for health experts and for society. Several studies have considered students from the Health Sciences, predominantly medical students. Lately, discussions about the mental health of Computer Science (CS) students have become increasingly common. This paper presents a study about the prevalence of anxiety and depression symptoms among CS students. This study was conducted at Universidade Federal Rural do Rio de Janeiro (UFRRJ), a Brazilian public university. The aim of this study was to verify the prevalence and associated factors of anxiety and depression symptoms among Brazilian CS students. Students were randomly selected ($n=131$) from the CS program at UFRRJ, aged between 18 and 30 years. The participants completed a sociodemographic questionnaire and two inventories -- the Beck Anxiety Inventory (BAI) and the Beck Depression Inventory (BDI) -- that were used to measure levels of anxiety and depression symptoms. Statistical analysis was performed using the TIBCO Statistica\\textsuperscript#8482; software (version 13.5). The prevalence of anxiety and depression symptoms among the students were, respectively, $51.9%$ and $64.9%$, which are higher than previous findings in the Brazilian general population and among medical students. Additionally, the BDI and BAI scores were higher among female students, and we observed statistically significant relationships between BAI, BDI, and sleep quality, among others. This paper describes our study and findings and addresses ways in which CS students may be able to reduce symptoms of anxiety and depression.", "authors": [{"name": "Marcos Gon\u00e7alves de Santana", "affiliation": "Universidade Federal de Goi\u00e1s, Jata\u00ed, Brazil"}, {"name": "L\u00edgia Maria Soares Passos", "affiliation": "Universidade Federal Rural do Rio de Janeiro, Nova Igua\u00e7u, Brazil"}, {"name": "Giselle Soares Passos", "affiliation": "Universidade Federal de Goi\u00e1s, Jata\u00ed, Brazil"}, {"name": "Christian Murphy", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Rita Zhen Chen", "affiliation": "Universidade Federal Rural do Rio de Janeiro, Nova Igua\u00e7u, Brazil"}], "tags": ["students", "depression", "computer science", "anxiety"]}, {"title": "The Cambridge Handbook of Computing Education Research Summarized in 75 minutes", "link": "https://dl.acm.org/doi/10.1145/3328778.3366988", "abstract": "The 32 chapters of the 2019 Cambridge Handbook of Computing Education Research synthesize the existing research in computing education and propose new directions for future research. An author from each chapter will summarize their chapter with auto-advancing slides. Attendees will be introduced to the breadth of content in the new handbook and can identify chapters of interest. This fits uniquely as a special session, and will likely be informative, inspiring, and overwhelming.", "authors": [{"name": "Beth Simon", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Kathi Fisler", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Lauren Margulieux", "affiliation": "Georgia State University, Atlanta, GA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Jean J. Ryoo", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Mike Tissenbaum", "affiliation": "University of Illinois at Urbana Champaign, Champaign, IL, USA"}, {"name": "Paulo Blikstein", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Mark Guzdial", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Patricia Haden", "affiliation": "University of Otago, New Zealand, Dunedin, New Zealand"}, {"name": "R. Benjamin Shapiro", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Sepehr Hejazi Moghadam", "affiliation": "Google, Inc., Mountain View, CA, USA"}, {"name": "Niral Shah", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Anthony Robins", "affiliation": "University of Otago, New Zealand, Dunedin, New Zealand"}, {"name": "Sally A. Fincher", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Christopher Hundhausen", "affiliation": "Washington State University, Pullman, WA, USA"}, {"name": "Kerry Shephard", "affiliation": "University of Otago, New Zealand, Dunedin, New Zealand"}, {"name": "Tim Bell", "affiliation": "University of Canterbury, Christchurch, New Zealand"}, {"name": "Ian Utting", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Michael S. Horn", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Michael C. Loui", "affiliation": "Purdue University, West Lafayette, IN, USA"}, {"name": "Adam S. Carter", "affiliation": "Humboldt State University, Arcata, CA, USA"}, {"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Amy J. Ko", "affiliation": "University of Washington, Seattle, Seattle, WA, USA"}, {"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}, {"name": "Thomas Lancaster", "affiliation": "Imperial College London, London, United Kingdom"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}], "tags": ["literature review", "computing education research", "methods"]}, {"title": "SIGCSE Reads 2020: Author Discussion and Q & A", "link": "https://dl.acm.org/doi/10.1145/3328778.3366996", "abstract": "This special session furthers the work associated with SIGCSE Reads and the growing community of SIGCSE members who connect to each other through science fiction. The session starts with a practical experience addressing one of the five common goals presented previously: a learning experience for participants in how science fiction can be used in computing classrooms to teach ethics and develop CS students' facility for considering ethical situations with deeper critical thinking. Materials will be available so that the exercise can be translated to other classrooms. This will be followed by a significant Q & A session with one of this year's authors, Hugo Award winner David D. Levine, whose short story \"Damage\" addresses questions of ethical decision making by an AI.", "authors": [{"name": "Nanette Veilleux", "affiliation": "Simmons University, Boston, MA, USA"}, {"name": "David D. Levine", "affiliation": "Self, Portland, OR, USA"}, {"name": "Valerie Summet", "affiliation": "Rollins College, Winter Park, FL, USA"}, {"name": "Rebecca Bates", "affiliation": "Minnesota State University, Mankato, Mankato, MN, USA"}, {"name": "Judy Goldsmith", "affiliation": "University of Kentucky, Lexington, KY, USA"}], "tags": ["building community", "science fiction", "ethics", "computing education"]}, {"title": "The Impact of CS for All on College Placement in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3366968", "abstract": "With the CS for All movement increasingly gaining traction nationally, students entering colleges and universities are arriving with deeper and broader CS experiences. This in turn can change students' higher education starting point. This panel of CS faculty with expertise in this area will present perspectives and models to describe how higher education choices for placement, credit, and curriculum design affect the efforts to broaden participation in student pathways into computing and related studies.", "authors": [{"name": "Dale Reed", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Frances P. Trees", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Ronald I. Greenberg", "affiliation": "Loyola University Chicago, Chicago, IL, USA"}, {"name": "Julie Medero", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["cs for all", "computing pathways", "programming prerequisites", "computer science placement"]}, {"title": "Who Has a Seat at the Table in CSed?: Rethinking Equity Through the Lens of Decision-making and Power in Computer Science Education Initiatives", "link": "https://dl.acm.org/doi/10.1145/3328778.3366969", "abstract": "Who makes decisions about what K-12 computer science education(CSed) should look like? While equitable participation is a central focus of K-12 CSed, the field has largely thought about equity through the lens of providing access to inclusive and robust CS learning. But issues of who has a \"seat at the table\" in determining the shape of those experiences, and the larger field that structures them, have been largely under-explored. This panel session argues that equitable CSed must take into account questions of participation in decision-making about CSed, with such issues of power themselves a key dimension of equity in any education effort. We highlight efforts engaging stakeholders from across the education landscape-parents, educators, community members, administrators, and students-exploring how decision-making is structured, how voices that are usually marginalized might be elevated, the tensions involved in these processes, and the relationships between participation and equity.", "authors": [{"name": "Alex Tirado", "affiliation": "Los Angeles Unified School District, Los Angeles, CA, USA"}, {"name": "Alicia Moriss", "affiliation": "Los Angeles Unified School District, Los Angeles, CA, USA"}, {"name": "Jean Ryoo", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Sara Vogel", "affiliation": "The Graduate Center, City University of New York, New York, NY, USA"}, {"name": "Camie Belgrave", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Rafi Santo", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Jill Denner", "affiliation": "ETR, Scotts Valley, CA, USA"}], "tags": ["k-12 computer science education", "decision-making", "equity"]}, {"title": "Institutions Share Successes, Failures, and Advice in Moving the Diversity Needle", "link": "https://dl.acm.org/doi/10.1145/3328778.3366976", "abstract": "Five institutions awarded grants by the Hopper-Dean foundation to develop interventions that would advance diversity in computer science will present their initiatives and results. This panel will allow them to share what was successful, what was challenging or did not work, and how the lessons they learned are applicable to all institutions, small and large.", "authors": [{"name": "Jonathan Reynolds", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Eboney Hearn", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}, {"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Moses Charikar", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Ed Lazowska", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["computer science education", "diversity and outreach", "csforall"]}, {"title": "Session details: Paper Session: Novice Programmer Behaviors", "link": "https://dl.acm.org/doi/10.1145/3385548", "abstract": "No abstract available.", "authors": [{"name": "Sheng Tan", "affiliation": "Trinity University"}], "tags": []}, {"title": "Exploring Novice Programmers' Homework Practices: Initial Observations of Information Seeking Behaviors", "link": "https://dl.acm.org/doi/10.1145/3328778.3366885", "abstract": "There are many factors that contribute to the success of students learning to code. For students in introductory programming classes, one source of complexity is the availability of a wide variety of information sources. In this paper, we report observations of students seeking information when working on programming homework assignments. Our data was collected from a think-aloud protocol embedded into semi-structured, individual interviews with students enrolled in a CS1 course. We analyze our data through the lens of information seeking behavior. We observed students using multiple sources of information, including referring back to course materials and searching for information online, and discussing how they sought help from friends, classmates, and family members. Herein, we discuss implications for teaching and future research based on our initial observations. For example, instructors could consider designing early homework assignments that would prompt students to seek information and follow up this assignment with an in-class discussion about homework strategies. Future research could investigate the mechanisms by which students progress from haphazard to more strategic information seeking behaviors.", "authors": [{"name": "Thu D. Nguyen", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Mary Emenike", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Monica Babes-Vroman", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Silvia Muller", "affiliation": "Rutgers University, Piscataway, NJ, USA"}], "tags": ["cs1", "computer science education", "information seeking behavior", "homework"]}, {"title": "Sometimes It's Just Sloppiness - Studying Students' Programming Errors and Misconceptions", "link": "https://dl.acm.org/doi/10.1145/3328778.3366862", "abstract": "Knowledge about students' programming errors is a valuable source to get insights into students deficiencies and misconceptions. In this paper, we use data from an introductory C programming course to identify which errors are often made by students. Previous studies often focused only on syntactic and semantic errors as they can be easily identified by compilers. Studies focusing on logic errors were often restricted to a limited set of concepts or performed for a small set of data. We manually inspect 12371 submission by 280 students and have no restrictions regarding the error types we are looking for. We classify our found errors into six categories: syntactic, conceptual, strategic, sloppiness, misinterpretation, and domain knowledge. Our results show that a big portion of errors made by students is simply caused by sloppiness. But putting sloppiness aside, students seem to have most problems with strategic knowledge, i.e., the problem solving ability. We compare our results to previous studies and provide some implications of our results for future teaching practice.", "authors": [{"name": "Ella Albrecht", "affiliation": "University of Goettingen, G\u00f6ttingen, Germany"}, {"name": "Jens Grabowski", "affiliation": "University of Goettingen, G\u00f6ttingen, Germany"}], "tags": ["misconceptions", "novices", "errors", "programming"]}, {"title": "A Comparison of Two Pair Programming Configurations for Upper Elementary Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3366941", "abstract": "As computer science education opportunities for elementary students (grades K-5) are expanding, there is growing interest in using pair programming with these students. However, previous research findings do not fully support its use with younger learners, and some researchers have begun to examine whether introducing a second computer with a shared coding workspace can provide important benefits. This experience report describes a series of classroom activities in the 4th and 5th grades (ages 9-11 years old) with two different pair programming configurations: one-computer pair programming, in which both students share a keyboard, mouse, and monitor; and two-computer pair programming, in which each student has a separate computer but coding workspaces are synchronized over the web. In both cases the students sat next to each other and engaged in face-to-face conversation. We found that students largely preferred two-computer pair programming over one-computer pair programming. We conducted focus groups and transcribed collaborative dialogues to gain more insight into this preference. We learned that students felt more independence in two-computer pair programming, although they struggled with coordinating their edits with their partner. In one-computer pair programming, students reported not wanting to wait for their turn to drive, but feeling as though they communicated more with their partner. Both configurations can be productive for students, but the tradeoffs described in this experience report are important for CS educators and researchers to consider when determining which collaborative configuration to use in each K-5 classroom context.", "authors": [{"name": "Zarifa Zakaria", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Joseph B. Wiggins", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Eric Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Jessica Vandenberg", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Collin Lynch", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Jennifer Tsan", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Amanda Bradbury", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Alexander R. Webber", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["pair programming", "k-5", "collaborative learning"]}, {"title": "Session details: Paper Session: CS Instruction", "link": "https://dl.acm.org/doi/10.1145/3385549", "abstract": "No abstract available.", "authors": [{"name": "Pati Ruiz", "affiliation": "Digital Promise Global"}], "tags": []}, {"title": "CS Student Laptop and Computer Lab Usage as a Factor of Success in Computing Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3366854", "abstract": "Computing Education Research (CER) implicitly assumes that CS undergraduate students have no barrier to access a learning platform or software package. The assumption that \"everyone has access to and uses a device\" endangers the validity of CER studies by overlooking a critical element in what students access and how students use computing resources. First, in this work, we explicitly investigate undergraduate student usage (how often) of computing resources (laptops and computer labs) on a university campus. Furthermore, we investigate whether CS student usage of laptops and computer labs are factors of success in computing education to close a crucial feedback loop for CER and CS educators. Second, previous studies studying student's technology equipped used qualitative surveys, and lacked a systematic and continuous view of the student population. In this work, we address this shortcoming by developing a method to use operational data sets from the wireless networks and computer labs on campus. Operational data sets provide a systematic and continuous coverage of all students, that is, a student's absence of usage becomes a data point instead of a missing point. Results indicate that the use of equipment levels may be lower than national average. Nevertheless, there exists a positive correlation between higher frequency of laptop usage and success in computing education.", "authors": [{"name": "B\u00e9atrice Moissinac", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Robin Pappas", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Jennifer Parham-Mocello", "affiliation": "Oregon State University, Corvallis, OR, USA"}], "tags": ["computer lab usage", "computing education", "laptop usage", "operational data set", "student success"]}, {"title": "Factors Associated with High-Quality Computer Science Instruction: Data from a Nationally Representative Sample of High School Teachers", "link": "https://dl.acm.org/doi/10.1145/3328778.3366831", "abstract": "This paper shares results from surveys administered in spring 2018 to a nationally representative sample of nearly 300 U.S. high school computer science teachers. It describes the nature of high school computer science instruction and the extent to which teacher background, classroom factors, and school context predict the type of instruction students experience. Data from the study were analyzed using path modeling-a form of regression analysis that estimates both direct and indirect effects (i.e., through intermediary variables)-to examine relationships between teacher, classroom, and school factors, and the extent to which teachers (1) emphasize reform-oriented instructional objectives (e.g., learning about real-life applications of computer science) and (2) engage students in computer science practices (e.g., recognizing and defining computational problems). Sample findings include that students are most commonly engaged in activities related to testing and refining computational artifacts, but are less often engaged in aspects of computer science related to end users (e.g., create a computational artifact to be used by someone else). The path analysis highlights several factors that are related to greater engagement of students in the computer science practices, including teacher participation in professional development and the use of coherent instructional materials.", "authors": [{"name": "Laura Craven", "affiliation": "Horizon Research, Inc., Chapel Hill, NC, USA"}, {"name": "Eric Banilower", "affiliation": "Horizon Research, Inc., Chapel Hill, NC, USA"}], "tags": ["computer science practices", "instruction", "high school computer science education"]}, {"title": "A Strategy to Enhance Computer Science Teaching Material Using Topic Modelling: Towards Overcoming The Gap Between College And Workplace Skills", "link": "https://dl.acm.org/doi/10.1145/3328778.3366858", "abstract": "Computer Science teaching materials are biased towards concepts and theoretical aspects. One may consider it difficult to relate concepts to concrete problems. Consequently, it increases the chances of a student not recognizing the relevance of the subject, becoming unmotivated and unprepared to solve practical problems or coping with workplace needs after college. This paper shows the use of social media data as an alternative to minimize the skill gap between what the student learns in college and the skills required in the workplace. The proposed strategy consists of extracting topics from Stack Overflow questions to identify concepts generally unknown or misunderstood and concepts that their practical application represents a challenge. The concepts covered in Stack Overflow questions provide strong cues about how professors and instructors can improve teaching material with useful content for their students, as well as increase their motivation -- since the teaching material becomes clearly related to practical issues in Computer Science. We show, by an example, how to use the proposed strategy to improve teaching material from the generated topics. Also, we demonstrate that the application of topic modeling in Stack Overflow content is promising as a professor support tool to enhance teaching material relevance in Computer Science courses and diminish the college-workplace skill gap.", "authors": [{"name": "Ingrid Mar\u00e7al", "affiliation": "S\u00e3o Paulo State University (UNESP), Presidente Prudente, Brazil"}, {"name": "Danilo Eler", "affiliation": "S\u00e3o Paulo State University (UNESP), Presidente Prudente, Brazil"}, {"name": "Rog\u00e9rio Eduardo Garcia", "affiliation": "S\u00e3o Paulo State University (UNESP), Presidente Prudente, Brazil"}, {"name": "Ronaldo Celso Messias Correia", "affiliation": "S\u00e3o Paulo State University (UNESP), Presidente Prudente, Brazil"}], "tags": ["topic modelling", "transformative higher education", "college-workplace gap", "curriculum improvement", "computer science education"]}, {"title": "Session details: Paper Session: CS1/CS2", "link": "https://dl.acm.org/doi/10.1145/3385550", "abstract": "No abstract available.", "authors": [{"name": "Charles Wallace", "affiliation": "Michigan Technological University"}], "tags": []}, {"title": "The Practical Details of Building a CS Concept Inventory", "link": "https://dl.acm.org/doi/10.1145/3328778.3366903", "abstract": "Concept inventories (CIs) allow researchers and practitioners to measure student conceptual learning within a course or topic area. While they have enabled meaningful pedagogical change in other disciplines, there are relatively few CIs in computer science. In this paper, we report on our experiences as recent developers of a CI for basic data structures. We discuss each step along the route to a CI and offer tips based on what we have learned. We encourage others to create CIs, and we hope that this paper will serve as a practical guide through the process.", "authors": [{"name": "Cynthia Taylor", "affiliation": "Oberlin College, Oberlin, OH, USA"}, {"name": "Kevin C. Webb", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Palo Alto, CA, USA"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}, {"name": "Michael Clancy", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["concept inventory", "assessment", "data structures"]}, {"title": "Reviewing CS1 Materials through a Collaborative Software Engineering Exercise: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3366932", "abstract": "Many courses incorporate exercises at the end of the semester to help students review course topics. In computer science courses, review activities are often small coding problems, interactive games, or review lectures. In this paper, we describe our experience with replacing student-led review presentations with a collaborative software engineering exercise to serve as a review of CS1 programming concepts. The objective of this review exercise is to increase engagement and self-reflection on course topics by engineering a real-world software application to help students review programming concepts and prepare for the subsequent CS1.5 course. During the final two weeks of the course, students spend three class sessions working to complete the comprehensive exercise. During the final class session, each team presents its software. In this paper, we describe the comprehensive exercise, lessons learned from the past eight semesters (over 1,400 students), and suggestions for adopting the comprehensive exercise in other CS1 courses.", "authors": [{"name": "Jessica Young Schmidt", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["critical and creative thinking", "course project", "cs1", "teamwork", "software lifecycle"]}, {"title": "Exploring the Link Between Prerequisites and Performance in Advanced Data Structures", "link": "https://dl.acm.org/doi/10.1145/3328778.3366867", "abstract": "Recent work has identified a mismatch between instructor expectations of students' mastery of prerequisite course content and their actual ability. This invites the question of why this mismatch exists. We first examined grades in prerequisite courses and found they meaningfully correlated with performance on an assessment testing their knowledge of prerequisite material. In addition, we found neither taking alternatives to the primary identified prerequisites nor the delay between taking prerequisite courses and the follow-on course meaningfully impacts performance. Second, we confirmed that prerequisite course grades are significantly correlated with the grade in the follow-on course-confirming that the grades in the previous courses convey some information about student understanding of those topics. Perhaps surprisingly, we found that grades in courses outside computing were similarly correlated as those courses inside computing, suggesting that underlying factors such as general study skills may be as important as the domain-specific knowledge itself.", "authors": [{"name": "Sophia Krause-Levy", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Sander Valstar", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "William G. Griswold", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["study habits", "prerequisites", "curriculum", "knowledge retention"]}, {"title": "Session details: Paper Session: CS + X", "link": "https://dl.acm.org/doi/10.1145/3385551", "abstract": "No abstract available.", "authors": [{"name": "Robert Gotwals", "affiliation": "North Carolina School of Science and Math"}], "tags": []}, {"title": "Abstraction Through Multiple Representations in an Integrated Computational Thinking Environment", "link": "https://dl.acm.org/doi/10.1145/3328778.3366892", "abstract": "We present reflections based on qualitative analysis of data from the CHEM+C Project which promotes computational thinking (CT) in classrooms through integration with science classes. The curriculum utilizes multiple representations, requiring students to work with physical phenomena, chemical equations, digital simulations, and modifiable code-based representations. Much CT focus on abstraction naturally emphasizes (1) extraction of a set of features from an object or process, and (2) finding commonality between objects and processes. But Rosen encourages us to think about abstraction as also including the production of new concepts or actions. Integrating CT into science offers the possibility of enhancing this aspect of abstraction. Changing the representational affordances available to the students allows them to take their CT thinking beyond learning-to-abstract towards learning-through-abstraction. This perspective moves computation from an internally focused exercise into the expression of valued ideas in a computational medium.", "authors": [{"name": "Aakash Gautam", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Deborah Tatar", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Whitney Bortz", "affiliation": "Fresno Pacific University, Fresno, CA, USA"}], "tags": ["ct", "science context", "computational thinking", "representation", "multi-representation", "k-12", "abstraction"]}, {"title": "Interdisciplinary Computing: Applied Computing for Behavioral and Social Sciences", "link": "https://dl.acm.org/doi/10.1145/3328778.3366799", "abstract": "As the digital economy grows, so does the demand for technology-capable workers who have both computing skills and domain expertise. Growing such a workforce is critical to ensuring the nation's competitiveness, according to a recent National Science Board publication. To address this need, faculty from the Colleges of Engineering and Social Sciences at San J\u00f3se State University worked together to create the Applied Computing for Behavioral and Social Sciences minor degree. The minor targets students in majors such as Psychology and Economics, which have a more diverse student population than that of Computer Science or Engineering. The minor, designed with industry input, includes a four-course sequence that focuses on Python and R and includes topics such as data structures, algorithms, data cleaning and management, and data analysis. Our cohort-based program was built specifically for social science students using social science content, helping to foster a sense of community and belongingness among students. The first full cohort of 26 students graduated in Spring 2019, 48% of whom were female and 23% of whom were underrepresented minorities. Our approach of embedding computing education into the social sciences demonstrates a promising model of broadening participation in computing and meeting the nation's increasing demand for interdisciplinary computing workers in the digital age.", "authors": [{"name": "Valerie Carr", "affiliation": "San J\u00f3se State University, San Jose, CA, USA"}, {"name": "Belle Wei", "affiliation": "San J\u00f3se State University, San Jose, CA, USA"}, {"name": "Morris Jones", "affiliation": "San J\u00f3se State University, San Jose, CA, USA"}], "tags": ["computing for social sciences", "broadening participation in computing", "data science for social sciences", "applied computing", "new degree program", "interdisciplinary computing"]}, {"title": "Interdisciplinary Minor in Bioinformatics: First Results and Outlook", "link": "https://dl.acm.org/doi/10.1145/3328778.3366804", "abstract": "There is a clear demand and need for more and better training in Computer Science for students of different backgrounds and genders. Traditional academic pathways for Computer Science majors and minors may not always be well suited for attracting underrepresented students. With the aim of recruiting and training students from life sciences, over 60 of whom are female, we established an alternative, programming-intensive pathway that is integrated within an interdisciplinary Bioinformatics minor. In this paper, we summarize the development and implementation of this program in a large public university, which can serve as a framework for new interdisciplinary programs in predominantly undergraduate institutions.", "authors": [{"name": "Natalia Khuri", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Sami Khuri", "affiliation": "San Jos\u00e9 State University, San Jose, CA, USA"}, {"name": "Miri VanHoven", "affiliation": "San Jos\u00e9 State University, San Jose, CA, USA"}, {"name": "K. Virginia Lehmkuhl-Dakhwe", "affiliation": "San Jos\u00e9 State University, San Jose, CA, USA"}, {"name": "Wendy Lee", "affiliation": "San Jos\u00e9 State University, San Jose, CA, USA"}], "tags": ["programming for non-majors", "bioinformatics", "curriculum"]}, {"title": "Session details: Paper Session: Code Analysis", "link": "https://dl.acm.org/doi/10.1145/3385552", "abstract": "No abstract available.", "authors": [{"name": "Saleh Alnaeli", "affiliation": "University of Wisconsin-Stout"}], "tags": []}, {"title": "A Study of Keystroke Data in Two Contexts: Written Language and Programming Language Influence Predictability of Learning Outcomes", "link": "https://dl.acm.org/doi/10.1145/3328778.3366863", "abstract": "We study programming process data from two introductory programming courses. Between the course contexts, the programming languages differ, the teaching approaches differ, and the spoken languages differ. In both courses, students' keystroke data -- timestamps and the pressed keys -- are recorded as students work on programming assignments. We study how the keystroke data differs between the contexts, and whether research on predicting course outcomes using keystroke latencies generalizes to other contexts. Our results show that there are differences between the contexts in terms of frequently used keys, which can be partially explained by the differences between the spoken languages and the programming languages. Further, our results suggest that programming process data that can be collected non-intrusive in-situ can be used for predicting course outcomes in multiple contexts. The predictive power, however, varies between contexts possibly because the frequently used keys differ between programming languages and spoken languages. Thus, context-specific fine-tuning of predictive models may be needed.", "authors": [{"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "John Edwards", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Arto Hellas", "affiliation": "Aalto University, Epsoo, Finland"}], "tags": ["keystroke data", "programming process data", "educational data mining", "digraphs", "keystroke analysis", "predicting performance"]}, {"title": "Calibration and Analysis of Source Code Similarity Measures for Verilog Hardware Description Language Projects", "link": "https://dl.acm.org/doi/10.1145/3328778.3366928", "abstract": "In this paper we report on our experiences during a first-year course on digital logic design using the Verilog hardware description language. As part of the course the students were given a series of take-home assignments, which were then marked using an automated assessment system developed by the authors. During the course the instructor was made aware that a set of solutions had been circulated to the students, and was asked to assess the impact that this had on the assessment regime. In order to answer this question, we examined and implemented a number of approaches to calculating similarity between Verilog programs, and we present the results of that study in this paper. An important feature of this work was ensuring that the measurements used were well-understood, properly calibrated and defensible. We report on the results of this study, applied to a class of 115 students who completed up to 11 projects each.", "authors": [{"name": "John Waldron", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "James F. Power", "affiliation": "Maynooth University, Maynooth, Ireland"}], "tags": ["hardware description language", "program similarity", "automated assessment"]}, {"title": "Unlimited Trace Tutor: Learning Code Tracing With Automatically Generated Programs", "link": "https://dl.acm.org/doi/10.1145/3328778.3366939", "abstract": "Previous research showed that creating specific types of tracing tables helps students learn code tracing, a fundamental skill in computer programming. This paper introduces Unlimited Trace Tutor, the first version of a code tracing tutoring system that can automatically generate tracing problems and create such tracing tables. We conducted a pilot experiment with volunteer students from an introductory level Computer Science course. We found that our software effectively helps student learn tracing \"for\" loops, \"while\" loops, and \"if\" statements. In this paper we describe the system's architecture, our algorithms for generating code and tracing tables, and the promising results of our pilot experiment.", "authors": [{"name": "Ruixiang Qi", "affiliation": "Emory University, Atlanta, GA, USA"}, {"name": "Davide Fossati", "affiliation": "Emory University, Atlanta, GA, USA"}], "tags": ["automatic code generation", "tutoring systems", "code tracing"]}, {"title": "Session details: Paper Session: Computing for Social Good", "link": "https://dl.acm.org/doi/10.1145/3385553", "abstract": "No abstract available.", "authors": [{"name": "Sathiamoorthy Manoharan", "affiliation": "University of Auckland"}], "tags": []}, {"title": "Internationalizing the Student Experience Through Computing for Social Good", "link": "https://dl.acm.org/doi/10.1145/3328778.3366853", "abstract": "Information technology has connected our world and its citizens in incredible ways. Despite this connectedness, students are often isolated within the \"online bubbles\" of their own university, city, or country. Technology provides a great opportunity to connect them to a broader global experience. We have developed and piloted a cross-institution activity as part of an Internationalization at Home (IaH) initiative to expose first year computer science students to the concept of computing for social good in an international context. We explore how differences in culture can influence students' perceptions and approaches to computing for social good. Specifically, we had students from a Mexican and a Canadian university explore how computing for social good could be used to solve issues they faced in their communities. Students participated in surveys to propose and then rank applications for social good. The students also participated in a videoconference discussion with the students from the other school to discuss their choices. Thematic analysis revealed that the students had much more in common with each other than they had differences. Both groups not only focused on similar areas of interest, but they also tended to focus on solving issues with a local scope rather than national or global scope. Despite their cultural differences, the majority students felt they were more similar to their peers of the other culture than they were different.", "authors": [{"name": "Cam Macdonell", "affiliation": "MacEwan University, Edmonton, AB, Canada"}, {"name": "Komal Aheer", "affiliation": "MacEwan University, Edmonton, AB, Canada"}, {"name": "Ken Bauer", "affiliation": "Tecnol\u00f3gico de Monterrey, Guadalajara, Mexico"}], "tags": ["society", "social good", "internationalization", "education"]}, {"title": "LibreFoodPantry: Developing a Multi-Institutional, Faculty-Led, Humanitarian Free and Open Source Software Community", "link": "https://dl.acm.org/doi/10.1145/3328778.3366929", "abstract": "Engaging students in humanitarian free and open source software (HFOSS) projects allows them to gain real-world software development skills while helping society. Participating in an existing HFOSS project, although ripe with learning opportunities, presents a number of hurdles for faculty and students. An alternative to joining an existing HFOSS project community is to participate in a faculty-led HFOSS project. These projects provide the instructor with more control over the learning environment, but often lack an active community outside of the classroom. This paper describes a multi-institutional effort to engage a community of developers in creating humanitarian open source projects to support their on-campus food pantries. Food insecurity on campus has become a national concern and many institutions have, or are starting, food pantries to support the student, staff, and faculty community. Starting a faculty-led HFOSS project involves making decisions not only about the features of the project but also about community norms, tool choices, project development workflow, and inter-institution cooperation. This paper provides an overview of the creation of LibreFoodPantry, a community who is developing a suite of projects that support on-campus food pantries. It describes instances of using LibreFoodPantry's projects in various classroom settings, the lessons learned from these experiences, and the resulting discussions and decisions made by the LibreFoodPantry Coordinating Committee. This process has led to a community dedicated to easing the on-ramp for faculty who want to help their students contribute to an HFOSS project.", "authors": [{"name": "Lori Postner", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Karl R. Wurst", "affiliation": "Worcester State University, Worcester, MA, USA"}, {"name": "Stoney Jackson", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Christopher Radkowski", "affiliation": "Worcester State University, Worcester, MA, USA"}, {"name": "Darci Burdge", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Heidi J. C. Ellis", "affiliation": "Western New England University, Springfield, MA, USA"}], "tags": ["software development", "open source", "project management", "computing for social good"]}, {"title": "Merging Sustainability and Technology in the Classroom: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3366899", "abstract": "Formal education often relies on the students' ability to make connections among different subjects, as they navigate through a curriculum packed with different topics. In order to facilitate the preparation to the workforce, we created a course in \"Sustainability and Technology\" that was cross-listed in the degrees of Applied Information Technology and Environmental Sustainability. This manuscript documents our efforts in creating an indoor farm by letting students from different majors collaborate on this shared project. The results of our survey support the benefits of letting students collaborate as they approach the end of their undergraduate studies.", "authors": [{"name": "Giovanni Vincenti", "affiliation": "University of Baltimore, Baltimore, MD, USA"}, {"name": "Wolf T. Pecher", "affiliation": "University of Baltimore, Baltimore, MD, USA"}], "tags": ["automation", "sustainability", "education", "project-based learning"]}, {"title": "Session details: Paper Session: Collaboration", "link": "https://dl.acm.org/doi/10.1145/3385554", "abstract": "No abstract available.", "authors": [{"name": "Rebecca Grasser", "affiliation": "Lakeland Community College"}], "tags": []}, {"title": "Strategies for Implementing In-Class, Active, Programming Assessments: A Multi-Level Model", "link": "https://dl.acm.org/doi/10.1145/3328778.3366850", "abstract": "As the enrollment in computer science courses increases, faculty face the challenge of maintaining a standard of academic integrity in out of class programming assignments. One strategy to combat academic misconduct, is to incorporate more frequent in-class assessment. Traditional in-class assessment is often perceived as passive and taking away from valuable class time. Also, more in-class assessment could mean increasing the amount of test anxiety. Therefore, this paper presents results from a study that investigated the effectiveness of active, in-class programming assessment. The study was conducted in an introductory programming course with 93 undergraduate students at a mid-size, public university in the western United States. Three different assessment types were tested: collaborative, cooperative, and individual type assessments. A collaborative assessment is equivalent to pair programming. Cooperative assessments are partner quizzes where students must write their own code and are assessed individually, but may collaborative as much or as little as they like with their partner. Student performance was measured under multiple conditions including type of assessment and partner's active learning preference and factors like GPA, time in the semester, and section were controlled for. The results show that students perform better on both collaborative and cooperative type assessment than they do on individual type assessments. Also, the results show that students perform similarly on collaborative and cooperative assessments, which provides a nice alternative to pair programming for educators. Lastly, results show that most students prefer collaborative assessments over cooperative or individual. The majority of students prefer partner assessment to individual assessment.", "authors": [{"name": "Bryce Hughes", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Shanon Reckinger", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["pair programming", "active learning", "frequent assessment", "cooperative learning", "collaborative learning"]}, {"title": "A Comparison of Peer Instruction and Collaborative Problem Solving in a Computer Architecture Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366819", "abstract": "While substantial research has demonstrated that active learning pedagogies are better for learning than passive lectures, we need to understand the trade-offs between different active learning pedagogies. Computer Architecture at Midwestern University has historically been taught using active lectures, introducing content with a few clicker questions. In Fall 2018 (N = 363), short video lectures were made available to students as a supplemental resource. In Spring 2019, the instructor flipped the course, requiring students to watch the video lectures and complete an assignment before attending class. Two versions of the course were taught concurrently, using the same homework assignments, machine problems, and examinations but with different in-class pedagogies. Version SP19PI (N = 179) was taught using peer instruction. Version SP19CP (N = 73) was taught using collaborative problem solving, organizing students into teams of 3 to work on problems. Students completed surveys that measured their perceptions of time spent on the course, course difficulty, perceptions of stress, and sense of belonging. We compare students' performance on midterm exams and their non-cognitive outcomes to examine the relative effects of these different active learning pedagogies. We find that both flipped offerings (peer instruction and collaborative problem solving) benefited students beyond active lectures. Peer instruction (SP19PI) made learning more efficient. Collaborative instruction (SP19CP) provided greater social support for learning and eliminated gender grade disparities.", "authors": [{"name": "Sushmita Azad", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Geoffrey L. Herman", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}], "tags": ["flipped classroom", "active learning", "peer instruction", "collaborative problem solving", "motivation"]}, {"title": "Exploring the Benefits and Barriers of Using Computational Notebooks for Collaborative Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/3328778.3366887", "abstract": "Programming assignments in computer science courses are often processed in pairs or groups of students. While working together, students face several shortcomings in today's software: The lack of real-time collaboration capabilities, the setup time of the development environment, and the use of different devices or operating systems can hamper students when working together on assignments. Text processing platforms like Google Docs solve these problems for the writing process of prose text, and computational notebooks like Google Colaboratory for data analysis tasks. However, none of these platforms allows users to implement interactive applications. We deployed a web-based literate programming system for three months during an introductory course on application development to explore how collaborative programming practices unfold and how the structure of computational notebooks affect the development. During the course, pairs of students solved weekly programming assignments. We analyzed data from weekly questionnaires, three focus groups with students and teaching assistants, and keystroke-level log data to facilitate the understanding of the subtleties of collaborative programming with computational notebooks. Findings reveal that there are distinct collaboration patterns; the preferred collaboration pattern varied between pairs and even varied within pairs over the course of three months. Recognizing these distinct collaboration patterns can help to design future computational notebooks for collaborative programming assignments.", "authors": [{"name": "Marcel Borowski", "affiliation": "Aarhus University, Aarhus, Denmark"}, {"name": "Clemens N. Klokmose", "affiliation": "Aarhus University, Aarhus, Denmark"}, {"name": "Johannes Zagermann", "affiliation": "University of Konstanz, Konstanz, Germany"}, {"name": "Roman R\u00e4dle", "affiliation": "Aarhus University, Aarhus, Denmark"}, {"name": "Harald Reiterer", "affiliation": "University of Konstanz, Konstanz, Germany"}], "tags": ["application development", "programming assignments", "computational notebooks", "collaborative programming"]}, {"title": "Assignments that Blend Ethics and Technology", "link": "https://dl.acm.org/doi/10.1145/3328778.3366994", "abstract": "With the 2018 revision of the ACM Code of Ethics and Professional Conduct, there is a growing interest in how computer science faculty can integrate these principles into the education of future practitioners. This special session illustrates one approach by highlighting assignments that blend ethics and technology. These assignments can be used in a variety of courses, including CS1, CS2, and later courses. Presenters will provide an overview of each assignment and gather feedback from the audience. All materials, including descriptions, starter files, and guidelines for instructors, will be published at https://ethics.acm.org/SIGCSE2020.", "authors": [{"name": "Stacy A. Doore", "affiliation": "Bowdwoin College, Brunswick, ME, USA"}, {"name": "Casey Fiesler", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Michael S. Kirkpatrick", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Evan Peck", "affiliation": "Bucknell University, Lewisburg, PA, USA"}, {"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["computing ethics", "pedagogy", "acm code of ethics", "cs education"]}, {"title": "Teaching TAs To Teach: Strategies for TA Training", "link": "https://dl.acm.org/doi/10.1145/3328778.3366987", "abstract": "\"The only thing that scales with undergrads is undergrads\". As Computer Science course enrollments have grown, there has been a necessary increase in the number of undergraduate and graduate teaching assistants (TAs, and UTAs). TA duties often extend far beyond grading, including designing and leading lab or recitation sections, holding office hours and creating assignments. Though advanced students, TAs need proper pedagogical training to be the most effective in their roles. Training strategies have widely varied from no training at all, to semester-long prep courses. We will explore the challenges of TA training across both large and small departments. While much of the effort has focused on teams of undergraduates, most presenters have used the same tools and strategies with their graduate students. Training for TAs should not just include the mechanics of managing a classroom, but culturally relevant pedagogy. The panel will focus on the challenges of providing \"just in time\", and how we manage both intra-course training and department or campus led courses.", "authors": [{"name": "Michael Ball", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Andrew DeOrio", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Heather Pon-Barry", "affiliation": "Mount Holyoke College, South Hadley, MA, USA"}, {"name": "Adam Blank", "affiliation": "California Institute of Technology, Pasadena, CA, USA"}, {"name": "Justin Hsia", "affiliation": "University of Washington, Seattle, CA, USA"}], "tags": ["pedagogy", "teaching assistants", "ta training", "undergraduate student instructors", "graduate student instructors"]}, {"title": "To Grade or Not To Grade", "link": "https://dl.acm.org/doi/10.1145/3328778.3366978", "abstract": "About twice a year, typically at the start of a new semester, the SIGCSE community listserv comes alive with a discussion of tools for grading. This panel formed from a challenge to submit novel perspectives on grading. Of the dozen replies posted within 48 hours, the assembled panelists provide differing perspectives on the same point: let's return to building tools and methodologies for teaching rather than focusing on grading", "authors": [{"name": "Gail Carmichael", "affiliation": "Shopify, Ottawa, ON, Canada"}, {"name": "Bonnie MacKellar", "affiliation": "St. John's University, Queen, NY, USA"}, {"name": "Nanette Veilleux", "affiliation": "Simmons University, Boston, MA, USA"}, {"name": "Ursula Wolz", "affiliation": "RiverSound Solutions & Lang, The New School, Montclair, NJ, USA"}, {"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["grading code", "qualitative feedback", "assessment", "auto-grading"]}, {"title": "Integrating Computing and Computational Thinking into K-12 STEM Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3366970", "abstract": "Policymakers believe that preparing all students from the earliest grades to high school for a new future of STEM+Computing (STEM+C) integration involves teaching them not only the science and math central to these areas, but also how computational thinking is integral to STEM disciplines. This panel brings together four researchers who focus on research and development of interdisciplinary approaches to the integration of computing within STEM teaching and learning for preK-12 students. They will share the most impactful, practical, and promising approaches to STEM+C integration, their pros and cons, challenges, and key insights to successful STEM+C integration at all grade levels.", "authors": [{"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}, {"name": "Kathryn Fisler", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Shuchi Grover", "affiliation": "Stanford University & Looking Glass Ventures, Palo Alto, CA, USA"}, {"name": "Irene Lee", "affiliation": "Massachusetts Institute of Technology, Cambridge, CA, USA"}], "tags": ["science education", "mathematics education", "stem+computing education", "stem education"]}, {"title": "Improving Global Participation in the SIGCSE Technical Symposium: Panel", "link": "https://dl.acm.org/doi/10.1145/3328778.3366979", "abstract": "SIGCSE is a global organization with members from well over one hundred countries, but attendance at SIGCSE conferences is not always reflective of membership as a whole. Attendance at the SIGCSE Technical Symposium is overwhelmingly from the United States, with more than 92% of all attendees in recent years having a U.S. affiliation. This panel, which includes members of the SIGCSE Board and the Symposium International Committee, will present the state of Symposium participation from outside the U.S. in an effort towards understanding what can be done to expand global participation in the Symposium. The panelists span the range from students to long-time faculty and together have computing education experience from seven countries across six continents. The panel will also solicit views from attendees on barriers to global Symposium participation and ways to improve non-U.S. participation in SIGCSE's flagship conference.", "authors": [{"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Andrew Luxton-Reilly", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Viraj Kumar", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Rodrigo Duran", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Amber Settle", "affiliation": "DePaul University, Chicago, IL, USA"}], "tags": ["special interest group", "international", "attendance", "participation", "sigcse", "symposium", "membership", "inclusiveness"]}, {"title": "Session details: Morning Keynote&2020 SIGCSE Award for Outstanding Contribution to Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3385555", "abstract": "No abstract available.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia"}, {"name": "Jian Zhang", "affiliation": "Texas Woman's University"}, {"name": "Pamela Cutter", "affiliation": "Kalamazoo College"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University"}, {"name": "Alvaro Monge", "affiliation": "California State University Long Beach"}], "tags": []}, {"title": "Perspectives on Research and Practice in Computing Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372552", "abstract": "Computing education research (CER) can provide us valuable support for developing educational practices in computer science. In this presentation, I discuss a selection of results and experiences, mostly gathered from PhD research in CER that has been carried out at Aalto University during the last 20 years. The main research context has been large-scale courses in programming as well as data structures and algorithms with many hundreds of students and scarce human teaching resources. Therefore, a lot of our work has been motivated by the need for building engaging online learning content and providing better feedback for students on their learning results and progress. These include research in algorithm and program visualization, interactive e-books, as well as challenges in addressing dropout problems and procrastination in programming courses.\nWhile many benefits for students have been gained, there is also a price for it. The complexity of the educational software environment also creates increasing challenges for teachers. Creating interactive elements for online learning content is not trivial. Changes in underlying software and hardware may cause both unexpected service breaks and the need for planned software updates. There emerges a demand for more professional software project management and staff, which may exceed the capacity and skills of the regular IT support team. Well-functioning support should also be available for new teachers using the software.\nResearch is, of course, not software development. Novel software has had an important role in facilitating our research, and many technical contributions have been publishable. The main emphasis on the work, however, has been collecting and analyzing data on how students use the tools and what kind of impact they have on their learning process and learning results. Log data and various forms of numeric data need interpretation, and the real challenge is to build an understanding on the undergoing learning processes among the students, which are reflected in the numbers. Theories from education, educational psychology, and cognition science do help us, but we also need domain-specific theories on learning computing, which are still underdeveloped.\nWhile research can contribute to improving quality of education in many ways, combining research and educational practice is not trivial. Our planned research settings may have ethical challenges, we may fail in many different ways to collect all relevant data, or the collected data might be biased. Moreover, even if we manage to build a successful intervention, reporting this to our colleagues to allow them to replicate it is often difficult. Our educational context is likely to be different and reporting all relevant contextual factors and resources in the original research may be difficult or impossible. I discuss our gained experiences when we have tried to address the above mentioned challenges, and I seek to identify some better strategies in planning and combining research and educational development actions within the computing education community both in national and international levels. I conclude my presentation with discussion on some new avenues for research and building bridges between research and practice.", "authors": [{"name": "Lauri Malmi", "affiliation": "Aalto University, Espoo, Finland"}], "tags": []}, {"title": "Session details: Paper Session: Learning B", "link": "https://dl.acm.org/doi/10.1145/3385556", "abstract": "No abstract available.", "authors": [{"name": "Gustavo Rodriguez-Rivera", "affiliation": "Purdue University"}], "tags": []}, {"title": "Qualitative Analyses of Movements Between Task-level and Code-level Thinking of Novice Programmers", "link": "https://dl.acm.org/doi/10.1145/3328778.3366847", "abstract": "Cognitive theories of how programmers produce code suggest that novices' approaches are primarily driven by the retrieval of previously-learned plans. These plans can be high-level, focusing on task decomposition and composition, or low-level, focusing on code implementations. These theories, however, do not describe how novices move between high-level tasks and low-level code, especially when faced with novel problems. Understanding these transitions can help concretely tease out why and where novices struggle and how they use their knowledge of plans and design techniques when they get stuck. We studied this by conducting think-alouds with CS1 students at two universities as they solved multi-task programming problems with unfamiliar components. Our analysis paid particular attention to a series of design techniques that the students had been explicitly taught in their respective courses. We identified patterns of high- and low-level thinking that relate to students' success on the problems, and propose a concrete framework of high- and low-level work that summarizes the transitions that we observed.", "authors": [{"name": "Francisco Enrique Vicente Castro", "affiliation": "Worcester Polytechnic Institute, Worcester, MA, USA"}, {"name": "Kathi Fisler", "affiliation": "Brown University, Providence, RI, USA"}], "tags": ["plan composition", "rainfall", "design recipe", "program design"]}, {"title": "Challenges with Learning to Program and Problem Solve: An Analysis of Student Online Discussions", "link": "https://dl.acm.org/doi/10.1145/3328778.3366838", "abstract": "Students who study problem solving and programming (in a language such as Python) at University level encounter a range of challenges, from low-level issues with code that won't compile to misconceptions about the threshold concepts and skills. The current study complements existing findings on errors, misconceptions, difficulties and challenges obtained from students after-the-fact through instruments such as questionnaires and interviews. In our study, we analysed the posts from students of a large cohort (\\textasciitilde1500) of first-year University distance learning students to an online 'Python help forum' - recording issues and discussions as the students encountered specific challenges. Posts were coded in terms of topics, and subsequently thematically grouped into Python-related, problem solving/generic programming related, and module specific. We discuss the set of topics and rank these in terms of the number of forum discussions in which they occur (as a proxy for their prevalence). The top challenges we identified concern student understanding and use of a mix of programming environments (in particular, Python IDLE for offline programming and CodeRunner for programming quizzes) and code fragment problems. Apart from these, Python-specific topics include, among others, collections, functions, error messages, iteration, outputting results, indentation, variables and imports. We believe that the results provide a good insight into the challenges that students encounter \\em as they learn to program. In future work we intend to study the discussions in further detail in terms of theories of conceptual change.", "authors": [{"name": "Simon Savage", "affiliation": "The Open University, Milton Keynes, United Kingdom"}, {"name": "Paul Piwek", "affiliation": "The Open University, Milton Keynes, United Kingdom"}], "tags": ["online student discussions", "challenges", "threshold concepts and skills", "misconceptions", "problem solving", "python", "programming"]}, {"title": "A Study on Student Performance Evaluation using Discussion Board Networks", "link": "https://dl.acm.org/doi/10.1145/3328778.3366876", "abstract": "Node-based social network analysis (SNA) techniques can be used to investigate the significance of actors that play central roles in social networks where the nodes represent people, teams or stakeholders and the links represent the communication, information exchange or collaboration between these nodes (actors). This research investigates how collaborative problem-solving can help in students' learning process. We analyzed the discussion board data collected from online student discussions on Canvas, a Learning Management System (LMS), in a CS1 course of a medium-sized US University. The discussion topics were classified as classroom experiences/learning, question/answers, opinions, and comments and were used to represent the patterns of interactions in the student discussion networks. Node-based network measures were then applied to unravel the students' interaction patterns to gain insights on students' progress. The textual analysis helps find the most challenging/debated topics in a particular course, analyze the leadership and team-based qualities of a group of students, and analyze patterns and trends in female student participation. The experimental analysis reveals that participation in online discussion forums has a positive impact on the students' grades; the study of interaction patterns exhibit similar insights. In conclusion, this research study validates that the analysis of structured discussions can provide useful insights into changes in student collaboration patterns over time and students' sense of belongingness for pedagogical benefits.", "authors": [{"name": "Vijayalakshmi Ramasamy", "affiliation": "Miami University, Oxford, OH, USA"}, {"name": "James D. Kiper", "affiliation": "Miami University, Oxford, OH, USA"}, {"name": "Urvashi Desai", "affiliation": "Miami University, Oxford, OH, USA"}], "tags": ["lms", "educational data mining", "social network analysis", "collaborative learning", "discussion forum", "collaboration network"]}, {"title": "Session details: Paper Session: Elementary School Experiences", "link": "https://dl.acm.org/doi/10.1145/3385557", "abstract": "No abstract available.", "authors": [{"name": "Kenneth Lambert", "affiliation": "Washington and Lee University"}], "tags": []}, {"title": "Future-Proofing Kiwi Kids Through the Use of Digital Technology", "link": "https://dl.acm.org/doi/10.1145/3328778.3366902", "abstract": "The common approach for introducing middle school and high school students to computational thinking and engineering is through programming or robotics activities that were designed without much social context. Therefore, one of the challenges such outreach programs pose is further stereotyping of students who are interested in computer science, by presenting them as people who ought to be hyper-intelligent and very much focused on computers with no social skills. Realizing the above, and wanting to attract a diverse audience to study computer science, we developed a one-day workshop which showcases the interdisciplinary nature of computer science and the various ways computing can help students discover and solve societal problems. We chose multiculturalism, cyber security and air pollution as the context of our computational thinking activities. This paper describes our experiences in developing and teaching the workshops that runs three to five times a year, hosted either in our institute or at local schools. Regardless of students' previous STEM experiences and socioeconomic statuses, both students and teachers reported that the knowledge gained enabled them to either create a computer program or a robot and also led to a better understanding of how computers can be used in daily life. In other words, the workshop successfully opened the minds and perspectives of the middle school and high school students on computer science. Additionally, over time, we also observed an increased number of students and schools participating in such workshops.", "authors": [{"name": "Guillermo Ramirez-Prado", "affiliation": "Unitec Institute of Technology, Auckland, New Zealand"}, {"name": "Lei Song", "affiliation": "Unitec Institute of Technology, Auckland, New Zealand"}, {"name": "Bashar Barmada", "affiliation": "Unitec Institute of Technology, Auckland, New Zealand"}, {"name": "Veronica Liesaputra", "affiliation": "The University of Otago, Dunedin, New Zealand"}], "tags": ["k-12 education", "air pollution", "introduction to computer science", "outreach", "multiculturalism", "middle school", "cyber security", "raspberry pi", "social good"]}, {"title": "Patterns in Elementary-Age Student Responses to Personalized & Generic Code Comprehension Questions", "link": "https://dl.acm.org/doi/10.1145/3328778.3366833", "abstract": "The CS community has struggled to assess student learning at the K-8 level, with techniques ranging from one-on-one interviews to written assessments. While scalable, automated techniques exist for analyzing student code, a scalable method for assessing student comprehension of their own code has remained elusive. This study is a first step in bridging the gap between the knowledge gained from interviews and the time efficiency and scalability of written assessments and automated analysis. The goal of this study is to understand how student answers on various types of questions differ depending on whether they are being asked about their own code or generic code. We find that while there were no statistically-significant differences in overall scores, questions about generic and personalized code of comparable complexity are far from equivalent. Our qualitative analyses revealed interesting patterns in student responses, inviting further research into this assessment technique. In particular, students answered differently from students with generic code when presented with individual blocks from their code taken out of context and placed into different code snippets, and students answered in a way that demonstrates a functional, instead of structural, understanding on Explain in Plain English (EiPE) questions.", "authors": [{"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Max White", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Zipporah Klain", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Saranya Turimella", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Qi Jin", "affiliation": "University of Chicago, Chicago, IL, USA"}], "tags": ["k-8 education", "assessment", "code comprehension", "computational thinking, scratch"]}, {"title": "Comparing TUIs and GUIs for Primary School Programming", "link": "https://dl.acm.org/doi/10.1145/3328778.3366851", "abstract": "There is considerable interest in using tangible user interfaces (TUIs) to support teaching children programming, but evidence for the benefits is mixed, and their deployment in school environments presents more challenges than graphical user interfaces (GUIs). This study investigates the effect of GUIs and TUIs on learning outcomes, attitudes toward computing, and reported enjoyment in a computer-programming activity with primary-school students aged 6-7 in Saudi Arabia. Forty-two students engaged in a 45-minute learning activity using either a TUI or GUI programming environment. The study used a between-groups design, and quantitative data were collected, including pre-test and post-test results, and ratings on attitudinal and enjoyment surveys. Learning gains were significantly higher for the GUI group than the TUI group. However, post-activity increases in reported attitude toward computing were significantly higher for the TUI group. There was no difference in activity enjoyment scores, which were high for both groups.", "authors": [{"name": "Abrar Almjally", "affiliation": "Al Imam Mohammad Ibn Saud Islamic University & University of Sussex, RIYADH, Saudi Arabia "}, {"name": "Judith Good", "affiliation": "University of Sussex, Brighton, United Kingdom"}, {"name": "Kate Howland", "affiliation": "University of Sussex, Brighton, United Kingdom"}], "tags": ["robotics", "education", "interface design", "tangible interaction", "programming"]}, {"title": "Session details: Paper Session: BPC", "link": "https://dl.acm.org/doi/10.1145/3385558", "abstract": "No abstract available.", "authors": [{"name": "Ray DiVenuto", "affiliation": "St. Joseph's College"}], "tags": []}, {"title": "Applying NCWIT Protocol to Broaden Participation in Computing: A Case Study of CS@Mines", "link": "https://dl.acm.org/doi/10.1145/3328778.3366958", "abstract": "The Department of Computer Science (CS@Mines) at Colorado School of Mines (Mines) was founded in 2016 when the Department of Electrical Engineering and Computer Science (CS) split into separate departments. As a result, CS faculty, who had worked for years to broaden participation in computing without departmental lead- ership support, were able to become more strategic in their efforts. CS@Mines faculty, staff, and students now engage in well-defined recruitment, retention, and evaluation strategies, which includes K-12 outreach programs, flexible CS major and minor tracks, a near-peer mentoring program, scholarship programs, and contin- ual evaluation. Ten years ago, the CS degree program at Mines had 157 majors, 17 women (10.8%), and 12 students from underrepre- sented groups in computing (7.6%). As of Fall 2019, CS@Mines has 679 majors, 146 women (21.5%), and 132 students from underrep- resented groups (20.2%). Although the concentrated effort focused on increasing the number of women majors, the data clearly shows an increase in students from underrepresented groups as well. The changes achieved by CS@Mines are noteworthy considering (1) only 30% of the students at Mines are women, (2) only 17% of the students at Mines are from underrepresented groups in computing, and (3) women and underrepresented groups enrolled in undergraduate CS programs are predominantly not at parity with their respective populations in the United States. CS@Mines achieved positive results by applying the Undergraduate Systemic Change Model developed by the National Center for Women & Information Technology. In this paper, we present CS@Mines as a case study for positive change and discuss the strategies CS@Mines has enacted (74 of the recommended 81).", "authors": [{"name": "Michelle Slattery", "affiliation": "Peak Research, NCWIT ES Consultant, Colorado Springs, CO, USA"}, {"name": "Tracy Camp", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Christine Liebe", "affiliation": "Colorado School of Mines, Golden, CO, USA"}], "tags": ["women", "broadening participation", "underrepresented groups", "ncwit", "computing education"]}, {"title": "Experience of Administering Our First S-STEM Program to Broaden Participation in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3366890", "abstract": "This paper documents the findings of our analysis of the implementation of our six-year NSF S-STEM scholarship program. One major finding was that, for underrepresented students to major in computer science, knowing the major existed and understanding the nature of the program were the most important factors. Also, the academic support system and hands-on nature of the major had a significant impact on scholarship recipients' persistence in the major. Evidence demonstrated that scholarship recipients had a 10%+ higher year-to-year persistence rate from their freshmen to sophomore year than that of all computer science students of the same entering classes. For all computer science students, college computer science major GPAs were not strongly correlated with their high school GPAs, financial need, or ACT math scores. This paper also presents lessons learned and resulting recommendations for future new scholarship administrators, as our lessons can likely be applied to other grants that recruit and deal with underrepresented groups.", "authors": [{"name": "Gary Tyson", "affiliation": "Florida State University, Tallahassee, FL, USA"}, {"name": "David Whalley", "affiliation": "Florida State University, Tallahassee, FL, USA"}, {"name": "An-I Andy Wang", "affiliation": "Florida State University, Tallahassee, FL, USA"}, {"name": "Zhenghao Zhang", "affiliation": "Florida State University, Tallahassee, FL, USA"}], "tags": ["underrepresented and minority groups", "scholarship grant"]}, {"title": "Does AP CS Principles Broaden Participation in Computing?: An Analysis of APCSA and APCSP Participants", "link": "https://dl.acm.org/doi/10.1145/3328778.3366826", "abstract": "A major attempt to broaden participation in computer science has centered on the design and development of a new high school Advanced Placement (AP) course, AP Computer Science Principles (CSP). This course was created to intentionally engage a wider and more diverse group of students in learning about computing than those who had historically enrolled in programming-focused AP Computer Science \"A\" (CSA). After several years in the pilot phase, the course was officially offered by the College Board in 2016-17. This paper uses nationwide Freshman Survey data to examine the demographics and characteristics of students who took either CSA, the new CSP course, or both courses by the time they entered college in Fall 2017. Using crosstabs, z-tests, and one-way ANOVA, this study uncovered the similarities and differences between students who had participated in one or both of these courses. Our findings suggest that while students who took only CSP were more diverse than those who took only CSA, they exhibited less computing confidence and less interest in computing majors and tech careers. This study suggests that while CSP may be recruiting more females and racially diverse students into the course, this course alone may not serve as a direct pipeline into computing majors and careers.", "authors": [{"name": "Michelle Sendowski", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Joanna Goode", "affiliation": "University of Oregon, Eugene, OR, USA"}, {"name": "Max Skorodinsky", "affiliation": "University of Oregon, Eugene, OR, USA"}, {"name": "Kaitlin N.S. Newhouse", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Tomoko M. Nakajima", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Linda J. Sax", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}], "tags": ["ap computer science principles course/exam", "ap computer science a course/exam", "gender and diversity"]}, {"title": "Session details: Paper Session: Rubrics and Evaluation", "link": "https://dl.acm.org/doi/10.1145/3385559", "abstract": "No abstract available.", "authors": [{"name": "Ibrahim Albluwi", "affiliation": "Princeton University"}], "tags": []}, {"title": "Adaptive Rubrics", "link": "https://dl.acm.org/doi/10.1145/3328778.3366946", "abstract": "Grading is a notoriously difficult and time-consuming part of teaching. For open-ended programming, mathematical, or design problems, assigning consistent scores and giving useful feedback can be very challenging. Large classes compound this difficulty. Adding TAs to the team can help parallelize the process but may impede grading consistency and quality. We present an adaptive rubric creation and application process to enable high-quality responses to student work, at scale. This process uses exploratory data analysis to discover common patterns in student responses to a problem, then tailors a rubric and feedback to address these patterns. Our method is supported by current grading tools, which allow calculation of the simple population-level statistics we need to extract meaningful features from a corpus of student work. In this case study, we describe using adaptive rubrics for a discrete math class for CS majors: the grading team found that this process produced concrete and transparent justifications of student scores and that it facilitated conversations around grading that were grounded in course learning objectives and values.", "authors": [{"name": "Marco Carmosino", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}, {"name": "Mia Minnes", "affiliation": "University of California San Diego, La Jolla, CA, USA"}], "tags": ["educational data mining", "large classes", "rubrics", "grading"]}, {"title": "A Large-scale Evaluation of a Rubric for the Automatic Assessment of Algorithms and Programming Concepts", "link": "https://dl.acm.org/doi/10.1145/3328778.3366840", "abstract": "As computing education makes its way into schools, there is still little research on how to assess the learning of algorithms and programming concepts as a central topic. Furthermore, in order to ensure valid instructional feedback, an important concern is the reliability and construct validity of an assessment model. Therefore, this work presents a large-scale evaluation of the CodeMaster rubric for the performance-based assessment of algorithms and programming concepts by analyzing software artifacts created by students as part of complex, open-ended learning activities. The assessment is automated through a web-based tool that performs a static analysis of the source code of App Inventor projects. Based on 88,812 projects from the App Inventor Gallery, we statistically analyzed the reliability and construct validity of the rubric. Results indicate that the rubric can be regarded as reliable (Cronbach's alpha \u03b1=0.84). With respect to construct validity, there also exists an indication of convergent validity based on the results of a correlation and factor analysis. This indicates that the rubric can be used for a valid assessment of algorithm and programming concepts of App Inventor programs as part of a comprehensive assessment completed by other assessment methods. The results can guide the improvement of assessment models, as well as support the decision on the application of the rubric in order to support computing education in K-12.", "authors": [{"name": "Adriano Ferreti Borgatto", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Nathalia da Cruz Alves", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Jean Carlo Rossa Hauck", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}, {"name": "Christiane Gresse von Wangenheim", "affiliation": "Federal University of Santa Catarina, Florian\u00f3polis, Brazil"}], "tags": ["performance-based assessment", "algorithms and programming", "rubric", "automated grading"]}, {"title": "A Validated Scoring Rubric for Explain-in-Plain-English Questions", "link": "https://dl.acm.org/doi/10.1145/3328778.3366879", "abstract": "Previous research has identified the ability to read code and understand its high-level purpose as an important developmental skill that is harder to do (for a given piece of code) than executing code in one's head for a given input (\"code tracing\"), but easier to do than writing the code. Prior work involving code reading (\"Explain in plain English\") problems, have used a scoring rubric inspired by the SOLO taxonomy, but we found it difficult to employ because it didn't adequately handle the three dimensions of answer quality: correctness, level of abstraction, and ambiguity. In this paper, we describe a 7-point rubric that we developed for scoring student responses to \"Explain in plain English'' questions, and we validate this rubric through four means. First, we find that the scale can be reliably applied with with a median Krippendorff's alpha (inter-rater reliability) of 0.775. Second, we report on an experiment to assess the validity of our scale. Third, we find that a survey consisting of 12 code reading questions had a high internal consistency (Cronbach's alpha = 0.954). Last, we find that our scores for code reading questions in a large enrollment (N = 452) data structures course are correlated (Pearson's R = 0.555) to code writing performance to a similar degree as found in previous work.", "authors": [{"name": "Binglin Chen", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Matthew West", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Craig Zilles", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Rajarshi Haldar", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Sushmita Azad", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}], "tags": ["experience report", "validity", "cs1", "code reading", "reliability"]}, {"title": "Session details: Paper Session: Faculty", "link": "https://dl.acm.org/doi/10.1145/3385560", "abstract": "No abstract available.", "authors": [{"name": "Andrew M. Rasmussen", "affiliation": "Chicago Public Schools"}], "tags": []}, {"title": "Faculty Adoption of CS Education Innovations: Exploring Continued Use", "link": "https://dl.acm.org/doi/10.1145/3328778.3366874", "abstract": "Studies on faculty adoption typically focus on the awareness and trial stages: how instructors find out about a new teaching practice and why they decide to try it. While this knowledge is important, reform is unlikely to occur if innovations are only used experimentally; we need to understand why faculty sustain their use. To that end, this study draws on data from a two-phase project in the U.S. to examine why computer science (CS) faculty continue or discontinue use of a practice after the initial trial. In the first phase, we interviewed and observed 66 CS faculty from various institutional settings to explore theory-driven themes. From these results, in the second phase, we collected survey data from 821 faculty at 595 institutions. In this paper, we briefly discuss qualitative results, and then use quantitative data to model what impact the following factors have on sustaining use: achieved benefits for students' performance and their satisfaction in CS, the perception of usefulness to the instructor, student feedback, and ease of use. Results indicate that benefits to students' performance are paramount in predicting continued use. We also explore why faculty abandon a practice, finding that the decision often relates to not achieving desired outcomes and, in some cases, students not making a good faith effort to do their part. We observed that the latter experience can engender negative beliefs about students-that they have, at best, a passive attitude toward their learning. Implications for encouraging sustained usage of innovative teaching techniques are discussed.", "authors": [{"name": "Christopher Lynnly Hovey", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Lecia Barker", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}], "tags": ["faculty adoption", "student-centered teaching", "sustaining use", "diffusion of innovations", "innovative teaching practices", "propagation"]}, {"title": "Faculty Views on the Goals of an Undergraduate CS Education and the Academia-Industry Gap", "link": "https://dl.acm.org/doi/10.1145/3328778.3366834", "abstract": "Previous work has found that recent computer science graduates often experience difficulty transitioning into their new roles in industry due to a significant gap between their academic experiences and industry's expectations. Although multiple studies have identified the views of students and members of industry on the value of a CS degree as preparation for industry, the faculty perspective on this topic remains unclear. Understanding these views could shed light on why the academia-industry gap has persisted despite the attention. This study identified faculty views on the goals of an undergraduate education and a CS major, focusing on preparation for careers in industry. In order to identify a spectrum of faculty views, we interviewed 14 faculty from a variety of backgrounds across three institutions. A phenomenographic analysis of the transcripts reveals that many faculty believe that industry preparation is an important programmatic goal, yet they encounter significant resource obstacles to achieving that goal.", "authors": [{"name": "William G. Griswold", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Sophia Krause-Levy", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Sander Valstar", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Alexandra Macedo", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, San Diego, CA, USA"}], "tags": ["faculty views", "computer science education", "academia-industry gap", "phenomenography"]}, {"title": "Linking Faculty Attitudes to Pedagogical Choices: Student-Centered Teaching in Introductory Computing Classes", "link": "https://dl.acm.org/doi/10.1145/3328778.3366883", "abstract": "Research suggests using student-centered practices in the classroom is a key component of attracting and retaining diverse students. To better understand the link between attitudes toward students and learning and the usage of specific teaching strategies, we analyze survey responses from 54 faculty who teach introductory computer science (CS) courses from 15 U.S. colleges and universities participating in BRAID. Using principal component analysis, we scale responses to 10 attitudinal questions into four dimensions: rugged individualism (\"learning and success are the individual student's responsibility\"), challenging work (\"the pace and workload in CS is hard\"); a developmental orientation to learning (\"students need individual attention in a non-competitive environment\"); and capable students (\"all students can do well in my class\"). We then test these scales on four types of teaching: three student-centered approaches-collaborative learning approaches, discourse activities, and student-led learning-and one traditional approach, lecturing. Results indicate that a developmental orientation predicts the use of discourse activities and student-led practices, but not collaborative learning approaches. Rugged individualism is associated with frequent lecturing. None of our scales predict the use of collaborative learning approaches, and neither attitudes for \"challenging work\" nor \"capable students\" predict any of the pedagogical approaches in our study. We examine differences by certain faculty characteristics and discuss the ramifications of these results for promoting more widespread adoption of student-centered teaching.", "authors": [{"name": "Kathleen J. Lehman", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Christopher Lynnly Hovey", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Tiffani Riggers-Piehl", "affiliation": "University of Missouri-Kansas City, Kansas City, MO, USA"}], "tags": ["developmental orientation", "student-centered teaching", "faculty attitudes", "instructor-centered teaching", "collaborative learning", "lecturing"]}, {"title": "Session details: Paper Session: Computing Education Research", "link": "https://dl.acm.org/doi/10.1145/3385561", "abstract": "No abstract available.", "authors": [{"name": "Ahyoung Lee", "affiliation": "University of South Dakota"}], "tags": []}, {"title": "A Gap Analysis of Statistical Data Reporting in K-12 Computing Education Research: Recommendations for Improvement", "link": "https://dl.acm.org/doi/10.1145/3328778.3366842", "abstract": "The quality of reporting of experimental results in computing education literature has been previously shown to be less than rigorous. In this study, we first examined research standards set forth by four organizations: American Psychology Association (APA), American Educational Research Association (AERA), What Works Clearinghouse (WWC), and the CONsolidated Standards of Reporting Trials (CONSORT). We selected the most important data standards based on their prominence across all four and the most typical study designs in computing education research. We then examined 76 articles designated as quantitative research studies (K-12) published in ten venues (2012-2018) to determine whether the reporting in these articles met these five standards. Findings indicate that only 48% of these articles report effect size and even fewer (11%) report confidence intervals and levels. We found that reported data did not meet the standard that data should be \"reported in a way that the reader could construct effect-size estimates and confidence intervals beyond those supplied in the paper\". Additionally, authors used existing instruments less than a quarter of the time (24%) and used instruments with evidence of reliability and validity less than half of the time (39%). We conclude with recommendations for those in the K-12 computing education research community to consider when reporting statistical data in future work so that we can increase the level of rigorous reporting in this growing field.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College, Peoria, IL, USA"}, {"name": "Adrienne Decker", "affiliation": "University at Buffalo, Buffalo, NY, USA"}], "tags": ["secondary education", "education research", "statistical data", "primary education", "recommendations", "k-12", "effect size", "reporting"]}, {"title": "Three Metrics of Success for High School CSforAll Initiatives: Demographic Patterns from 2003 to 2019 on Advanced Placement Computer Science Exams", "link": "https://dl.acm.org/doi/10.1145/3328778.3366810", "abstract": "There has been an expansion of computer science (CS) in high schools in the USA. In most cases, initiatives seeking to expand high school CS offerings are not focused simply on increasing the number of students enrolled, but are focused on broadening participation in computing (BPC). Ideally we can evaluate and replicate effective BPC, or CSforAll, initiatives at the high school level. However, analyses of CS expansion frequently focus on the national landscape, despite the decentralized nature of public education in the USA. State-level analyses, when present, often do not take into account the demographics of high school students in the state, which are also changing over time. We propose three metrics for evaluating the impact of state-level initiatives to broaden participation in computing at the high school level. These metrics and our data set can be helpful benchmarks for evaluating high school CSforAll initiatives.", "authors": [{"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Kip Lim", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["advanced placement", "cs for all", "computer science pipeline"]}, {"title": "A Longitudinal Analysis of K-12 Computing Education Research in the United States: Implications and Recommendations for Change", "link": "https://dl.acm.org/doi/10.1145/3328778.3366809", "abstract": "The availability of computer science education in primary and secondary schools in the United States has grown rapidly over the last decade. Computing education research in K-12 has been increasing as well. In this study, we conducted a longitudinal analysis of seven years of data (2012-2018), curated from over 500 articles across 10 publication venues to identify trends in K-12 computing education research such as geographic location and curriculum and concepts taught. The data shows a decrease in the number of studies covering K-12 students receiving computing education even while there is an increase in the number of states adopting and implementing standards. The number of different concepts being researched is increasing, potentially reflecting the growth in what is being taught in the classroom. Demographic data is underreported (e.g., socio-economic status (SES) and disabilities of participants) which could directly limit generalizability of the studies to different learners as well as the ability to replicate and compare studies. We conclude with recommendations for how to better position this work for others trying to use the results to guide their efforts in creating standards or adopting techniques into their classrooms.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College & CSEdResearch.org, Galesburg, IL, USA"}, {"name": "Bishakha Upadhyaya", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Adrienne Decker", "affiliation": "University at Buffalo, Buffalo, NY, USA"}], "tags": ["secondary education", "ses", "socio-economic status", "camps", "csedresearch.org", "gender", "primary education", "curriculum", "experience reports", "locations", "race", "concepts", "k-12", "disabilities", "schools", "research", "activities"]}, {"title": "Session details: Paper Session: Database", "link": "https://dl.acm.org/doi/10.1145/3385562", "abstract": "No abstract available.", "authors": [{"name": "Albert Chan", "affiliation": "Fayetteville State University"}], "tags": []}, {"title": "Worked Examples, Cognitive Load, and Exam Assessments in a Senior Database Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366915", "abstract": "This paper deals with an upper-year course on internals of relational database systems. It is an experience report about switching from a teaching model using traditional lecturing and homework assignments, to a partially flipped model that replaces regular homework with an abundance of worked examples and more frequent full-length exams. We turn to cognitive load theory to help address the challenges of problem-solving in complex topics such as query evaluation and optimization. Worked examples are used to try to reduce students' cognitive load. Students' confidence levels were captured through surveys. After seeing and practicing many worked examples, students claim confidence in mastering the learning goals. We use Bloom's Dichotomous Key to create a Bloom's Taxonomy weighted index to track the difficulty of our exams over the years, both before and after the switch. Although final exam grades have remained relatively flat, our exams have been getting more difficult, suggesting improved learning, even though we have not seen a significant increase in performance on transfer questions. Principal Component Analysis is used to gain insight into our final exam, showing that a large fraction of the exam questions are needed to account for most of the variance in students' scores.", "authors": [{"name": "Edwin M. Knorr", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["database systems", "frequent assessments", "course transformation", "worked examples", "cognitive load"]}, {"title": "Mapping the SQL Learning Process in Introductory Database Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3366869", "abstract": "The Structured Query Language (SQL) is powerful, prevalent across many problem domains, and challenging to master. Sophisticated information requests require programmers to set aside familiar procedural and functional modes of thought. Instead, programmers must learn how to apply unfamiliar set-based relational manipulation rules. This paper analyzes the student learning process in an introductory database course. We do this using detailed analysis of problem-solving attempts by 114 students related to 116 SQL lab exercises assigned over a five-week period. We measure student success rates in mastering these SQL concepts, as well as effort expended by students in solving information retrieval problems.", "authors": [{"name": "Andrew Migler", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Alex Dekhtyar", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["databases", "learning process", "query languages", "sql", "instructional tools"]}, {"title": "Group Exams as Learning Tools: Evidence from an Undergraduate Database Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366889", "abstract": "Peer-instruction has been shown to be an effective method to support learning. We exploit a form of peer-instruction in an undergraduate course on databases, where students take an exam in teams. Instantly after attempting the exam individually without any immediate feedback, students re-take the exam as a group utilizing immediate feedback instruments. These instruments permit the students to tackle each multiple-choice question several times until a correct answer is uncovered. Our thesis is that this approach provides the students with an opportunity to learn from their mistakes, whether committed individually or as a group, while promoting individual student deep learning. We support this thesis by analyzing data collected from 125 students, 5 group exams, and other assessment instruments, including a final exam.", "authors": [{"name": "Jalal Kawash", "affiliation": "University of Calgary, Calgary, Canada"}, {"name": "Mohammad Moshirpour", "affiliation": "University of Calgary, Calgary, Canada"}, {"name": "Tamer Jarada", "affiliation": "University of Calgary, Calgary, Canada"}], "tags": ["databases", "group assessment", "peer-instruction", "group-based learning", "computer science education"]}, {"title": "Activities for Building Understanding: How AI4ALL Teaches AI to Diverse High School Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3366990", "abstract": "Aimed at people interested in how to teach artificial intelligence (AI) especially to a diverse audience of high schoolers, attendees of this special session will engage with activities excerpted directly from AI4ALL's Open Learning curriculum. AI4ALL Open Learning makes AI education free and approachable to groups that are otherwise excluded from the tech economy due to socioeconomic status, geographic location, access to resources, race, gender, and other factors. Content is delivered through an online learning management system. It is meant to be used in a blended learning environment, where students have in-person access to peers and facilitators, but can also be used by self-guided learners, who will interact with other learners through forums and other online tools. During this session, attendees will experience some of the activities provided in the curriculum. Attendees will leave with the materials required to run the activities in their own classrooms. Time will be provided for attendees to share how they would adapt the activities for use in their own classrooms and to provide feedback to AI4ALL.", "authors": [{"name": "Sarah Judd", "affiliation": "AI4ALL, New York, NY, USA"}], "tags": ["student-centered learning", "diversity in ai", "blended learning", "experiential learning", "k-12 ai education"]}, {"title": "An Update on the ACM Data Science Taskforce", "link": "https://dl.acm.org/doi/10.1145/3328778.3366995", "abstract": "The ACM Data Science Taskforce was established by the ACM Education Council and tasked with articulating the role of computing discipline-specific contributions to this emerging field. This special session seeks to provide an update of the work of the ACM Data Science Taskforce as well as to engage the SIGCSE community in this effort. Members of the taskforce will report on version 2 of a draft report released Fall 2019, and the activities to-date, including a summary of data science curricular efforts to date, as well as the current articulation of computing competencies. This session should be of interest to all SIGCSE attendees, but especially faculty developing college-level curricula in Data Science.", "authors": [{"name": "Paul Leidig", "affiliation": "Grand Valley State University, Allendale, MI, USA"}, {"name": "Andrea Danyluk", "affiliation": "Williams College, Williamstown, MA, USA"}, {"name": "Lillian Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["curriculum", "data science"]}, {"title": "It Seemed Like a Good Idea at the Time (Hindsight is 2020)", "link": "https://dl.acm.org/doi/10.1145/3328778.3366974", "abstract": "Conference presentations usually focus on successful innovations: new ideas that yield significant improvements to current practice. Yet educators know that we often learn more from failure than from success. In this panel, we present four case studies of \"good ideas\" for improving CS education that resulted in failures. Each contributor will describe their \"good idea\", the failure that resulted, and wider lessons for the CS community.", "authors": [{"name": "Kevin Lin", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Raja Sooriamurthi", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Jim Huggins", "affiliation": "Kettering University, Flint, MI, USA"}, {"name": "Ursula Wolz", "affiliation": "Lang, The New School, Montclair, NJ, USA"}, {"name": "Dan Garcia", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Leo Ureel", "affiliation": "Michigan Tech. University, Houghton, MI, USA"}], "tags": ["learning from failure", "comp.risks", "experience report"]}, {"title": "Panel: What and How to Teach Accessibility", "link": "https://dl.acm.org/doi/10.1145/3328778.3366966", "abstract": "This panel will provide practical advice on what and how to teach accessibility in a variety of settings. In this context, teaching accessibility means teaching about computer technologies that people with various disabilities can use and be productive with. At the undergraduate level it could mean teaching about how to design and build accessible web sites and applications. At the graduate level it could be teaching about building applications that can help people with disabilities with specific tasks. An entire course could focus on accessibility or it could be just part of an existing course. It is also important to learn about the diversity of consumers of technologies: what their abilities are and what access infrastructures they use every day. All the panelists have extensive experience in teaching accessibility. They will provide the audience of the panel deep insights into what they might do to teach accessibility in their own courses.", "authors": [{"name": "Leah Findlater", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Amy J. Ko", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Anat Caspi", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Daniel Krutz", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Paula Gabbert", "affiliation": "Furman University, Greenville, SC, USA"}], "tags": ["teaching accessibility", "accessibility", "disability"]}, {"title": "Panel: Supporting Student Co-Curricular Experiences", "link": "https://dl.acm.org/doi/10.1145/3328778.3366973", "abstract": "Academic co-curricular activities (e.g., programming contests, hackathons, student clubs, tutoring, internships, undergrad research) are popular with students, promote academic engagement and retention, and provide a competitive advantage to students applying for jobs and grad schools. This panel will continue a conversation started at a 2019 BOF session on this topic.", "authors": [{"name": "Margaret Ellis", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Henry M. Walker", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Kathleen Freeman", "affiliation": "University of Oregon, Eugene, OR, USA"}, {"name": "Jennifer Parham-Mocello", "affiliation": "Oregon State University, Corvallis, OR, USA"}], "tags": ["extracurricular", "co-curriculars", "computing clubs", "experiential learning", "student organizations"]}, {"title": "Session details: Paper Session: Software Engineering", "link": "https://dl.acm.org/doi/10.1145/3385563", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}], "tags": []}, {"title": "What Agile Processes Should We Use in Software Engineering Course Projects?", "link": "https://dl.acm.org/doi/10.1145/3328778.3366864", "abstract": "While project-based software engineering courses aim to provide learning opportunities grounded in professional processes, it is not always possible to replicate every process in classrooms due to course constraints. Previous studies observed how students react to various processes and gave retroactive recommendations. In this study, we instead combine a field study on professional Agile (eXtreme Programming, XP) teams and an established team process taxonomy to proactively select team processes to incorporate in a project-based software engineering course. With collected knowledge from the field study, we choose three XP processes to augment the design of a mature software engineering project course. We choose processes that are 1) considered important by professionals, and 2) complete with respect to coverage of the taxonomy's main categories. We then compare the augmented course design with the original design in a case study. Our results suggest that 1) even without extra resources, adding these new processes does not interfere with learning opportunities for XP processes previously existing in the course design; 2) student teams experience similar benefits from these new processes as professional teams do, and students appreciate the usefulness and value of the processes. In other words, our approach allows instructors to make conscious choices of XP processes that improve student learning outcomes while exposing students to a more complete set of processes and thus preparing them better for professional careers. Course designers with limited resources are encouraged to use our methodology to evaluate and improve the designs of their own project-based courses.", "authors": [{"name": "Armando Fox", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "An Ju", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Yannis Dimitriadis", "affiliation": "Universidad de Valladolid, Valladolid, Spain"}, {"name": "Adnan Hemani", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["agile", "software engineering", "project-based learning"]}, {"title": "Assessing Individual Contributions to Software Engineering Projects with Git Logs and User Stories", "link": "https://dl.acm.org/doi/10.1145/3328778.3366948", "abstract": "Software Engineering courses often incorporate large-scale projects with collaboration between students working in teams. However, it is difficult to objectively assess individual students when their projects are a product of collaborative efforts. This study explores measurements of individuals' contributions to their respective teams.\nI analyzed ten Software Engineering team projects (n=42) and evaluations of individual contributions using automated evaluation of the version control system history (Git logs) and user stories completed on their project management (Kanban) boards. Unique insights from meta-data within the Git history and Kanban board user stories reveal complicated relationships between these measurements and traditional assessments, such as peer review and subjective instructor evaluation. From the results, I suggest supplementing and validating traditional assessments with insights from individuals' commit history and user story contributions.", "authors": [{"name": "Kevin Buffardi", "affiliation": "California State University, Chico, Chico, CA, USA"}], "tags": ["team projects", "software engineering", "git", "user stories", "scrum", "kanban", "performance appraisal", "individual assessment"]}, {"title": "Teaching Autonomous Systems at 1/10th-scale: Design of the F1/10 Racecar, Simulators and Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3366796", "abstract": "Teaching autonomous systems is challenging because it is a rapidly advancing cross-disciplinary field that requires theory to be continually validated on physical platforms. For an autonomous vehicle (AV) to operate correctly, it needs to satisfy safety and performance properties that depend on the operational context and interaction with environmental agents, which can be difficult to anticipate and capture. This paper describes a senior undergraduate level course on the design, programming and racing of 1/10th-scale autonomous race cars. We explore AV safety and performance concepts at the limits of perception, planning, and control, in a highly interactive and competitive environment. The course includes an ethics-centered design philosophy, which seeks to engage the students in an analysis of ethical and socio-economic implications of autonomous systems. Our hypothesis is that $1/10th-scale autonomous vehicles sufficiently capture the scaled dynamics, sensing modalities, decision making and risks of real autonomous vehicles, but are a safe and accessible platform to teach the foundations of autonomous systems. We describe the design, deployment and feedback from two offerings of this class for college seniors and graduate students, open-source community development across 36 universities, international racing competitions, student skill enhancement and employability, and recommendations for tailoring it to various settings.", "authors": [{"name": "Rahul Mangharam", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Abhijeet Agnihotri", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Matthew O'Kelly", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Houssam Abbas", "affiliation": "Oregon State University, CORVALLIS, OR, USA"}], "tags": ["open curriculum", "autonomy"]}, {"title": "Session details: Paper Session: Middle School Experiences", "link": "https://dl.acm.org/doi/10.1145/3385564", "abstract": "No abstract available.", "authors": [{"name": "Bruce Maxwell", "affiliation": "Colby College"}], "tags": []}, {"title": "Drag and Drop Programming Experiences and Equity: Analysis of a Large Scale Middle School Student Motivation Survey", "link": "https://dl.acm.org/doi/10.1145/3328778.3366875", "abstract": "Drag and drop programming languages have been promoted for broadening participation and increasing motivation for middle grade students in computer science (CS), yet their impact on motivation and the implications for equity are not well documented. This raises questions about potential issues of equity. Despite considerations to increase participation and diversity, these tools have not been evaluated as to how they provide more equitable outcomes regarding student motivation in CS. This study analyzes data from a survey (n=9,573) to investigate middle school student motivation in CS when considering previous experiences with drag and drop programming. Student responses to motivational items are categorized into four factors based on exploratory and confirmatory factor analysis. Multiple regression interaction analysis shows that previous experience is associated with increases (p<0.01) in three motivational factors: general academic and computer use confidence, programming confidence, and interest in future CS courses. These associations hold regardless of race and gender although they are lower for demographics underrepresented in CS, female and/or non-White and non-Asian students. Previous experience was also associated with an increase in interest in the current course for White and Asian male students and a decrease for female underrepresented minority students. While it appears that drag and drop programming efforts could help increase future interest and confidence for all students, it does so to differing degrees for different demographics. This suggests that these initiatives are not addressing issues of equity since groups overrepresented in CS still report higher gains than underrepresented demographics after early programming experiences.", "authors": [{"name": "Jeffrey B. Bush", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Monica R. Gilmore", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Susan B. Miller", "affiliation": "Archdiocese of New York, New York, NY, USA"}], "tags": ["broadening participation", "gender", "middle school", "confidence", "interest", "motivation", "computer science", "computer science education", "equity"]}, {"title": "Exploring Middle School Students' Reflections on the Infusion of CS into Science Classrooms", "link": "https://dl.acm.org/doi/10.1145/3328778.3366871", "abstract": "In recent years, there has been a dramatic increase in teaching CS in the context of other disciplines such as science. However, learning CS in an interdisciplinary context may be particularly challenging for students. An important goal for CS education researchers is to develop a deep understanding of the student experience when integrating CS into science classrooms in K-12. This paper presents the results of a mixed-methods study in which 75 middle school students engaged in a series of computationally rich science activities by creating simulations and models in a block-based programming language. After two semesters, students reported their experiences on in-class computer science activities through reflection essays. The quantitative results show that both experienced and novice students increased their CS knowledge significantly after several weeks, and a majority of students (72%) had positive sentiment toward the integration of CS into their science class. Deeper qualitative analysis of students' reflections revealed positive themes centered around the visualization and gamification of science concepts, the hands-on nature of the coding activities, and showing science from a different angle. On the other hand, students expressed negative sentiments on weaknesses in the activity design, lack of CS/science background/interest, and failing to make connections between CS and science concepts. These findings inform efforts to infuse CS education into different disciplines and reveal patterns that may foster success of K-12 classroom implementations.", "authors": [{"name": "Aisha Chung Galdo", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Bradford W. Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "David Austin Fussell", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Eric N. Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James C. Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Mehmet Celepkolu", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["cs+science", "student reflections", "middle school"]}, {"title": "Designing an Assessment for Introductory Programming Concepts in Middle School Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3366896", "abstract": "Teaching of computer science (CS is rapidly expanding in schools. Learning to program is a key ingredient of school CS curricula, and consequently, there is a need for quality measures of student learning of foundational programming concepts. However, high-quality tools for measuring student learning in introductory CS have been under-developed and under-researched. This experience report shares the process of design and refinement of a summative paper-based assessment (that could also be administered online) for introductory programming in middle grades (6-8). We share our experiences with the use of assessment as a pre-post measure in a middle school introductory programming course in diverse, urban school classrooms in the US and use that data to conduct validity, reliability and item discrimination analyses.", "authors": [{"name": "Shuchi Grover", "affiliation": "Looking Glass Ventures/Stanford University, Palo Alto, CA, USA"}], "tags": ["middle school cs education", "introductory programming"]}, {"title": "Session details: Paper Session: Gender", "link": "https://dl.acm.org/doi/10.1145/3385565", "abstract": "No abstract available.", "authors": [{"name": "Jennifer M. Blaney", "affiliation": "Idaho State University"}], "tags": []}, {"title": "Competitive Enrollment Policies in Computing Departments Negatively Predict First-Year Students' Sense of Belonging, Self-Efficacy, and Perception of Department", "link": "https://dl.acm.org/doi/10.1145/3328778.3366805", "abstract": "Enrollment in computing at the college level has skyrocketed, and many institutions have responded by enacting competitive enrollment processes. However, little is known about the effects of enrollment policies on students' experiences. To identify relationships between those policies and students' experiences, we linked survey data from 1245 first-year students in 80 CS departments to a dataset of department policies. We found that competitive enrollment negatively predicts first-year students' perception of the computing department as welcoming, their sense of belonging, and their self-efficacy in computing. Both belonging and self-efficacy are known predictors of student retention in CS. In addition, these relationships are stronger for students without pre-college computing experience. Our classification of institutions as competitive is conservative, and false positives are likely. This biases our results and suggests that the negative relationships we found are an underestimation of the effects of competitive enrollment.", "authors": [{"name": "An Nguyen", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["belonging", "department policies", "competition", "inclusion"]}, {"title": "Gender Differences in Introductory Programming: Comparing MOOCs and Local Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3366852", "abstract": "We analyzed three introductory programming MOOCs and four introductory programming courses offered locally in a Finnish university. The course has been offered in all instances with roughly the same content, barring adjustments based on course feedback. We sought to understand how gender interacts with participating in the course in both instances. In particular, we looked at the differences in persistence, confidence, interest in CS, prior experience, and performance between men and women. Overall, we found that men have more prior experience in both instances and have a higher interest in a CS degree. Furthermore, men perform slightly better on the MOOC while there was no significant difference in performance when it came to gender in the local instance. Aligned with prior research, we found a considerable gap in confidence between male and female students in both instances. At the same time, while women are still underrepresented in CS, we observe a considerable increase in women attending the MOOC. Unfortunately, women are also more likely to drop out early on in the MOOC than men.", "authors": [{"name": "Lassi Haaranen", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Arto Hellas", "affiliation": "Aalto Universirty, Espoo, Finland"}, {"name": "Rodrigo Duran", "affiliation": "Aalto University, Espoo, Finland"}], "tags": ["gender", "confidence", "cs1", "mooc", "interest", "introductory programming", "self-efficacy", "persistence", "performance"]}, {"title": "An Unexplored Relationship: Women in Computing and Athletics", "link": "https://dl.acm.org/doi/10.1145/3328778.3366884", "abstract": "The literature documents the underrepresentation of women in computer science, reasons for the absence of women in computing, and promising practices for increasing female majors in computer science. Among the many reasons for women's avoidance of computer science are: feelings of intimidation, lack of confidence, and aversion to the competitive climate in computing. This paper reports results from a study whose purpose lies in surveying a sample of 457 students at a Midwest US university to answer the questions: What are the personality traits of female athletes who enroll in computer science courses? How are these traits similar to or different from those of male athletes, non-athletes, and students who do not enroll in Computer Science I (CS1) How do grades in CS1 differ among these groups? How do personality traits, gender, athletic team membership, and grades interact? The results of this research study indicate that when females' levels of confidence and intimidation are similar to those of their male peers, women outperform males in CS1. This novel study and its results open the door to additional research questions, new strategies for recruiting women into computing, and potential projects involving female athletes and computer science.", "authors": [{"name": "Khadija Jirari Stewart", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Sharmin Tunguz", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["intimidation", "athletics", "confidence", "computer science i", "retention", "gender issues", "academic performance", "recruitment", "competitiveness"]}, {"title": "Session details: Paper Session: Exam Format", "link": "https://dl.acm.org/doi/10.1145/3385566", "abstract": "No abstract available.", "authors": [{"name": "Zahra Atiq", "affiliation": "Ohio State University"}], "tags": []}, {"title": "Paper Or IDE?: The Impact of Exam Format on Student Performance in a CS1 Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366857", "abstract": "Exams are an integral assessment component in CS1 courses. However, little research exists concerning the impact of the exam format on student performance. To address this deficit, we conducted a year-long study to investigate student performance across two test formats, paper and IDE, with the goal of identifying any differences attributable to the format. Data was collected from the second and third exams over the course of two semesters, with five sections per semester. Each exam, whether paper or IDE, was constructed from a common list of concepts to ensure comparability across formats and sections. To assess the impact of exam format, we considered three points of concern. The first factor, grade received, provides a direct indication of student performance. Next, we examined the type of error committed by students (either syntax or logic) to determine influence of exam format (e.g., Does an IDE reduce the occurrence of syntax errors?). Finally, we considered exam completion rates to address concerns such as if the additional feedback might be overwhelming students in an already stressful environment (exam-taking) leading to lower completion rates.", "authors": [{"name": "Michael C. Orsega", "affiliation": "University of West Georgia, Carrollton, GA, USA"}, {"name": "Lewis Baumstark", "affiliation": "University of West Georgia, Carrollton, GA, USA"}, {"name": "Ana Stanescu", "affiliation": "University of West Georgia, Carrollton, GA, USA"}, {"name": "Jonathan Corley", "affiliation": "University of West Georgia, Carrollton, GA, USA"}], "tags": ["assessment", "cs1", "test", "exam", "ide"]}, {"title": "The Reverse Exam: A Gamified Exam Structure to Motivate Studying and Reduce Anxiety", "link": "https://dl.acm.org/doi/10.1145/3328778.3366933", "abstract": "This experience report describes an attempt to improve student attitudes towards exams by encouraging students to craft exam questions that earn game points and by allowing students to defer some questions to a second attempt at the exam a week later, increasing study time while reducing common timed-test anxiety. The approach, inspired by research in gamification and student-generated questions, focuses on: getting students to study broadly across the material; encouraging students to craft good questions; encouraging an honest first attempt; preventing memorization for the second attempt; incorporating teamwork. Data collected from implementations in two different courses indicate that several finer points of the game design are important and that student-generated questions can be just as effective as instructor-generated questions. Survey data shows that students are very positive about having a second chance at learning.", "authors": [{"name": "Rahul Simha", "affiliation": "George Washington University, Washington, DC, USA"}, {"name": "Pablo Frank-Bolton", "affiliation": "George Washington University, Washington, DC, USA"}], "tags": ["exam design", "gamification", "exam protocol", "reducing instructor workload"]}, {"title": "Inverted Two-Stage Exams for Prospective Learning: Using an Initial Group Stage to Incentivize Anticipation of Transfer", "link": "https://dl.acm.org/doi/10.1145/3328778.3366938", "abstract": "We propose a novel, inverted two-stage exam format that encourages anticipation of transfer problems. We report on its design, use, and initial assessment for low-stakes quizzes in an algorithms course. A typical two-stage exam, where the group stage comes after the individual stage, emphasizes retrospective learning: reflecting on already-solved problems. Our inverted two-stage format places the group stage first, and incentivizes prospective learning: preparing for transfer to novel problems that will appear on the individual stage and subsequent assessments. TAs reported the new format leads to reliable engagement. In surveys, most students preferred inverted two-stage quizzes to individual quizzes plus a TA walkthrough. Students who preferred this format cited the value of learning from peers, brainstorming in the problem domain, and working out ambiguities in the domain and problems.", "authors": [{"name": "Susanne Bradley", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Cinda Heeren", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Patrice Belleville", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Steven A. Wolfman", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["formative assessment", "algorithms", "transfer", "two-stage exams"]}, {"title": "Session details: Paper Session: Planning", "link": "https://dl.acm.org/doi/10.1145/3385567", "abstract": "No abstract available.", "authors": [{"name": "Dennis Brylow", "affiliation": "Marquette University"}], "tags": []}, {"title": "Applying the Design Process to Life Goals: An Experience Report from a Capstone Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366895", "abstract": "A key element in many computing and engineering capstone courses is a team or individual project. The project is often open-ended, requiring students to embrace ambiguity, consider constraints such as time, tools, and finances, and create one or more prototypes. One may also apply design thinking and the design process to their career and lives. This paper presents a \"design your life\" assignment, adapted from the Stanford Life Design Lab, that could be incorporated into any capstone course. The assignment had five parts: 1) three 5-year prototypes including professional and personal goals, 2) one 10-year plan, 3) a thank you note, 4) a gallery walk to observe and comment on other student's 10-year plans, and 5) reflection from a prototype conversation or experience. The goal of the prototype conversation or experience is to give students a low-stakes method to gather information about themselves. For example, if a student thinks they want to coach a robotics team but has not worked extensively with children, volunteering at an afterschool program would be a great prototype experience. The goal of the 5-year and 10-year plans is to make students create a coherent plan, so they have a roadmap for the first part of their professional journeys. The intention of the gallery walk is to build community. This paper presents the course context, details about the assignment, examples of student work, and suggestions for adoption.", "authors": [{"name": "Tammy VanDeGrift", "affiliation": "University of Portland, Portland, OR, USA"}], "tags": ["design your life", "design thinking", "planning", "capstone"]}, {"title": "RadGrad: Removing the \"Extra\" from Extracurricular to Improve Student Engagement, Diversity, and Retention", "link": "https://dl.acm.org/doi/10.1145/3328778.3366793", "abstract": "RadGrad is a curriculum initiative implemented via a web-based application that combines features of social networks, degree planners, and serious games. RadGrad redefines the traditional meaning of \"progress\" and \"success\" in the undergraduate computer science degree program, with the ultimate goal of improving student engagement, diversity, and retention. In this paper, we relate RadGrad to other curriculum initiatives, overview its key functionality, present results from an evaluation conducted during its first year of deployment, and discuss our lessons learned and future directions.", "authors": [{"name": "Philip M. Johnson", "affiliation": "University of Hawaii at Manoa, Honolulu, HI, USA"}, {"name": "Seungoh Paek", "affiliation": "University of Hawaii at Manoa, Honolulu, HI, USA"}, {"name": "Carleton Moore", "affiliation": "University of Hawaii at Manoa, Honolulu, HI, USA"}, {"name": "Peter Leong", "affiliation": "University of Hawaii at Manoa, Honolulu, HI, USA"}], "tags": ["diversity", "engagement", "retention", "curriculum initiative"]}, {"title": "Benefits and Pitfalls of Using Capture the Flag Games in University Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3366893", "abstract": "The concept of Capture the Flag (CTF) games for practicing cybersecurity skills is widespread in informal educational settings and leisure-time competitions. However, it is not much used in university courses. This paper summarizes our experience from using jeopardy CTF games as homework assignments in an introductory undergraduate course. Our analysis of data describing students' in-game actions and course performance revealed four aspects that should be addressed in the design of CTF tasks: scoring, scaffolding, plagiarism, and learning analytics capabilities of the used CTF platform. The paper addresses these aspects by sharing our recommendations. We believe that these recommendations are useful for cybersecurity instructors who consider using CTF games for assessment in university courses and developers of CTF game frameworks.", "authors": [{"name": "Ee-Chien Chang", "affiliation": "National University of Singapore, Singapore, Singapore"}, {"name": "Valdemar \u0160v\u00e1bensk\u00fd", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Jan Vykopal", "affiliation": "Masaryk University, Brno, Czech Rep"}], "tags": ["homework assignment", "plagiarism", "cybersecurity", "capture the flag", "educational data mining", "summative assessment", "learning analytics"]}, {"title": "Session details: Paper Session: CS1 Interventions", "link": "https://dl.acm.org/doi/10.1145/3385568", "abstract": "No abstract available.", "authors": [{"name": "Victoria Hong", "affiliation": "St. Joseph's College"}], "tags": []}, {"title": "The Effects of Compilation Mechanisms and Error Message Presentation on Novice Programmer Behavior", "link": "https://dl.acm.org/doi/10.1145/3328778.3366882", "abstract": "It is generally accepted that learning to program could be easier for many students. One of the most important components of this experience is the programming environment. Novices learn in a variety of environments, from basic command-line interfaces to industry-strength IDEs. These environments can differ substantially in compilation behavior and error message presentation - arguably two of the most important mechanisms through which users interact with the programming language. In this study, we utilize Blackbox data to compare the programming behavior of thousands of users programming in Java, who all used BlueJ versions 3 and 4. These two versions differ drastically in terms of compilation behavior and error message presentation. BlueJ 3 is a click-to-compile editor that delivers text-based error messages from javac to the user, but only presents the first error message, even if the compiler produces several. BlueJ 4 automatically compiles in the background but retains click-to-compile ability. In addition, all error messages (not just the first) may be viewed by the user. We find that the programming experience and behavior of these users can be substantially affected by changes in these mechanisms, causing numbers of manual compilations, successful compilations, and error messages presented in each version to differ, in cases, markedly. Our results provide evidence on how changes in programming environment affect user behavior in conditions that reasonably control for variables other than the programming environment. This can inform the decisions of educators, tool designers, and HCI researchers in their work to make learning more effective for novice programmers.", "authors": [{"name": "Annie Li", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Ioannis Karvelas", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["novice programmers", "tools", "programming environments", "compiler error messages", "programming process data", "cs1", "editors", "educational data mining", "blackbox", "bluej", "programming", "ide"]}, {"title": "A CS1 Spatial Skills Intervention and the Impact on Introductory Programming Abilities", "link": "https://dl.acm.org/doi/10.1145/3328778.3366829", "abstract": "This paper discusses the results of replicating and extending a study performed by Cooper et al. examining the relationship between students' spatial skills and their success in learning to program. Whereas Cooper et al. worked with high school students participating in a summer program, we worked with college students taking an introductory computing course. Like Cooper et al.'s study, we saw a correlation between a student's spatial skills and their success in learning computing. More significantly, we saw that after applying an intervention to teach spatial skills, students demonstrated improved performance both on a standard spatial skills assessment as well as on a CS content instrument. We also saw a correlation between students' enjoyment in computing and improved performance both on a standard spatial skills assessment and on a CS content instrument, a result not observed by Cooper et al.", "authors": [{"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Ryan Bockmon", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "Stephen Cooper", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "William Koperski", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "Jonathan Gratch", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Sheryl Sorby", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}], "tags": ["spatial skills", "cs1", "replication", "attitudes", "intervention"]}, {"title": "Improving Student Study Choices in CS1 with Gamification and Flipped Classrooms", "link": "https://dl.acm.org/doi/10.1145/3328778.3366888", "abstract": "Recent research has explored flipped classrooms, lightweight teams, and gamification to improve the CS1 student learning and social experience. In this paper, we expand upon this research by implementing a flipped classroom with team-based gamification of student study choices. We designed and implemented a Moodle plugin for gamification to reward students for practicing \"good\" study habits, such as turning in assignments early and re-taking quizzes for extra practice. To evaluate our approach, we analyzed data collected from three consecutive semesters of CS1: one semester without gamification, one with gamification, and one with gamification tied to a small grade incentive. Based on log data from our plugin and student survey responses, we found students did make better study choices, including submitting programming assignments and online quizzes significantly earlier; however, these improved study choices did not lead to higher final exam scores. Overall, students enjoyed and were motivated to improve their study habits due to our flipped, team-based, gamified CS1 course.", "authors": [{"name": "Erik Fox", "affiliation": "Gonzaga University, Spokane, WA, USA"}, {"name": "Gina Sprint", "affiliation": "Gonzaga University, Spokane, WA, USA"}], "tags": ["cs1", "team-based learning", "gamification", "flipped classrooms"]}, {"title": "Session details: Paper Session: Scratch", "link": "https://dl.acm.org/doi/10.1145/3385569", "abstract": "No abstract available.", "authors": [{"name": "Gloria Washington", "affiliation": "Howard University"}], "tags": []}, {"title": "Eliciting Student Scratch Script Understandings via Scratch Charades", "link": "https://dl.acm.org/doi/10.1145/3328778.3366911", "abstract": "With many school districts nationwide integrating Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial researchers closely inspect the relationship between program expression and student understandings. In this study, we propose and report on our use of Scratch Charades, a game in which students act out Scratch scripts while others build them. The purpose of Scratch Charades is to familiarize students with scripts and blocks without the cognitive overhead of the complex user interface. However, in this study, we also used it to elicit student understandings about Scratch blocks and scripts to design mnemonics to help students debug their code. We propose two building and/or debugging strategies based on our observations.", "authors": [{"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Sue Krause", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Zene Sekou", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Cathy Thomas", "affiliation": "Texas State University, San Marcos, TX, USA"}], "tags": ["elementary education", "learning strategy", "scratch", "computational thinking"]}, {"title": "Introducing Coding through Tabletop Board Games and Their Digital Instantiations across Elementary Classrooms and School Libraries", "link": "https://dl.acm.org/doi/10.1145/3328778.3366917", "abstract": "This experience report describes an approach for helping elementary schools integrate computational thinking and coding by leveraging existing resources and infrastructure that do not rely on 1-1 computing. A particular focus is using the school library and media center as a site to complement and enhance classroom instruction on coding. Further, our approach builds upon \"unplugged\" knowledge and practices that are already familiar to and motivating for students, in this case tabletop board games. Through these games, students can use their prior knowledge and ease with tabletop gaming mechanics to cue relevant ideas for core computational concepts. We describe a model and an instructional unit spanning across classroom and school library settings that builds upon board game play as a source domain for computing knowledge. Building on expansive framing, the model emphasizes instructional linkages being made between one domain (the tabletop board game) and another (specially designed Scratch project shells with partially complete code blocks) such that the reasoning activities and different contexts are seen as instantiations of the same encompassing context. We present the experiences of three elementary school teachers as they implemented the unit in their classrooms and with their school librarian. We also show initial findings on the impact of the unit on student interest (N=87), as measured by pre- and post- surveys. We conclude with lessons learned about ways to improve the unit and future classroom implementations.", "authors": [{"name": "Frederick Poole", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Mimi Recker", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Jody Clarke-Midura", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Victor R. Lee", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Melissa Rasmussen", "affiliation": "Utah State University, Logan, UT, USA"}], "tags": ["elementary school coding", "cs unplugged", "expansive framing", "computational thinking"]}, {"title": "Scratch Encore: The Design and Pilot of a Culturally-Relevant Intermediate Scratch Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3366912", "abstract": "While several introductory computer science curricula exist for children in K-8, there are few options that go beyond sequence, loops, and basic conditionals. The goal of this project is to not only fill this gap with a high-quality curriculum supported by complete instructional materials, but to also do so with an equity-balanced curriculum. That is, a curriculum that values advancing equity equally with student learning outcomes. In this paper, we introduce barriers to equity in public school classrooms, pedagogical approaches to culturally-relevant curricula, and how our Scratch Encore curriculum is designed to support equity-balanced learning. Finally, we present results of our pilot year, including early evidence of students taking advantage of the culturally-relevant design aspects.", "authors": [{"name": "Sue Krause", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Max White", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Zachary Crenshaw", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Melissa Cobian", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Andrew Rasmussen", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Kristan Beck", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Marco Anaya", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Jennifer Palmer", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Merijke Coenraad", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "David Weintrop", "affiliation": "University of Maryland, College Park, MD, USA"}], "tags": ["culturally-relevant instruction", "k-12 education", "scratch", "computational thinking"]}, {"title": "An Introduction to Conducting Quantitative K-12 Computing Education Research", "link": "https://dl.acm.org/doi/10.1145/3328778.3366993", "abstract": "With the advent of computing education in primary and secondary schools, more research will be needed to determine the best way for students to learn how to think computationally and to design and develop software. As a field, computer science education researchers have been predominantly individuals who are steeped in content knowledge, but often have not had formal training in well-established educational research practices. Likewise, many also focus their research on undergraduate students in their own area of teaching. As the need for research into K-12 computing education grows, so does the opportunity for conducting quantitative studies in the field. In this special session, the presenters will present a broad overview of how to conduct and evaluate quantitative computing education research. The presenters will spend approximately 15 minutes on each of the 4 key areas: designing a study, implementing a study and collecting data, analyzing and interpreting results, and reporting on the study. The remainder of the time will be as a question and answer period with the audience. Since there is considerable overlap between computing education research at the primary/secondary and post-secondary levels, those new to research at the post-secondary level may also benefit from learning about form design, implementation, and reporting of research studies. Key takeaways for this session will include a basic understanding of K-12 computing education research from start to finish as well as a list of well-vetted resources to enable new researchers to explore and learn more.", "authors": [{"name": "Adrienne Decker", "affiliation": "University at Buffalo, Buffalo, NY, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College & CSEdResearch.org, Peoria, IL, USA"}, {"name": "Ryan Torbey", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Rebecca Vivian", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["education research", "collecting data", "study design", "reporting research", "k-12", "quantitative"]}, {"title": "IS2020: Updating the Information Systems Model Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3366999", "abstract": "The model curriculum used to develop, update, and assess IS programs (IS2010) is now nearly a decade old, and an assessment of the curriculum itself indicates that its value is decreasing due to the changing technological and skills demands in the information systems environment. Therefore, the ACM and AIS established an Exploratory Task Force that assessed IS2010 and recommended a taskforce be created to update the content and structure for a new model curriculum. One recurring theme is that current graduates' technical skills do not appear to meet industry needs. The IS discipline must express its core in terms of a standard curriculum to provide a foundation upon which to develop and offer undergraduate IS programs that meet stakeholder demands. A taskforce on the Information Systems Model Curriculum (IS2020) was created following the report and recommendation of the Exploratory Taskforce. This panel seeks to introduce the work of this taskforce as well as engage the IS education community in this effort. Panelists will introduce key components of this process and seek input and feedback. This session should be of interest to all attendees, especially faculty developing college-level curricula in Information Systems.", "authors": [{"name": "Raja Sooriamurthi", "affiliation": "Carnegie Mellon Univesity, Pittsburgh, PA, USA"}, {"name": "Jeff Babb", "affiliation": "West Texas A&M University, Canyon, TX, USA"}, {"name": "Greg Anderson", "affiliation": "Brigham Young University, Provo, UT, USA"}, {"name": "Paul Leidig", "affiliation": "Grand Valley State University, Allendale, MI, USA"}], "tags": ["is2020", "curriculum", "information systems"]}, {"title": "Computer Science through Concurrent Enrollment: A Strategy to Broaden Participation", "link": "https://dl.acm.org/doi/10.1145/3328778.3366981", "abstract": "Most U.S. states support college-readiness and access through dual enrollment, in which high school students enroll in college courses. Concurrent enrollment (CE) allows students to take college courses in their own high school, taught by high school teachers approved by the partner college. CE has positive effects on students' education, but rarely is CS available through CE. Unlike AP, CE provides college credit to students who are assessed throughout the course rather than by a single high-stakes exam/project. This panel will showcase four different types of post-secondary institutions' experiences offering CS-through-CE and discuss its potential as an entry point into CS for students underrepresented in computing, including those in urban and rural settings. Panelists will share challenges (such as teacher credentialing) and benefits of CS-through-CE. The audience will understand supports and barriers to creating CS-through-CE courses, will be provided with resources, and will crowd-source possible next steps in implementing CE as a model for broadening participation.", "authors": [{"name": "Seth Freeman", "affiliation": "Capital Community College, Hartford, CT, USA"}, {"name": "Nigamanth Sridhar", "affiliation": "Cleveland State University, Cleveland, OH, USA"}, {"name": "Renee Fall", "affiliation": "College of St. Scholastica, St. Paul, MN, USA"}, {"name": "Dan Kaiser", "affiliation": "Southwest Minnesota State University, Marshall, MN, USA"}, {"name": "Ronald I. Greenberg", "affiliation": "Loyola University Chicago, Chicago, IL, USA"}], "tags": ["dual credit", "concurrent enrollment", "broadening participation", "dual enrollment", "advanced placement", "cs principles", "cs education"]}, {"title": "Extending and Evaluating the Use-Modify-Create Progression for Engaging Youth in Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3328778.3366971", "abstract": "The Use-Modify-Create progression (UMC) was conceptualized in 2011 after comparing the productive integration of computational thinking across National Science Foundation-funded Innovative Technology Experiences for Students and Teachers (NSF ITEST) programs. Since that time, UMC has been widely promoted as a means to scaffold student learning of computational thinking (CT) while enabling personalization and allowing for creative adaptations of pre-existing computational artifacts. In addition to UMC's continued application, it has recently been utilized to scaffold student learning in topics as diverse as machine learning, e-textiles, and computer programming. UMC has also been applied to instructional goals other than \"supporting students in becoming creators of computational artifacts.\" This panel will re-examine the UMC progression and refine our understanding of when its use is suitable, and when not, and share findings on evaluations and extensions to UMC that are productive in new and different contexts.", "authors": [{"name": "Sue Sentance", "affiliation": "Raspberry Pi Foundation, Cambridge, United Kingdom"}, {"name": "Fred Martin", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "Natalie Lao", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}, {"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Irene Lee", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}], "tags": ["use-modify-create", "lesson design", "computational thinking"]}, {"title": "The Joys and Challenges of Outreach in CS Education to Low-Income Populations", "link": "https://dl.acm.org/doi/10.1145/3328778.3366964", "abstract": "Teaching computer science to low-income populations is critical to building a more diverse workforce. However, it has added challenges including limited resources and greater diversity in academic backgrounds. You'll hear a variety of perspectives ranging from experiences building programs for low-income K-12 students to teaching incarcerated adults at county jails.", "authors": [{"name": "EJ Jung", "affiliation": "University of San Francisco, San Francisco, CA, USA"}, {"name": "Nupur Garg", "affiliation": "Google, Mountain View, CA, USA"}, {"name": "Theresa Migler", "affiliation": "California State Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Regine De Guzman", "affiliation": "Tesla Motors, Palo Alto, CA, USA"}], "tags": ["underserved populations", "cs outreach", "low income"]}, {"title": "Session details: Paper Session: Blocks", "link": "https://dl.acm.org/doi/10.1145/3385570", "abstract": "No abstract available.", "authors": [{"name": "Chunbo Chu", "affiliation": "Franklin University"}], "tags": []}, {"title": "Pythons and Martians and Finches, Oh My! Lessons Learned from a Mandatory 8th Grade Python Class", "link": "https://dl.acm.org/doi/10.1145/3328778.3366906", "abstract": "As computing technologies continue to have a greater impact on daily life, it becomes increasingly important for the K-12 education system to prepare students for the computerized world. In this paper, we present the curriculum design, implementation, and results from a one-trimester introductory Python course that is mandatory for all 8th graders in our school district. This course is a crucial component of the K-12 computational thinking pathways we are developing at our school district, which take students from block-based programming and computational thinking (elementary school) to text-based programming and applications of computer science (high school). Our mandatory 8th grade course serves as a bridge between these two components. We present qualitative results that highlight the challenges that arose from teaching a course for all students -- not just those with a prior interest in computing -- and how the instructor overcame those challenges. We also present quantitative results that demonstrate the course's positive impact on students' attitudes towards computer science, their intent to re-engage with computer science in the future, and the gender gap with regards to confidence in computer science.", "authors": [{"name": "Mark Stehlik", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Amal Nanavati", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Aileen Owens", "affiliation": "South Fayette School District, South Fayette, PA, USA"}], "tags": ["k-12 computer science education", "robotics", "computational thinking"]}, {"title": "Dual-Modality Instruction and Learning: A Case Study in CS1", "link": "https://dl.acm.org/doi/10.1145/3328778.3366865", "abstract": "In college-level introductory computer science courses, students traditionally learn to program using text-based languages which are common in industry and research. This approach means that learners must concurrently master both syntax and semantics. Blocks-based programming environments have become commonplace in introductory computing courses in K-12 schools and some colleges in part to simplify syntax challenges. However, there is evidence that students may face difficulty moving to text-based programming environments when starting with blocks-based environments. Bi-directional dual-modality programming environments provide multiple representations of programming language constructs (in both blocks and text) and allow students to transition between them freely. Prior work has shown that some students who use dual-modality environments to transition from blocks to text have more positive views of text programming compared to students who move directly from blocks to text languages, but it is not yet known if there is any impact on learning. To investigate the impact on learning, we conducted a study at a large public university across two semesters in a CS1 course (N=673). We found that students performed better on typical course exams when they were taught using dual-modality representations in lecture and were provided dual-modality tools. The results of our work support the conclusion that dual-modality instruction can help students learn computational concepts in early college computer science coursework.", "authors": [{"name": "Jeremiah Blanchard", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Lisa Anthony", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["novice programmers", "programming languages", "dual-modality programming environments", "computer science education", "cs1, blocks-based programming environments"]}, {"title": "Cluster-Based Analysis of Novice Coding Misconceptions in Block-Based Programming", "link": "https://dl.acm.org/doi/10.1145/3328778.3366924", "abstract": "Recent years have seen an increasing interest in identifying common student misconceptions during introductory programming. In a parallel development, block-based programming environments for novice programmers have grown in popularity, especially in introductory courses. While these environments eliminate many syntax-related errors faced by novice programmers, there has been limited work that investigates the types of misconceptions students might exhibit in these environments. Developing a better understanding of these misconceptions will enable these programming environments and instructors to more effectively tailor feedback to students, such as prompts and hints, when they face challenges. In this paper, we present results from a cluster analysis of student programs from interactions with programming activities in a block-based programming environment for introductory computer science education. Using the interaction data from students' programming activities, we identify three families of student misconceptions and discuss their implications for refinement of the activities as well as design of future activities. We then examine the value of block counts, block sequence counts, and system interaction counts as programming features for clustering block-based programs. These clusters can help researchers identify which students would benefit from feedback or interventions and what kind of feedback provides the most benefit to that particular student.", "authors": [{"name": "Fernando J. Rodriguez", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Bradford W. Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Andy Smith", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Eric N. Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Andrew Emerson", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James C. Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["block-based programming", "cluster analysis", "introductory programming education"]}, {"title": "Session details: Paper Session: High School Experiences", "link": "https://dl.acm.org/doi/10.1145/3385571", "abstract": "No abstract available.", "authors": [{"name": "Edward Dillon", "affiliation": "Morgan State University"}], "tags": []}, {"title": "Investigating Different Assignment Designs to Promote Collaboration in Block-Based Environments", "link": "https://dl.acm.org/doi/10.1145/3328778.3366943", "abstract": "Pair Programming is often employed in educational settings as a means of promoting collaboration and scaffolding the assignment difficulty for teams. While much research supports its inclusion as a pedagogical practice at the university level, some research has demonstrated in K-12 contexts, it can potentially lead to inequitable learning enviroments and create dynamics between partners that might negatively effect novice learners. New block-based programming environments like Netsblox have attempted to address this by creating ways for both partners to program simultaneously, but this feature has yet to be examined in detail. In this paper, we introduce several modes of Collaboration afforded by Netsblox. This includes Pair-Separate, Pair-Together, and Partner Puzzles - a mode that Splits the necessary blocks to build the assignment between team members. From an initial pilot study involving 25 pairs of middle and high school students, we find that most pairs preferred working on assignments in the Partner Puzzle mode as it presented a fun challenge to teams. We end on recommendations for building assignments using this methodology and future research directions investigating the role of collaboration in programming", "authors": [{"name": "Alexandra Milliken", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Veronica Catet\u00e9", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["pair-programming", "collaboration", "block-based environments"]}, {"title": "Algebra I Before High School as a Gatekeeper to Computer Science Participation", "link": "https://dl.acm.org/doi/10.1145/3328778.3366877", "abstract": "A complex web of factors can influence whether students participate in computer science (CS) during high school. In order to increase participation in CS for all students, we need to better understand who is currently participating and what factors might be hindering participation. This study utilized a large-scale, student-level dataset from the Texas Education Research Center to investigate factors that predict high school student participation in CS and advanced CS courses. Our dataset contained information on over 1.1 million Texas high school students from the 2017-2018 school year, allowing us visibility into CS course availability in schools, student course taking, and detailed demographic information. We used multilevel mixed-effects logistic regression models to explore predictive factors of student participation in CS and advanced CS courses, limiting our analysis to students whose schools offered CS. In both models, our results showed that students who took Algebra I before high school had more than double the odds of being enrolled in a CS course. This work supports and extends previous understanding of factors that are predictive of CS participation in high school, contributing to the existing literature by uncovering the importance of Algebra I before high school as a potential gatekeeper to participation in CS.", "authors": [{"name": "Jayce R. Warner", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Carol L. Fletcher", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Ryan Torbey", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Nicole D. Martin", "affiliation": "University of Texas at Austin, Austin, TX, USA"}], "tags": ["access", "broadening participation", "k-12 course enrollment", "cs pathways", "algebra", "participation", "predictors of cs enrollment", "high school cs", "math pathways", "equity"]}, {"title": "Self-Regulation for High School Learners in a MOOC Computer Science Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366818", "abstract": "Courses designed for Massive Open Online Courseware (MOOC)platforms provide learners worldwide with extensive learning opportunities. Previous research has explored learner motivation in MOOC courses using self-regulated learning (SRL) theory. How-ever; the majority of this work has focused on adults and we know little about how high school learners use SRL strategies. This paper explores self-regulated learning differences between high school students enrolled in traditional face-to-face and MOOC Advanced Placement Computer Science A courses. We found significant differences in student help seeking abilities between the two courses, but not in other SRL behaviors (such as, metacognition, effort regulation, etc.). In addition, help seeking was the only SRL strategy that was significantly related to MOOC students' grades on programming tasks. We discuss implications for designing MOOC courses for younger learners and directions for future research to disentangle the role of MOOC environment and motivation in influencing student outcome", "authors": [{"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}, {"name": "Phil Sands", "affiliation": "Michigan State University, East Lansing, MI, USA"}], "tags": ["motivation,", "mooc", "self-regulated learning", "k-12"]}, {"title": "Session details: Paper Session: Program Writing", "link": "https://dl.acm.org/doi/10.1145/3385572", "abstract": "No abstract available.", "authors": [{"name": "Barbara J. Ericson", "affiliation": "University of Michigan"}], "tags": []}, {"title": "How Plans Occur in Novices' Programs: A Method to Evaluate Program-Writing Skills", "link": "https://dl.acm.org/doi/10.1145/3328778.3366870", "abstract": "Program-writing skills are often assessed with computer-based practical exams where students are required to design, write and test small programs according to specifications written in natural language. The evaluation of such tasks is usually based on the correctness of outputs (possibly with the support of automatic tools) and the quality of code. In this paper, we propose to evaluate program-writing assignments by using Soloway's notion of plans [34]. We illustrate this idea by defining a marking scheme for some typical program-writing tasks and apply this approach to evaluate the programs written during the final examination of an introductory programming course. We then compare the resulting marks with the marks originally assigned by the instructors of the course. Findings show that the use of plans in the marking process is feasible and requires an effort similar to the one required by a traditional evaluation process, and the focus on plans when examining the source code of students gives useful insights about their difficulties.", "authors": [{"name": "Violetta Lonati", "affiliation": "Universit\u00e0 degli Studi di Milano, Milano, Italy"}, {"name": "Umberto Costantini", "affiliation": "Universit\u00e0 degli Studi di Milano, Milano, Italy"}, {"name": "Anna Morpurgo", "affiliation": "Universit\u00e0 degli Studi di Milano, Milano, Italy"}], "tags": ["assessment", "programming plans", "programming learning"]}, {"title": "Crescendo: Engaging Students to Self-Paced Programming Practices", "link": "https://dl.acm.org/doi/10.1145/3328778.3366919", "abstract": "This paper introduces Crescendo, a self-paced programming practice environment that combines the block-based and visual, interactive programming of Snap!, with the structured practices commonly found in Drill-and-Practice Environments. Crescendo supports students with Parsons problems to reduce problem complexity, Use-Modify-Create task progressions to gradually introduce new programming concepts, and automated feedback and assessment to support learning. In this work, we report on our experience deploying Crescendo in a programming camp for middle school students, as well as in an introductory university course for non-majors. Our initial results from field observations and log data suggest that the support features in Crescendo kept students engaged and allowed them to progress through programming concepts quickly. However, some students still struggled even with these highly-structured problems, requiring additional assistance, suggesting that even strong scaffolding may be insufficient to allow students to progress independently through the tasks.", "authors": [{"name": "Thomas W. Price", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Rui Zhi", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Wengran Wang", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Alexandra Milliken", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["adaptive feedback", "drill and practice systems", "use modify create", "novice programming environments", "parsons problems"]}, {"title": "Using Terminal Histories to Monitor Student Progress on Hands-on Exercises", "link": "https://dl.acm.org/doi/10.1145/3328778.3366935", "abstract": "Hands-on exercises are often used to improve student engagement and knowledge retention in systems, networking and cybersecurity classes. Even when students comprehend the concepts, they may lack the skills to complete an exercise. Teachers need effective tools to identify these problemsduring an assignment and offer targeted and timely help.\nThis paper explores the use of terminal histories with milestone detection to enable rapid, automated and on-going assessment of student work while performing hands-on exercises. We describe our system, called ACSLE, which monitors terminal input and output for each student, compares it with desired milestones, and produces both summaries and detailed statistics of student progress.\nWe analyze data from undergraduates at two colleges, as they performed several well-structured cybersecurity assignments on a network testbed. We show how ACSLE's output can help teachers identify students that struggle, understand why they struggle and offer timely help. ACSLE can also help teachers identify challenging tasks and plan class-wide interventions.", "authors": [{"name": "Richard Weiss", "affiliation": "Evergreen State College, Olympia, WA, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Paul Lepe", "affiliation": "University of Southern California, Los Angeles, CA, USA"}, {"name": "Jelena Mirkovic", "affiliation": "University of Southern California, Information Sciences Institute, Marina del Rey, CA, USA "}, {"name": "David Weinman", "affiliation": "Evergreen State College, Olympia, WA, USA"}, {"name": "Aashray Aggarwal", "affiliation": "University of Southern California, Los Angeles, CA, USA"}], "tags": ["testbeds", "networks", "assessment", "learning"]}, {"title": "Session details: Paper Session: Exams", "link": "https://dl.acm.org/doi/10.1145/3385573", "abstract": "No abstract available.", "authors": [{"name": "Louis Nadelson", "affiliation": "University of Central Arkansas"}], "tags": []}, {"title": "Measuring the Score Advantage on Asynchronous Exams in an Undergraduate CS Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366859", "abstract": "This paper presents the results of a controlled crossover experiment designed to measure the score advantage that students have when taking exams asynchronously (i.e., the students can select a time to take the exam in a multi-day window) compared to synchronous exams (i.e., all students take the exam at the same time). The study was performed in an upper-division undergraduate computer science course with 321 students. Stratified sampling was used to randomly assign the students to two groups that alternated between the two treatments (synchronous versus asynchronous exams) across a series of four exams during the semester. These non-programming exams consisted of a mix of multiple choice, checkbox, and numeric input questions. For some questions, the parameters were randomized so that students received different versions of the question and some questions were identical for all students. In our results, students taking the exams asynchronously had scores that were on average only 3% higher (0.2 of a standard deviation). Furthermore, we found that the score advantage was decreased by the use of randomized questions, and it did not significantly differ based on the type of question. Thus, our results suggest that asynchronous exams can be a compelling alternative to synchronous exams.", "authors": [{"name": "Matthew West", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Craig Zilles", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Mariana Silva", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}], "tags": ["computer-based testing", "asynchronous exams", "cheating", "randomized questions"]}, {"title": "Securing Bring-Your-Own-Device (BYOD) Programming Exams", "link": "https://dl.acm.org/doi/10.1145/3328778.3366907", "abstract": "Traditional pen and paper exams are inadequate for modern university programming courses as they are misaligned with pedagogies and learning objectives that target practical coding ability. Unfortunately, many institutions lack the resources or space to be able to run assessments in dedicated computer labs. This has motivated the development of bring-your-own-device~(BYOD) exam formats, allowing students to program in a similar environment to how they learnt, but presenting instructors with significant additional challenges in preventing plagiarism and cheating. In this paper, we describe a BYOD exam solution based on lockdown browsers, software which temporarily turns students' laptops into secure workstations with limited system or internet access. We combine the use of this technology with a learning management system and cloud-based programming tool to facilitate conceptual and practical programming questions that can be tackled in an interactive but controlled environment. We reflect on our experience of implementing this solution for a major undergraduate programming course, highlighting our principal lesson that policies and support mechanisms are as important to consider as the technology itself.", "authors": [{"name": "Norman Tiong Seng Lee", "affiliation": "Singapore University of Technology and Design, Singapore, Singapore"}, {"name": "Christopher M. Poskitt", "affiliation": "Singapore University of Technology and Design & Singapore Management University, Singapore, Singapore "}, {"name": "Oka Kurniawan", "affiliation": "Singapore University of Technology and Design, Singapore, Singapore"}], "tags": ["plagiarism prevention", "programming exams", "learning management systems", "byod exams", "lockdown browsers", "cloud-based ides"]}, {"title": "A Modular, Practical Test for a Programming Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366886", "abstract": "In order to evaluate students' programming skills during a university course, a practical programming test can be administered, in which students are required to implement a short yet complete program according to a provided specification. However, such tests often suffer from drawbacks that prevent comprehensive and accurate assessment of students' abilities. In this paper we identify these drawbacks and then present a modular, practical test that avoids common testing pitfalls, as well as show how to design such a test based on course learning outcomes. A key aspect of our approach is adoption of modularity, which ensures independent and comprehensive verification of learning outcomes. We have used our method to evaluate object-oriented programming skills of undergraduate students over several years and have found that our testing approach has proven its validity and superiority over approaches employed previously.", "authors": [{"name": "Jan Stolarek", "affiliation": "University of Edinburgh & Lodz University of Technology, Edinburgh, United Kingdom"}, {"name": "Przemyslaw Nowak", "affiliation": "Lodz University of Technology, Lodz, Poland"}], "tags": ["student assessment", "practical skills testing", "learning outcomes"]}, {"title": "Session details: Paper Session: CS Curriculum", "link": "https://dl.acm.org/doi/10.1145/3385574", "abstract": "No abstract available.", "authors": [{"name": "Deborah Fields", "affiliation": "Utah State University"}], "tags": []}, {"title": "A Five-Year Retrospective on an Applied Baccalaureate Program in Software Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3366803", "abstract": "This experience report documents an intervention that started five years ago, in 2014. Green River College, a community college in a suburb of Seattle, Washington, launched a new applied baccalaureate program in Software Development, with a goal of preparing place-bound, underrepresented, and underserved students for employment as entry-level software developers. At program inception, community college baccalaureate degrees were relatively new across the nation and there was little precedent established in terms of program design, particularly as these new degree programs were not intended to emulate traditional undergraduate Computer Science programs, but rather provide an alternative pathway to the baccalaureate and workforce. The Bachelor of Applied Science (BAS) in Software Development is designed as a \"2+2\" program, where students enter the program at third-year/junior-level standing after completing their two-year applied associate degree. The BAS Software Development curriculum includes courses in both \"computer science fundamentals\" and industry-focused, project-based learning courses. Since program inception, the curriculum has evolved based on evidence and feedback from students, instructors, alumni, and industry partners. Initial key results at the five-year mark include a review of enrollment, completion, diversity, and placement data. As of June 2019, the program has 132 graduates (degrees conferred), with 52 new students on track to enter the program in the 2019-2020 academic year. A recent snapshot of currently enrolled students indicates the median age is 24, 23% are women, 40% are students of color, 39% are first generation college students, and 40% are receiving need-based financial aid. Graduates of the program have placed into roles that include Software Development Engineers, Solutions Engineers, and Technical Program Managers.", "authors": [{"name": "Susan Uland", "affiliation": "Green River College, Auburn, WA, USA"}, {"name": "Tina Ostrander", "affiliation": "Green River College, Auburn, WA, USA"}, {"name": "Josh Archer", "affiliation": "Green River College, Auburn, WA, USA"}, {"name": "Kendrick Hang", "affiliation": "Green River College, Auburn, WA, USA"}, {"name": "Andy Orr", "affiliation": "Green River College, Auburn, WA, USA"}], "tags": ["workforce education", "applied computer science", "community college", "community college baccalaureate", "applied baccalaureate"]}, {"title": "Validating a CS Attitudes Instrument", "link": "https://dl.acm.org/doi/10.1145/3328778.3366830", "abstract": "This paper discusses the validation of a modified computer science attitudes instrument. Dorn and Tew's Computing Attitude Survey was modified by adding questions on gender issues and questions regarding students' perceptions of the utility of computing. Current trends indicate an increasing gap in the genders graduating with degrees in computer science. The new questions explore student attitudes and perceptions of women in computing while items related to computer science utility explore the importance of CS in students' lives and careers. These modifications necessitated the re-validation of the new revised instrument and comparison of the results obtained with in the original instrument by Dorn and Tew.", "authors": [{"name": "Stephen Cooper", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Jonathan Gratch", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Ryan Bockmon", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}], "tags": ["replication", "assessment", "gender", "validity"]}, {"title": "The Return Statement: Establishing a Continuous Assessment Database System for Consistent Program Feedback", "link": "https://dl.acm.org/doi/10.1145/3328778.3366916", "abstract": "Curriculum assessment is a critical but arduous task. It yields insight into the strengths and weaknesses of our programs, outlining paths for curriculum improvement. However, current methods of assessment are often viewed as burdensome, as disorganized, or even as unfruitful. A lack of consistent assessment makes determining the impact of program modifications to be extremely difficult, if not impossible. Even when issues are identified, lengthy and backloaded assessments do not leave any time to address these issues for the assessed students. To overcome the obstacles of program assessment, we have constructed the Continuous Assessment Database System (CADS). This system conducts direct assessment of student prerequisite knowledge at each semester's outset. By tracking prerequisite knowledge, we determine whether students recall the crucial elements of our curriculum. Furthermore, educators receive data on students' preparedness early in the semester, allowing for them to adapt their courses to best meet student needs. In order to generate informative reports for faculty each term, CADS maps its assessment questions to student information, to CS knowledge topics, to departmental student learning outcomes, and to taxonomic mastery levels. These reports visualize current data against historical data and present deeper examinations of significant data shifts for causal analysis. Different diagrams give insight into specific courses, while others examine student learning across the entire CS program via diverse mappings. Overall, CADS provides a model for using technology to craft an expedient form of program assessment that dynamizes a curriculum. This paper details our CADS implementation.", "authors": [{"name": "Stephen Bothwell", "affiliation": "Xavier University, Cincinnati, OH, USA"}, {"name": "Kathleen Timmerman", "affiliation": "Xavier University, Cincinnati, OH, USA"}], "tags": ["assessment", "abet", "accreditation"]}, {"title": "Session details: Paper Session: Computational Thinking Assessment", "link": "https://dl.acm.org/doi/10.1145/3385575", "abstract": "No abstract available.", "authors": [{"name": "Meghan Allen", "affiliation": "University of British Columbia"}], "tags": []}, {"title": "A Principled Approach to Designing a Computational Thinking Practices Assessment for Early Grades", "link": "https://dl.acm.org/doi/10.1145/3328778.3366849", "abstract": "In today's increasingly digital world, it is critical that all students learn to think computationally from an early age. Assessments of Computational Thinking (CT) are essential for capturing information about student learning and challenges. Several existing K-12 CT assessments focus on concepts like variables, iterations and conditionals without emphasizing practices like algorithmic thinking, reusing and remixing, and debugging. In this paper, we discuss the development of and results from a validated CT Practices assessment for 4th-6th grade students. The assessment tasks are multilingual, shifting the focus to CT practices, and making the assessment useful for students using different CS curricula and different programming languages. Results from an implementation of the assessment with about 15000 upper elementary students in Hong Kong indicate challenges with algorithm comparison given constraints, deciding when code can be reused, and choosing debugging test cases. These results point to the utility of our assessment as a curricular tool and the need for emphasizing CT practices in future curricular initiatives and teacher professional development.", "authors": [{"name": "Satabdi Basu", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Yuning Xu", "affiliation": "Kidaptive Inc., Redwood City, CA, USA"}, {"name": "Daisy Rutstein", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Linda Shear", "affiliation": "SRI International, Menlo Park, CA, USA"}], "tags": ["evidence-centered design", "assessment", "computational thinking"]}, {"title": "Understanding Students' Computational Thinking through Cognitive Interviews: A Learning Trajectory-based Analysis", "link": "https://dl.acm.org/doi/10.1145/3328778.3366845", "abstract": "For K-8 computer science (CS) education to continue to expand, it is essential that we understand how students develop and demonstrate computational thinking (CT). One approach to gaining this insight is by having students articulate their understanding of CT through cognitive interviews. This study presents findings of a cognitive interview study with 13 fourth-grade students (who had previously engaged in integrated CT and mathematics instruction) working on CT assessment items. The items assessed four CT concepts: sequence, repetition, conditionals, and decomposition. This study analyzed students\\textquotesingle articulated understanding of the four CT concepts and the correspondence between that understanding and hypothesized learning trajectories (LTs). We found that 1) all students articulated an understanding of sequence that matched the intermediate level of the Sequence LT; 2) a majority of students\\textquotesingle responses demonstrated the level of understanding that the repetition and decomposition items were designed to solicit (8 of 9 responses were correct for repetition and 4 of 6 were correct for decomposition); and 3) less than half of students\\textquotesingle responses articulated an understanding of conditionals that was intended by the items (4 of 9 responses were correct). The results also suggested questioning the directional relationships of two statements in the existing Conditionals LT. For example, unlike the LT, this study revealed that students could understand \"A conditional connects a condition to an outcome'' before \"A condition is something that can be true or false.''", "authors": [{"name": "Ruohan Liu", "affiliation": "University of Florida, GAINESVILLE, FL, USA"}, {"name": "Wei Yan", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Brian Gane", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "John Hampton", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Feiya Luo", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Maya Israel", "affiliation": "University of Florida, gainesville, FL, USA"}], "tags": ["learning trajectories", "k-8 computer science education", "computational thinking"]}, {"title": "Development and Validation of the Computational Thinking Concepts and Skills Test", "link": "https://dl.acm.org/doi/10.1145/3328778.3366813", "abstract": "Calls for standardized and validated measures of computational thinking have been made repeatedly in recent years. Still, few such tests have been created and even fewer have undergone rigorous psychometric evaluation and been made available to researchers. The purpose of this study is to report our work in developing and validating a test of computational thinking concepts and skills and to compare different scoring methods for the test. This computational thinking exam is intended to be used in computing education research as a common measure of computational thinking so that the research community will be able to make more meaningful comparisons across samples and studies. The Computational Thinking Concepts and Skills Test (CTCAST) was administered to students in several courses, evaluated and revised, and then administered to another group of students. Part of the revision included changing half of the items to a multiple-select format. The test scores using the three scoring methods were compared to each other and to scores on a different test of core computer science knowledge. Results indicate the CTCAST and the test of core computer science knowledge measure similar, but not identical, aspects of students' knowledge and skills, and that item-level statistics vary according to the scoring method that is used. Recommendations for using and scoring the test are presented.", "authors": [{"name": "Patrick M. Morrow", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Leen-Kiat Soh", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Markeya S. Peteranetz", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}], "tags": ["multiple-select items", "assessment", "test development", "computational thinking"]}, {"title": "Session details: Paper Session: Systems", "link": "https://dl.acm.org/doi/10.1145/3385576", "abstract": "No abstract available.", "authors": [{"name": "Dale F. Reed", "affiliation": "University of Illinois at Chicago"}], "tags": []}, {"title": "C + Go = An Alternate Approach Toward the Linux Programming Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366944", "abstract": "The use of the C programming language in a Linux programming course---common in most undergraduate computer science programs---has been the standard practice for nearly thirty years. The use of C is appropriate because Linux is written in C and, thus, programming with the system (i.e., accessing operating system structures and making calls to the kernel) is natural in C. However, this seamless integration of Linux and C can inhibit student assimilation of course concepts---through conflation of concepts with language (e.g., system calls with C, or libraries with gcc, respectively)---and, ultimately, student learning outcomes for a variety of reasons. We challenge the idea of the exclusive use of C in the Linux programming course and alternatively propose the use of the Go programming language, in strategic conjunction with C, to both achieve student learning outcomes and address some of the issues with an exclusive C approach. We explored and studied this approach---the use of Go in the Linux course---over the course of seven consecutive offerings of it. We present our experience with this approach including a collection of desiderata resulting from it as well as student survey data as an evaluation of its use in practice. Overall, the results indicate this approach is feasible, is no worse than an exclusive C approach, and yields advantages. We anticipate this experience report will inspire adoption of the use of Go in similar Linux programming courses.", "authors": [{"name": "Brandon M. Williams", "affiliation": "Independent, Dayton, OH, USA"}, {"name": "Saverio Perugini", "affiliation": "University of Dayton, Dayton, OH, USA"}], "tags": ["go programming language", "linux programming", "filters", "toolchains", "pipes", "linux programming course", "linux kernel", "system calls", "c programming language"]}, {"title": "Exploring Students' Understanding of Concurrency - A Phenomenographic Study", "link": "https://dl.acm.org/doi/10.1145/3328778.3366856", "abstract": "This paper continues previous efforts in understanding the problems students face when learning concurrency. In this paper, we explore students' understanding of the subject using phenomenography in order to gain insights that can aid in explaining the underlying causes for common student mistakes in concurrency, which has been studied in depth previously. Students' experience of concurrency and critical sections were analyzed using a phenomenographic study based on interviews with students attending one of two courses on concurrency and operating systems. We present 6 categories describing students' experience of concurrency, and 4 categories describing students' experience of critical sections in this paper. Furthermore, these categories are related to previous results, both to explore how misconceptions in the categores relate to student mistakes and to estimate how common it is for each category to be discerned.", "authors": [{"name": "Linda Mannila", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}, {"name": "Mariam Kamkar", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}, {"name": "Filip Str\u00f6mb\u00e4ck", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}], "tags": ["computer science education", "concurrency", "critical sections", "phenomenography"]}, {"title": "Using an Operating Systems Class to Strengthen Students' Knowledge of C++", "link": "https://dl.acm.org/doi/10.1145/3328778.3366936", "abstract": "Operating systems is the last required course in our undergraduate Computer Science major. Although our students have had two semesters of programming in C++, one in assembler, and a semester of data structures using the C++ Standard Template Library, many of them have weak mastery of some important programming topics. In addition, they have had minimal exposure to using these constructs with real world data structures. In this paper we describe how we have used the assignments in a Linux-based Operating Systems course to remedy these deficiencies while teaching a full semester of OS content. Assignments include retrieving data via standard API calls and from /proc; process management, including fork, wait and system; building a microshell with fork/exec and pipe/dup; semaphore handling; and building an OS simulator. We have rewritten these assignments to provide additional practice with data type conversion, pointers and memory management, file handling, classes and subclasses, and the use of vectors, maps and other data structures in the STL.", "authors": [{"name": "Reva Freedman", "affiliation": "Northern Illinois University, DeKalb, IL, USA"}], "tags": ["data structures", "c++ programming", "operating systems"]}, {"title": "A Hands-On Tutorial on How To Incorporate Computing for Social Good in the Introductory Course Sequence", "link": "https://dl.acm.org/doi/10.1145/3328778.3366992", "abstract": "There are many excellent reasons for incorporating social good activities throughout our CS curricula. Possibly the most important are the large number of pressing local/global issues facing society (e.g. climate change and related issues)[7] which deserve the attention of the computing community, and in turn, demand the attention of computing educators. In addition, research suggests focusing on how computing can affect the social good can help broaden participation in computing[9, 10]. The problem is many CS educators both don't know where to start or how to create programming assignments around socially relevant themes, and believe that such activities can only be undertaken by advanced students in upper division courses, e.g. software engineering and capstone courses. The purpose of this special session is to equip participants with the easy to learn skills so they can begin incorporating socially relevant assignments/projects throughout the introductory computing sequence.", "authors": [{"name": "Mikey Goldweber", "affiliation": "Xavier University, Cincinnati, OH, USA"}, {"name": "Lisa Kaczmarczyk", "affiliation": "Lisa Kaczmarczyk PhD Consulting, LLC, San Diego, CA, USA"}, {"name": "Rick Blumenthal", "affiliation": "Regis University, Denver, CO, USA"}, {"name": "Alison Clear", "affiliation": "Eastern Institute of Technology, Auckland, New Zealand"}], "tags": []}, {"title": "National Academies' Roundtable on Data Science Postsecondary Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3366986", "abstract": "The National Academies of Sciences, Engineering, and Medicine's Roundtable on Data Science Postsecondary Education convened more than twenty experts from a variety of sectors and academic areas to facilitate discussions on current practices, needs, and next steps in data science education. Participants described the interdisciplinary nature of data science, emphasizing contributions from computer science, statistics, and mathematics. Over three years the Roundtable discussed a broad range of topics, including partnerships between industry and academia and strategies to better engage women and minorities. This panel will synthesize themes and disseminate materials from the twelve Roundtable meetings, highlighting the role of computer science concepts in data science education while also encouraging partnerships across disciplines.", "authors": [{"name": "Michael Boardman", "affiliation": "Pacific University, Forest Grove, OR, USA"}, {"name": "Tyler Kloefkorn", "affiliation": "National Academies of Sciences, Engineering, and Medicine, Washington, DC, USA"}, {"name": "Nicholas J. Horton", "affiliation": "Amherst College, Amherst, MA, USA"}, {"name": "Brandeis Marshall", "affiliation": "Spelman College, Atlanta, GA, USA"}], "tags": ["data science", "education", "careers", "curriculum", "computational science"]}, {"title": "Supporting Mental Health in Computer Science Students and Professionals", "link": "https://dl.acm.org/doi/10.1145/3328778.3366980", "abstract": "Long hours, pressure to meet deadlines, lacking a sense of belonging, and fear of failure are just some of the stressors that affect Computer Science students and professionals alike, leading to burnout, anxiety, and depression. Although this issue is by no means unique to the field of computing, there is significant need for awareness and support around student mental health in the CS education community. In this timely and important session, panelists will discuss the mental health issues that affect CS students, present resources that are available to students and educators, and describe their efforts to create and foster a culture of understanding and support within their communities.", "authors": [{"name": "Linda DuHadway", "affiliation": "Weber State University, Ogden, UT, USA"}, {"name": "Jennfier Akullian", "affiliation": "Growth Coaching Institute, Boulder, CO, USA"}, {"name": "Lauren Bricker", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Adam Blank", "affiliation": "California Institute of Technology, Pasadena, CA, USA"}, {"name": "Christian Murphy", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}], "tags": ["wellness", "wellbeing", "mental illness", "mental health"]}, {"title": "CS + X Meets CS 1: Strongly Themed Intro Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3366975", "abstract": "Typical CS 1 classes are about many things. The problems and examples are drawn from a variety of domains, with a goal of teaching a computational problem-solving approach and specific language constructs. Many CS 1 courses begin with writing programs that perform simple calculations, transition to more substantial simulations or games in the middle, and perhaps one or two SIGCSE Nifty Assignments at the end. In this panel, we explore the 'strongly-themed' approach in which many of the programs and examples used in the course come from a single domain which provides a theme for the course.", "authors": [{"name": "Ran Libeskind-Hadas", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Valerie Barr", "affiliation": "Mount Holyoke College, South Hadley, MA, USA"}, {"name": "Heather Bort", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Richard Warner", "affiliation": "Chicago-Kent College of Law, Chicago, IL, USA"}, {"name": "Mark Guzdial", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Robert H. Sloan", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["cs + x", "cs 1"]}, {"title": "NoSQL in Undergrad Courses is NoProblem", "link": "https://dl.acm.org/doi/10.1145/3328778.3366962", "abstract": "Relational databases have dominated both industry usage and academic database courses for decades. More recently, there has been a dramatic increase in the use of NoSQL database systems, especially in data science. Bringing NoSQL databases to the classroom is important not only to prepare our students for the technology that they will face, but also because the underlying paradigm introduces new ideas that are not typically emphasized in a relational-only database course alone. However, NoSQL systems seem to receive dramatically less coverage in undergraduate database curricula than relational systems do. This panel discusses examples of how NoSQL can be introduced into undergraduate education, and the possible challenges faced in doing so. Questions from the audience will be invited.", "authors": [{"name": "David R. Musicant", "affiliation": "Carleton College, Northfield, MN, USA"}, {"name": "Margaret Menzin", "affiliation": "Simmons University, Boston, MA, USA"}, {"name": "Raja Sooriamurthi", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Sriram Mohan", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, IN, USA"}], "tags": ["sql", "rdbms", "database course", "nosql"]}, {"title": "Session details: Closing Keynote", "link": "https://dl.acm.org/doi/10.1145/3385577", "abstract": "No abstract available.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia"}, {"name": "Jian Zhang", "affiliation": "Texas Woman's University"}, {"name": "Pamela Cutter", "affiliation": "Kalamazoo College"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University"}, {"name": "Alvaro Monge", "affiliation": "California State University Long Beach"}], "tags": []}, {"title": "Increasing Diversity in Computing: A Focus on Retention", "link": "https://dl.acm.org/doi/10.1145/3328778.3372553", "abstract": "It is recognized that diversity of perspectives results in solutions that serve a broad base. This is critical to the area of computing, which has applications to science, humanities, as well as foundational work to advance the field of computing. Cultivating an environment that values and retains diversity, however, is not an easy task. This is especially the case in the \"classroom\", whereby the students are in the space for only a few hours per week. Hence, in terms of retention, it is necessary to complement \"classroom\" activities to foster and retain diversity, with extra-curricular activities. The importance of retention of diverse students, which results in an increase in the graduation of diverse students, resulted in the Center for Minorities and People with Disabilities in IT (CMD-IT) establishing the CMD-IT University Award for the Retention of Minorities and People with Disabilities in Computing. In this talk, I will discuss lessons learned from the award as well as other organizations and alliances focused on retention of diverse students and present some challenges to the CS Education community.", "authors": [{"name": "Valerie E. Taylor", "affiliation": "CMD-IT, Chicago, IL, USA"}], "tags": ["diversity", "computer science education", "student retention"]}, {"title": "Session details: Paper Session: Professional Development A", "link": "https://dl.acm.org/doi/10.1145/3385578", "abstract": "No abstract available.", "authors": [{"name": "Colleen Bamford", "affiliation": "County College of Morris"}], "tags": []}, {"title": "Upper Elementary and Middle Grade Teachers' Perceptions, Concerns, and Goals for Integrating CS into Classrooms", "link": "https://dl.acm.org/doi/10.1145/3328778.3366937", "abstract": "As efforts to integrate computer science into K-8 teaching in the US are dramatically rising, professional development workshops for teachers are becoming widespread. An open challenge for the CS education community is to understand teachers' needs and develop empirically grounded best practices for professional development. This experience report describes a five-day professional development workshop in which 22 third through eighth grade teachers learned about fundamental CS concepts, practiced coding, and created lesson plans for integrating what they learned into their classroom. We describe the professional development workshop including its modules and sequencing, and present teachers' perception of CS and how to integrate it into their classrooms. Teachers achieved significant gains in technical knowledge and improvements in attitude toward computer science. In initial focus groups, teachers reported that limited exposure to CS, time constraints, and lack of understanding of CS are barriers to integrating it into their classrooms. After the workshop, focus group feedback indicated that the workshop provided teachers a clearer sense of the potential of CS to enhance their classroom plans. Teachers noted that they felt able to use CS to help students learn critical thinking, prepare them for their futures, and address their individual needs. The results of this experience can inform future workshops that address the needs of teachers and students.", "authors": [{"name": "Erin O'Halloran", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Mehmet Celepkolu", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["k-8 education training", "teacher professional development", "teacher perception of cs"]}, {"title": "Code, Connect, Create: The 3C Professional Development Model to Support Computational Thinking Infusion", "link": "https://dl.acm.org/doi/10.1145/3328778.3366797", "abstract": "Despite the increasing attention to infusing CT into middle and high school content area classrooms, there is a lack of information about the most effective practices and models to support teachers in their efforts to integrate disciplinary content and CT principles. To address this need, this paper proposes the Code, Connect and Create (3C) professional development (PD) model, which was designed to support middle and high school content area teachers in infusing computational thinking into their classrooms. To evaluate the model, we analyzed quantitative and qualitative data collected from Infusing Computing PD workshops designed for in-service science, math, English language arts, and social studies teachers located in two Southeastern states. Drawing on findings from our analysis of teacher-created learning segments, surveys, and interviews, we argue that the 3C professional development model supported shifts in teacher understandings of the role of computational thinking in content area classrooms, as well as their self-efficacy and beliefs regarding CT integration into disciplinary content. We conclude by offering implications for the use of this model to increase teacher and student access to computational thinking practices in middle and high school classrooms.", "authors": [{"name": "Deepti Joshi", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Veronica Catet\u00e9", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Yihuan Dong", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Jennifer Albert", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Ashley Andrews", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Robin Jocius", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Richard Robinson", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["k-12 computing", "teacher education", "professional development", "computational thinking"]}, {"title": "Critical Incidents in K-12 Computer Science Classrooms - Towards Vignettes for Computer Science Teacher Training", "link": "https://dl.acm.org/doi/10.1145/3328778.3366926", "abstract": "The use of vignettes has been shown to be an effective method both in teacher training and in the assessment of teachers' understanding of instructional strategies. In this paper, we report on a study in which we sought to identify real-world classroom situation that can be used as vignettes for K-12 Computer Science teacher education and professional development. Using semi-structured interviews with five expert teachers involved in in-service teacher training, we elicited a collection of twelve domain-specific critical incidents that can occur in K-12 Computer Science classrooms. These critical incidents were ranked by the experts with respect to their relevance using a Delphi process. As part of the semi-structured interviews, we also collected reactions to each of the critical incidents. We discuss the resulting critical incidents and the experts' comments in the light of the Computing Education Research literature.", "authors": [{"name": "Ursula Pieper", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}], "tags": ["vignettes", "teacher training", "critical incidents", "k-12"]}, {"title": "Session details: Paper Session: Computational Thinking B", "link": "https://dl.acm.org/doi/10.1145/3385579", "abstract": "No abstract available.", "authors": [{"name": "Francesco Maiorana", "affiliation": "Kansas Sate University"}], "tags": []}, {"title": "The Role of Evidence Centered Design and Participatory Design in a Playful Assessment for Computational Thinking About Data", "link": "https://dl.acm.org/doi/10.1145/3328778.3366881", "abstract": "The K-12 CS Framework provides guidance on what concepts and practices students are expected to know and demonstrate within different grade bands. For these guidelines to be useful in CS education, a critical next step is to translate the guidelines to explicit learning targets and design aligned instructional tools and assessments. Our research and development goal in this paper is to design a playful, curriculum-neutral assessment aligned with the 'Data and Analysis' concept (grades 6-8) from the CS framework. Using Evidence Centered Design and Participatory Design, we present a set of assessment guidelines for assessing data and analysis, as well as a set of design considerations for integrating data and analysis across middle school curricula in CS and non-CS contexts. We outline these contributions, describe how they were applied to the development of a game-based formative assessment for data and analysis, and present preliminary findings on student understanding and challenges inferred from student gameplay.", "authors": [{"name": "Satabdi Basu", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Daisy Rutstein", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Betsy Disalvo", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Nathan Holbert", "affiliation": "Columbia University, New York, NY, USA"}, {"name": "Jeremy Roschelle", "affiliation": "Digital Promise, San Mateo, CA, USA"}, {"name": "Yuning Xu", "affiliation": "Kidaptive Inc., Redwood City, CA, USA"}], "tags": ["game-based assessment", "data and analysis", "participatory design", "evidence centered design", "cs assessment"]}, {"title": "Introduction to Computational Thinking: A New High School Curriculum using CodeWorld", "link": "https://dl.acm.org/doi/10.1145/3328778.3366960", "abstract": "The Louisiana Department of Education partnered with the Gordon A. Cain Center at LSU to pilot a Computing High School Graduation Pathway. The first course in the pathway, Introduction to Computational Thinking (ICT), is designed to teach programming and reinforce mathematical practice skills of nine-grade students, with an emphasis on promoting higher order thinking. In 2017-18, about 200 students and five teachers participated in the pilot, in 2018-2019 the participation increased to 400 students, and in the current 2019-2020 year about 800 students in 11 schools are involved. After describing the course content and the teacher training, we briefly discuss the data we have collected in the last two years. The overall student reception of the course has been positive, but the course was categorized by most students as hard. The pre-post test content assessments show that students have learned not only the language, but also general principles of programming. Lessons learned during the pilot phase have motivated changes, such as emphasizing during Professional Development the need to provide timely feedback to students, provide detailed rubrics for the projects and reorganize the lessons to increase the initial engagement with the material. After two years of running pilots, the course is becoming student-centered, where most of the code and image samples provided in the lessons are based on code created by previous students.", "authors": [{"name": "Fernando Alegre", "affiliation": "Louisiana State University, Baton Rouge, LA, USA"}, {"name": "Juana Moreno", "affiliation": "Louisiana State University, Baton Rouge, LA, USA"}, {"name": "John Underwoood", "affiliation": "Louisiana State University, Baton Rouge, LA, USA"}, {"name": "Mario Alegre", "affiliation": "Pennsylvania State University, University Park, PA, USA"}], "tags": ["haskell", "functional language", "computational thinking", "high school", "teacher training", "professional development", "introductory programming", "k-12", "course", "codeworld", "computer science education"]}, {"title": "Work in Progress Report: A STEM EcoSystem Approach to CS/CT for All in a Middle School", "link": "https://dl.acm.org/doi/10.1145/3328778.3366922", "abstract": "This project is a Research to Practice Partnership (RPP) between two middle schools and two universities. It focuses on investigating problems and on identifying solutions around increasing participation and interest in computer science (CS). We aim to do this by identifying, experimenting with, and fine-tuning methods to help students develop computational thinking (CT) skills. The research employs a STEM ecosystem model, which facilitates a support structure that aims to mitigate barriers and impact students as they progress in STEM areas. While this RPP is still a work in progress, we present data from the first year of our collaboration with one of the middle schools. While the research questions guiding this RPP are intended to be iterative and revised annually, year one data provides perspectives on (1) barriers to developing a STEM ecosystem that supports CS/CT for every student through integration into science, math, and language arts courses, (2) the factors or interventions needed for the development of a CS/CT focused ecosystem that supports everyone in the school, (3) the indicators of success for a CS/CT focused STEM ecosystem in a school, and (4) how the ecosystem prepares and engages all students for CS/CT work in high school. Year one data is discussed in terms of the STEM ecosystem framework and in how it will guide the next steps in this partnership. This project contributes to the understanding of how to prepare future generations for participation in a workforce where knowledge of the foundations of CS/CT is integral to success.", "authors": [{"name": "David Frye", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "David Pugalee", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Mary Lou Maher", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Lijuan Cao", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Audrey Rorrer", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["broadening participation", "stem ecosystem", "k-12 outreach", "research to practice partnership"]}, {"title": "Session details: Paper Session: Instructional Support", "link": "https://dl.acm.org/doi/10.1145/3385580", "abstract": "No abstract available.", "authors": [{"name": "Risa Myers", "affiliation": "Rice University"}], "tags": []}, {"title": "Infrastructor: Flexible, No-Infrastructure Tools for Scaling CS", "link": "https://dl.acm.org/doi/10.1145/3328778.3366905", "abstract": "Demand for computer science education has skyrocketed in the last decade. Although challenging everywhere, scaling up CS course capacities is especially painful at small, liberal arts colleges (SLACs). SLACs tend to have few instructors, few large-capacity classrooms, and little or no dedicated IT support staff. As CS enrollment growth continues to outpace the ability to hire instructional staff, maintaining the quality of the close, nurturing learning environment that SLACs advertise-and students expect-is a major challenge.\nWe present Infrastructor, a workflow and collection of course scaling tools that address the needs of resource-strapped CS departments. Infrastructor removes unnecessary administrative burdens so that instructors can focus on teaching and mentoring students. Unlike a traditional learning management system (LMS), which is complex, monolithic, and usually administered by a campus-wide IT staff, instructors deploy Infrastructor themselves and can trivially tailor the software to suit their own needs. Notably, Infrastructor does not require local hardware resources or platform-specific tools. Instead, Infrastructor is built on top of version control systems. This design choice lets instructors host courses on commodity, cloud-based repositories like GitHub. Since developing Infrastructor two years ago, we have successfully deployed it in ten sections of CS courses (323 students), and over the next year, we plan to more than double its use in our CS program.", "authors": [{"name": "William K. Jannen", "affiliation": "Williams College, Williamstown, MA, USA"}, {"name": "Daniel W. Barowy", "affiliation": "Williams College, Williamstown, MA, USA"}], "tags": ["github", "capacity scaling", "enrollment crunch", "course workflow"]}, {"title": "Runestone: A Platform for Free, On-line, and Interactive Ebooks", "link": "https://dl.acm.org/doi/10.1145/3328778.3366950", "abstract": "The Runestone platform is open-source, extensible, and serves free ebooks to over 25,000 learners a day from around the world. The site hosts 18 ebooks for computing courses. Some of these ebook have been translated into several languages. There are ebooks for secondary computer science (AP CSP and AP CSA), CS1, CS2, data science, and web programming courses. The platform currently supports executable and editable examples in Python, Java, C, C++, HTML, JavaScript, Processing, and SQL. Runestone provides features for instructors, learners, authors, and researchers. Instructors can create a custom course from any of the existing ebooks and their students can register for that course. Instructors can create assignments from the existing material or author new problems, grade assignments, and visualize student progress. Learners can execute and modify examples and answer practice questions with immediate feedback. Runestone includes common practice types, such as multiple-choice questions, as well as some unique types, such as adaptive Parsons problems. Authors can modify the existing ebooks or write new ebooks using restructuredText: a markup language. Researchers can create and test new interactive features, run experiments, and analyze log file data. This paper describes the architecture of the platform, highlights some of the unique features, provides an overview of how instructors use the platform, summarizes the research studies conducted on the platform, and describes plans for future development.", "authors": [{"name": "Barbara J. Ericson", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Bradley N. Miller", "affiliation": "Luther college & Founder Runestone Interactive, Minneapolis, MN, USA"}], "tags": ["adaptive learning", "intelligent ebooks", "parsons problems", "ebooks", "on-line learning", "practice tools"]}, {"title": "Teaching Quantum Computing through a Practical Software-driven Approach: Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3366952", "abstract": "Quantum computing harnesses quantum laws of nature to enable new types of algorithms, not efficiently possible on traditional computers, that may lead to breakthroughs in crucial areas like materials science and chemistry. There is rapidly growing demand for a quantum workforce educated in the basics of quantum computing, in particular in quantum programming. However, there are few offerings for non-specialists and little information on best practices for training computer science and engineering students. In this report we describe our experience teaching an undergraduate course on quantum computing using a practical, software-driven approach. We centered our course around teaching quantum algorithms through hands-on programming, reducing the significance of traditional written assignments and relying instead on self-paced programming exercises (\"Quantum Katas''), a variety of programming assignments, and a final project. We observed that the programming sections of the course helped students internalize theoretical material presented during the lectures. In the survey results, students indicated that the programming exercises and the final project contributed the most to their learning process. We describe the motivation for centering the course around quantum programming, discuss major artifacts used in this course, and present our lessons learned and best practices for a future improved course offering. We hope that our experience will help guide instructors who want to adopt a practical approach to teaching quantum computing and will enable more undergraduate programs to offer quantum programming as an elective.", "authors": [{"name": "Krysta M. Svore", "affiliation": "Microsoft, Redmond, WA, USA"}, {"name": "Mariia Mykhailova", "affiliation": "Microsoft, Redmond, WA, USA"}], "tags": ["curriculum", "quantum programming", "case study", "quantum computing"]}, {"title": "Session details: Paper Session: Security B", "link": "https://dl.acm.org/doi/10.1145/3385581", "abstract": "No abstract available.", "authors": [{"name": "Roberto Hoyle", "affiliation": "Oberlin College"}], "tags": []}, {"title": "KYPO4INDUSTRY: A Testbed for Teaching Cybersecurity of Industrial Control Systems", "link": "https://dl.acm.org/doi/10.1145/3328778.3366908", "abstract": "There are different requirements on cybersecurity of industrial control systems and information technology systems. This fact exacerbates the global issue of hiring cybersecurity employees with relevant skills. In this paper, we present KYPO4INDUSTRY training facility and a course syllabus for beginner and intermediate computer science students to learn cybersecurity in a simulated industrial environment. The training facility is built using open-source hardware and software and provides reconfigurable modules of industrial control systems. The course uses a flipped classroom format with hands-on projects: the students create educational games that replicate real cyber attacks. Throughout the semester, they learn to understand the risks and gain capabilities to respond to cyber attacks that target industrial control systems. Our described experience from the design of the testbed and its usage can help any educator interested in teaching cybersecurity of cyber-physical systems.", "authors": [{"name": "Valdemar \u0160v\u00e1bensk\u00fd", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Pavel \u010celeda", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Jan Vykopal", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Karel Slav\u00ed\u010dek", "affiliation": "Masaryk University, Brno, Czech Rep"}], "tags": ["cyber-physical systems", "training facility", "ics", "cybersecurity education", "industrial control systems", "modular testbed", "scada", "syllabus"]}, {"title": "A System for Visualizing the Process Address Space in the Context of Teaching Secure Coding in C", "link": "https://dl.acm.org/doi/10.1145/3328778.3366894", "abstract": "Seemingly small coding errors can create significant vulnerabilities in C programs. This often occurs due to memory being overwritten in unexpected ways. If a student understands where program variables appear in the process address space, then she can understand the effect of writing beyond the memory allocated to a variable. With this understanding, she can tie her code to its effect within an executing process and is more likely to appreciate the significance of these seemingly harmless errors and to avoid them. We have developed a program analysis and visualization tool to help students understand the impact of common memory errors with the goal to help students avoid introducing these errors into their code. The visualization is through the Program Address Space (PAS) window within a larger system for analysis and visualization of security issues in C programs. The larger system is called SecureCvisual. In this paper, we describe our experience with teaching students fundamental concepts about process address spaces and the impact of buffer overflows using the PAS window. We also present the results from an evaluation of the tool. Our results indicate that students found the tool useful and that it enhanced the course in which it was used.", "authors": [{"name": "James Walker", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Ching-Kuang Shene", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Man Wang", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Steve Carr", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}, {"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": []}, {"title": "A Hands-On Cybersecurity Curriculum Using a Robotics Platform", "link": "https://dl.acm.org/doi/10.1145/3328778.3366878", "abstract": "This paper presents a study using a robotics platform for teaching computing and cybersecurity concepts to high school students. 38 students attended a week-long camp, starting with projects such as a simulation-only game and a simple autonomous driving program for the robots in order to learn and apply computational thinking (CT) and networking skills. They were then assigned a series of challenges that required developing progressively more advanced cybersecurity measures to protect their robots. This culminated in a final challenge that required implementing defensive measures such as encryption, secure key exchange and sequence numbers. We used an evidence-centered design framework to construct rubrics for grading student work. The pre- and post-test results show that the interventions helped students learn cybersecurity and CT concepts, but they had difficulties with networking concepts. These results correlate with scores from the game and the final challenge. Overall, surveys show that the competition-based robotics learning framework engaged students and supported their overall learning, but our intervention needs to be modified to help students learn networking concepts", "authors": [{"name": "Hamid Zare", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Gordon Stein", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Mary Metelko", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Caitlin Snyder", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Nicole Hutchins", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Bernard Yett", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "\u00c1kos L\u00e9deczi", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Gautam Biswas", "affiliation": "Vanderbilt University, Nashville, TN, USA"}], "tags": ["block-based programming", "robotics", "computational thinking", "cybersecurity", "networking", "computer science education"]}, {"title": "Session details: Paper Session: Python Debugging", "link": "https://dl.acm.org/doi/10.1145/3385582", "abstract": "No abstract available.", "authors": [{"name": "Kevin Lin", "affiliation": "University of Washington"}], "tags": []}, {"title": "PABLO: Helping Novices Debug Python Code Through Data-Driven Fault Localization", "link": "https://dl.acm.org/doi/10.1145/3328778.3366860", "abstract": "As dynamically-typed languages grow in popularity, especially among beginning programmers, there is an increased need to pinpoint their defects. Localization for novice bugs can be ambiguous: not all locations formally implicated are equally useful for beginners. We propose a scalable fault localization approach for dynamic languages that is helpful for debugging and generalizes to handle a wide variety of errors commonly faced by novice programmers. We base our approach on a combination of static, dynamic, and contextual features, guided by machine learning. We evaluate on over 980,000 diverse real user interactions across four years from the popular PythonTutor.com website, which is used both in classes and by non-traditional learners. We find that our approach is scalable, general, and quite accurate: up to 77% of these historical novice users would have been helped by our top-three responses, compared to 45% for the default interpreter. We also conducted a human study: participants preferred our approach to the baseline ($p = 0.018)$, and found it additionally useful for bugs meriting multiple edits.", "authors": [{"name": "Leon Medvinsky", "affiliation": "University of California San Diego, San Diego, CA, USA"}, {"name": "Madeline Endres", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Kamalika Chaudhuri", "affiliation": "University of California San Diego, San Diego, CA, USA"}, {"name": "Yao-Yuan Yang", "affiliation": "University of California San Diego, San Diego, CA, USA"}, {"name": "Westley Weimer", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Benjamin Cosman", "affiliation": "University of California San Diego, San Diego, CA, USA"}, {"name": "Ranjit Jhala", "affiliation": "University of California San Diego, San Diego, CA, USA"}, {"name": "Georgios Sakkas", "affiliation": "University of California San Diego, San Diego, CA, USA"}], "tags": ["fault localization", "machine learning", "debugging"]}, {"title": "Tell Me What's Wrong: A Python IDE with Error Messages", "link": "https://dl.acm.org/doi/10.1145/3328778.3366920", "abstract": "Development environments play a crucial role for novice programmers. Not only do they act as interface to type in and execute programs, but a programming environment is also responsible for reporting errors, managing in- and output when the program is running, or offering the programmer access to the underlying notional machine. In recent years several new educational programming environments for Python have been presented. However, the important issue of reporting errors has rarely been addressed and evaluations often hint that students main issue is the poor quality of Python's error messages. We have therefore written an educational Python environment with enhanced error messages. This paper presents the design and rationale of its three primary features: modifications to Python, enhanced error messages, and the visual debugger.", "authors": [{"name": "Tobias Kohn", "affiliation": "University of Cambridge, Cambridge, United Kingdom"}, {"name": "Bill Manaris", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["python", "compiler error messages", "ide"]}, {"title": "Pedal: An Infrastructure for Automated Feedback Systems", "link": "https://dl.acm.org/doi/10.1145/3328778.3366913", "abstract": "This paper describes Pedal, an innovative approach to the automated creation of feedback given to students in programming classes. Pedal is so named because it supports the PEDAgogical goals of instructors and is an expandable Library of components motivated by these goals. Pedal currently comes with components for type inferencing, flow analysis, pattern matching, and unit testing to provide an instructor with a rich set of resources to use in authoring and prioritizing feedback. The larger vision is the loosely-coupled architecture whose components can be readily expanded or replaced. The Pedal library components are motivated by a study of contemporary automated feedback systems and our own experience. Pedal's components are described and examples are given of Pedal-based feedback from three different introductory classes at two different universities. The integration of Pedal into several programming and autograding environments is briefly described.", "authors": [{"name": "Austin Cory Bart", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Dennis Kafura", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Luke Gusukuma", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["student model", "feedback architecture", "immediate feedback", "cs education"]}, {"title": "Session details: Paper Session: CS1", "link": "https://dl.acm.org/doi/10.1145/3385583", "abstract": "No abstract available.", "authors": [{"name": "Ben Stephenson", "affiliation": "University of Calgary"}], "tags": []}, {"title": "Non-Major Peer Mentoring for CS1", "link": "https://dl.acm.org/doi/10.1145/3328778.3366901", "abstract": "One of the key challenges associated with Computer Science I (CS1) curricula is that of student satisfaction which directly translates to success and retention. This challenge is exacerbated at small institutions in which departmental enrollment is low overall. One area that has shown much promise is that in which peer mentors are provided to augment existing lecture and laboratory components in order to better assist the students. This approach has found success at both large and small institutions where student demographics and populations are widely varied. In most implementations, the peer mentor is a departmental student (CS major) who has previously taken and excelled in the course. This does not however, account for those students enrolled in the course as non-majors. At many institutions, the typical CS1 course may count as an elective course necessary for graduation or to fulfill another majors requirements. In this situation, non-major students are often cited as feeling excluded, which then becomes the reason the student does not seek the necessary help that is required to find success within the course. In this work, we propose a non-major peer mentoring implementation to augment existing departmental-level tutoring in order to better assist all student backgrounds. We provide the feedback from the students that motivated this change, as well as the proposed infrastructure necessary for such an implementation to find success. We conclude this paper with analysis of the impact this implementation has had on non-major students in a small liberal arts CS1 course.", "authors": [{"name": "Ryan Rybarczyk", "affiliation": "Butler University, Indianapolis, IN, USA"}], "tags": ["cs1", "peer mentoring", "student outcomes"]}, {"title": "Better Late Than Never: Exploring Students' Pathways to Computing in Later Stages of College", "link": "https://dl.acm.org/doi/10.1145/3328778.3366814", "abstract": "While introductory computing courses (i.e., CS1) continue to enroll large proportions of first- and second-year computing majors, more non-majors than ever before are enrolling in CS1 at later points in their college careers. These \"latecomers\" to computing are a unique population that may be more diverse, given that prior research indicates students from historically underrepresented groups often develop an interest in computing later than White and Asian men. Thus, as computing departments grapple with the pressures to broaden participation, latecomers to CS1 may be a population from which to recruit women and underrepresented students of color. Using survey data from a nationwide study of CS1 course takers, this study explores the demographic and academic background characteristics of students who took CS1 in their third year or beyond. We also analyzed the characteristics and CS1 experiences that predict latecomers' decisions to major or minor in computing. Findings indicate that latecomers came from a variety of academic disciplines and were more likely than computing majors who take CS1 courses earlier in college to be women. However, latecomers who were women were less likely than men to be recruited to a computing major or minor. Additional findings and implications for practice are discussed.", "authors": [{"name": "Kaitlin N. S. Newhouse", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Michelle Sendowski", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Annie M. Wofford", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Kathleen J. Lehman", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Linda J. Sax", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}], "tags": ["college students", "computing major", "introductory computing courses", "gender", "cs1", "race/ethnicity", "computing minor"]}, {"title": "Investigating the Impact of Employing Multiple Interventions in a CS1 Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3366866", "abstract": "Given the long-standing concern about students failing introductory programming courses, there is a need for interventions that may aid those students. In this work, we examine the potential benefit of three interventions based on prior computing education research (CER) or STEM education research literature: mindset interventions, the use of \"Thinkathons\" as an alternative to programming labs, and metacognitive interventions to encourage more productive study habits. We conducted an in-class study that controlled for both time-on-task and selection bias to investigate the potential benefits of integrating these interventions into the existing footprint of an introductory computing course. Despite the previously reported promise of the interventions we implemented, our findings were that in this context these techniques had only a mild positive effect for some students. We discuss possible reasons why these techniques are less successful than instructors might hope and argue for the need for more research on this topic.", "authors": [{"name": "Christine Alvarado", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Beth Simon", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Sophia Krause-Levy", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["cs1", "metacognitive", "thinkathon", "intervention"]}, {"title": "Session details: Paper Session: Professional Skills", "link": "https://dl.acm.org/doi/10.1145/3385584", "abstract": "No abstract available.", "authors": [{"name": "Stefan Brandle", "affiliation": "Taylor University"}], "tags": []}, {"title": "Developing Students' Written Communication Skills with Jupyter Notebooks", "link": "https://dl.acm.org/doi/10.1145/3328778.3366927", "abstract": "Written communication skills are considered to be highly desirable in computing graduates. However, many computing students do not have a background in which these skills have been developed, and the skills are often not well addressed within a computing curriculum. For some multidisciplinary areas, such as data science, the range of potential stakeholders makes the need for communications skills all the greater. As interest in data science increases and the technical skills of the area are in ever higher demand, understanding effective teaching and learning of these interdisciplinary aspects is receiving significant attention by academics, industry and government in an effort to address the digital skills gap. In this paper, we report on the experience of adapting a final year data science module in an undergraduate computing curriculum to help develop the skills needed for writing extended reports. From its inception, the module has used Jupyter notebooks to develop the students' skills in the coding aspects of the module. However, over several presentations, we have investigated how the cell-based structure of the notebooks can be exploited to improve the students' understanding of how to structure a report on a data investigation. We have increasingly designed the assessment for the module to take advantage of the learning affordances of Jupyter notebooks to support both raw data analysis and effective report writing. We reflect on the lessons learned from these changes to the assessment model, and the students' responses to the changes.", "authors": [{"name": "Alistair Willis", "affiliation": "The Open University, Milton Keynes, United Kingdom"}, {"name": "Tony Hirst", "affiliation": "The Open University, Milton Keynes, United Kingdom"}, {"name": "Patricia Charlton", "affiliation": "The Open University, Milton Keynes, United Kingdom"}], "tags": ["jupyter", "assessment", "written communication", "data science"]}, {"title": "Non-cognitive Abilities of Exceptional Software Engineers: A Delphi Study", "link": "https://dl.acm.org/doi/10.1145/3328778.3366811", "abstract": "Important building blocks of software engineering concepts are without a doubt technical. During the last decade, research and practical interest for non-technicalities has grown, revealing the building blocks to be various skills and abilities beside pure technical knowledge. Multiple attempts to categorise these blocks have been made, but so far little international studies have been performed that identify skills by asking experts from both the industrial and academic world: which abilities are needed for a developer to excel in the software engineering industry? To answer this question, we performed a Delphi study, inviting 36 experts from 11 different countries world-wide, affiliated with 21 internationally renowned institutions. This study presents the 55 identified and ranked skills as classified in four major areas: communicative skills (empathy, actively listening, etc.), collaborative skills (sharing responsibility, learning from each other, etc.), problem solving skills (verifying assumptions, solution-oriented thinking, etc.), and personal skills (curiosity, being open to ideas, etc.), of which a comparison has been made between opinions of technical experts, business experts, and academics. We hope this work inspires educators and practitioners to adjust their training programs, mitigating the gap between the industry and the academic world.", "authors": [{"name": "Hans Jacobs", "affiliation": "Prato, Hasselt, Belgium"}, {"name": "Kris Aerts", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Joost Vennekens", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Wouter Groeneveld", "affiliation": "KU Leuven, Leuven, Belgium"}], "tags": ["industry requirements", "delphi study", "software developer", "software engineering edutation", "professional skills", "non-cognitive abilities"]}, {"title": "Exploring the Participation of CS Undergraduate Students in Industry Internships", "link": "https://dl.acm.org/doi/10.1145/3328778.3366844", "abstract": "Industry internships offer CS students an opportunity to gain authentic disciplinary experiences, evaluate self-interests, and secure future employment. However, little is empirically known about CS students' participation in industry internships and the preparation process used to successfully securing an internship. This paper presents findings from our multi-institutional study aimed at understanding the participation of CS students in industry internships as well as analyzing the differences between students who intern and those who do not. We surveyed 536 CS undergraduate students across three universities in the United States and analyzed the quantitative data using descriptive and inferential statistical methods. We used thematic analysis on the open-ended survey responses. Overall, we found that 40% of students participate in at least one internship. Demographically, equal proportions of males and females interned. However, we observed that students who have higher socioeconomic status were more likely to intern. Academically, there were no significant differences between students who intern and those who do not. However, through thematic analysis, we found differences regarding students' preparation process. Interns explicitly prepared to secure internship positions by practicing interview questions and dedicating time to career preparation. Students who do not intern were less involved in the application process or relied on coursework for securing internships. Quantitative results from the survey corroborated our qualitative findings that factors outside of coursework are influencing students' ability to secure industry internships.", "authors": [{"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Amanpreet Kapoor", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["employment issues", "undergraduates", "internship", "professional development", "career preparation", "computer science education"]}, {"title": "Teaching Practices Game: Interactive Resources for Training Teaching Assistants", "link": "https://dl.acm.org/doi/10.1145/3328778.3366989", "abstract": "In this interactive special session, participants will learn to facilitate a workshop for training teaching assistants (TAs) based on a card game. The game invites players to respond to challenging scenarios that TAs may face in the course of their duties. Each scenario appears on a card, and players discuss how they would respond. Session participants will receive a deck of 52 of these cards created with funding from a SIGCSE Special Projects Grant. This session uses the format of two previous well attended SIGCSE special sessions that focused on bias and had a target audience of faculty. While the intended audience is those interested in TA training, everyone interested in inclusive teaching practices is welcome to join in the rich small and large group discussions that we expect to take place!", "authors": [{"name": "Phillip Conrad", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["inclusive teaching", "microaggressions", "teaching assistants"]}, {"title": "Higher Education and Elementary School Computing Partnership", "link": "https://dl.acm.org/doi/10.1145/3328778.3366991", "abstract": "How to create a computer science partnership with an elementary school. The presenters discuss the various aspects and challenges of implementing a computer science program at the elementary school level, K-5. Topics to be discussed include where K-5 is now in Georgia, existing programs, curriculum development, pedagogy, funding, infrastructure, teacher training, and involvement of undergraduate computer science students. Audience members will be engaged throughout the presentation with questions and polls during and between topic discussions. The attendees may use their cellphones or laptops to respond to questions. The partnership group will converse about their experiences with diversity and geographic equity in computing. We believe any attendee wishing to do outreach or develop a computer science program at the K-5 level will be interested.", "authors": [{"name": "Cedric Stallworth", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Mary Hudachek-Buswell", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Ruchi Banerjee", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "LeAnne Cheatham", "affiliation": "Willis Road Elementary School, Sharpsburg, GA, USA"}, {"name": "Faith North", "affiliation": "Willis Road Elementary School, Sharpsburg, GA, USA"}], "tags": ["outreach", "k-12 computer science education", "interdisciplinary"]}, {"title": "Supporting Students from Underrepresented Groups to Succeed in Computing: Research and Programs in Community College", "link": "https://dl.acm.org/doi/10.1145/3328778.3366983", "abstract": "There are over 1,000 community colleges (CC) in the U.S.; they enroll more than 13 million students--nearly half of all undergraduates-- and over half of CC students are non-white (American Association of Community Colleges). However, efforts to broaden participation in computing have been directed disproportionately to 4-year institutions. The focus of this panel is on research and strategies for increasing the retention of students from groups that are underrepresented in computing--female, Latinx, and African American students. It includes experts from across the US--from CC's and a research organization. The panelists will describe curriculum and programs that are designed to support students, and include the perspectives of students on what helps and hinders them from persisting. The intended audience for this panel is researchers, educators, and administrators from both community colleges and 4-year institutions.", "authors": [{"name": "Amardeep Kahlon", "affiliation": "Austin Community College, Cedar Park, TX, USA"}, {"name": "Cheryl Calhoun", "affiliation": "Sante Fe College, Gainesville, FL, USA"}, {"name": "Debra Richardson", "affiliation": "University of California - Irvine, Irvine, CA, USA"}, {"name": "Shannon Campe", "affiliation": "ETR, Scotts Valley, CA, USA"}], "tags": ["transfer pathways", "broadening participation", "community college", "information technology, stem"]}, {"title": "National CS Ed Equity-Focused Consortia and Their Value to the Community", "link": "https://dl.acm.org/doi/10.1145/3328778.3366982", "abstract": "The Computer Science education community is supported by numerous national-focused consortia dedicated to addressing persistent inequalities in student pathways. This panel, comprised of leaders from four of those consortia (CAHSI, STARS, ECEP and RPPforCS) will use four key aspects of improvement communities as a framework for discussing the role, potential and impact of these consortia in supporting the equitable growth of computer science education. While not designed to be Network Improvement Communities per se, we draw upon those frameworks to focus on four specific aspects: 1) guided by shared goals with attention to equity; 2) engaging community in deep understanding of the problems and associated systems; 3) application of improvement science; and 4) coordinated efforts of shared learning and measurements. This will lead towards an open discussion with the audience focused on what has been empirically learned about the value these consortia have for their members and the broader CS Education community.", "authors": [{"name": "Ann Gates", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}, {"name": "Alan Peterfreund", "affiliation": "SageFox Consulting Group, Amherst, MA, USA"}, {"name": "Carol L. Fletcher", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Janice E. Cuny", "affiliation": "National Science Foundation, Alexandria , VA, USA"}, {"name": "Jamie Payton", "affiliation": "Temple University, Philadelphia, PA, USA"}], "tags": ["institutional change", "diversity", "broadening participation", "state policies", "student engagement", "network improvement", "research-practitioner partnerships", "equity"]}, {"title": "Looking Ahead: Professional Development Needs for Experienced CS Teachers", "link": "https://dl.acm.org/doi/10.1145/3328778.3366977", "abstract": "As computer science is moving into K-12 education, most efforts have focused on getting new teachers into computer science or integrating computing within STEM topics. But one aspect that has received less attention, if any, is the continued professional development of experienced CS teachers. We know little about the particular learning needs of experienced CS teachers, knowledge that will be critical as the CS teaching force expands significantly in coming years. In this panel, we address this knowledge gap from the perspective of teacher education research and professional development-what we need to know about deepening teachers' pedagogical practices and content knowledge-an understanding that will be instrumental for retaining and enriching teachers in CS education.", "authors": [{"name": "Jake Baskin", "affiliation": "Computer Science Teachers Association, Chicago, IL, USA"}, {"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}, {"name": "Deborah Fields", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Joanna Goode", "affiliation": "University of Oregon, Eugene, OR, USA"}, {"name": "Bryan Twarek", "affiliation": "Computer Science Teachers Association, San Francisco, CA, USA"}, {"name": "Yasmin B. Kafai", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}], "tags": ["teacher education", "professional development", "computational thinking"]}, {"title": "Session details: Paper Session: Professional Development B", "link": "https://dl.acm.org/doi/10.1145/3385585", "abstract": "No abstract available.", "authors": [{"name": "Russell Feldhausen", "affiliation": "Kansas State University"}], "tags": []}, {"title": "Evaluating A Systems Approach to District CS Education Implementation", "link": "https://dl.acm.org/doi/10.1145/3328778.3366898", "abstract": "Computer science education exists within a broader education environment than individual classrooms. Formal, or during the school day, K-12 education requires implementation within schools and local education agencies with leadership structures, budgets, and often competing priorities. In this experience report we share outcomes from a series of district workshops for supporting critical systems planning needed to ensure the integration and sustainability of computer science education within K-12 systems. The paper will briefly discuss the program's theory of change, the actions CSforALL took to deliver the program at scale, and data with short and long term outcomes from program implementation. Discussion will include the intersection of program and curricular and professional development and the critical frame of continuous improvement as a theoretical model for sustainability and rigor in computer science education implementation.", "authors": [{"name": "Stephanie Wortel-London", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Anisa Bora", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Lauren Wright", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Leigh Ann DeLyser", "affiliation": "CSforALL, New York, NY, USA"}], "tags": ["district implementation", "csforall", "k-12"]}, {"title": "A Pre-service Pathway for Preparing Future AP CS Principles Teachers", "link": "https://dl.acm.org/doi/10.1145/3328778.3366945", "abstract": "The surge of interest in K-12 computer science (CS) over the past decade has led to a deep need for a corresponding expansion of trained teachers. The primary focus of most K-12 CS teacher professional development has been for current in-service teachers who have little background in CS. To raise the importance of CS within Colleges of Education, we believe that new pathways and experiences are needed for pre-service Education majors to learn more about authentic CS topics and pedagogy. This experience report summarizes our efforts over the past two years to prepare Secondary Math Education (SEMA) majors to teach AP CS Principles (AP CSP). Our approach consists of the following curricular activities: 1) a two-course sequence, with the first course mapping to the content topics of the AP CSP Curriculum Framework, and the second course consisting of a reflection of CS methods and pedagogy, including opportunities for SEMA students to develop and present their own AP CSP lesson plans; 2) opportunities for SEMA students to observe AP CSP classrooms in local high schools through our partnership with experienced AP CSP teachers; 3) summer participation in a College Board AP Summer Institute for AP CSP, and 4) a six-week ETS Praxis CS preparation modules-based course, offered to both pre-service SEMA students and in-service teachers. We summarize our lessons learned and present results that suggest our approach is preparing pre-service students with pedagogical and content knowledge that meets or exceeds current in-service training models (including an analysis of recent Praxis results for CS certification in our state).", "authors": [{"name": "Karl Hamner", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Sierra Rodgers-Farris", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Rebecca Odom-Bartel", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Jeremy Zelkowski", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["teacher certification", "ap computer science principles", "pre-service education"]}, {"title": "Project Scoring for Program Evaluation and Teacher Professional Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3366959", "abstract": "Evaluating student learning in K-12 computer science programs is challenging due to the limited number of validated assessments, especially below the high school level. Because computer science is often taught as an engineering-oriented discipline in K-12, it seems natural to use students' programming projects as evidence of student learning. However, this approach is time-consuming and can overestimate what students understand. In this paper, we share our experience with using students' programming projects as a tool for evaluating a middle school computer science program at San Francisco Unified School District. The scoring and analysis of programming projects did generate useful insights about the nature of student learning in the program. More importantly, we found that the process of co-developing a scoring rubric and scoring projects alongside CS classroom teachers generated rich discussions and knowledge-sharing about the current state of the district's CS program, its values, and its long-term goals.", "authors": [{"name": "Irene Nolan", "affiliation": "San Francisco Unified School District, San Francisco, CA, USA"}, {"name": "Andrew Rothman", "affiliation": "San Francisco Unified School District, Redwood City, CA, USA"}, {"name": "Yvonne Kao", "affiliation": "WestEd, Redwood City, CA, USA"}], "tags": ["computational artifacts", "assessment", "middle school", "teacher professional development", "program evaluation", "computer science education"]}, {"title": "Session details: Paper Session: Grading", "link": "https://dl.acm.org/doi/10.1145/3385586", "abstract": "No abstract available.", "authors": [{"name": "Craig Zilles", "affiliation": "University of Illinois"}], "tags": []}, {"title": "Auto-Grading Jupyter Notebooks", "link": "https://dl.acm.org/doi/10.1145/3328778.3366947", "abstract": "Jupyter Notebooks are becoming more widely used, both for data science applications and as a convenient environment for learning Python. Currently, grading of assignments done in Jupyter Notebooks is typically done manually. Manual grading results in students receiving feedback only long after the assignment is complete. We implemented support for auto-grading programs written in Jupyter Notebooks within the Web-CAT auto-grading system. Scores received are directly reported to the Canvas gradebook. A Jupyter notebook extension allows students to upload their notebook files to Web-CAT directly. Survey results from class use show that 80% of students believe that getting immediate feedback from Web-CAT improved their performance. Instructors report that this implementation has significantly reduced their workload.", "authors": [{"name": "Amit Naik", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Chris North", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Hamza Manzoor", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["jupyter notebooks", "python", "auto-grading", "learning tools interoperability"]}, {"title": "Autograding Interactive Computer Graphics Applications", "link": "https://dl.acm.org/doi/10.1145/3328778.3366954", "abstract": "We present a system for the automated testing and grading of computer graphics applications. Our system runs, provides input to, and captures image and video output from graphical programming assignments. Instructors use a simple set of commands to script automated keyboard and mouse interactions with student programs at fixed times during execution. The resultant output, including plaintext standard output and mid-execution screenshots and GIFs, are displayed to the student to aid in debugging and ensure compliance with assignment specifications. Student output is automatically evaluated by basic text and image difference operations, or via an instructor-written validation method.\nWe evaluate the success, implementation, and robustness of our design through deployment of this work in our university's senior undergraduate/graduate computer graphics course. In this course, students implement a variety of graphical assignments using OpenGL in C++. We summarize student feedback about the system gathered from anonymous end-of-term course evaluations. We provide anecdotal and quantitative evidence that the system improves student experience and learning by clarifying instructor expectations, building student confidence, and improving the consistency and efficiency of manual grading.\nThis research has been implemented as an extension to Submitty, an open source, language-agnostic course management platform which allows automated testing and automated grading of student programming assignments. Submitty supports all levels of courses, from introductory to advanced special topics, and includes features for manual grading by TAs, version control, team submission, discussion forums, and plagiarism detection.", "authors": [{"name": "Barbara Cutler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Matthew Peveler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Evan Maicus", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Andrew Aikens", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}], "tags": ["testing", "computer graphics", "course management", "autograding"]}, {"title": "Scored out of 10: Experiences with Binary Grading Across the Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3366956", "abstract": "Perhaps no other task has frustrated us as instructors as much as grading. While we recognize the importance of providing meaningful feedback and accurate assessment, our traditional grading had quickly become a task of administrative minutiae instead of helpful coaching. Like many faculty, we have searched for ways to reduce our grading load without harming student learning. We have tried a variety of approaches, from modifying our existing assignments all the way to rethinking our entire course design. The past few years we have been refining a binary grading system : a set of grading principles based upon the practice of scoring student assessments simply as either satisfactory or unsatisfactory ($10_2$ possible scores, thus the paper title). We believe this approach has significantly improved our students' attitudes towards our courses and holds promise as a way to significantly reduce the time we spend grading. In this paper, we describe our experiences with our binary grading system in several undergraduate computer science courses. We discuss the general practices of our binary grading, how we have implemented it in our courses, and what our experiences have taught us regarding the future refinement of our grading practices. We hope our experiences will spur discussion and assist other computer science educators in improving their assessment process.", "authors": [{"name": "Andrew Berns", "affiliation": "University of Northern Iowa, Cedar Falls, IA, USA"}], "tags": ["student assessment", "grading techniques", "course administration"]}, {"title": "Session details: Paper Session: Learning Tools", "link": "https://dl.acm.org/doi/10.1145/3385587", "abstract": "No abstract available.", "authors": [{"name": "Nanette Veilleux", "affiliation": "Simmons University"}], "tags": []}, {"title": "User-Centered Design of a Mobile Java Practice App: A Comparison of Question Formats", "link": "https://dl.acm.org/doi/10.1145/3328778.3366942", "abstract": "Learning computer science presents many challenges to students, and providing resources for meaningful practice is recognized as a way to support rigorous learning and diverse student participation. At the same time, mobile phones are increasingly ubiquitous, creating an underutilized opportunity for practice outside of traditional methods. This experience report presents a user-centered approach to designing a practice app for introductory Java. We investigated user preferences through a series of small studies, first conducting think-aloud sessions and focus groups, and finally conducting a usability study comparing two prototype versions. The initial studies suggested how to leverage the affordances of small screens, ruling out free-response practice problems in favor of either fill-in-the-blank (FB) or multiple-choice (MC) questions. The comparison study revealed statistically significant differences in students' survey responses: (1) usability scores were significantly higher for the MC version than the FB version; (2) students reported significantly greater satisfaction and desire to learn for the MC version; and (3) students reported enjoying and being more comfortable with the MC version compared to the FB version. We contextualize this observation within related research on question formats. Takeaways from this experience report can provide guidance on designing mobile applications that give students opportunities for meaningful practice.", "authors": [{"name": "Mohona Ahmed", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Kimberly Michelle Ying", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["user-centered design", "introductory programming", "mobile practice application", "question formats"]}, {"title": "How Important is Immersion for Learning in Computer Science Replugged Games?", "link": "https://dl.acm.org/doi/10.1145/3328778.3366837", "abstract": "By following the idea of not using computers at all, Computer Science Unplugged has set the course for many interactive, social, and hands-on activities dealing with concepts and problems of Computer Science Education. Through recent developments in immersive media, technologies like Virtual and Augmented Reality could enhance such activities or even enable new ones. When providing immersive educational media that induce a sense of presence in the virtual environment, the illusion of unmediated learning experience can be delivered. Hence, the concept of \"Computer Science Replugged'' can benefit from the affordances that Computer Science Unplugged thrives on while facilitating or enabling activities that might be impossible, dangerous, or expensive to carry out in reality. This paper presents three concepts from Computer Science Education that have been modeled as 3-D immersive educational virtual environments: components of a computer, asymmetric encryption/decryption, and finite state machines. To get a first impression of the effectiveness of these approaches and in order to determine the importance of the level of immersion for the learning process, a study with 78 participants was conducted in which the software was tested on different devices. All activities were found to be significantly effective with regards to the pre- and post-tests. When analyzing these results on the basis of comparing the least immersive setting (laptop) with the most immersive setting (head-mounted-display), the findings indicate different effects with effect sizes between\u03b2 = -.17 and\u03b2 = .41. This raises two questions: \"Which topics from Computer Science Education can benefit from immersive technology?'' and \"What are the opportunities and challenges of the didactical design of Computer Science Replugged activities?'' that have to be adressed in further research.", "authors": [{"name": "Andreas Dengel", "affiliation": "University of W\u00fcrzburg, W\u00fcrzburg, Germany"}], "tags": ["technology-enhanced learning", "computer science unplugged", "immersive learning", "virtual reality"]}, {"title": "Student Adoption and Perceptions of a Web Integrated Development Environment: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3366949", "abstract": "Students often spend a considerable amount of time and effort installing and configuring programming tools and environments. This can frustrate, and distract them from more important learning objectives, particularly in introductory programming courses. A web-based integrated development environment can serve as a low-threshold, ready-to-use programming environment, and reduce the time and effort needed to start practicing programming.\nIn this paper, we report our experience of developing and deploying a web-based integrated development environment (web IDE) as an optional tool at a large public university that has been in use for over several years in various programming courses.\nWe conducted a survey to understand students' perceptions toward the web IDE and usage of its features. Using the data from the survey, we explored potential correlations between student demographic and behavioral traits in adoption of the web IDE. The results of the survey suggest that around half of the students use the IDE often or very often. We also discovered that the likelihood of adoption of the IDE decreases as students to move to upper classes. In this paper, we also describe broader lessons for educators and researchers.", "authors": [{"name": "Martin Valez", "affiliation": "University of California, Davis, Davis, CA, USA"}, {"name": "Michael Yen", "affiliation": "University of California, Davis, Davis, CA, USA"}, {"name": "Mohammad Amin Alipour", "affiliation": "University of Houston, Houston, TX, USA"}, {"name": "Mathew Le", "affiliation": "University of California, Davis, Davis, CA, USA"}, {"name": "Zhendong Su", "affiliation": "ETH Zurich, Zurich, Switzerland"}], "tags": ["tool adoption", "web-based integrated development envioronment", "student perceptions"]}, {"title": "Session details: Paper Session: Online", "link": "https://dl.acm.org/doi/10.1145/3385588", "abstract": "No abstract available.", "authors": [{"name": "Dave Lillethun", "affiliation": "Seattle University"}], "tags": []}, {"title": "Improving Student Learning Outcomes in Online Courses: An Investigation Into the Effects of Multiple Teaching Modalities", "link": "https://dl.acm.org/doi/10.1145/3328778.3366880", "abstract": "We investigated learning outcomes within an undergraduate C Programming course that is taught in multiple modalities: in-person, online and blended. Because this course has been taught by the same instructor, using the same scaffolding activities, materials and approaches, we were uniquely positioned to conduct a quasi-experimental study of learning outcomes between courses and within students. The overarching goal was to glean knowledge and implications about assessment practices for undergraduate courses that are taught in multiple modalities. The objectives of our research are primarily to discern what differential impacts, if any, are found between the in-person and the online course delivery. We aimed to discover learning outcome patterns among the students who participate in these modalities. Findings from this study provide valuable information for undergraduate Computer Science programs by identifying any differential learning outcomes that students experience between in-person and online course instruction. The research questions addressed by the study were as follows: 1) What impact does modality have on student learning outcomes? 2) What patterns are discernable across student groups? 3) What relationship is there between final course grades and assignment module learning outcomes? In earlier work, we were surprised that no significant differences were obtained between course modality. While this was an encouraging finding, we believed that further data collection and analysis were needed, before making general conclusions about the two modalities. This paper reports on our efforts to collect additional data, while considering additional variables, such as instructor, multiple modalities, and online course design approaches.", "authors": [{"name": "Audrey Rorrer", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Julio C\u00e9sar Baham\u00f3n", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["gender", "sex", "retention", "race", "online education", "programming", "course modality"]}, {"title": "Incorporating Active Learning Strategies and Instructor Presence into an Online Discrete Mathematics Class", "link": "https://dl.acm.org/doi/10.1145/3328778.3366904", "abstract": "Online education offers an attractive alternative to face-to-face classes by providing flexibility to students and efficiencies for educational institutions. Leveraging online technology has the potential to help computer science departments offer a quality educational experience in the face of burgeoning enrollments. However, effective online course design is critical to student satisfaction and learning outcomes. In this paper, we describe the experience of converting a large face-to-face course in Discrete Mathematics to an online format. Particular care was taken to incorporate active learning strategies, such as clicker questions and interactive discussions, in order to enhance student engagement. We describe ways in which we cultivated an active instructor presence in the course through carefully designed pre-recorded videos, online video conferencing, and participation in Piazza, an online social learning platform. In-class tests were specifically designed to provide a meaningful comparison of learning outcomes between a face-to-face and online offering of the course taught by the same instructor. The results indicate that there is no loss in student performance in the online course, even after accounting for demographic and academic differences between the students enrolled in the two courses. There is also no significant difference in performance for \"at-risk\" students. End-of-quarter student evaluations show a high level of student satisfaction with the online format, especially in regards to the opportunities to have questions answered and the positive presence of the instructor in the course.", "authors": [{"name": "Sandy Irani", "affiliation": "University of California, Irvine, Irvine, CA, USA"}, {"name": "Kameryn Denaro", "affiliation": "University of California, Irvine, Irvine, CA, USA"}], "tags": ["active learning", "quantile regression", "computing education", "online instruction"]}, {"title": "Who Benefits?: Positive Learner Outcomes from Behavioral Analytics of Online Lecture Video Viewing Using ClassTranscribe", "link": "https://dl.acm.org/doi/10.1145/3328778.3366953", "abstract": "Lecture material of a sophomore large-enrollment (N=271) system programming 15-week class was delivered solely online using a new video-based web platform. The platform provided accurate accessible transcriptions and captioning plus a custom text-searchable interface to rapidly find relevant video moments from the entire course. The system logged student searching and viewing behaviors as fine-grained web browser interaction events including full-screen-switching, loss-of-focus, incremental searching events, and continued-video-watching events with the latter at 15-second granularity. Student learning behaviors and findings from three research questions are presented using individual-level performance and interaction data. Firstly, we report on learning outcomes from alternative learning paths that arise from the course's application of Universal Design for Learning principles. Secondly, final exam performance was equal or better to prior semesters that utilized traditional in-person live lectures. Thirdly, learning outcomes of low and high performing students were analyzed independently by grouping students into four quartiles based on their non-final-exam course performance of programming assignments and quizzes. We introduce and justify an empirically-defined qualification threshold for sufficient video minutes viewed for each group. In all quartiles, students who watched an above-threshold of video minutes improved their in-group final exam performance (ranging from +6 % to +14%) with the largest gain for the lowest-performing quartile. The improvement was similar in magnitude for all groups when expressed as a fraction of unrewarded final exam points. Overall, the study presents and evaluates how learner use of online video using ClassTranscribe predicts course performance and positive learning outcomes.", "authors": [{"name": "Chirantan Mahipal", "affiliation": "University of Illinois at Champaign-Urbana, Urbana, IL, USA"}, {"name": "Lawrence Angrave", "affiliation": "University of Illinois at Champaign-Urbana, Urbana, IL, USA"}, {"name": "Genevieve Henricks", "affiliation": "University of Illinois at Champaign-Urbana, Urbana, IL, USA"}, {"name": "Zhilin Zhang", "affiliation": "University of Illinois at Champaign-Urbana, Urbana, IL, USA"}], "tags": ["video-search", "transcription-search", "student-behavior", "captions", "learning-analytics", "learning", "behavioral-analytics", "accessibility"]}, {"title": "Session details: Paper Session: Data Science B", "link": "https://dl.acm.org/doi/10.1145/3385589", "abstract": "No abstract available.", "authors": [{"name": "Lillian Cassel", "affiliation": "Villanova University"}], "tags": []}, {"title": "Collective Development of Large Scale Data Science Products via Modularized Assignments: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3366961", "abstract": "Many universities are offering data science (DS) courses to fulfill the growing demands for skilled DS practitioners. Assignments and projects are essential parts of the DS curriculum as they enable students to gain hands-on experience in real-world DS tasks. However, most current assignments and projects are lacking in at least one of two ways: 1) they do not comprehensively teach all the steps involved in the complete workflow of DS projects; 2) students work on separate problems individually or in small teams, limiting the scale and impact of their solutions. To overcome these limitations, we envision novel synergistic modular assignments where a large number of students work collectively on all the tasks required to develop a large-scale DS product. The resulting product can be continuously improved with students' contributions every semester. We report our experience with developing and deploying such an assignment in an Information Retrieval course. Through the assignment, students collectively developed a search engine for finding expert faculty specializing in a given field. This shows the utility of such assignments both for teaching useful DS skills and driving innovation and research. We share useful lessons for other instructors to adopt similar assignments for their DS courses.", "authors": [{"name": " Bhavya", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "ChengXiang Zhai", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Aaron Green", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Assma Boughoula", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}], "tags": ["experience report", "synergistic modular assignments", "practical data science education"]}, {"title": "Cross-Disciplinary Faculty Development in Data Science Principles for Classroom Integration", "link": "https://dl.acm.org/doi/10.1145/3328778.3366801", "abstract": "Data science in practice leverages the expertise in computer science, mathematics and statistics with applications in any field using data. The formalization of data science educational and pedagogical strategic remain in their infancy. College faculty from various disciplines are tasked with designing and delivering data science instruction without the formal knowledge of how data science principles are executed in practice. We call this the data science instruction gap. Also, these faculties are implementing their discipline's standard pedagogical strategies to their understanding of data science. In this paper, we present our cross-disciplinary instructional program model designed to narrow the data science instruction gap for faculty. It is designed to scaffold college faculties' data science learning to support their discipline-specific data science instruction. We provide individualized and group-based support structures to instill data science principles and transition them from learners to educators in data science. Lastly, we share our model's impact on and value to faculty as well as make recommendations for model adoption.", "authors": [{"name": "Susan Geier", "affiliation": "self-employed, Lafayette, IN, USA"}, {"name": "Brandeis Marshall", "affiliation": "Spelman College, Atlanta, GA, USA"}], "tags": ["faculty development", "curricula design", "data science"]}, {"title": "Expanding Undergraduate Exposure to Computer Science Subfields: Resources and Lessons from a Hands-on Computational Biology Workshop", "link": "https://dl.acm.org/doi/10.1145/3328778.3366909", "abstract": "Computational biology is an exciting and ever-widening interdisciplinary field. Expanding the participation of undergraduate students in this field will help to inspire and train the next generation of scientists necessary to support this growing area. However, students at smaller institutions, such as those focused on undergraduate education, may not have access to courses related to or even faculty interested in computational biology. Providing more opportunities for such undergraduate students to be exposed to computational biology, or other subfields within computer science, will be important for ensuring these students are included in the pipeline of scientists contributing to these diverse fields. To this end, we hosted a computational biology workshop that brought together undergraduate students from three different liberal arts colleges. The goal of the workshop was to provide an introduction to how computer science can be used to help answer important problems in biology. A diverse set of six faculty members from different institutions each created and taught a hands-on module as an introduction to a different area of computational biology at the workshop. We describe how we went about organizing this undergraduate workshop, summarize the workshop materials that are freely available, and discuss the outcomes and lessons learned from the workshop. We further propose that the workshop structure used is adaptable to other subfields of computer science. Workshop materials available at the workshop website: https://sites.google.com/carleton.edu/compbioworkshop2018/home.", "authors": [{"name": "Anya Vostinar", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Layla Oesper", "affiliation": "Carleton College, Northfield, MN, USA"}], "tags": ["workshop", "computational biology", "bioinformatics", "undergraduates"]}, {"title": "Session details: Paper Session: K12 Teaching", "link": "https://dl.acm.org/doi/10.1145/3385590", "abstract": "No abstract available.", "authors": [{"name": "Tuba Ketenci", "affiliation": "Georgia Institute of Technology"}], "tags": []}, {"title": "Teaching Elementary Computer Science through Universal Design for Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3366823", "abstract": "Given the academic diversity of today's classrooms, elementary teachers engaged in computer science (CS) and computational thinking (CT) instruction must create CS/CT experiences that are accessible and engaging to a broad range of learners, including those with disabilities. One method of developing inclusive instructional experiences is through the Universal Design for Learning (UDL) framework, wherein teachers proactively design instruction for the broadest range of learners. Doing so may be challenging as elementary teachers may not be familiar with the UDL framework or may not have experience with applying UDL within CS/CT instruction. The purpose of this qualitative study was to investigate how four elementary teachers provided UDL-based instruction to academically diverse learners during CS/CT instruction. Teachers received professional development and instructional coaching related to UDL within CS/CT education. Data included teachers' lesson plans, coaching logs, and teacher interviews which were qualitatively analyzed and triangulated. Data revealed that teachers generally addressed all three UDL principles, with an emphasis on two of the principles (multiple means of engagement and multiple means of representing content) above the third principle (multiple means of action and expression). They focused on breaking tasks into steps, emphasizing student choice, and presenting information in multiple ways. Findings revealed nuanced implementation differences among the teachers as well.", "authors": [{"name": "Gakyung Jeong", "affiliation": "University of Illinois, Champaign, IL, USA"}, {"name": "Meg Ray", "affiliation": "Cornell Tech, New York , NY, USA"}, {"name": "Todd Lash", "affiliation": "University of Illinois, Champaign, IL, USA"}, {"name": "Maya Israel", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["elementary cs", "students with disabilities", "universal design for learning"]}, {"title": "Design Studios for K-12 Computing Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3366923", "abstract": "Following the decline of pupil engagement in compulsory computing education (K-12) in the UK, advocates have called for further research into computing-specific pedagogies. Aiming for an improvement in pupil engagement, the subsequent report explores the viability of the applied Design Studio approach in K-12 computing education. We report on two case studies involving two 12-week curricula co-developed and delivered between researchers and teachers for four Year 8 classes in a secondary school in England. Common to both case studies were the design brief, desk crit, design review, presentation and portfolio elements proposed by Koutsabasis et al, with the key difference being a change in scope and structure of the challenge presented to pupils. Our findings demonstrate the need for a well-structured, personalizable and challenge-driven Design Studio approach, which showed evidence of improved pupil resilience and confidence, while engaging reluctant pupils. We conclude with a proposed model for applying Design Studios in K-12 computing education, to support educators aiming to adopt project-driven computing pedagogy in the classroom.", "authors": [{"name": "Megan Venn-Wycherley", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}, {"name": "Christine Bennett", "affiliation": "Churchill Community College, Newcastle upon Tyne, United Kingdom"}, {"name": "Ahmed Kharrufa", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}], "tags": ["secondary school", "design studio", "pedagogy", "k-12 education", "micro:bit", "computing education"]}, {"title": "Impacts of Creating Smart Everyday Objects on Young Female Students' Programming Skills and Attitudes", "link": "https://dl.acm.org/doi/10.1145/3328778.3366841", "abstract": "In computer programming education, learning to program tangible objects has become a common way to introduce programming to young students. In an effort to address this intervention, scientific research has been done on the effectiveness of using tangible hardware platforms such as robots and wearable products to teach basic programming concepts to children. However, there is a lack of research on how young students' attitudes and programming skills are influenced over time, when they learn to program tangible objects and make them smart. In this paper, we investigate the impacts of using a tangible everyday object and making it smart on young female students' attitudes towards programming and the acquisition of basic programming skills. During a 4-day non-formal programming workshop with 12 6th grade students, they were introduced to basic programming concepts, and learned how to apply them to turn a houseplant into a smart object. In a pilot study, we employed a block-based programming environment and analyzed the students' trajectories of attitudes towards programming and performance based on repeated open-ended qualitative questionnaires and programming questions throughout the workshop. The results show that all students had high confidence regarding programming skills, regardless of creating smart objects. Furthermore, it indicates that experienced students highly valued the programming of tangible everyday objects compared with inexperienced students. The findings of this work contribute to our understanding of how making tangible everyday objects smart can support the development of a positive attitude and keep up of interest throughout a programming workshop among girls.", "authors": [{"name": "Mazyar Seraj", "affiliation": "University of Bremen & DFKI GmbH, Bremen, Germany"}, {"name": "Rolf Drechsler", "affiliation": "University of Bremen & DFKI GmbH, Bremen, Germany"}, {"name": "Serge Autexier", "affiliation": "DFKI GmbH, Bremen, Germany"}, {"name": "Eva-Sophie Katterfeldt", "affiliation": "University of Bremen, Bremen, Germany"}], "tags": ["attitudes towards programming", "acquisition of programming skills", "smart objects", "tangible objects", "young female students"]}, {"title": "Session details: Paper Session: Graduate Programs", "link": "https://dl.acm.org/doi/10.1145/3385591", "abstract": "No abstract available.", "authors": [{"name": "Laurence D. Merkle", "affiliation": "Air Force Institute of Technology"}], "tags": []}, {"title": "Enrollment Motivations in an Online Graduate CS Program: Trends & Gender- and Age-Based Differences", "link": "https://dl.acm.org/doi/10.1145/3328778.3366848", "abstract": "Demand for CS education has risen, leading to numerous new programs, such as the rise of affordable online degrees. Research shows these programs meet an otherwise untapped audience of working professionals seeking graduate level CS education. In this study, we examine the motivations for enrollment among students in one such online MSCS program. Based responses to an open ended question, we develop a typology of motivations, including goals (e.g. career transition), opportunities (e.g. enrolling without taking time off work), and assurances that their goals will be met (e..g the program's accreditation). We then issue a closed survey question to a new group of students to further explore these motivations. In this paper, we discuss both aggregate and demographic trends in motivations, including the different motivations of men and women and what they imply about the program's impact on the gender divide in computing. We also examine older students' tendency towards intrinsic motivation to pursue an MSCS degree.", "authors": [{"name": "Bobbie Eicher", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Alex Duncan", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "David A. Joyner", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["graduate cs education", "online education", "adult learners"]}, {"title": "An MS in CS for non-CS Majors: Moving to Increase Diversity of Thought and Demographics in CS", "link": "https://dl.acm.org/doi/10.1145/3328778.3366802", "abstract": "We have created, piloted and are growing the Align program, a Master of Science in Computer Science (MS in CS) for post-secondary graduates who did not major in CS. Our goal is to create a pathway to CS for all students, with particular attention to women and underrepresented minorities. Indeed, women represent 57% and underrepresented minorities represent 25% of all bachelor's recipients in the U.S., but only 19.5% and 12.6% of CS graduates, respectively. If we can fill this opportunity gap, we will satisfy a major economic need and address an issue of social equity and inclusion. In this paper, we present our \"Bridge'' curriculum, which is a two-semester preparation for students to then join the traditional MS in CS students in master's-level classes. We describe co-curricular activities designed to help students succeed in the program. We present our empirical findings around enrollment, demographics, retention and job outcomes. Among our findings is that Align students outperform our traditional MS in CS students in grade point average. To date we have graduated 137 students and 827 are enrolled.", "authors": [{"name": "Amit Shesh", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Andrea Danyluk", "affiliation": "Williams College, Williamstown, MA, USA"}, {"name": "Benjamin Hescott", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Ian Gorton", "affiliation": "Northeastern University -- Seattle, Seattle, WA, USA"}, {"name": "Cynthia LuBien", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Megan Barry", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Carla Brodley", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Tiffani Williams", "affiliation": "Northeastern University - Charlotte, Charlotte, NC, USA"}, {"name": "Bryan Lackaye", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Catherine Gill", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Aidan Connell", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Leena Razzaq", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["non-majors", "diversity", "ms curriculum"]}, {"title": "A Constructivist Redesign of a Graduate-level CS Course to Address Content Obsolescence and Student Motivation", "link": "https://dl.acm.org/doi/10.1145/3328778.3366910", "abstract": "The last decade has seen a rising popularity of active learning methodologies in Computer Science, empowering students and developing their soft skills as well as their technical knowledge. In parallel, the speed of technological obsolescence also increased, creating challenges for teachers to keep their course content fresh and up to date. In this paper, we present a constructivist redesign of a Graduate-level laboratory course in Web Service Design and Engineering that leverages latent pockets of student knowledge to tackle these challenges through Learning by Teaching. We illustrate how such redesign was planned, deployed and evaluated, highlighting the guiding role of teachers in the process and discussing how this approach was able to solve the problem of keeping content updated while broadening both content and tools students were exposed to. Furthermore, we will discuss how the additional motivation stemming from their empowerment allowed students not only to perform more work compared to a lecture-based implementation, but also to perceive it in the end as a lesser load.", "authors": [{"name": "Maurizio Marchese", "affiliation": "Universit\u00e0 degli Studi di Trento, Trento, Italy"}, {"name": "Lorenzo Angeli", "affiliation": "Universit\u00e0 degli Studi di Trento, Trento, Italy"}, {"name": "Juan Jos\u00e9 Jara Laconich", "affiliation": "Universit\u00e0 degli Studi di Trento, Trento, Italy"}], "tags": ["pedagogy", "learning by teaching", "active learning", "graduate instruction", "constructivism", "actor-network theory"]}, {"title": "Perspectives on Allyship in Academia", "link": "https://dl.acm.org/doi/10.1145/3328778.3366997", "abstract": "Allyship in academia is critical for creating inclusive communities that are welcoming to all students, but the perception of its benefits and challenges can vary depending on a number of factors. This session will explore perspectives of allyship in academia by bringing together a diverse group of faculty and students who can share a wide range of experiences and insights, and aims to facilitate a discussion among all attendees that leads to an exchange of ideas, the strengthening of our community, and progress toward our common goal of inclusion in computing.", "authors": [{"name": "Kevin Lin", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Melissa Hovik", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Lara McConnaughey", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Angela Kwon", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Adam Blank", "affiliation": "California Institute of Technology, Pasadena, CA, USA"}, {"name": "Jamie Payton", "affiliation": "Temple University, Philadelphia, PA, USA"}, {"name": "Christian Murphy", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}], "tags": ["belonging", "diversity", "inclusion", "allyship", "equity"]}, {"title": "CS Principles Curriculum Framework Updates for 2020", "link": "https://dl.acm.org/doi/10.1145/3328778.3366985", "abstract": "In 2017 the Advanced Placement CS Principles course had the most successful launch of any AP course in history. In its first three years more than 220,000 students have sat for the exam and the course has successfully increased participation among women and other traditionally underrepresented groups in AP computer science. Like any breadth-first CS course the AP CSP curriculum requires regular updating and in this panel we will discuss changes coming for the 2020 academic year. We will share perspectives from the College Board and higher education faculty with the goal of providing audience members a better understanding of the nature of the course's first round of updates and the motivation behind them.", "authors": [{"name": "Elizabeth Johnson", "affiliation": "Xavier University, Cincinnati, OH, USA"}, {"name": "Adam Cannon", "affiliation": "Columbia University, New York, NY, USA"}, {"name": "Crystal Furman", "affiliation": "College Board, Duluth, GA, USA"}, {"name": "Paul Tymann", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["advanced placement", "cs principles", "k-12 education"]}, {"title": "Industry and Academic Collaboration: Google Faculty in Residence Experiences", "link": "https://dl.acm.org/doi/10.1145/3328778.3366984", "abstract": "Experiences from the Google Faculty in Residence Program are presented as a unique, productive example of an industry driven academic collaboration emphasizing project-based learning [2]. Representative faculty participants describe their experiences and their unique projects developed during Google Faculty in Residence (FIR) where faculty worked together with experienced Google developers. Part of FIR included training from Google developers on a wide range of software engineering best practices, student preparation for industry and computer science recruitment and retention. Consideration of diversity and inclusivity in students backgrounds and preparedness were tantamount in project goals. Projects developed targeted both lower and upper division curriculum and in some cases pedagogy outside of traditional classroom boundaries. Results of the application of projects at panelists institutions are given.", "authors": [{"name": "Jaye Espy", "affiliation": "353 - an education equity and access firm, washington dc, DC, USA"}, {"name": "Lynne Grewe", "affiliation": "California State University East Bay, Hayward, CA, USA"}, {"name": "Kathy Kanemoto", "affiliation": "Merced College, Merced, CA, USA"}, {"name": "Susan Wang", "affiliation": "Mills College, Oakland, CA, USA"}], "tags": ["computer science education", "industry influenced pedagogy", "industry academia collaborations"]}, {"title": "Minoritized Students' Engagement, Identity, and Agency in Computer Science: Listening to the Students Themselves", "link": "https://dl.acm.org/doi/10.1145/3328778.3366972", "abstract": "This panel focuses on the voices of computer science (CS) high school students who come from communities historically underrepresented in CS. Our UCLA team worked in research-practice partnership with teachers and students from the Los Angeles Unified School District (LAUSD) to understand how youth engagement, agency, and identity are being impacted, if at all, by efforts to broaden participation in computing. Going beyond a \"numbers\" approach, we define equity as attending to the cultural wealth, funds of knowledge, and perspectives youth bring to their CS learning experiences, amplifying minoritized youth's visions of what CS education should be in the CS for All movement. This panel begins by sharing findings from our year-long qualitative study in four CS classrooms, followed by hearing from the students themselves about what impacts their motivation to learn CS. Student panelists will explain how and why they choose to engage in CS learning toward empowering themselves and their communities, as well as how they are developing CS identities. Together, we will explore what it takes for youth to acquire a sense of \"rightful presence\" [1] in a field dominated by people who do not look like them or come from their communities.", "authors": [{"name": "LAUSD Students", "affiliation": "Los Angeles Unified School District, Los Angeles, CA, USA"}, {"name": "Tiera Tanksley", "affiliation": "University of California Irvine, Irvine, CA, USA"}, {"name": "Alicia Morris", "affiliation": "Los Angeles Unified School District, Los Angeles, CA, USA"}, {"name": "Jean J. Ryoo", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Cynthia Estrada", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}, {"name": "Jane Margolis", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}], "tags": ["k-12 education", "equity", "cs education"]}, {"title": "Nifty Assignments", "link": "https://dl.acm.org/doi/10.1145/3328778.3372574", "abstract": "The Nifty Assignments special session is about promoting and sharing the ideas and ready-to-use materials of successful assignments. Each presenter will introduce their assignment, give a quick demo, and describe its niche in the curriculum and its strengths and weaknesses. The presentations (and the descriptions below) merely introduce the assignment. A key part of Nifty Assignments is the mundane but vital role of distributing the materials - handouts, data files, starter code, rubrics, autograders - that make each assignment ready to adopt. Each assignment presented has complete materials freely available on the Nifty Assignments home page nifty.stanford.edu. If you have an assignment that works well and would be of interest to the CSE community, please consider applying to present at Nifty Assignments.", "authors": [{"name": "Christopher Allsman", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Tiffany Perumpail", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Evan M. Peck", "affiliation": "Bucknell University, Lewisburg, PA, USA"}, {"name": "Paul Bitutsky", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Nick Parlante", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Brian Yu", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Ryan Moughan", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Kevin Wayne", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Rahul Arya", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "John DeNero", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Julie Zelenski", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Carl Albing", "affiliation": "Naval Postgraduate School, Monterey, CA, USA"}, {"name": "Keith Schwarz", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Catherine Cang", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Kavi Gupta", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["library", "pedagogy", "assignments", "education", "homeworks", "examples", "repository", "nifty"]}, {"title": "Session details: Poster Session 1", "link": "https://dl.acm.org/doi/10.1145/3385592", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}, {"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "Understanding Parents' Perceived Barriers to Engaging Their Children in Out-of-School Computer Science Programs", "link": "https://dl.acm.org/doi/10.1145/3328778.3372663", "abstract": "To address participation inequities among youth in computer science programs, this study examined how parents evaluate out- of-school time (OST) STEM programs for their children. We facilitated a workshop and conducted interviews with parents in Digital Youth Divas (DYD), an OST STEM program for middle-school girls who are underrepresented in computing. We found that parents prefer programs that are free, at accessible locations, and run by reputable educational institutions. Parents also identified barriers such as the lack of a parent network and conflicting schedules. These challenges must be addressed in order to encourage participation in OST computing science programs.", "authors": [{"name": "Nichole Pinkard", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Bo Ju", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Evelyn Flores", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Denise Nacu", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Sheena Erete", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Olivia Ravenscroft", "affiliation": "DePaul University, Chicago, IL, USA"}], "tags": ["stem programs", "parents", "out-of-school time"]}, {"title": "Case Study-based Portable Hands-on Labware for Machine Learning in Cybersecurity", "link": "https://dl.acm.org/doi/10.1145/3328778.3372579", "abstract": "Machine Learning (ML) analyzes, and processes data and develop patterns. In the case of cybersecurity, it helps to better analyze previous cyber attacks and develop proactive strategy to detect and prevent the security threats. Both ML and cybersecurity are important subjects in computing curriculum, but ML for cybersecurity is not well presented there. We design and develop case-study based portable labware on Google CoLab for ML to cybersecurity so that students can access and practice these hands-on labs anywhere and anytime without time tedious installation and configuration which will help students more focus on learning of concepts and getting more experience for hands-on problem solving skills.", "authors": [{"name": "Hossain Shahriar", "affiliation": "Kennesaw State University, Georgia, GA, USA"}, {"name": "Fan Wu", "affiliation": "Tuskegee University, Tuskegee, AL, USA"}, {"name": "Dan Lo", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Michael Whitman", "affiliation": "Kennesaw State University, Kennesaw, GA, USA"}, {"name": "Cassandra Thomas", "affiliation": "Tuskegee University, Tuskegee, AL, USA"}], "tags": ["colab", "cybersecurity", "case study", "machine learning", "portable lab"]}, {"title": "Information Assurance and Security Education on Undergraduate Computing Degree Programs", "link": "https://dl.acm.org/doi/10.1145/3328778.3372584", "abstract": "A set of Information Assurance and Security hands-on learning modules is developed and open to the public. Topics include networking security, database security, defensive programming, web security, system fundamentals, mobile security, malware detection using Machine learning, and big data analytics on network intrusion detection. The design follows hands-on case- based pedagogical model, which yields a satisfaction rate up to 92.5% for self-learners.", "authors": [{"name": "Fan Wu", "affiliation": "Kennesaw State University, Tuskegee, AL, USA"}, {"name": "Dan C. Lo", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Hossain Shahriar", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Kai Qian", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Pascal Paschos", "affiliation": "Chicago State University, Chicago, IL, USA"}, {"name": "Johng-Chern Chern", "affiliation": "Chicago State University, Chicago, IL, USA"}, {"name": "Chung Ng", "affiliation": "Morehouse College, Atlanta, GA, USA"}], "tags": ["information assurance and security", "education"]}, {"title": "A Hands-On Lab for Macro Malware Detection using Machine Learning on Virtual Machines", "link": "https://dl.acm.org/doi/10.1145/3328778.3372576", "abstract": "We developed a hands-on lab for students to learn macro malware detection using decision trees on an open sourced data analytics software, HPCC, running on a virtual machine. The labware along with required software and documents are freely available at our project website. Our design is low cost, customizable and can be easily replicated to other institutions. Our experience shows that students have difficulties in configuring software environment for the lab. The virtual machine approach allows pre-configurations for datasets and required software installations and setting to facilitate students' learning and instructors' teaching. Since students are working on malware, the virtual machine provides an isolated network environment for testing without affecting normal operating network. This lab design can also be integrated into online courses by simply downloading and installing the customized virtual machine.", "authors": [{"name": "Dan C. Lo", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Wei Chen", "affiliation": "Tennessee State University, Nashville, TN, USA"}, {"name": "Ruth Bearden", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Deepa Muralidhar", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Pascal Paschos", "affiliation": "Chicago State University, Chicago, IL, USA"}, {"name": "Chung Ng", "affiliation": "Morehouse College, Atlanta, GA, USA"}, {"name": "Hossain Shahriar", "affiliation": "Kennesaw State Univeristy, Marietta, GA, USA"}], "tags": ["virtualization", "cybersecurity", "information security", "computer science education", "virtual machines"]}, {"title": "Profiling the Experience of Second Year Computing Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3372616", "abstract": "The struggles of first year computer science students has been extensively studied. Work has focused on students who choose not to complete introductory programming courses (CS1, CS2), with the decision to not complete attributed to a lack of prior programming experience, difficulty in grasping course content, and changes in personal priorities. The experience of students in the second year, however, is less well studied. We conducted an interview-based study of students in the second year who have dropped a second year compute science course. Our goal is to better understand student challenges that lead to the decision to drop in the second year and to compare the factors that are identified to those that are relevant to non-completion of the first year.", "authors": [{"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}, {"name": "Dashvin Singh", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}], "tags": ["second year", "student experience", "attrition"]}, {"title": "COSMIC: US-based Conversion Master's Degree in Computing", "link": "https://dl.acm.org/doi/10.1145/3328778.3372620", "abstract": "COSMIC is an NSF S-STEM graduate curriculum initiative/conversion program that strives to provide an accelerated pathway to a Master of Science (MS) degree for individuals who do not have an undergraduate degree in computing, but who wish to cross over into the computing field. The structure of our conversion program, the context that motivated it, and insights from conversion students' instructors are presented. Program successes with students from under-represented populations and the limitations that are also experienced are discussed. Our conversion program is based on a highly focused summer bridge course, combined with a customized curriculum pathway that enables people without undergraduate computing degrees to merge quickly and efficiently into a professional MS in computing degree program. The program is similar in concept to post-baccalaureate conversion programs in New Zealand (e.g., the Master of Software Development at the Victoria University of Wellington) and the extensive conversion choices in the UK. Undergraduate and graduate student enrollment statistics from past and current (2018) CRA Taulbee Surveys strongly suggest the computing profession has a moral obligation to seek out and encourage individuals from under-represented populations to become a significant part of the computing professional community. We encourage other institutions to join in the effort to recruit and provide pathways for post-baccalaureate individuals from under-represented populations to become a significant part of the computing community.", "authors": [{"name": "Gary Krenz", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Thomas Kaczmarek", "affiliation": "Marquette University, Milwaukee, WI, USA"}], "tags": ["conversion program", "master's degree", "nsf s-stem", "curriculum initiative", "non-traditional students", "under-represented populations"]}, {"title": "Jupyter/Canvas Submission Framework Integration", "link": "https://dl.acm.org/doi/10.1145/3328778.3372670", "abstract": "Cloud-based JupyterHub installations support easy access to computing environments for intro computing using Jupyter Notebooks. We propose an interface and technical design to smoothly integrate JupyterHub with Canvas for intro students.", "authors": [{"name": "Steven Wolfman", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Emily Gubski", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["jupyter", "submission", "jupyterhub", "canvas", "assignment workflow"]}, {"title": "Learning Trajectories in Action: A Practical Study on an After-School Coding Club Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3372659", "abstract": "Computing curricula are finding their way into many elementary and middle school students' classrooms and after-school learning experiences. As more curricula are developed, there is a need to understand how they align with the Rich et al. learning trajectories (LTs) for sequencing, repetition, and conditionals [3] in terms of curricula design and student learning outcomes. This poster examines how LTs map to the 2018-2019 Girls Who Code (GWC) curricula implemented in a local GWC coding club. This poster shows how student learning under the 2018-2019 GWC curriculum maps to paths within the beginning and intermediate levels of the Rich et al. LTs for sequencing, repetition, and conditionals [3]. We also discuss challenges in evaluating several LT learning goals and potential uses of LTs as diagnostic tools to identify student misconceptions.", "authors": [{"name": "Yerika Jimenez", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Gabriela Buraglia", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["learning trajectories", "scratch", "curriculum alignment", "girls who code", "introductory programming", "after-school", "cs education"]}, {"title": "Creating an OER Collection of Automatically Scored Practice Exercises for Computer Science 1", "link": "https://dl.acm.org/doi/10.1145/3328778.3372592", "abstract": "Open Educational Resources (OER) is one way to help reduce the cost of higher education. We created a repository of 90 (and growing) practice problems for learning introductory programming using Python 3. In order to provide immediate feedback to learners as well as alleviate the scoring burden on instructors, these exercises include tests for a popular automatic web based scoring platform. We have been using and refining these materials for the past four semesters and collecting student user survey data. Overall, students have had a positive reaction to the practice format.", "authors": [{"name": "Hillary Fleenor", "affiliation": "Columbus State University, Columbus, GA, USA"}, {"name": "Hyrum D. Carroll", "affiliation": "Columbus State University, Columbus, GA, USA"}], "tags": ["python 3", "automatic assessment", "computer science 1", "cs 1"]}, {"title": "\"We'll be Scratching all the Time\"", "link": "https://dl.acm.org/doi/10.1145/3328778.3372667", "abstract": "School systems globally have begun to integrate computational thinking (CT) practices into elementary teaching and learning standards to provide young students with a comfort for and foundational understanding of computer science. This integration requires educating teachers to develop and implement CT learning opportunities. Our work contributes to best practice by exploring the role language plays in elementary teachers' discussions and development of CT-infused science lessons. To do this, we captured and analyzed the language used by elementary teachers as they spoke and wrote about CT in a multi-week professional development experience during which the teachers created and delivered CT-infused lessons to their students. We determined that teachers exhibited differing CT conceptualizations, which we categorized from broad to narrow. These differences were not, however, observed in either their spoken or written language. While there were instances of teachers using language that mirrored how the facilitators discussed CT, this use did not align with how they conceptualized CT. Our work analyzing connections between CT language use and CT conceptualization suggests that in order to understand how teachers are conceptualizing CT, professional development designers and teacher educators should focus on creating opportunities for teachers to employ CT practices in context rather than relying only on language. We feel this will support a more precise and nuanced engagement with CT.", "authors": [{"name": "Heather Killen", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Lautaro Cabrera", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Merijke Coenraad", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Jan Plane", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Kelly Mills", "affiliation": "Digital Promise Global, Washington, DC, USA"}, {"name": "Diane Jass Ketelhut", "affiliation": "University of Maryland, College Park, MD, USA"}], "tags": ["jargon", "computational thinking", "computing across the curriculum", "teacher professional development", "elementary education", "computational thinking terms", "science inquiry", "k-8"]}, {"title": "Integrating Computational Thinking in math courses for 3rd and 4th Grade students with Learning disabilities via Scratch", "link": "https://dl.acm.org/doi/10.1145/3328778.3372588", "abstract": "This study investigates primarily the use of Computational Thinking in teaching mathematical concepts of Perimeter and Area. For those 3rd and 4th Grade students with learning disabilities, specifically, the extent to which their construction and understanding of mathematical concepts and their development of computational thinking are explored. For these reasons, the experimental research method is the one-group pretest-posttest design that we adopted which was conducted with 26 students, identified as learning disabilities by the committee for Identification and Placement of Gifted and Disabled Student. Data collected are analyzed with the Paired Sample t-test to comparison of these students in their learning outcomes and difference in aspects of construction of mathematical concepts and development of computational thinking after teaching. We find this teaching method enhances the learning outcomes and performance in the Math unit of Perimeter and Area and the performance of the development of computational thinking of these students after the intervention (160 minutes).", "authors": [{"name": "Pei-Chen Wu", "affiliation": "National Taichung University of Education, Taichung, Taiwan Roc"}, {"name": "Hui-Ju Hsu", "affiliation": "Tunglo Elementary School, Miaoli, Taiwan Roc"}, {"name": "Chen-Huei Liao", "affiliation": "National Taichung University of Education, Taichung, Taiwan Roc"}], "tags": []}, {"title": "Scenario Based Active Learning Programming with Unity 3D", "link": "https://dl.acm.org/doi/10.1145/3328778.3372582", "abstract": "To meet the ever-increasing demand for information technology (IT) workforce, we must educate and produce high-quality graduates. It is crucial to balance fundamental programming concepts and coding skills to develop skilled IT work forces who solve a complicated real-life problem using technology. In this project, we created scenario-based active learning modules by using a visual platform to improve student learning on programming concepts and skills.", "authors": [{"name": "Hyesung Park", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Hongsik Choi", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Sean Yang", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}], "tags": ["active learning", "scenario", "unity", "programming", "computing education"]}, {"title": "GitGrade: A Scalable Platform Improving Grading Experiences", "link": "https://dl.acm.org/doi/10.1145/3328778.3372634", "abstract": "We present GitGrade, a system for accepting and automatically grading programming assignments. GitGrade allows instructors to provide coherent and timely feedback to students. GitGrade is similar to other grading platforms in that it accepts student work and allows modifiable grading rubrics. Furthermore, it is fast, extendable, can run auto grading scripts on programs, is free, and has a modern look and feel. GitGrade is built on top of the school's Gitlab instance which is used in many courses as a VC code repository as is done in industry. By integrating with Gitlab, we are able to distribute assignment starter code and specifications very easily. GitGrade has been in development since Autumn 2018, and to date it has been used to grade more than 5000 student repositories between our full-stack Web Development (CSE154) and Interaction Programming (CSE340) courses with positive feedback from graders and students. Feedback from students and course staff has since been actively incorporated to provide a workflow experience for students and instructors that is streamlined and easy to use in any programming course.", "authors": [{"name": "Melissa Hovik", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Jeremy K. Zhang", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Chao Hsu Lin", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Lauren J. Bricker", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["technology and teaching", "computer science education", "grading"]}, {"title": "Curricular Guidance for Associate-Degree Cybersecurity Programs", "link": "https://dl.acm.org/doi/10.1145/3328778.3372622", "abstract": "As projections of the shortage of cybersecurity workers grow, the ACM CCECC (Committee for Computing Education in Community Colleges) has led creation of a set of guidelines for two-year cybersecurity programs at the associate-degree level, called Cyber2yr2020. The Cyber2yr2020 guidelines underwent two rounds of public review and comment with the StrawDog and IronDog drafts, and the final version will be released in early 2020. This poster presents the curriculum guidelines, provides perspectives on the use of the guidelines, and offers opportunities to highlight two-year cybersecurity programs by aligning with the guidelines in a program example.", "authors": [{"name": "Melissa Stange", "affiliation": "Lord Fairfax Community College, Middletown, VA, USA"}, {"name": "Markus Geissler", "affiliation": "Cosumnes River College, Sacramento, CA, USA"}, {"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Cindy Tucker", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}, {"name": "Christian Servin", "affiliation": "El Paso Community College, El Paso, TX, USA"}], "tags": ["cybersecurity education", "cyber2yr", "community college", "two-year college", "curriculum guidelines"]}, {"title": "Integrate Global Sustainability Virtual Exchange Into Teaching Computer Science Concepts", "link": "https://dl.acm.org/doi/10.1145/3328778.3372580", "abstract": "The increasing globalization of technology has changed the face of computer science. In addition to core technology skills, modern computer scientist must possess cross-cultural communication skills, team management skills, the ability to perform on geographically distributed teams, and an understanding of the big picture in addition to technical ability. Lord Fairfax Community College (LFCC) used a virtual exchange as a teaching tool for introductory computer science concepts. Nineteen students participated in the Global Solutions Sustainability Challenge, a project supported by the Stevens Initiative, which is sponsored by the U.S. Department of State and administered by the Aspen Institute. The project aims to find a sustainable solution to an issue within the hospitality and tourism industry, while providing students an opportunity to learn about a different culture. Over 10 week students learned about the seven big concepts of computer science, marketing, business plans, team work, public speaking, research, leadership, graphic design, application development, and much more. The poster describes the virtual student exchange concept, highlights the experiences and key elements that global virtual exchange offers students without travel expenses.", "authors": [{"name": "Melissa C. Stange", "affiliation": "Lord Fairfax Community College, Middletown, VA, USA"}, {"name": "Rachel M. Stange", "affiliation": "Lord Fairfax Community College, Middletown, VA, USA"}], "tags": ["community colleges", "intercultural communication", "computer science", "interdisciplinary", "virtual exchanges"]}, {"title": "A Pilot Study on the Impact of Teaching Assistant Led CS1 Study Sessions using Peer Instruction: An Undergraduate Honors Capstone Project", "link": "https://dl.acm.org/doi/10.1145/3328778.3372602", "abstract": "The aim of this research is to discover if a structured study session program for CS1 students led by Teaching Assistants using Peer Instruction can promote an environment in which students feel an increased sense of belonging and improve course material retention. This study investigates the efficacy of weekly study sessions by measuring student attitudes and content retention over the course of a single semester of the introductory CS1 course at a medium sized liberal arts university with approximately 8 sections of 30 students each.", "authors": [{"name": "Megan Gilbert", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Dee A. B. Weikle", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["sense of belonging", "peer instruction", "retention", "teacher assistant"]}, {"title": "Social Learning and Scaffolding to Improve Student's Self-efficacy and Engagement", "link": "https://dl.acm.org/doi/10.1145/3328778.3372583", "abstract": "The majority of Computer Science courses frequently use out-of-class activities to promote skill-building. Yet, the shortcomings of these activities limit their applicability in improving students' skills. This poster presents an innovative mobile-app-based approach to engage students in out-of-class activities. The app - Dysgu - builds on the theories of social learning and enables instructors to break regular out-of-class activities into smaller and interactive entities with instructional scaffolding. Dysgu allows students to compare their progress with their peers and provides personalized notifications and feedbacks to keep students engaged. The goal is to improve student's self-efficacy and engagement in out-of-class activities.", "authors": [{"name": "Monika Akbar", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}, {"name": "Lynn Zubov", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Muztaba Fuad", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["mobile learning", "instructional scaffolding", "homework"]}, {"title": "Iteration with Intention: Project-Based Learning of Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3328778.3372651", "abstract": "Globally, there is a growing interest in preparing students to develop fluency with computing. The K-12 Computer Science Framework states that by the end of 12th grade, students should be able to create computational artifacts through continuous testing and refining of their products considering unique perspectives of peers. It has been suggested that creative project experiences with iteration based on feedback encourage the development of these computational skills. However, traditional classrooms are more focused on getting the correct answer to standardized questions. Countries such as Mongolia may have particular challenges in offering students opportunities to develop projects, due to pressure from standardized exams for college entry and lack of teachers prepared to lead computational project-based learning (Uyanga, 2006). This is an exploratory study of an 8-session/16-hour intervention course that provided 13 high-school students in Mongolia an opportunity to create, share, and iterate on computational projects. Measurements included assessment of student attitudes and evaluated how they viewed their participation and learning in the course through pre- and post-surveys, analyzing their responses with qualitative coding. Results suggest that the opportunity to create projects was novel for these students; attitudes regarding feedback changed, and iteration was viewed as key in creating computational artifacts. The analysis also highlights the urgency of further research on localizing the K-12 Computer Science Framework throughout different countries to foster these skills and developing structures that allow students to embrace the freedom of project-based learning.", "authors": [{"name": "John Dougherty", "affiliation": "Haverford College, Haverford, PA, USA"}, {"name": "Nasanbayar Ulzii-Orshikh", "affiliation": "Haverford College, Haverford, PA, USA"}], "tags": ["creativity", "scratch", "computational thinking", "localization", "feedback", "iteration", "project-based learning"]}, {"title": "Introducing Cybersecurity Concepts in Non-Security Courses through a POGIL Activity: A Pilot Study", "link": "https://dl.acm.org/doi/10.1145/3328778.3372575", "abstract": "Process-Oriented Guided Inquiry Learning (POGIL) activities are used in many undergraduate courses. Their utilization in Computer Science courses is very useful in the delivery of fundamentals of computer science. The site https://cspogil.org/contains many such activities. Currently, there is limited amount of research published involving both POGIL and Security. As such we feel that this area is wide open for contributions. In this work we create a POGIL activity designed to introduce some fundamental Cybersecurity concepts to undergraduate computer science/information technology/information systems students enrolled in non-security-focused courses. The learners will get exposure to essential application security risks and reflect upon the concepts introduced. Through this POGIL activity students get exposed to exercises involving the first seven of the The Open Web Application Security Project (OWASP) Top 10 Application Security Risks. We use PRE/POST survey methods to collect data from these courses and investigate students' engagement and knowledge gains resulted from this activity.", "authors": [{"name": "Razvan A. Mezei", "affiliation": "Saint Martin's University, Lacey, WA, USA"}, {"name": "Mario Guimaraes", "affiliation": "Saint Martin's University, Lacey, WA, USA"}, {"name": "Xuguang Chen", "affiliation": "Saint Martin's University, Lacey, WA, USA"}], "tags": ["classroom activity", "application security", "pogil activities", "cybersecurity education"]}, {"title": "Novice Debugging in Block-Based and Hybrid Environments", "link": "https://dl.acm.org/doi/10.1145/3328778.3372642", "abstract": "Debugging is an important skill for novice programmers to master, but many students struggle to learn how to debug due in part to difficulty with program syntax. Block-based environments provide an alternative to traditional textual programming that reduces syntax errors, and recently hybrid block-based/textual environments have become more common. This poster presents preliminary research to understand how novice debugging strategies differ between block- based and hybrid environments. We assigned seven participants to debug four programs within one of the two environments and conducted interviews about their debugging approaches. Thematic analysis of interview responses suggest that students adjusted their strategies based on their prior experience with textual environments. By understanding novice programmers' strategies in these environments, the field can move toward more effectively support- ing productive strategies.", "authors": [{"name": "John Lopez", "affiliation": "Loyola Marymount University, Los Angeles, CA, USA"}, {"name": "Phoebe Martinez", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Joseph B. Wiggins", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Fernando J. Rodr\u00edguez", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["block-based programming", "debugging", "hybrid environment"]}, {"title": "Consider Visualizing Society within the ACM Code of Ethics", "link": "https://dl.acm.org/doi/10.1145/3328778.3372587", "abstract": "The effect of introducing a \"Stakeholder Impact Visualization\" into the Consider step of the CARE process in The ACM Code of Ethics and Professional Conduct is presented. This treatment increased the number and type of societal stakeholders identified and the number and type of requests for situational contextual made by computing students, when using the CARE process to consider an ethical decision contained in a malware case study.", "authors": [{"name": "Richard Blumenthal", "affiliation": "Regis University, Denver, CO, USA"}, {"name": "Johanna Blumenthal", "affiliation": "Regis University, Denver, CO, USA"}], "tags": ["case method teaching", "code of ethics", "computers and society"]}, {"title": "Analyzing CS1 Student Code Using Code Embeddings", "link": "https://dl.acm.org/doi/10.1145/3328778.3372601", "abstract": "We present a machine learning model to obtain vector representations of student code submissions for a CS1 programming problem. These vectorembeddings can be used to compare code, cluster code submissions, and identify errors. We hope to use these embeddings to identify conceptual misunderstandings in student code.", "authors": [{"name": "Lisa Zhang", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}, {"name": "Robert Bazzocchi", "affiliation": "University of Toronto, Toronto, Canada"}, {"name": "Micah Flemming", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}], "tags": ["code clustering", "neural networks", "machine learning", "code embeddings", "computer science education"]}, {"title": "Introducing Parallelism to First-Year CS Majors", "link": "https://dl.acm.org/doi/10.1145/3328778.3372581", "abstract": "We propose to strengthen the computer science (CS) curriculum by embedding parallel concepts in a required first-semester seminar taken by all incoming declared CS majors. We introduce students to parallel computing concepts through a series of unplugged activities so that students see parallel approaches as a natural form of solution to a task. We describe a pilot offering of the class and activities, with measurements and analysis of what students self-report and their performance on assessments.", "authors": [{"name": "Robert Montante", "affiliation": "Bloomusburg University of Pennsylvania, Bloomsburg, PA, USA"}, {"name": "D. Cenk Erdil", "affiliation": "Sacred Heart University, Fairfield, CT, USA"}, {"name": "Barbara M. Anthony", "affiliation": "Southwestern University, Georgetown, TX, USA"}, {"name": "Olga Glebova", "affiliation": "Georgia State University, Atlanta, GA, USA"}], "tags": ["parallel and distributed computing", "unplugged activities", "computing education"]}, {"title": "Barriers, Challenges and Strategy Use of Students with High-Incidence Disabilities", "link": "https://dl.acm.org/doi/10.1145/3328778.3372589", "abstract": "Computer science (CS) education K-12 has spread at a remarkable pace over the last few years. As CS education becomes more and more a part of the general curriculum, students with disabilities, who spend much of their time in general education classrooms, will be included. Yet, there is little research on how to equitably and rigorously include students with disabilities in CS education. To begin to understand how best to provide CS educational services to diverse learners, we must first understand the challenges and barriers they face and what strategies they are already using to enable their success. This basic qualitative interpretative study utilized video screencast data of three upper-elementary students with high-incidence disabilities engaged in block-based programming. Findings confirmed students encountered multiple barriers and challenges, both unique and shared, across classrooms. While students utilized several problem solving and debugging strategies, they seldom did so in a systematic fashion.", "authors": [{"name": "Todd Lash", "affiliation": "University of Illinois, Champaign, IL, USA"}], "tags": ["block-based programming", "k-12 computer science education", "problem solving", "accessibility", "debugging"]}, {"title": "Improving User Experience for GENI-based Cybersecurity Labs", "link": "https://dl.acm.org/doi/10.1145/3328778.3372585", "abstract": "GENI (Global Environment for Network Innovations) has been used in network research and education for more than one decade. However, very few institutions utilize the virtual machines (VM) deployed on GENI for generalized computer education. One major reason is the limited user interface offered by GENI VMs. In this poster, we introduce the desktop environment to GENI VMs, thereby widening the student base in computer education. Specifically, as the demand of Cybersecurity education increases, we show that by introducing the desktop environment to the existing flexible network topology, GENI becomes more inclusive in offering cybersecurity education to a wide range of students, ranging from entry level students, who are unfamiliar with command line interface, to the advanced students, who are interested in sophisticated network attacks and preventions. The preliminary student survey result shows that most students have no problem using GUI lab environment.", "authors": [{"name": "Yongzhi Wang", "affiliation": "Park University, Parkville, MO, USA"}, {"name": "Wen-Jung Hsin", "affiliation": "Park University, Parkville, MO, USA"}], "tags": ["geni", "graphical user interface", "cybersecurity education"]}, {"title": "Teaching Platform for Network Communication and Protocols Using a Micro: bit Based Wheeled Robot", "link": "https://dl.acm.org/doi/10.1145/3328778.3372605", "abstract": "In this study, we presented a lightweight inverted curriculum\\cite1 for teaching the essential details of network communication and protocols to undergraduate students major in computer science. Students are instructed to construct a wireless communication and control system connecting a computer to a wheeled robot using the Micro:bit platform. This platform consists of a micro-controller loaded with a Python interpreter and an additional extension board integrated with motors and sensors. In this study, we describe how the students were instructed to build the system step by step, from establishing a wired connection to implementing a TCP server on the PC-side for wireless control. Students can learn these knowledge through practice, which improves classroom engagement as a consequence.", "authors": [{"name": "Zizhang Luo", "affiliation": "Peking University, Beijing, China"}, {"name": "Bohan Yu", "affiliation": "Peking University, Beijing, China"}, {"name": "Yuxuan Zhou", "affiliation": "Peking University, Beijing, China"}, {"name": "Junfeng Hu", "affiliation": "Peking University, Beijing, China"}], "tags": ["wireless control", "micro:bit based wheeled robot", "network protocols"]}, {"title": "Preparing Pre-Service Teacher Candidates for the Praxis Exam: An Innovative Model of Blended Support", "link": "https://dl.acm.org/doi/10.1145/3328778.3372654", "abstract": "The expansion of K-12 computer science (CS) has driven a dramatic need for educators who are trained in CS content and pedagogy [1]. This poster describes our effort to train teacher candidates (i.e., pre-service teachers who are students seeking degrees within a College of Education), who are specializing in secondary mathematics education, to be future CS educators. We specifically describe our collaboration to provide a blended preparatory six-week training for the ETS CS Praxis exam (5652), assisting our pre-service students in satisfying the CS certification requirements in our state before they graduate and begin their professional teaching career. Given the unique challenges of pre-service CS teacher preparation [2], blended models, which combine both in-person and online instruction, are an effective approach to building a pre-service program. Within our pre-service CS program, students first complete a two-course pathway that prepares them in AP CSP content and pedagogy experiences, including observations in local AP CSP classrooms [3]. After completing the two courses, our students participate in the blended version of the WeTeach_CS Praxis preparation course to achieve certification. The in-person support provided by the blended model contributed significantly to certification success in this project. With a cut-score of 149 for the Praxis exam, all 11 of our pre-service students who completed the course received a passing score (including one student with a perfect score of 200, and another student with a 195); the average score for our pre-service students was 175. An additional 11 in-service teachers, with diverse backgrounds in CS content knowledge, also participated in the blended Praxis preparation course, with an average score of 166. Given the unique challenges of pre-service CS teacher preparation, university pre-service CS teacher programs should look to innovative models of teacher support developed by in-service programs to make substantial gains in CS teacher certification. Incorporating an asynchronous online course that allows teachers with a wide range of prior experience in CS to learn at their own pace with in-person coursework and support appears to be a viable model for assisting non-CS major teacher candidates in achieving a CS certification. With the blended model, even teachers with no background knowledge in CS were successful. Within our pre-service CS program, students first complete a two-course pathway that prepares them in AP CSP content and pedagogy experiences, including observations in local AP CSP classrooms [3]. After completing the two courses, our students participate in the blended version of the WeTeach_CS Praxis preparation course to achieve certification. The in-person support provided by the blended model contributed significantly to certification success in this project. With a cut-score of 149 for the Praxis exam, all 11 of our pre-service students who completed the course received a passing score (including one student with a perfect score of 200, and another student with a 195); the average score for our pre-service students was 175. An additional 11 in-service teachers, with diverse backgrounds in CS content knowledge, also participated in the blended Praxis preparation course, with an average score of 166. Incorporating an asynchronous online course that allows teachers with a wide range of prior experience in CS to learn at their own pace with in-person coursework and support appears to be a viable model for assisting non-CS major teacher candidates in achieving a CS certification. With the blended model, even teachers with no background knowledge in CS were successful.", "authors": [{"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "John Owen", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Rebecca Odom-Bartel", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Carol Fletcher", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Jeremy Zelkowski", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["pre-service teacher training", "teacher certification", "teacher professional development"]}, {"title": "Video Analysis of Student Challenges and Interactions in Computational Thinking-integrated Botany", "link": "https://dl.acm.org/doi/10.1145/3328778.3372631", "abstract": "This study aimed to understand elementary students' challenges and interactions in computational thinking-integrated botany through robotics activities. Data was collected from screen-casting videos and analyzed using Collaborative Computing Observation Instrument (CCOI), a web-based analysis instrument with nodes and paths that classify and specify students' computing experience. The results revealed that all participants engaged in independent work for most of the time, with short interactions on 1) general computer technology issues; 2) software navigating issues; 3) questions about academic content; 4) computing discussion with the instructor; 5) informing the instructor about task accomplishment. The findings of this study will provide important insights to CS researchers, educators, and elementary teachers regarding CT-integration research and practice.", "authors": [{"name": "Ruohan Liu", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Feiya Luo", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Maya Israel", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["k-8 computer science education", "computational thinking"]}, {"title": "University-wide Adoption of Data Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372657", "abstract": "Data Science is an essential concept for twenty-first century workforce and as a result the need to help all students acquire such skill has recently gained increased attention. However, most smaller schools are currently facing challenges to provide related knowledge and skill to a broad student population. During Spring of 2019, we organized a faculty workshop on \"Data Science Pedagogy and Practice\" aimed at building and enhancing data science capacity (teaching, research, partnership, collaboration) at our institution. We gathered faculty input on what would be needed for a successful university-wide initiative to incorporate data analytics concepts as a basic component of training across variety of disciplines including science, business and social sciences. We were able to identify certain challenges and opportunities to accommodate deeper coverage of data science in the undergraduate teaching and research, and as a result, we initiated few efforts such as 1) teaching through faculty partnership, 2) module-based integration into existing courses rather than developing new courses, 3) development of reusable course modules and augment that with contextual hand-on projects so that students could appreciate the use of data science in their own career path, 4) facilitation of course preparation and implementation via a small faculty adopter grant, and 5) development of a graduate certificate program in data analytics. In this poster, we report our experience in organizing and implementing the workshop, the key aspects of the university-wide data science efforts initiated as a result of the workshop, and the lessons learned so far from these initiatives.", "authors": [{"name": "Debzani Deb", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Elva Jones", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["computer science education", "data science", "curriculum"]}, {"title": "Session details: Poster Session 2", "link": "https://dl.acm.org/doi/10.1145/3385593", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}, {"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "Engaging Women in Coding: An Interdisciplinary Approach", "link": "https://dl.acm.org/doi/10.1145/3328778.3372625", "abstract": "The focus of this effort is to provide teaching practices to engage women college students in learning Python computer programming by solving interdisciplinary problems. Interactive and collaborative tools are adapted and presented such as pair programming, think/pair/share, code tracing, debugging faulty code, and pedagogical code reviews. The goal is to offer a classroom experience that combines several methods to provide an engaging, fun and inclusive environment to women. The results show students' success in learning fundamentals of computer programming in Python, but more importantly, these classroom practices proved to be inspiring and motivating. Women participants gained confidence and a sense of belonging in a CS classroom.", "authors": [{"name": "Almudena Konrad", "affiliation": "Mills College, Oakland, CA, USA"}], "tags": ["programming education", "python", "women-cs", "interactive tools"]}, {"title": "Transitioning to Teaching Android With Kotlin and Jetpack Components", "link": "https://dl.acm.org/doi/10.1145/3328778.3372603", "abstract": "Android tends to be the platform of choice in the education community due to its openness and the use of Java. Any major changes to the way Android apps are built could be helpful to both teachers and students. As of last year, Android officially supports Kotlin -- a modern Java interoperable language that offers null safety, reduced verbosity and numerous other modern programming language features. Furthermore, the current Android developer tool-set has been expanded to include a set of new libraries, tools, and architectural guidances called Android Jetpack. The new components simplify the process of implementing complex mobile app tasks such as lifecycle handling, persistence and background operations. In this poster, we share our findings in updating and teaching a CS3 introductory mobile software development course that was originally taught in Java.", "authors": [{"name": "Andrey Esakia", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["kotlin", "android", "jetpack", "mobile"]}, {"title": "Broadening Participation in Computing through Transforming Media and Technologies", "link": "https://dl.acm.org/doi/10.1145/3328778.3372615", "abstract": "Broadening participation in computing ensures that a diversity of perspectives are involved in creating new technologies. Yet despite initiatives aimed at bringing more diverse groups into computer science as a discipline, underrepresented groups are still under threat to be crowded out of formal computing spaces. However, there are informal spaces where these populations engage in computational projects, learning computing skills outside of traditional academic or industry computing spaces. One such space is transformative fandom. We propose exploring how people in transformative fandom innovate and transform technologies, with an emphasis on their involvement in computational projects by and for marginalized communities.", "authors": [{"name": "Brianna Dym", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Casey Fiesler", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}], "tags": ["lgbtq", "fandom", "informal learning", "cs education"]}, {"title": "A Sequenced Curriculum for Teaching Introductory C++ Programming", "link": "https://dl.acm.org/doi/10.1145/3328778.3372578", "abstract": "Several computer science education studies show that it is important when teaching introductory computer programming to teach the fundamental skills needed to learn programming in a sequenced order. These skills are reading code, writing code, interpreting programming templates, and applying programming templates to specific problems. However, most introductory programming courses, and programming textbooks, often interleave these skills so that writing code may be introduced before reading code and using templates to solve problems may be introduced before students are adequately taught how to interpret those templates. This poster will present a curriculum for teaching introductory C++ programming to Computer Science majors that follows the proper sequencing of skills. Examples of reading code using variable tracing problems are demonstrated, along with example problems in writing code. These examples will highlight several programming constructs including if statements, loops, and functions. Several programming templates are shown, as well as sample problems that require the student to recognize that the problem has an associated template and then be able to apply that template to solving the problem. The templates demonstrated in the poster include variable swapping, input one - process one, accumulate values until done, and processing all elements of an array.", "authors": [{"name": "Michael McMillan", "affiliation": "University of Arkansas - Pulaski Technical College, North Little Rock, AR, USA"}], "tags": ["computer science education", "teaching computer programming", "introductory c++ programming"]}, {"title": "Using the CS2013 Exam for ABET Student Outcome Assessment", "link": "https://dl.acm.org/doi/10.1145/3328778.3372614", "abstract": "In anticipation of an ABET accreditation visit, our computer science department contracted with an independent external testing organization to perform an assessment of our students' proficiency in computer science. We used this external assessment to supplement our own internal assessment. The exam was easy to administer and covered multiple student outcomes. In addition, our analysis of the exam results showed high correlation between course performance and exam performance.", "authors": [{"name": "Kurt Eiselt", "affiliation": "University of California, Davis, Davis, CA, USA"}, {"name": "Christopher Nitta", "affiliation": "University of California, Davis, Davis, CA, USA"}], "tags": ["student assessment", "cs2013", "abet", "accreditation"]}, {"title": "A Game-Changing Instructor Tool to Reinforce Coding Concepts", "link": "https://dl.acm.org/doi/10.1145/3328778.3372610", "abstract": "We developed a 3D serious game that teaches and reinforces programming concepts. An innovative feature allows instructors to create customized challenges that students solve in the context of the game, allowing instructors to use the game to effectively target course topics or skills. A web-based portal gives instructors access to data about student performance in the game.", "authors": [{"name": "Deborah Sturm", "affiliation": "College of Staten Island, City University of New York, Staten Island, NY, USA"}, {"name": "Devorah Kletenik", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}], "tags": ["cs1", "introductory coding", "serious games", "game-based learning"]}, {"title": "Cyber Secured: A Serious Game for Cybersecurity Novices", "link": "https://dl.acm.org/doi/10.1145/3328778.3372611", "abstract": "We developed an educational serious game to teach basic cybersecurity concepts to novices. An evaluation of the game on introductory Computer Science and Business students suggests that playing the game resulted in both short-term learning gains in cybersecurity as well as longer-term retention of the concepts. We also saw evidence that students who played the game had increased interest in cybersecurity, and students self-reported interest in playing the game to learn more about and assess their knowledge of cybersecurity.", "authors": [{"name": "Deric Kwok", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}, {"name": "Matthew LaSpina", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}, {"name": "Alon Butbul", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}, {"name": "Daniel Chan", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}, {"name": "Devorah Kletenik", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}], "tags": ["serious games", "cybersecurity", "game-based learning"]}, {"title": "10 Binary Games for Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372596", "abstract": "In the race to teach programming to large, diverse audiences, low-level topics have received short shrift. We address this gap by presenting two (\"10\") games we have designed - one a card game, the other an online game - to help students learn both binary manipulation and operations. These two games stand out from existing computer science 'edutainment' through their novel presentation and unique take on topics that are relatively unexplored in games.", "authors": [{"name": "Hannah Wright", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "John Aycock", "affiliation": "University of Calgary, Calgary, AB, Canada"}], "tags": ["games", "binary", "education", "computational thinking"]}, {"title": "A CS Course for Non-Majors Based on the Arduino Platform", "link": "https://dl.acm.org/doi/10.1145/3328778.3372595", "abstract": "We present a model for enhancing an introductory computer science course for non-majors through the use of the Arduino platform. We have developed and tested curricular modules and associated hands-on laboratories for this model. The use of the highly visual and interactive Arduino system has improved students' learning experiences, enabling them to apply and relate fundamental computational thinking concepts of algorithmic reasoning, data representation, and computational efficiency to real-world problems. Assessment results show that the approach has been effective. We present the curricular modules, our experiences using them, as well as assessment results.", "authors": [{"name": "Ingrid Russell", "affiliation": "University of Hartford, West Hartford, CT, USA"}, {"name": "Aaron Gold", "affiliation": "University of Hartford, West Hartford, CT, USA"}, {"name": "Carolyn Pe Rosiene", "affiliation": "University of Hartford, West Hartford, CT, USA"}], "tags": ["non-majors", "active learning", "undergraduate instruction"]}, {"title": "Compiler Error Messages: Their Content and Accessibility in Novice Programming Environments", "link": "https://dl.acm.org/doi/10.1145/3328778.3372617", "abstract": "Improving the feedback that novices receive from programming environments is an important and often overlooked aspect of computing education research. This work in progress examines the effects of various mechanisms by which environments deliver feedback to users. By providing insights on the effects of these mechanisms, we aim to inform designers, developers and educators about more effective design and use of such environments for students.", "authors": [{"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Ioannis Karvelas", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Joe Dillane", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["novice programmers", "programming environments", "compiler error messages", "cs1", "editors", "educational data mining", "programming", "ide"]}, {"title": "Prototype of an Automated Feedback Tool for Intro CS Theory", "link": "https://dl.acm.org/doi/10.1145/3328778.3372598", "abstract": "Computing theory is an important part of computer science education, introducing students to computational models of increasing power to study possibilities and limitations of computation. The subject is, however, very abstract and mathematical, and students often struggle with it. Students must master various computational models, but there is often a lengthy delay from the time a model is introduced until a student gets feedback on their related assignment. During this time, the course has typically moved far ahead, and students become progressively more lost. To alleviate this problem, we developed a prototype of an automated feedback tool for CS theory, which extends the widely used JFLAP software. Our tool currently handles student submissions of deterministic and non-deterministic finite automata, regular expressions, context-free grammars, and push-down automata homework, where an instructor specifies the target language and the students receive immediate feedback on their submissions. Currently, for incorrect submissions, the feedback is in the form of a \"witness'' string, specifying a string on which the submission fails. Beyond regular languages, our tool attempts to solve undecidable problems; fortunately, the undecidability does not occur on typical homework assignments. We are collecting preliminary evaluation data from students using the prototype tool in their course. In our future work, we will analyze the data, and we aim to produce automated partial credit (along with the witness feedback) using SAT and QBF solvers.", "authors": [{"name": "David E. Narv\u00e1ez", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Hannah Miller", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Aryeh Lieberman", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Edith Hemaspaandra", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Ivona Bez\u00e1kov\u00e1", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["formal languages and automata", "models of computation"]}, {"title": "Computational Thinking in Music: A Data-Driven General Education STEAM Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3372597", "abstract": "This poster outlines the design and results of a course entitled \"Computational Thinking in Music.\" The course teaches computational thinking principles as a general education objective to undergraduate students, using data-driven investigation to inform musical composition. Students compose a song to imitate an artist of their choice by analyzing data extracted from a corpus of crowd-sourced pop song transcriptions. Students learn principles of abstraction, decomposition, and algorithmic thinking; no coding experience is required. Quantitative and qualitative results indicate that students are learning and applying computational thinking principles. Since the course is designed and taught by a musician and is run in the music department, students also learn a significant amount of music theory and composition, including harmonic structures and harmonization principles, melodic organization, consonance and dissonance, aural analysis of formal structures and meter, and influence of rhythm and timbre to create desired sounds.", "authors": [{"name": "James Skripchuk", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Jennifer Shafer", "affiliation": "University of Delaware, Newark, DE, USA"}], "tags": ["data", "computational thinking", "curriculum design", "music", "steam"]}, {"title": "Creation Support by Illustrating Codes Exemplified from Visual Queries", "link": "https://dl.acm.org/doi/10.1145/3328778.3372604", "abstract": "Creation is important process in learning programming for chil-dren. It is said that children can learn well by actually creatingprograms. In a programming workshop for children, an exampleprogram is illustrated to children prior to the creation activities. Itis assumed that children can create programs using the illustratedprogram. However, there are many cases in which it is difficultfor children to use the example programs, and they can not createprograms. This paper proposes a system that supports creationactivities by exemplifying programs from search by visual queries.Visual queries composed of sprites and emoji were applied in thissystem as children are familiar with visual environment.", "authors": [{"name": "Koki Ito", "affiliation": "Ritsumeikan University, Kusatsu, Japan"}, {"name": "Maki Ichimura", "affiliation": "Ritsumeikan University, Kusatsu, Japan"}, {"name": "Juan Zhou", "affiliation": "Ritsumeikan University, Kusatsu, Japan"}, {"name": "Hideyuki Takada", "affiliation": "Ritsumeikan University, Kusatsu, Japan"}], "tags": ["children,workshop", "code exemplification", "education", "programming learning"]}, {"title": "Labeling Debugging in May's Journey Gameplay", "link": "https://dl.acm.org/doi/10.1145/3328778.3372624", "abstract": "Debugging is an integral part of programming and is difficult to master among novice programmers. We examine how middle-school learners approach debugging within a puzzle game, May's Journey, using a Playback Tool that provides a replay of student gameplay to support teacher practice and research. Teachers and researchers can use our labeling system and Playback Tool to observe students' debugging process and identify those who are struggling to learn how to debug their code.", "authors": [{"name": "Chaima Jemmali", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Elizabeth Rowe", "affiliation": "TERC, Cambridge, MA, USA"}, {"name": "Carter Ithier", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Magy Seif El-Nasr", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Ma. Victoria Almeda", "affiliation": "TERC, Cambridge, MA, USA"}, {"name": "Erica Kleinman", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["labeling", "digital games", "programming", "debugging", "playback analysis"]}, {"title": "Impact of Infusing Interactive and Collaborative Learning in Teaching Introductory Programming in a Dynamic Class", "link": "https://dl.acm.org/doi/10.1145/3328778.3372608", "abstract": "In this era of smart devices, new technologies, gadgets, apps, and numerous systems and services available over online, teaching an introductory programming course by traditional lecture method faces challenges to draw student's attention; especially in their freshman year. In this work, we discuss our experience in teaching an introductory CS course by infusing both interactive and collaborative learning in pedagogy so that students can learn using interactive platforms, tools, technologies, systems, and services as available to them and collaboration within and among groups. For interactive learning, students used an interactive programming environment (e.g. repl.it classroom) as well as online eBooks. We designed several in-class exercises, assignments, small lab-based projects with example codes and expected outputs, and unit tests by using built-in unit tests library. We also, in the middle of semester, introduced collaborative learning through teamwork on well-defined projects during the learning time and submitted at the end. The collaborations include use of basic task management tools and multi-player tool of repl.it that the students can critic, supplement, improve peer works and learn. To evaluate the impact of this infusion, a pre- and post-survey were conducted on student cohort in two different semesters. The initial evaluation of the survey results and performances (final project and final grades) show evidence to conclude that the proposed pedagogical approach increased student motivation and engagement and facilitated learning to entry-level computer science students.", "authors": [{"name": "Monir Sharker", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Roshan Paudel", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Md Mahmudur Rahman", "affiliation": "Morgan State University, Baltimore, MD, USA"}], "tags": ["visual learning", "interactive programming", "ebook", "interactive learning", "introductory programming", "collaborative learning"]}, {"title": "What does a Literature Survey Reveal about the Initiatives to Attract and Retain Women into Computer Science Majors in Latin America?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372621", "abstract": "Among the many papers describing initiatives to recruit and re- tain women into Computer Science (CS) majors, the vast majority focus on the United States and Europe. This poster addresses the research question: \"What does the literature tell us about inter- ventions for women in CS majors in Latin America?\". We have analyzed papers indexed by Scopus, Web of Science (WoS), and the Latin America Women in Computing Conference (LAWCC) using a systematic literature review process. We found papers from ten countries covering initiatives at different educational levels to increase the participation of women in Computing majors in Latin America.", "authors": [{"name": "Maristela Holanda", "affiliation": "University of Brasilia, Brasilia, Brazil"}, {"name": "Dilma Da Silva", "affiliation": "Texas A&M University, College Station, TX, USA"}], "tags": ["women", "broadening participation", "computer science majors"]}, {"title": "An Engaging CS1 Curriculum Using BRIDGES", "link": "https://dl.acm.org/doi/10.1145/3328778.3372609", "abstract": "Early programming courses such as CS1 are an important time to capture the interest of students while imparting critical technical knowledge. Yet many CS1 courses are being taught using toy assignments and activities that tend to make students uninterested or doubt the usefulness of the content. In this poster, we demonstrate an enriching experience for students by coupling interesting datasets with visual representations and interactive applications, without having to change the content of that course. Our approach utilizes extensions to BRIDGES, an API in use for sophomore level CS courses for the past 5 years. BRIDGES provides easy access to external datasets and helps build interactive applications. The assignments we present are all scaffolded in a way that can be directly integrated into most early programming courses to make routine topics compelling and exciting.", "authors": [{"name": "Alec Goncharow", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Allie Beckman", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Kalpathi Subramanian", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Luke Sloop", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Matthew Mcquaigue", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Erik Saule", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "David Burlinson", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Jamie Payton", "affiliation": "Temple University, Philadelphia, PA, USA"}], "tags": ["engagement", "real world datasets", "games"]}, {"title": "Active Learning in CS2 and Discrete Mathematics", "link": "https://dl.acm.org/doi/10.1145/3328778.3372618", "abstract": "Over the past decade, active learning pedagogical approaches have increased in popularity among multiple STEM disciplines, including Computer Science (CS). The purpose of this experience report is to reflect on the efforts taken to incorporate active learning into some of the undergraduate CS courses at the University of Georgia. This report describes the implementation details of two courses, CS2 and Discrete Mathematics, as taught during the Spring semester in 2019 with a total initial enrollment count of 551, and it summarizes the results of a common set of anonymous exit survey responses collected by the instructors on a subset of that population. In these courses, active learning was implemented using a flipped classroom model with undergraduate peer learning assistants. The surveyed population consisted of 163 CS2 students and 125 Discrete Mathematics students. The responses suggest that students either understand or believe that the active learning activities they participated in helped with their learning, especially regarding confidence and question formation. However, 67.36% of responses reported a high degree of state anxiety when receiving new assignments. Additionally, while 89.58% of responses expressed a desire to take a class with peer learning assistants in the future, only 40.63% indicated a preference for active learning when compared to traditional lecture. The course instructors discuss how they will use the insights ascertained via the exit surveys as evidence when deciding changes for future iterations of the courses.", "authors": [{"name": "Michael E. Cotterell", "affiliation": "University of Georgia, Athens, GA, USA"}, {"name": "Delaram Yazdansepas", "affiliation": "University of Georgia, Athens, GA, USA"}, {"name": "Bradley J. Barnes", "affiliation": "University of Georgia, Athens, GA, USA"}], "tags": ["discrete mathematics", "active learning", "peer learning assistants", "cs2"]}, {"title": "Computational Thinking Test Tool to Measure Cognitive Ability of K-12 Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3372594", "abstract": "This study reports the design and development of the Computational Thinking(CT) Test Tool to measure Cognitive Ability of K-12 students. The newly developed CT test tool was validated with experts and K-12 students. We expect that the CT test tool will be used as a basic data to identify the current situation of computing education.", "authors": [{"name": "Miyoung Ryu", "affiliation": "Gyeongin National University of Education, Incheon, Republic of Korea"}, {"name": "SeonKwan Han", "affiliation": "Gyeongin National University of Education, Incheon, Republic of Korea"}], "tags": ["computational thinking cognitive test tool", "computing education", "computational thinking"]}, {"title": "Physical Activity in the Classroom across the Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3372607", "abstract": "This work describes activities involving movement suitable for both advanced and introductory computer science courses. Ongoing work seeks to quantify the impact of such activities on student learning outcomes and student engagement.", "authors": [{"name": "Sonya Cates", "affiliation": "Roger Williams University, Bristol, RI, USA"}], "tags": ["student engagement", "classroom activities", "physical activity"]}, {"title": "A Simple Game to Introduce Scrum Concepts", "link": "https://dl.acm.org/doi/10.1145/3328778.3372593", "abstract": "It is often very difficult to transition from the waterfall to an agile process. To simplify this transition, we designed a LEGO game to introduce basic Scrum concepts and principles. This game provides students with an opportunity to play different scrum roles and measure the development team velocity in two sprints.", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["sprint", "game", "software process", "scrum", "agile", "lego"]}, {"title": "Student Blogs - Expression and Exposure", "link": "https://dl.acm.org/doi/10.1145/3328778.3372600", "abstract": "It is acknowledged that student blogs in computer science courses can strengthen student communication skills, but it is rarely reported that these blogs can also provide a window into their authors' multiple facets. Computer science (CS) students are not one-dimensional; they have interests outside of CS that are often hidden, isolated from their CS experience, but which, if integrated into the CS education, could enrich their experience, increase their motivation, and enhance their relationships with their peers. We have discovered that when students write regular blogs, they use them as opportunities to express those interests and reveal talents that can be leveraged by faculty to their advantage. What we learn through these blogs helps us to increase student engagement in the course and makes us better advisers for their career in school and beyond. Common to the structure of our courses is that students are encouraged to review each others' blogs, which are in public repositories, and to make suggestions to improve them. This mutual and collective review process is beneficial to all of them, because they learn about and help each other in a positive way. Students also learn about themselves by being able to look back at how their ideas evolved, how much they learned, and what they have accomplished.", "authors": [{"name": "Joanna Klukowska", "affiliation": "New York University, New York, NY, USA"}, {"name": "Stewart Weiss", "affiliation": "Hunter College, City University of New York, New York, NY, USA"}], "tags": ["reflections", "creativity", "writing", "collaboration", "blogging", "student engagement"]}, {"title": "Challenges Facing Computing Teachers in Guyana", "link": "https://dl.acm.org/doi/10.1145/3328778.3372613", "abstract": "With the introduction of computer science into school curricular around the world in recent years, it is easy to forget the challenges that developing countries may experience in following suit. Here we describe a study carried out to investigate the challenges faced by teachers in Guyana relating to resources, student engagement and in-service teacher education. A small-scale mixed-methods study with 48 teachers was conducted in two areas of Guyana, accompanying a workshop covering a range of interactive activities. Teachers reported a desire to improve the opportunities for their students but described challenges including lack of computers, lack of subject knowledge, and lack of support. They also reported that they found programming hard to learn and teach, with computer architecture easier both to learn and teach.", "authors": [{"name": "Lenandlar Singh", "affiliation": "University of Guyana, Georgetown, Guyana"}, {"name": "Penelope De Freitas", "affiliation": "University of Guyana, Georgetown, Guyana"}, {"name": "Sue Sentance", "affiliation": "King's College London, London, United Kingdom"}], "tags": ["computer science education", "teacher education", "guyana", "curriculum"]}, {"title": "Measuring Graduate Teaching Assistants' Climate Under a Pedagogical Change Initiative", "link": "https://dl.acm.org/doi/10.1145/3328778.3372619", "abstract": "An organization with high undergraduate enrollment, the College of Computing and Informatics atUNC Charlotte is undergoing a sustainable pedagogical shift. Our Graduate Teaching Assistants (GTAs) being a crucial part to sustain this change, are also facing a shift in their climate. We aim to present measurement to gauge our GTAs' climate under this pedagogical climate shift. For this purpose, we have analyzed 184 survey responses from GTAs and developed three constructs:Self-Competence, GTA-to-Faculty Relations andCommunity Belonging. Exploratory Factor Analysis was used to identify the underlying factors, exhibiting 13 items retaining to these three constructs with a Cronbach's alpha of 0.94. This measurement shows that with engaged classroom practices, we are also fostering an engaged climate for our GTAs.", "authors": [{"name": "Tonya Frevert", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Farah Tokmic", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Syeda Fatema Mazumder", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Mary Lou Maher", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["pedagogical change", "flipped classroom", "graduate teaching assistants"]}, {"title": "School-wide Integration of Computational Thinking into Elementary Schools: A Cross-case Study", "link": "https://dl.acm.org/doi/10.1145/3328778.3372623", "abstract": "This study investigated school-wide integration of computational thinking (CT) in elementary schools of: 1) systems-level approaches to integration; 2) teachers' understanding and implementation of CT integration, and 3) challenges to integration. Data sources include interviews with teachers, professional development (PD) providers, principals as well as implementation observations. Findings revealed three distinct approaches: (a) Lone STEM teacher implementer, (b) PD scaffolded approach, and (c) Whole school coach-in-residence approach. Teachers generally viewed CT in the context of problem-solving. Although struggles and challenges existed in all three schools, administrators, PD providers, and teachers all had a high commitment to CT integration.", "authors": [{"name": "Ruohan Liu", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Wei Yan", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Heather Sherwood", "affiliation": "Education Development Center, New York, NY, USA"}, {"name": "Cheri Fancsali", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}, {"name": "Maya Israel", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Melissa Pierce", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["qualitative research", "computers and society", "k-12 instruction", "computational thinking"]}, {"title": "Sparking Creativity with the Game Boy Advance", "link": "https://dl.acm.org/doi/10.1145/3328778.3372606", "abstract": "Numerous studies have shown that Game-Based Learning positively impacts educational effectiveness and student motivation. However, according to Amabile's Componential Model of Creativity, motivation is only one aspect of creativity, next to expertise and creative skills. Therefore, we looked beyond motivational aspects in order to amplify all dimensions of creativity. In a 'Software Design in C++' course at our local faculty of Engineering Technology, students learn to apply high-level object-oriented software development techniques on low-level embedded hardware. By introducing the Game Boy Advance (GBA), a 32-bit handheld released by Nintendo in 2001, students not only need the domain-specific technical expertise and motivation to succeed, but also the right creative skills to cope with the limitations of this embedded system that has only 96kb of VRAM. We focused the labs on stimulating these creative problem-solving techniques. Results are promising: students were highly motivated and creative output was distinctly increased; but technical expertise was still lacking during examination. Further work involves investigating the impact of peer-assessment on all aspects of creativity.", "authors": [{"name": "Kris Aerts", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Wouter Groeneveld", "affiliation": "KU Leuven, Leuven, Belgium"}], "tags": ["gba", "c++", "student motivation", "creativity, peer-assessment", "nintendo game boy", "software design"]}, {"title": "Designing Block-Based Programming Language Features to Support Upper Elementary Students in Creating Interactive Science Narratives", "link": "https://dl.acm.org/doi/10.1145/3328778.3372653", "abstract": "Recent years have seen a growing recognition of the importance of enabling K-12 students to engage in computational thinking, particularly in elementary grades where students' dispositions toward STEM are developing. Block-based programming has emerged as an effective tool for engaging these novice learners in computational thinking. At the same time, digital storytelling has emerged as a promising avenue for creating motivating problem-solving scenarios that engage students in science investigations. Although block-based programming and digital storytelling are in many ways synergistic, there is a lingering question of how to design block-based languages at an age-appropriate level to enable effective and engaging storytelling. In this work, we review design principles from prior block-based and digital storytelling systems as well as propose the design of block-based programming language features to enable the creation of rich, interactive science narratives by upper elementary students.", "authors": [{"name": "Kevin Oliver", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Cathy Ringstaff", "affiliation": "WestEd, Redwood City, CA, USA"}, {"name": "Andy Smith", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Sandra Taylor", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James Minogue", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Bradford Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Aleata Hubbard Cheuoua", "affiliation": "WestEd, Redwood City, CA, USA"}], "tags": ["block-based programming", "digital storytelling"]}, {"title": "A Conceptual Assessment Framework for K-12 Computer Science Rubric Design", "link": "https://dl.acm.org/doi/10.1145/3328778.3372643", "abstract": "The lack of effective guidelines for assessing students' computer science (CS) competencies is creating significant demand by K-12 teachers for CS assessments to evaluate students' learning. We propose a conceptual assessment framework that guides teachers through designing appropriate assessments for computer science (CS) activities in their classrooms. The framework addresses the critical problem of incorporating CS into K-12 curricula without corresponding assessments. We illustrate its use with the design of a rubric for a bubble sort algorithm situated in a game-based learning environment for middle-grade students. We also apply a preliminary and a revised version of this assessment on two datasets collected from students' interactions with the learning environment. We found consistency among results identified through applying the preliminary and the revised rubric. The results reveal distinctive patterns in students' approaches to CS problem solving and coherency with respect to different aspects of the rubric.*", "authors": [{"name": "Wookhee Min", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Bradford Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Anam Navied", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Bita Akram", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["k-12 cs instruction", "evidence centered design", "cs assessment"]}, {"title": "Supporting Student Success in Computing Courses Through Personalized Peer Advice", "link": "https://dl.acm.org/doi/10.1145/3328778.3372586", "abstract": "Rapid growth of enrollment has rendered students' academic success in computing courses increasingly important. Given the value of having insight from a peer's point of view, advice from students who have taken such courses will greatly help their peers better prepare for, and be academically successful in, those courses. We present a novel personalized peer advice recommender system called myCCAdvice (my-Computing-Course-Advice), which provides individual students with personalized peer advice on new computing courses. myCCAdvice finds students similar to a given student via multi-criteria rating-based collaborative filtering, using grades and perceived difficulty of the courses' concept and coding components as course ratings. For a given course, myCCAdvice then predicts the given student's personalized grade and perceived difficulty of concept and coding, and suggests personalized textual peer advice for the given student to succeed.", "authors": [{"name": "Young Park", "affiliation": "Bradley University, Peoria, IL, USA"}], "tags": ["collaborative filtering", "self advice", "recommender systems", "textual comments", "computing courses", "peer advice"]}, {"title": "Session details: Poster Session 3", "link": "https://dl.acm.org/doi/10.1145/3385594", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}, {"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "Introducing Computer Science into K-8 Classrooms: Teachers' Perspectives from a Large, Urban School District", "link": "https://dl.acm.org/doi/10.1145/3328778.3372612", "abstract": "As part of the national Computer Science for All initiative, there is a growing presence of computer science (CS) in K-8 classrooms. This poster presents findings from a survey of 130 K-8 teachers from Chicago Public Schools (CPS) about the state of computer science in their schools and their experiences teaching it. Results from the survey highlight the plurality of ways CS is being implemented in the classroom. The survey also reveals challenges instructors face in teaching CS. Finally, the survey reports on teachers' own experiences in the classroom, finding that teachers enjoy teaching CS and think their students also enjoy CS.", "authors": [{"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Andrew M. Rasmussen", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Erica Wheeler", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "John Wachen", "affiliation": "The Learning Partnership, Chicago, IL, USA"}, {"name": "David Weintrop", "affiliation": "University of Maryland, College Park, MD, USA"}], "tags": ["teachers", "cs for all", "k-8 computer science education"]}, {"title": "Initial Learning Trajectories for K-12 Quantum Computing", "link": "https://dl.acm.org/doi/10.1145/3328778.3372590", "abstract": "As quantum computation (QC) comes closer to reality, questions arise as to what elements to teach, how to teach it, and to what depth. QC instruction typically depends heavily on advanced math and/or physics. Our interdisciplinary science / computer science / education team co-created quantum computing (QC) learning trajectories (LT), zines, and activities, for young learners. We present the LT's (Superposition, Quantum State, Entanglement, Measurement, and Reversibility) and the iterative process that created them.", "authors": [{"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Jasmine Marckwordt", "affiliation": "University of California, Santa Barbara, CA, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Alexandria Muller", "affiliation": "University of California, Santa Barbara, CA, USA"}, {"name": "Randall Landsberg", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Danielle Harlow", "affiliation": "University of California, Santa Barbara, CA, USA"}, {"name": "Jennifer Palmer", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Kartik Singhal", "affiliation": "University of Chicago, Chicago, IL, USA"}], "tags": ["k-12 education", "quantum computing", "computational thinking"]}, {"title": "Promoting Collaborative Skills with Github Project Boards", "link": "https://dl.acm.org/doi/10.1145/3328778.3372646", "abstract": "Teamwork skills are much in demand in the workplace, even more so with the growth of Agile methods. This calls for giving Computer Science students more practice in the kinds of team scenarios they will encounter on the job. Key for success are hands-on experience with planning methods, prioritization techniques, time management and organization. This poster shows how the cooperative tracking tool Github Project Boards helps teams strategize development, track progress, distribute work evenly, and facilitate collaboration. It also shows how instructors can use Github Project Boards to visualize and evaluate a team's development process.", "authors": [{"name": "Edward F. Gehringer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Carmen A. Bentley", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["github project boards", "teaming skills", "collaboration", "tracking systems", "cooperative tools"]}, {"title": "CS4All: An Early Look at Teacher Implementation in NYC", "link": "https://dl.acm.org/doi/10.1145/3328778.3372627", "abstract": "CS for All initiatives have emerged around the country in the last decade with the hopes of addressing the growing call for all students to have opportunities to be proficient computational thinkers and to be exposed to computer science (CS) curriculum throughout their educational careers. As districts and states grapple with the realities of implementing such initiatives, they must address a key barrier: a lack of teacher capacity to teach CS. NYC's Computer Science for All (CS4All) is a 10-year, districtwide initiative aimed at providing high-quality computer science (CS) education to all public-school students. To address teacher capacity issues, the district has designed and implemented professional development (PD) with the goal of providing high-quality training to nearly 5,000 teachers by 2025. We conducted online surveys with about 1,500 teachers who participated in the multi-day professional development to assess the early outcomes of this effort. Results from two years of surveys offer insight into professional development quality, teacher confidence, ability of teachers to implement CS in their classrooms, and supports and barriers to offering CS (even in a district where CS is a priority). They also provide insight into how supports and barriers differ in schools serving students with high economic needs compared to schools serving students with lower economic needs. The successes and challenges highlighted by these data inform the work of other districts and states around the country engaged in similar efforts.", "authors": [{"name": "June Mark", "affiliation": "Education Development Center, Waltham, MA, USA"}, {"name": "Cheri Fancsali", "affiliation": "New York University, New York, NY, USA"}, {"name": "Wendy Castillo", "affiliation": "New York University, New York, NY, USA"}], "tags": ["teacher survey", "k-12 classroom implementation", "teacher capacity", "cs for all"]}, {"title": "The SQL File Evaluation (SQLFE) Tool: A Flexible and Extendible System for Evaluation of SQL Queries", "link": "https://dl.acm.org/doi/10.1145/3328778.3372599", "abstract": "The SQL File Evaluation (SQLFE) tool is a GUI-based, flexible, and extendible software system for evaluating the correctness of files of student SQL queries as compared to specified SQL query answers. SQLFE can be configured per question to weight any of over 30 different tests in judging correctness of a submitted answer for a particular question. These tests include successful DBMS interpretation of the query, same result set (as specified answer), the use count of particular keywords, simple formatting style, and partial credit based on simple structural format. SQLFE currently works for databases constructed under Oracle and MySQL database management systems (DBMSs), and can be extended to more DBMSs. SQLFE is available from GitHub.", "authors": [{"name": "Paul J. Wagner", "affiliation": "University of Wisconsin - Eau Claire, Eau Claire, WI, USA"}], "tags": ["sql", "evaluation", "auto-grading", "database systems"]}, {"title": "CyberPDX: An Interdisciplinary Professional Development Program for Middle and High School Teachers", "link": "https://dl.acm.org/doi/10.1145/3328778.3372652", "abstract": "CyberPDX is an annual professional development program hosted at Portland State University. Our long-term goal is to broaden participation in cybersecurity. Since 2016, over 70 middle and high school teachers from the Pacific Northwest have participated in the STREAM program, which offers interdisciplinary instruction in programming, cryptography, personal security, policy, literature, and arts. In this poster, we share our interdisciplinary curriculum, present data on short-term impacts, and describe our in-progress work to evaluate the program's longer term impacts.", "authors": [{"name": "David Pouliot", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Wu-chang Feng", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Lois Delcambre", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Veronica Hotton", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Ellie Harmon", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Robert Liebman", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Michael Lupro", "affiliation": "Portland State University, Portland, OR, USA"}], "tags": ["k12", "professional development", "cybersecurity", "interdisciplinary education"]}, {"title": "Coding Science Internships: Broadening Participation in Computer Science by Positioning Coding as a Tool for Doing Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372632", "abstract": "Computational tools, and the computational thinking (CT) involved in their use, are pervasive in science, supporting and often transforming scientific understanding. Yet, longstanding disparities in access to learning opportunities means that CT's growing role risks deepening persistent inequities in STEM [2]. To address this problem, our team developed and studied two 10-lesson instructional units for middle school science classrooms, each designed to challenge persistent barriers to equitable participation in STEM. The units aim to position coding as a tool for doing science, and ultimately, encourage a broader range of students, and females in particular, to identify as programmers. Students who participated (n=391) in a recent study of the units demonstrated statistically significant learning gains, as measured on an external assessment of CT. Learning gains were particularly pronounced for female students. Findings suggest that students can develop CT through instruction that foregrounds science, and in ways that lead to more equitable outcomes.", "authors": [{"name": "Eric Greenwald", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Ari Krakowski", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["broadening participation", "coding to learn", "computational science"]}, {"title": "Program2Play: Enticing Underrepresented Groups to Program through Gameplay", "link": "https://dl.acm.org/doi/10.1145/3328778.3372633", "abstract": "This paper introduces a new initiative of web-based games that encourages students to experiment with JavaScript instructions in order to play a series of games. This approach to involving students in early stages of programming uses principles of bricolage [2] to appeal to learning styles that traditional computer science curricula often do not appeal to. The fundamental goal is to build confidence and motivation through early programming successes. This initiative can be used in a CS0 course, to remediate programming skills for targeted students, or as a means to interest high school students in programming.", "authors": [{"name": "Evelyn Stiller", "affiliation": "Plymouth State University, Plymouth, NH, USA"}], "tags": ["programming pedagogy", "bricolage", "games for learning"]}, {"title": "Are We Consistent?: The Effects of Digitized Exams Grading", "link": "https://dl.acm.org/doi/10.1145/3328778.3372630", "abstract": "Many universities digitize exams or the process of grading the exams. This potentially allows for faster grading, is less labor intensive and less error-prone. But are the grades produced by online grading consistent with how we grade on paper? In this paper we present preliminary results of the comparison between scores given by grading online and grading on paper.", "authors": [{"name": "Gosia Migut", "affiliation": "Delft University of Technology, Delft, Netherlands"}, {"name": "Ruben Wiersma", "affiliation": "Delft University of Technology, Delft, Netherlands"}], "tags": ["digitized exams", "online grading", "higher education"]}, {"title": "Measure of the Impact of a STEM-Student-led Course on Privacy Enhancing Technologies for a non-Technical Target Population", "link": "https://dl.acm.org/doi/10.1145/3328778.3372645", "abstract": "We present the results of a course on privacy-enhancing technologies (PETs) given by undergraduate students in the group we coordinate to a group of non-technical population, focusing on the attitude changes observed in the participants. This work was done as part of the UNAM/DGAPA/PAPIME PE102718 project, where we aim at explaining in a clear, simple language the need for PETs, dispelling the overwhelming perception that privacy and anonymity are unattainable for theregular user. The presented study is based on three applications of the survey completed by our first cohort.", "authors": [{"name": "Gunnar Wolf", "affiliation": "Instituto de Investigaciones Econ\u00f3micas UNAM, Coyoac\u00e1n, Ciudad de M\u00e9xico, Mexico"}, {"name": "Alejandro Miranda", "affiliation": "Facultad de Estudios Superiores Iztacala, UNAM, Tlalnepantla, Estado de M\u00e9xico, Mexico"}], "tags": ["privacy enhancing technologies", "non-techical population"]}, {"title": "Development and Implementation of an Information-Based Short-Term Study Abroad Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3372641", "abstract": "Study abroad is considered a high-impact practice (HIP) in higher education. However, few discipline-specific study abroad courses are offered in computer science (CS) or physics. We implemented a CS/physics-based short-term study abroad course to England that focused on the history and science of information. This work provides insight for anyone considering the development and implementation of such a course at their own institution.", "authors": [{"name": "James J. Butler", "affiliation": "Pacific University, Forest Grove, OR, USA"}, {"name": "Shereen Khoja", "affiliation": "Pacific University, Forest Grove, OR, USA"}], "tags": ["information theory", "study abroad"]}, {"title": "Teacher and School Supports to Promote Equitable Implementation of AP CSP in NYC", "link": "https://dl.acm.org/doi/10.1145/3328778.3372635", "abstract": "Research-practice partnerships (RPPs) are a promising strategy for tackling persistent problems of practice and building knowledge about practices that may promote equity in computer science. Education Development Center (EDC) and New York City Department of Education (NYCDOE) are engaged in an RPP to enhance and study the implementation of high school Advanced Placement (AP) Computer Science Principles (CSP) courses in low-performing NYC schools. The objectives of this partnership are: sustained implementation of AP CSP courses in low-performing NYC high schools; greater participation of female students and students from racial and ethnic groups (URG) typically underrepresented in CS; and the integration of findings across NYCDOE's K-12 CS4All initiative. The partnership is studying and iteratively refining teacher and school supports, such as professional development (PD) and curriculum resources, school-based supports, and resources for school leaders, developed for and with low-performing schools. We hope to contribute knowledge of the curriculum, PD, and school supports that promote success for all students. The impact of the proposed work has implications for low-performing NYC high schools, and for schools nationwide that offer AP CSP. Administrators, teachers, developers, and policymakers can use these findings to promote AP CSP implementation supports for teachers and schools that show promise for improving student outcomes.", "authors": [{"name": "June Mark", "affiliation": "Education Development Center, Waltham, MA, USA"}, {"name": "Tunisia Mitchell", "affiliation": "New York City Department of Education, New York, NY, USA"}, {"name": "Kelsey Klein", "affiliation": "Education Development Center, Waltham, MA, USA"}], "tags": ["broadening participation", "computer science principles", "research-practice partnerships", "low-performing schools", "advanced placement"]}, {"title": "When Black-box Testing is Not Enough - on Designing Auto-graded Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/3328778.3372650", "abstract": "Automatic programming assignment assessment is often premised on black-box testing. Grading of student submissions typically relies on functional specifications expressed in terms of expected outputs for given test inputs. Many upper-level courses, however, are centered on concepts that relate to how programs are implemented. In a course that teaches functional programming, for instance, the assignments should require that students use functional programming techniques, even if imperative solutions are supported by the language. When students are required to use certain programming language constructs, algorithms or design strategies as they implement their programs, a different approach to automated assessment is needed. Our strategy is centered on programming assignments designed in such a way that the internals of the assignment implementation can be evaluated through automated testing. A challenge of designing such auto-graded assignments is that both the specifications and the grading tests have a much higher level of complexity compared to plain functional specifications and black-box tests. The specification of a homework assignment must have precise requirements, but not prescribe a certain solution or impair student creativity. Furthermore, test cases should not inadvertently rely on implementation details that were not specified, but must be able to detect forbidden algorithms or language features. The benefits and difficulties of our approach are discussed in this work.", "authors": [{"name": "Michel Charpentier", "affiliation": "University of New Hampshire, Durham, NH, USA"}, {"name": "Karen H. Jin", "affiliation": "University of New Hampshire, Manchester, NH, USA"}], "tags": ["programming assignments", "automated assessment", "programming language"]}, {"title": "Resources for Computational Thinking: Co-designing with Teachers", "link": "https://dl.acm.org/doi/10.1145/3328778.3372629", "abstract": "Computational thinking (CT) has become a recent policy agenda in order for students to develop interest and foundational understanding in computing and preparation for an increasingly technological workforce. In order to integrate CT into K-12 education, teachers need professional support. The field has faced common challenges developing professional learning experiences and resources that facilitate the integration of computational thinking in authentic, equitable and sustainable ways. We have worked with a cohort of over eighty teachers from around the United States to co-design and pilot pedagogical resources for computational thinking. In this poster, we summarize our co-design process with teachers and share the resources we developed for computational thinking integration.", "authors": [{"name": "Kelly Mills", "affiliation": "Digital Promise, Washington, DC, USA"}, {"name": "Josh Weisgrau", "affiliation": "Digital Promise, San Mateo, CA, USA"}, {"name": "Colin Angevine", "affiliation": "Digital Promise, Washington, DC, USA"}], "tags": ["k-12 education", "professional development", "computational thinking"]}, {"title": "Teaching Computational Thinking through Civics: NYC's Hack League", "link": "https://dl.acm.org/doi/10.1145/3328778.3372636", "abstract": "This poster provides an overview of the goals and objectives of the New York City Department of Education's (NYCDOE) Hack League, a district-wide competition that invites middle and high school students with any level of CS experience to explore the systemic impacts and applications of computing. By requiring participants to interact with data and prototype a proposed solution to an issue that the data illuminates, students creatively engage in a human-centered design and strategic problem-solving process aimed at improving the quality of life and civic issues in their communities. Each stage of competition represents a component of the engineering design process, thereby encouraging students to be thoughtful programmers. Through three stages of competition, students identify an issue and validate it with data, outline and prototype a solution while incorporating feedback from industry professionals and subject matter experts, and build metrics into their product. Making open data accessible to students has proven to be an effective approach to developing citizen scientists in NYC. This competition could be replicated in districts anywhere in the country and can be organized within or across schools. It is a great way to encourage student development as civic-minded individuals, engagement with their local government and elected officials, and application of computational thinking and computer science skills.", "authors": [{"name": "Kylie Davis", "affiliation": "New York City Department of Education, New York City, NY, USA"}, {"name": "Elana Shneyer", "affiliation": "BetaNYC, New York, NY, USA"}], "tags": ["data analysis", "software prototyping", "data science"]}, {"title": "Toward Finding Online Activity Patterns in a Flipped Programming Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3372626", "abstract": "Instructors are increasingly flipping their classrooms, where students are required to study on their own prior to in-class time with the instructor. We present preliminary results on identifying student online behavior patterns in a CS1 flipped course that correlate with students' test scores covering the material explained in the online videos. We found that clustering students based on how much of the online lecture videos they watched allows us to find significant differences in the average test scores of each cluster.", "authors": [{"name": "Maanasa Thyagarajan", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Ignacio X. Dom\u00ednguez", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Lina Battestilli", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["flipped classroom", "online student behavior", "cs1", "online video", "activity patterns"]}, {"title": "On Assessing Ethics Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3372647", "abstract": "As departments search for meaningful ways to incorporate material on ethics into the computer science curriculum, effective assessment is critical. Motivated by a framework proposed by the ImpactCS project, we describe simple open-ended questions that could provide insight into learners' progress from awareness through evaluation to responsible behavior. In a study of 22 graduating seniors at a liberal arts college we found more complete answers to our open-ended questions tended to correlate with students' perception of personal growth in ethical awareness since arriving at college.", "authors": [{"name": "Maddie Zug", "affiliation": "Pomona College, Claremont, CA, USA"}, {"name": "Tzu-Yi Chen", "affiliation": "Pomona College, Claremont, CA, USA"}], "tags": ["assessment", "ethics", "societal impact"]}, {"title": "Evaluating the Impact of Adaptive Parsons Problems on Students in Introductory Computer Science Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3372640", "abstract": "It's no surprise that students in introductory computer science courses face numerous challenges: for many, it's their first time ever programming, and computer science courses tend to be difficult and time-consuming. Parsons problems, problems where students piece together given code to write programs, solve some of these student issues: they have been shown to be more time efficient, yet just as effective for learning as traditional programming problems. However, in introductory computer science courses, students come in with varying skill sets and backgrounds. In response, some researchers have explored the space of adaptive Parsons problems, problems that provide varying levels of scaffolding based on students' abilities, continuing to adapt in difficulty based on students' progress. This paper will extend the work done on adaptive Parsons problems in two ways: by applying it to block-based programming languages, which are often used in introductory computer science courses, and by assessing its impacts on student confidence and attitudes towards the material. This study will use both intra-problem adaptive Parsons problems, where the difficulty of the existing question can be adjusted, and inter-problem adaptive Parsons problems, where the difficulty changes across problems based on student progress.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Mansi Shah", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["block-based programming", "cs0", "bjc", "snap!", "beauty and joy of computing", "cs1", "parsons problems", "adaptive parsons problems"]}, {"title": "Ethics from the Start: Exploring Student Attitudes and Creating Interventions in Intro Programming Classes", "link": "https://dl.acm.org/doi/10.1145/3328778.3372638", "abstract": "The role of ethics in computing is a topic gaining more interest in the SIGCSE community in recent years. Our work is motivated by the idea that there is benefit to integrating ethics throughout undergraduate CS curriculum from the start. Therefore, we focus on students in introductory programming classes, seeking to understand both what students' existing attitudes are about the role of ethics in computing and how intervention at this early stage might impact them. We are conducting pre and post surveys in courses for both CS majors and non-majors, as well as working with instructors to replace existing assignments with new ones that guide students to consider ethical concerns as they learn introductory programming concepts. Discussions at SIGCSE around this topic can further discussions around appropriate norms and ideal strategies for ethics integration into CS courses.", "authors": [{"name": "Mikhaila Friske", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Natalie Garrett", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Casey Fiesler", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}], "tags": ["ethics education", "introductory programming", "curriculum"]}, {"title": "Exploring Challenging Variations of Parsons Problems", "link": "https://dl.acm.org/doi/10.1145/3328778.3372639", "abstract": "Introductory programming classes teach students to program using worked examples, code tracing, and code writing exercises. Parsons Problems are an educational innovation in which students unscramble provided lines of code, as a step towards bridging the gap between reading and writing code. Though Parsons Problems have been found effective, there is some evidence that students can use syntactic heuristics to help them solve these problems without fully understanding the solution.. To address this limitation, we introduce Faded Parsons Problems, a variation of Parsons Problems where parts of the provided code are incomplete. We explore a specific instantiation of this idea, Blank-Variable Parsons Problems, in which all variable names are blanked out. Unlike another Parsons Problem variation - adding distractor code lines - Blank-Variable Parsons can be automatically created from a solution without additional effort from an instructor. A 75 minute pilot study with CS1 students indicates that solving standard Parsons Problems does not lead to short-term near-transfer in code writing, suggesting a need for problems with less scaffolding. Additionally, students self-report Blank-Variable Parsons as fitting in difficulty between Parsons Problems and code writing, suggesting Blank-Variable Parsons may be one opportunity to fill this gap.", "authors": [{"name": "Nathaniel Weinman", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Marti Hearst", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Armando Fox", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["cs1", "faded scaffolding", "practice tools", "parsons problem"]}, {"title": "Comparison Between Online and Classroom Learning for a Boolean Algebra Class", "link": "https://dl.acm.org/doi/10.1145/3328778.3372655", "abstract": "Online learning is useful for expanding educational offerings. This is crucial for institutions with limited space and courses with high demand. Universities still need to be mindful about the quality of their online offerings, and ensure that it meets higher education standards. In this work we present a retrospective comparison between concurrent offerings (one online and one in classroom) of a discrete math course. The online course was carefully designed to be as challenging as the classroom one. We note the key takeaways from the experience.", "authors": [{"name": "Neftali Watkinson", "affiliation": "University of California, Irvine, Irvine, CA, USA"}, {"name": "Lubomir Bic", "affiliation": "University of California, Irvine, Irvine, CA, USA"}], "tags": ["boolean algebra", "classroom", "e-learning", "canvas"]}, {"title": "Summer Coding Camp as a Gateway to STEM", "link": "https://dl.acm.org/doi/10.1145/3328778.3372637", "abstract": "Just about everyone in the U.S., from the National Science Foundation down to local districts, has been pushing to introduce computer science concepts into K-12. Nevertheless, many students complete high school never having the chance to learn CS. We have created a summer coding camp for high-school students (including 8th graders entering 9th grade) and designed a multi-year study to assess its effectiveness as an informal learning environment, based on theories of human motivation such as Self-Determination Theory. The camp is a 1-week immersion experience, 9am to 5pm with food and activities, that introduces basic programming via MIT APP Inventor. Lecture material and in-class exercises draw upon meaningful applications, ones appealing to \"social good.\" One unique aspect is the inclusion of professional and career development activities that engage students and broaden perspectives on CS and its applications. For example, the camp includes a college information session, alumni Skype and in-person talks, off-site visits to nearby companies, and research talks and demos by faculty. Using a pre-and-post survey design, the current study examines the effects of the camp on student self-efficacy and interest in computing, as well as general school engagement and motivation. Results confirm that participation in the summer camp increased students' self-efficacy and interest in computing, enhanced engagement in school on topics in general, and strengthened intrinsic motivation for completing schoolwork. The effects were similar for boys and girls.", "authors": [{"name": "Cecilia Cheung", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Mariam Salloum", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Kelly Downey", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Paea LePendu", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Pamela Sheffler", "affiliation": "University of California, Riverside, Riverside, CA, USA"}], "tags": ["code camp", "k-12"]}, {"title": "Poster: A Modular and Innovative Security Analytics Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3372649", "abstract": "Techniques from data science are increasingly being applied by researchers to security challenges. However, requirements unique to the security domain necessitate painstaking care for the models to be valid and robust. In this paper, we outline a novel security analytics course, its modular design, some of its key innovations, and experience in teaching it.", "authors": [{"name": "Rakesh M. Verma", "affiliation": "University of Houston, Houston, TX, USA"}], "tags": ["active attacker techniques", "privacy issues", "cybersecurity education", "base-rate fallacy", "data poisoning", "quality of data"]}, {"title": "CS2 and the Impact of Programming Language Choice", "link": "https://dl.acm.org/doi/10.1145/3328778.3372644", "abstract": "There has been extensive research about the CS1 course. Much less has been written about the CS2 course, which is often a gateway course for CS majors. CS2 classes often reflect a second semester course in programming, yet when studying this course many universities have different purposes for this course. This poster shows the programming languages used in CS2 courses by the CS programs on the 28th Reid List of First Programing Languages. The languages used in CS1 and CS2 courses are discussed and the transitions between languages as students progress from their first course to their second. The analysis will then be discussed.", "authors": [{"name": "Robert M. Siegfried", "affiliation": "Adelphi University, Garden City, NY, USA"}, {"name": "Katherine G. Herbert-Berger", "affiliation": "Montclair State University, Montclair, NJ, USA"}, {"name": "Jason P. Siegfried", "affiliation": "Adelphi University, Garden City, NY, USA"}], "tags": ["cs1", "programming languages", "cs2", "introductory programming"]}, {"title": "Program Cozmo to Enhance CS0/CS1 Learning of Secure Coding", "link": "https://dl.acm.org/doi/10.1145/3328778.3372683", "abstract": "This poster will present a novel experimental case-study that focuses on the merits of teaching software-security to CS0 and CS1 learners by demonstration of how vulnerable programming of the Cozmo robot can lead to unexpected robot-behavior. It will introduce our unique Cozmo secure-coding lesson-plan, as a new experiential-learning model, which combines learning of software-security concepts with educational-robotics (ER) in the form of hands-on, interactive coding. It will compare a conventional approach of teaching software-security via secure-coding lessons with our unconventional technique of teaching secure-coding using Cozmo. It will present student-survey based learning-assessment data collected from our experiment of offering secure-coding lessons to a diverse group of CS0 and CS1 learners through traditional secure-coding training-modules, which involve no ER. It will, then, compare these data with the student-survey based learning-assessment data gathered from our Cozmo secure-coding sessions. It will analyze these comparative-results in an effort to show preliminary evidence of the effectiveness and potential of our approach for more enhanced and engaging learning of software-security via defensive programming of Cozmo. Prior research in ER indicates that a social-robot can be an effective platform for teaching coding and cyber concepts. However, there is very limited work on the efficacy of teaching secure-coding using social-robots. Hence, our fresh, non-traditional approach of making CS0 and CS1 learners explore hands-on secure-coding through Cozmo is a first-of-its-kind research case-study in an attempt to fill this gap.", "authors": [{"name": "Mohammad Azhar", "affiliation": "Borough of Manhattan Community College, City University of New York, New York City, NY, USA "}, {"name": "Ankur Chattopadhyay", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Kevin Grondahl", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}], "tags": ["cozmo social-robot", "secure-coding", "software-security", "human-robot interactions", "cs0 and cs1 learners", "educational robots (er)", "experiential-learning model", "defensive-programming"]}, {"title": "Iterative Design and Development of UTeach AP Computer Science A Curriculum: A Collaboration Between UTeach CS and A+ College Ready", "link": "https://dl.acm.org/doi/10.1145/3328778.3372656", "abstract": "This poster outlines the goals of and challenges experienced in developing a new project-based Computer Science A curriculum. The curriculum development process was undertaken as a collaboration between curriculum developers from the UTeach Computer Science program at The University of Texas at Austin, a College Board-endorsed provider of CS Principles curriculum and professional development, and a group of highly experienced secondary computer science teachers from A+ College Ready, a program focused on increasing access to and success in Advanced Placement courses for underserved students in Alabama. The curriculum was developed through an iterative design process, incorporating feedback from pilot teachers, STEM pedagogy experts, and culturally responsive reviewers. The resulting curriculum encourages problem solving, critical thinking, and group communication, and engages students in authentic, project- based learning through a collaborative learning process. Additionally, it provides a unique narrative structure to integrate unit projects throughout the course.", "authors": [{"name": "Sarah Jenevein", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Leslie Brommer", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Carol Yarbrough", "affiliation": "A+ College Ready, Birmingham, AL, USA"}], "tags": ["advanced placement", "high school computer science", "curriculum development", "project-based learning"]}, {"title": "Comparison of Role-Assigned Grouping with Free-Form Group Activities in an Introductory Computer Science Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3372628", "abstract": "We investigated the impact of assigning specific roles in Process Oriented Guided Inquiry Learning (POGIL) activities versus giving the same group activities without pre-assigned roles. We hoped to show that the group with additional structure would receive tangible benefits: more engagement with partners, greater comprehension of material, heightened content interest, and increased retention. Preliminary results suggest that the proportion of minimally participating students was not statistically significantly different, and neither were the individual assessments. The roled section did have higher scores overall in the course, both in the group activities and also in the final exam; however, the difference was small and not clearly statistically significant. Unexpectedly, disciplinary actions and post course surveys indicate a greater rate of plagiarism on both shared lab reports and individual homework assignments in the free-form group and this may be a factor for instructors to bear in mind when utilizing group activities.", "authors": [{"name": "Bruce Char", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Steve Earth", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Jeremy Johnson", "affiliation": "Drexel University, Philadelphia, PA, USA"}], "tags": ["active learning", "roles", "pogil", "group programming"]}, {"title": "CodeKey - An Online Code Editor to Study Code Patterns and Enhance Student Performance in CS Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3372680", "abstract": "In the past several years, there has been an increase in web-based compilers that allow students to learn how to code using a browser. Many Universities use online code editors for their large Computer Science (CS) courses. For example, the CS200 course at UC Berkeley uses Jupyter Notebooks to teach Python for data science to 800+ students. All the students in the course must write and submit their code assignments in the web-browser. These online code editors for large CS courses presents several benefits. One benefit is that it becomes easier to monitor the steps that a student takes to solve a coding problem since keystrokes can be tracked using Javascript. Another benefit is that the code written by students can be stored in one central database, creating less barriers for code analysis. The CodeKey project aims to take advantage of analyzing code patterns of students in a CS course in order to find key insights. CodeKey aims to find these insights by monitoring the interactions (i.e. clicks and keystrokes) of students as each student attempts to solve a coding problem. The goal is to study the code patterns of students in a CS course in order to understand similarities and differences between students who perform well on a problem and students who do not. We also aim to study how revealing these coding patterns to a student can increase his understanding of how to solve a difficult coding problem by showing common mistakes, and by showing simple steps that lead to the correct solution.", "authors": [{"name": "Renaldo Williams", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["intelligent tutor systems", "computer science education", "web-compilers"]}, {"title": "Session details: Poster Session 4", "link": "https://dl.acm.org/doi/10.1145/3385595", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}, {"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "Toward a Pedagogy Compatible with Equitable Grading: Tenets, Difficulties, and Suggestions", "link": "https://dl.acm.org/doi/10.1145/3328778.3372675", "abstract": "Improving one's understanding of teaching and learning and applying it to instructional practice is a continuous process. While a few of us may be natural teachers, most of us need guidance to follow when planning and implementing instruction for the courses we teach. As we have examined our practice, we've discovered that we typically begin planning with instructional activity, but our plans are not done until we have explicated a grading plan (and then revised instructional plans to fit it). Recently, we have begun working with a grading plan motivated by equitable grading, an idea we first encountered in the book Grading for Equity by Joe Feldman. We have found that adopting an equitable grading plan has provided us with a framework for course design that has significantly improved our pedagogy. In this poster, we present the first work on implementing equitable grading in computer science education.", "authors": [{"name": "Andrew Berns", "affiliation": "University of Northern Iowa, Cedar Falls, IA, USA"}, {"name": "J. Philip East", "affiliation": "University of Northern Iowa, Cedar Falls, IA, USA"}], "tags": ["equitable pedagogy", "assessment", "grading"]}, {"title": "Fileshark: A Graphical File System Visualization Tool", "link": "https://dl.acm.org/doi/10.1145/3328778.3372648", "abstract": "The file system is a critical and ubiquitous part of our operating systems, yet it is often poorly understood. While many undergraduate students studying computer science learn the fundamentals of operating systems, they can often find it difficult to fully comprehend how a file system works. This difficulty may be in part because the true workings of a file system are hidden from the user, and so any coverage of its operation was done, by necessity, in the abstract. To address this, we have created a tool which visualizes the operations of the file system in situ, much like Wireshark provides information on what is happening on a network. Our tool, named Fileshark, provides an easy-to-use interface for visualizing the processes involved in reading, storing, and deleting data. Our tool can aid in the teaching of operating systems, computer forensics, and common concepts like transactions that are also found in other domains (e.g. databases and distributed systems).", "authors": [{"name": "Sarah Diesburg", "affiliation": "University of Northern Iowa, Cedar Falls, IA, USA"}, {"name": "Andrew Berns", "affiliation": "University of Northern Iowa, Cedar Falls, IA, USA"}], "tags": ["operating systems pedagogy", "file system visualization"]}, {"title": "First Generation-Rural Computer Science Students: Challenges in Retention and Success", "link": "https://dl.acm.org/doi/10.1145/3328778.3372662", "abstract": "Many undergraduates who pursue a major in Computer Science (CS) at rural universities identify themselves as first-generation students. There is a large body of research that confirms first-generation students are more likely to switch from CS to a different major, or leave their university completely within the first year. In response, this study explored the challenges that first-generation students from rural backgrounds face, and factors that might increase their chances of retention and success within the major. Additionally, the study identified thematic differences between first-generation students and non-first-generation students that highlight potential setbacks, such as their previous exposure and preparation for CS concepts, and their confidence in their ability to succeed in the courses and major. The poster provides details of the survey and other evaluative protocols as well as the analysis results and recommendations for program interventions.", "authors": [{"name": "Juston Newcomb", "affiliation": "University of Maine, Orono, ME, USA"}, {"name": "Christina A. LeBlanc", "affiliation": "University of Maine, Orono, ME, USA"}, {"name": "Penny Rheingans", "affiliation": "University of Maine, Orono, ME, USA"}], "tags": ["success", "rural", "retention", "intervention", "first-generation"]}, {"title": "Vectors of CT-ification: Integrating Computational Activities in STEM Classrooms", "link": "https://dl.acm.org/doi/10.1145/3328778.3372674", "abstract": "While the Next Generation Science Standards set an expectation for developing computer science and computational thinking (CT) practices in the context of science subjects, it is an open question as to how to create curriculum and assessments that develop and measure these practices. In this poster, we show one possible solution to this problem: to introduce students to computer science through infusing computational thinking practices (\"CT-ifying\") science classrooms. To address this gap, our group has worked to explicitly characterize core CT-STEM practices as specific learning objectives and we use these to guide our development of science curriculum and assessments. However, having these learning objectives in mind is not enough to actually create activities that engage students in CT practices. We have developed along with science teachers, a strategy of examining a teacher's existing curricula and identifying potential activities and concepts to \"CT-ify\", rather than creating entirely new curricula from scratch by using the concept of scale as an \"attack vector'' to design science units that integrate computational thinking practices into traditional science curricula. We demonstrate how we conceptualize four different versions of scale in science, 1. Time, 2. Size, 3. Number, and 4. Repeatability. We also present examples of these concepts in traditional high school science curricula that hundreds of students in a large urban US school district have used.", "authors": [{"name": "Connor Bain", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Uri Wilensky", "affiliation": "Northwestern University, Evanston, IL, USA"}], "tags": ["science education", "agent-based modeling", "computational thinking"]}, {"title": "Practice Exams and Student Performance in Introductory Programming", "link": "https://dl.acm.org/doi/10.1145/3328778.3372676", "abstract": "Introductory Computer Science courses are often challenging, and students who do not consistently practice the material tend to struggle the most. Weekly exams are an excellent strategy to make students review and practice the course material frequently and consistently. Providing practice exams a few days in advance is a way to help students better prepare and succeed in weekly tests. In this study, we looked at three aspects of how practice exams could correlate with students' performance in actual tests. First, we compared the performance of students who attempted the practice exams with those who did not. Second, we looked at how early students started the practice exam with respect to the date of the actual exam. Third, we calculated the total amount of time spent on each practice exam. Our preliminary results indicate superior performance of students who attempted the practice exams; no effect of practice start time; and a detectable but weak negative correlation between practice duration and exam performance.", "authors": [{"name": "Navid Hashemi Tonekaboni", "affiliation": "Emory University, Atlanta, GA, USA"}, {"name": "Davide Fossati", "affiliation": "Emory University, Atlanta, GA, USA"}], "tags": ["practice exams", "introduction to programming", "student performance"]}, {"title": "Training Effective and Confident Computer Science TAs", "link": "https://dl.acm.org/doi/10.1145/3328778.3372681", "abstract": "This poster presents a one-quarter seminar required of first-time and re-turning teaching assistants in the Computer Science and Engineering department at UC Riverside. The seminar covers departmental expectations, introduces TAs to methods for engaging large and diverse classrooms, and covers pedagogical practices in Computer Science. In addition to coverage of general issues surrounding teaching, the seminar includes many exercises that relate specifically to the teaching of computer science. Returning TAs serve as mentors for first-time TAs and participate in peer-observation and other activities. Initial results show a significant improvement in TA evaluations over the past year since the revamping of this seminar course.Moreover, TAs self-report an increased confidence in their teaching ability, communicating with students as well as motivating students.", "authors": [{"name": "Mariam Salloum", "affiliation": "University of California, Riverside, Riverside, CA, USA"}], "tags": ["peer-mentorship", "teaching tips", "teacher assistant training"]}, {"title": "Coding Nation: Gaming Rewards for Coding Practice", "link": "https://dl.acm.org/doi/10.1145/3328778.3372661", "abstract": "With recent research discussing the benefits of student's practicing programming skills in many small focused assignments and longstanding support for providing automated tests to students (including tools such as Web-Cat that have been around for a decade), the logical next step is to provide a suite of small practice problems with automated tests. However, this approach does not address the problem of motivation or the quality of the experience for students. From experience, the typical prod (mandatory graded items) has limited success, and adds the burden of including these items within the assessment framework for a course that may dilute the assessment power of the final course grade. We propose to gamify the practice process. Similar to modern games we will provide a clear progression path with continuous rewards for completing tasks. Additionally, the tasks will be small in scope with support for providing custom automated tests to support automated verification of student work and automated feedback. The goal is to develop a customizable programming practice problem system for use in an introductory course for supplementary practice.", "authors": [{"name": "Brian Eddy", "affiliation": "University of West Florida, Pensacola, FL, USA"}, {"name": "Jonathan Corley", "affiliation": "University of West Georgia, Carrolton, GA, USA"}, {"name": "Ewan Peterson", "affiliation": "University of West Georgia, Carrolton, GA, USA"}, {"name": "Carlos Morales", "affiliation": "University of West Florida, Pensacola, FL, USA"}], "tags": ["cs1", "gamification", "autograding"]}, {"title": "Incorporating Embedded Systems Security Awareness into a Computer Science Course via Minimal Interventions", "link": "https://dl.acm.org/doi/10.1145/3328778.3372666", "abstract": "In this poster, we describe our research on the use of small units of content, termed minimal interventions, to create awareness of embedded systems security concepts in an undergraduate course, Introduction to Operating Systems and Networking. This work focuses on the incorporation of simple activities such as short readings, and the evaluation of their potential as teaching tools. To study the effectiveness of this minimal intervention approach, we collected student performance data over six (6) semesters and across multiple modalities of the course, with a total of 1,168 study participants. Students were asked to complete a short survey before and after completing the activities, to assess prior knowledge of the subject and measure knowledge gains that resulted from participation in the activity.", "authors": [{"name": "Riley H. Jones", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Julio C\u00e9sar Baham\u00f3n", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Stacey Watson", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Harini Ramaprasad", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["computer science education", "embedded systems security"]}, {"title": "Using Forcing Functions to Improve Student Preparedness in an Operating Systems and Networking Class", "link": "https://dl.acm.org/doi/10.1145/3328778.3372668", "abstract": "In this poster, we describe our experiences with improving student preparedness in a junior-level course, Introduction to Operating Systems and Networking, that is taught in multiple modalities. The course is designed around the use of Active Learning techniques and the face-to-face version uses the Flipped Classroom model. Course content, termed 'preparatory work', is delivered to students via lecture videos and online readings/tutorials. Students then engage with the course material via hands-on, application-oriented activities. One of the challenges we faced when we first 'flipped' this class is that students would not perform the necessary preparatory work before class. To address this issue, we explored the use of forcing functions, i.e., course design elements that help ensure the completion of preparatory work by students. We discuss the different forms of forcing functions that we used and present preliminary results on their effectiveness in improving preparedness.", "authors": [{"name": "Riley H. Jones", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Julio C\u00e9sar Baham\u00f3n", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Stacey Watson", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Harini Ramaprasad", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["online education", "engagement", "flipped classroom", "active learning"]}, {"title": "Teaching Programming to Science Majors by Modelling", "link": "https://dl.acm.org/doi/10.1145/3328778.3372688", "abstract": "Programming is playing an increasingly important role in various fields, including science. However, traditional programming instruction tends to use small-scale and general examples to explain syntax and semantic meaning of the code, which cannot foster students' programming ability of solving real-world problems. This research was intended to develop a modelling-based instruction for scientific programming to guide students to solve programming problems based on the modelling process (phenomenon description, data modelling, algorithmic modelling, coding, and verification and debugging). A learning platform based on the proposed modelling process was also developed to assist science-major students to learn how to solve real-world scientific problems by programming. An empirical study was conducted on thirty-two science-major college students to prove the effectiveness of the modelling-based scientific programming. The experiment results show that students who engaged more in modelling had higher programming performance. The modelling-based instruction actually helps students to write programs for solving scientific problem by using both of data and algorithmic models.", "authors": [{"name": "Hsin-Ling Hsieh", "affiliation": "National Taiwan Normal University, Taipei City, Taiwan Roc"}, {"name": "Yu-Tzu Lin", "affiliation": "National Taiwan Normal University, Taipei City, Taiwan Roc"}], "tags": ["programming instruction", "stem", "computational thinking (ct)", "scientific computing"]}, {"title": "Teaching Undergraduate Sociologists Modeling and Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3328778.3372687", "abstract": "The introductory agent-based modeling course we are presenting aims to equip second-year sociology students with basic skills which are critical to transforming their research ideas into theories and computational models. Our course follows a general course on theory construction in social science. As one of the first interactions of undergraduate social science students with computer science concepts, the course partially serves as a CS0 course; however, the main focus is on the higher-level skills needed to model social phenomena. This requires the course to maintain multiple foci on computer science and domain skills. In this paper, we present a course design considerations and establish a foundation for the comparison of agent-based models and the computational thinking and CS0 skills required for undergraduate social scientists studying agent-based modeling.", "authors": [{"name": "Vsevolod Suschevskiy", "affiliation": "National Research University Higher School of Economics, St. Petersburg, Russian Fed."}, {"name": "Ilya Musabirov", "affiliation": "National Research University Higher School of Economics, St. Petersburg, Russian Fed."}], "tags": ["social science", "agent-based modeling", "computational thinking"]}, {"title": "Converting Handwritten Text to Editable Format via Gesture Recognition for Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372678", "abstract": "In this project, we present a real-time Internet of Things (loT)-based system to convert handwritten text into editable format by implementing Hand Gesture Recognition (HGR) with Raspberry Pi for classroom education. HGR is implemented using edge detection algorithm and it is used to reduce computational complexity and improve the efficiency of the system. Raspberry Pi is used to retrieve and perceive HGR and to build a smart classroom via loT technologies. Handwritten images are converted into editable format by using OpenCV and machine learning algorithms. In the text conversion, recognition of uppercase and lowercase alphabets, numbers, special characters, mathematical symbols, equations, and figures are included with recognition of word, lines, blocks, and paragraphs. With the help of Raspberry Pi and IoT technologies, students can access the editable format of lecture notes via a desktop application which helps students to edit and share notes and images according to their necessity. Implementation details and comprehensive evaluations of the system are summarized in the paper.", "authors": [{"name": "Meng Han", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Nidhibahen Patel", "affiliation": "Georgia Southern University, Savannah , GA, USA"}, {"name": "Selena He", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Zhigang Li", "affiliation": "Kennesaw State University, Marietta, GA, USA"}], "tags": ["text tagging", "gesture detection", "education", "neural networks"]}, {"title": "Seeking the Goals of K-12 Computing Education: A Text Analysis based Literature Review", "link": "https://dl.acm.org/doi/10.1145/3328778.3372672", "abstract": "What students are supposed to learn from computing education is a fundamental question for curriculum design. Based on 1,462 articles we extracted from Web of Science, Eric, and Jstor, we performed a keyword analysis and case analysis so as to answer this question. The findings indicate that problem-solving, collaboration skills, and creativity are the common goals identified in computing education, while students' improvements of abstraction, inclusiveness, and self-efficacy are rarely studied by educators. By comparing this result to the learning objectives defined by curriculum standards, we identified a gap between the current common practices in school and the visions provided by the standards. We also summarized some best practices of improving students' multiple competences through computing education.", "authors": [{"name": "Jing (Selena) He", "affiliation": "Kennesaw State University, Kennesaw, GA, USA"}, {"name": "Meng Han", "affiliation": "Kennesaw State University, Kennesaw, GA, USA"}, {"name": "Yinning Zhang", "affiliation": "University of West Georgia, Carrollton, GA, USA"}], "tags": ["learning objectives", "student competences", "computing education", "k-12"]}, {"title": "Toward a Model of Polymorphism Comprehension", "link": "https://dl.acm.org/doi/10.1145/3328778.3372664", "abstract": "Polymorphism is challenging for novice programmers because it is an emergent consequence of multiple language features. OO polymorphism is critical to flexible software design, but no model currently explains student comprehension. In this research, students implemented the Strategy pattern to improve their comprehension of polymorphism, then were assessed by professional developers in whiteboard interviews. From these data, the authors work toward deriving a model of novice comprehension of polymorphism.", "authors": [{"name": "Kevin Coogan", "affiliation": "Blackburn College, Carlinville, IL, USA"}, {"name": "Joshua B. Gross", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}, {"name": "Gabriel S. Oliviera", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["polymorphism", "design patterns", "cs2", "whiteboard interviews", "object-oriented programming"]}, {"title": "Random Input and Automated Output Generation in Submitty", "link": "https://dl.acm.org/doi/10.1145/3328778.3372685", "abstract": "Fuzzing, testing a codebase against a set of randomly generated inputs, has become a promising model of testing across the industry due to its ability to reveal difficult to detect bugs. Separately, the use of randomized inputs when testing student code submissions removes the potential for student hard-coding behavior. Motivated by these factors, we present a solution for the automated generation of testcase inputs and expected outputs within Submitty, an open source automated grading system from Rensselaer Polytechnic Institute. We detail an enhanced workflow that allows instructors to provide our testing system with an assignment-specific input generation script and an assignment solution. The input generation script is run at student test-time, providing students with either entirely generated inputs or a combination of generated and hand-crafted testcases. The instructor solution is run against the same inputs to produce expected results. This model of testcase specification carries the benefit of simple regeneration of expected output files if an assignment's specification changes after submissions open or between semesters. We present preliminary results of the use of random input generation in our large introductory programming courses, and evaluate the ability of random inputs to curb student hardcoding behavior as it relates to an early submission incentive system, which grants students an extension for achieving a target assignment score early in the week an assignment is due. We examine random input generation's ability to reveal bugs in student submissions from previous semesters.", "authors": [{"name": "Drumil Patel", "affiliation": "Indian Institute of Technology, Roorkee, Roorke, India"}, {"name": "Matthew Peveler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Evan Maicus", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Barbara Cutler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}], "tags": ["testing", "autograding", "fuzz testing"]}, {"title": "Automated and Manual Grading of Web-Based Assignments", "link": "https://dl.acm.org/doi/10.1145/3328778.3372682", "abstract": "Grading web-based assignments poses many unique challenges when compared with other types of programming assignments. For introductory courses, grading involves not just validation of source code, but also performing some level of functional testing through a browser environment, where one clicks on content, and validates the browser state. In upper level courses, assignments increasingly use several different services, such as a web server and database, running concurrently, each potentially exposing ports for user access. Finally, for some assignments where students are encouraged to be creative, an instructor must then be able to view and interact with the running code, which has historically meant downloading, setting it up on their local machine, and running it -- which can prove burdensome. In this work, we present a system that can perform the task of automated grading, create a web-accessible environment on the server for the instructor to manually grade the assignment, and that can scale to handle many concurrent instances of both. To evaluate the effectiveness of our system, we will demonstrate its usage within the context of several assignments ranging over several different levels and courses of our Information Technology curriculum.", "authors": [{"name": "Barbara Cutler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Matthew Peveler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Evan Maicus", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}], "tags": ["autograding platforms", "autograding", "information technology"]}, {"title": "Teaching Computer Graphics Programming Using a Game Development Engine", "link": "https://dl.acm.org/doi/10.1145/3328778.3372669", "abstract": "This poster presents our experience in using a Game Development Engine (GDE, i.e. Unity) for teaching introductory Computer Graphics (CG) courses. About a decade ago, standard textbooks used in CG courses began updating to adopt shader-based APIs and programmable GPUs. More recently, Graphics APIs evolved towards a lower level of hardware abstraction, reduced overhead, and multithreading capabilities. Once again, CG instructors have to either use outdated models, or change the way they teach. Acknowledging the divide between the development speed of GDEs, and the complexity and vastness of new graphics APIs, we show how the use of a GDE can help students understand core CG concepts, and still include shader-based programming, while low-level tasks are managed by the engine itself.", "authors": [{"name": "Holly Zhang", "affiliation": "Indiana University, Bloomington, IN, USA"}, {"name": "Dimitrij (Mitja) Hmeljak", "affiliation": "Indiana University, Bloomington, IN, USA"}], "tags": ["computer-aided learning", "computer graphics", "game development engine", "educational technology"]}, {"title": "Ask Me Anything: Assessing Academic Dishonesty", "link": "https://dl.acm.org/doi/10.1145/3328778.3372658", "abstract": "We provide a method for assessing self-reported rates of cheating among students. The method is both i) privacy-preserving in the sense that one cannot use answers as evidence that any particular student cheated and ii) non-anonymous in the sense that one can record each student's answer for use in future correlative studies. Because accuracy relies on students' willful participation, we describe how to convince students that they take no risk by taking the survey. This method showed that 42% of 847 students willfully cheated in an Algorithms course. Surveying 181 CS Theory students showed no difference in cheating rates on written vs. coding assignments.", "authors": [{"name": "Nathan Brunelle", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "John R. Hott", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["learning environment", "cheating", "academic integrity", "undergraduate instruction"]}, {"title": "How Personalized Feedback Emails Can Enhance Participation Rate in Online Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3372689", "abstract": "The instructors in conventional classes play a crucial role in motivating students to participate in class activities. However, in asynchronous online courses, such a relationship where the instructor act as the observer and the motivator is missing. In this paper, we performed an experiment on an online introductory course in computer science to understand how personalized feedback emails can address this limitation. For this purpose, we designed a forecasting system to analyze the progress of students towards the end of the semester and predict their final grades. Our quantitative and qualitative data analysis shows how such a feedback system can improve both the performance and the level of satisfaction of students in the online classes. More than ~42% of students ended up getting grades better than their expected scores, and ~78% of students confirmed that the feedback emails motivated them to enhance their engagement in the class discussions.", "authors": [{"name": "Navid Hashemi Tonekaboni", "affiliation": "Emory University, Atlanta, GA, USA"}, {"name": "Sahar Voghoei", "affiliation": "University of Georgia, Athens, GA, USA"}, {"name": "Delaram Yazdansepas", "affiliation": "University of Georgia, Athens, GA, USA"}], "tags": ["class participation", "introduction to programming", "online course", "personalized monitoring", "online participation"]}, {"title": "More A's, Fewer F's in a Data Structures Class in a New Classroom Building Designed for Active Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3372673", "abstract": "Recognizing the value of evidence-based active learning teaching methods, as well as the need for higher-order skills in its increasingly diverse student body, the University of California, Irvine recently invested $62 million in a new classroom building designed for active learning. We report first experiences in transforming a Data Structures class to take advantage of this space. The specially designed environment made it easier for students to collaborate on problem solving, discuss their solutions with each other, and share them with the entire class for further discussion. Survey data showed that students appreciated the benefits of the space and the active learning exercises. Compared to a previous offering of the course taught by the same instructor in a traditional lecture hall, students in this highly-structured active learning classroom were more likely to earn an A grade (41% vs 75%), and three times less likely to fail (6.7% vs 2.1%).", "authors": [{"name": "Raymond Klefstad", "affiliation": "University of California, Irvine, Irvine, CA, USA"}], "tags": ["active learning", "learning spaces"]}, {"title": "Active Learning with Code Writing in Large Lectures", "link": "https://dl.acm.org/doi/10.1145/3328778.3372677", "abstract": "Studies have found that many CS students perform poorly on basic programming tasks, and interviewers in industry complain that CS graduates cannot write code. Learning gains have been shown from active learning techniques such as Peer Instruction, but only for multiple-choice questions, not for writing code. Studies of multiple choice questions such as code tracing have shown weak correlations to code writing, and extremely small improvements in syntax in only one third of students. These results are consistent with a century of research showing limited transfer of knowledge, and skill acquisition literature showing that skill is developed only with many hours of practice. We developed an active learning activity called LiveQuiz for large university courses, enabling every student to write specific small functions during lecture, using an online community tool on their own devices. Anonymous responses can be seen on the lecture hall screen in a single conversation thread, which the instructor scrolls. Both students and the instructor analyze and discuss the correctness of different solutions. LiveQuiz was effective in helping students to write correct code: e.g, the percentage of correct sequential search functions rose from 36% to 96%. LiveQuiz is a promising active learning technique using existing tools, giving students practice and prompt feedback in a high-level skill. It is fast and easy to implement, and it provides the instructor first drafts of students' problem solving, which can yield insights for future teaching.", "authors": [{"name": "Raymond Klefstad", "affiliation": "University of California, Irvine, Irvine, CA, USA"}], "tags": ["active learning", "programming instruction"]}, {"title": "Transforming the Learning Experience of Non-Traditional Students in an Online CS1 Course through Peer-Instruction", "link": "https://dl.acm.org/doi/10.1145/3328778.3372591", "abstract": "In the 21st century, Computer science (CS) academic programs are becoming as diverse and innovative as computer science itself. Due to the increasing number of jobs and national demands for more computing professionals, we see a surge of non-traditional students (aged over 25), entering the CS1 course, who already have a degree in a different discipline and work either full-time or part-time. These students have very low retention rate beyond CS1 course. We researched at a large metropolitan public research university, Florida International University (FIU), where we have designed an online CS1 course, integrating peer-instruction, to addresses the divergent background of our student population so they can thrive in computing major/minor, beyond CS1 course. In this poster, we report our findings on how the learning experience of non-traditional students is impacted by the peer-instruction integrated in the online CS1 course.", "authors": [{"name": "Farzana Rahman", "affiliation": "Syracuse University, Syracuse, NY, USA"}, {"name": "Tiana Solis", "affiliation": "Florida International University, Miami, FL, USA"}], "tags": ["peer-instruction", "active learning", "cs1", "non-traditional", "coding"]}, {"title": "Student Psychological Factors and Diversity in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372671", "abstract": "Underrepresentation of women and Black and Latinx individuals in computer science (CS) is a well-documented issue facing university training programs and the field in general. In an effort to expand on current knowledge and help bridge the equality gap in CS, a pilot interdisciplinary Computing Applications minor program was started in 2016 at San Francisco State University (SFSU). The \"Promoting INclusivity in Computing\" (PINC) program was designed to improve diversity in computing and increase computing literacy in data-intensive fields, specifically biology and chemistry. Students participating in the PINC program were compared to lower division CS majors at SFSU on measures assessing their attitudes toward computer science, goal-setting tendencies, experience of stereotype threat, general self-efficacy, and computer science self-efficacy. Analysis showed that students in the PINC program reported lower levels of computer science self-efficacy, but there were no significant differences between groups on self-report measures of goal-setting tendencies, experience of stereotype threat, attitudes toward computer science, and general self-efficacy. These findings highlight the success of the minor program in creating an educational environment that supports the achievement of underrepresented (UR) students, as well as the similar psychoeducational traits of the two groups of students. Findings may be of particular interest to postsecondary CS teachers, researchers interested in social justice and representation issues as they pertain to the field of computing, and university and departmental administrators who wish to increase and promote diversity in their CS programs.", "authors": [{"name": "Anagha Kulkarni", "affiliation": "San Francisco State University, San Francisco, CA, USA"}, {"name": "Ilmi Yoon", "affiliation": "San Francisco State University, San Francisco, CA, USA"}, {"name": "Shasta Ihorn", "affiliation": "San Francisco State University, San Francisco, CA, USA"}], "tags": ["computing", "education", "gender", "race", "equity"]}, {"title": "Using SMT Solver and Logic Puzzles for Teaching Computational Logics in Discrete Mathematics Class", "link": "https://dl.acm.org/doi/10.1145/3328778.3372686", "abstract": "Computational logics is one of the core languages for undergraduate students to build the fundamental knowledge and understanding of the computer science principles. However, unlike other beginner-level programming language courses, most students learn computational logics only with deduction or paper-and-pencil problem solving without any programming experiences. This poster shows our case of providing a SMT-solver (e.g., Z3) and programming problems of writing logic puzzle solvers (e.g., Sudoku, Numbrix) as effective learning materials that beginner-level students can understand and practice computational logics as rigorous programming languages. These problems involve students modeling a problem as a satisfiability problem, finding and specifying constraints of a problem as predicate logic formulas, and calling a SMT solver from the programs, and other relevant problem-solving activities. We present a set of SMT-solver-based programming assignments (with different difficulty-levels) designed for beginner-level computer science course, instructions for students to equip basic skills for using Z3, useful set-up to challenge and support students at the same time. We also discuss our teaching experiences, open issues and future work.", "authors": [{"name": "Shin Hong", "affiliation": "Handong Global University, Pohang, South Korea"}], "tags": []}, {"title": "The Changing Profile of ECS Teachers", "link": "https://dl.acm.org/doi/10.1145/3328778.3372679", "abstract": "This study compares the characteristics and professional development (PD) experiences between teachers who began teaching Exploring Computer Science before and after the enactment of a CS graduation requirement in the Chicago Public Schools. The post-requirement teachers were less likely to have a CS background, but their experience in the ECS PD and their level of confidence at the end of the PD were equivalent to the early adopters.", "authors": [{"name": "Steven McGee", "affiliation": "The Learning Partnership, Chicago, IL, USA"}, {"name": "Don Yanek", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Lucia Dettori", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Dale F. Reed", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Andrew M. Rasmussen", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Ronald I. Greenberg", "affiliation": "Loyola University Chicago, Chicago, IL, USA"}], "tags": ["exploring computer science", "professional development"]}, {"title": "Are Variable, Array, and Object Diagrams in Introductory Java Textbooks Explanative?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372660", "abstract": "Diagrams in textbooks are essential tools in explaining concepts. An effective diagram helps a novice learner build a runnable mental model, increase recall and improve problem-solving skills. Richard Mayer suggests that for a diagram to be effective, it must beexplanative and, thus, document two major features: \\textitsystem topology andcomponent behaviour. We surveyed diagrams of variables, arrays and objects in 15 commonly used introductory Java textbooks to investigate if the diagrams are explanative. This abstract presents the analysis of arrays.", "authors": [{"name": "Celine Latulipe", "affiliation": "University of Manitoba, Winnipeg, MAN, Canada"}, {"name": "Manuel A. P\u00e9rez-Qui\u00f1ones", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Syeda Fatema Mazumder", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["cs1 textbooks", "arrays", "diagrams"]}, {"title": "Securing the Next Generation", "link": "https://dl.acm.org/doi/10.1145/3328778.3372665", "abstract": "Weak authentication practices that rely on passwords for security have led to widespread data breaches and successful phishing attacks. Recent advances in the cost and usability of hardware security tokens have made the prospect of effectively augmenting password-based authentication or removing it altogether a possibility. To actualize this, a paradigm change in how people learn to authenticate accounts on-line must occur. Towards this end, we describe a curriculum to teach high-school students the perils of passwords and a program to distribute hardware security tokens to them as they are first setting up their on-line presence in order to improve the security of the next generation.", "authors": [{"name": "Wu-chang Feng", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Bob Liebman", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Lois Delcambre", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Veronica Hotton", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Ellie Harmon", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Michael Lupro", "affiliation": "Portland State University, Portland, OR, USA"}], "tags": ["k-12 education", "multi-factor authentication", "phishing prevention", "hardware security tokens", "password security"]}, {"title": "Utilizing Gamification and Visualization in Designing Labs for Teaching Algorithms", "link": "https://dl.acm.org/doi/10.1145/3328778.3372684", "abstract": "This poster describes an effort to design labs for teaching algorithms through gamification and visualization. In order to make the labs doable and enjoyable, games are crafted under four simple rules. Visualization code is provided for each lab, so that students only need to focus on developing solutions to implement algorithms. Students work in pairs and demonstrate solutions of labs visually using pictures or animations at the end. This experience helps students to engage in the learning process.", "authors": [{"name": "Jingsai Liang", "affiliation": "Westminster College, Salt Lake City, UT, USA"}], "tags": ["python", "gamification", "algorithm", "visualization"]}, {"title": "Introducing Parallel Computing Concepts through a POGIL Activity: A Pilot Study", "link": "https://dl.acm.org/doi/10.1145/3328778.3372577", "abstract": "POGIL activities have been used for various computer science courses. However, there is no published POGIL activity for introducing parallel and distributed computing concepts. Recent ABET curriculum recommendations include the introduction of parallel and distributed computing concepts in undergraduate Computer Science/Engineering programs. In this work, we plan a cross-university study of evaluating the impact of using POGIL to introduce parallel computing topics in Data Structures and Algorithms or similar courses in an undergraduate computer science curriculum. We designed a POGIL tool that includes an unplugged activity that helps demonstrate some fundamental concepts of parallel computing. This unplugged activity is then followed by a set of reflective questions regarding potential advantages and challenges of using parallel computing. %NEEDED? WE SAY IT LATER: The POGIL tool also contains code written in Java, C/C++, and C\\#. We plan to use PRE/POST surveys to collect data from undergraduate CS students from five universities located in different parts of the US with diverse student population. At the end of this work in progress, we will use the data to investigate how this POGIL activity helps students gain an understanding of parallel computing.", "authors": [{"name": "Mahmood Hossain", "affiliation": "Fairmont State University, Fairmont, WV, USA"}, {"name": "David Q. Liu", "affiliation": "Purdue University Fort Wayne, Fort Wayne, IN, USA"}, {"name": "Razvan A. Mezei", "affiliation": "Saint Martin's University, Lacey, WA, USA"}, {"name": "Sa\u00fal A. Blanco", "affiliation": "Indiana University, Bloomington, IN, USA"}, {"name": "E. Preston Carman", "affiliation": "Walla Walla University, College Place, WA, USA"}], "tags": ["classroom activity", "pogil activities", "parallel computing"]}, {"title": "Session details: Wednesday Workshops", "link": "https://dl.acm.org/doi/10.1145/3385596", "abstract": "No abstract available.", "authors": [{"name": "Dennis Bouvier", "affiliation": "Southern Illinois University Edwardsville"}, {"name": "Laurence D. Merkle", "affiliation": "Air Force Institute of Technology"}], "tags": []}, {"title": "Learning to Code in the Unity 3D Development Platform", "link": "https://dl.acm.org/doi/10.1145/3328778.3367010", "abstract": "Unity (Unity.com) is thought of as a game engine, however in recent years it is identified as a real-time 3D development platform. Part of its power is the underlying object hierarchy of 2D and 3D visual, interactive, audio, and physics objects that can be fully defined in a sophisticated drag and drop development environment. Another part of its power is that it is fully programmable in C#. In fact, fully implementing a project requires 'hooking up' C# functions. Via C# you can even customize the development environment. The bottleneck for Unity designers is learning to navigate the requisite C# code. Unity is gradually being used in courses and workshops outside of the SIGCSE community to teach coding, especially at the high school level. It also has a substantial following among independent novice game developers who do not have formal training in computer science. This workshop is an opportunity for CS educators to (1) get an intense introduction to the Unity development environment, (2) have the object model explained using well-established SIGCSE terminology and perspective, (3) explore and discuss the feasibility of using Unity to teach introductory computer science.", "authors": [{"name": "Chris Dunne", "affiliation": "RiverSound Solutions, Montclair, NJ, USA"}, {"name": "Gail Carmichael", "affiliation": "Shopify, Ottawa, ON, Canada"}, {"name": "Ursula Wolz", "affiliation": "RiverSound Solutions, Montclair, NJ, USA"}], "tags": ["learning to code", "game development", "programming fundamentals"]}, {"title": "Introduction to Bitcoins, Blockchains and Smart Contracts", "link": "https://dl.acm.org/doi/10.1145/3328778.3367012", "abstract": "This workshop introduces participants to bitcoins, blockchains and programming smart contracts using Ethereum Blockchains and the Solidity programming language. Cryptocurrencies such as Bitcoins use Blockchains and Smart Contracts to enforce transactions. Given the popularity of Bitcoins and related technologies in the press, this module provides a module for CS educators to introduce the underlying technology into their classrooms. Participants receive handouts describing sample programming techniques and worksheets for creating basic smart contracts. The workshop proceeds in three sessions in which we: present the underlying technology of Ethereum; practice the creation of smart contracts using the Solidity programming language; and discuss the implementation of this module in our classrooms in small groups. Further information, sample code and workshop handouts are at: http://maui.hawaii.edu/cybersecurity", "authors": [{"name": "Debasis Bhattacharya", "affiliation": "University of Hawaii Maui College, Kahului, HI, USA"}, {"name": "Mohammad Q. Azhar", "affiliation": "The City University of New York, New York, NY, USA"}, {"name": "Rajiv R. Malkan", "affiliation": "Lone Star College, Conroe, TX, USA"}], "tags": ["bitcoins", "blockchain", "smart contracts", "programming", "ethereum", "solidity"]}, {"title": "Blackbox Mini - Getting Started With Blackbox Data Analysis", "link": "https://dl.acm.org/doi/10.1145/3328778.3367006", "abstract": "The Blackbox project collects programming activity data from users of BlueJ, a Java IDE aimed at novices. The Blackbox data set has grown very large, with several terabytes of source code data. This is a double-edged sword; it provides large amounts of data for analysis, but it can be difficult for newcomer researchers to get started with analysis. In this workshop we will introduce attendees to analysing the data by using Blackbox Mini: a new curated subset of the Blackbox data set, designed to help researchers try out their source code analyses on a smaller data set.\nThe workshop will be run by the designers and maintainers of the Blackbox (and Blackbox Mini) data sets. Attendees at the workshop will learn how to work with the Blackbox Mini data set, including basic source code analysis. The Blackbox Mini data set can provide useful publishable research results itself, or the analyses can be carried over and run on larger subsets of the full Blackbox data set.", "authors": [{"name": "Michael K\u00f6lling", "affiliation": "King's College London, London, United Kingdom"}, {"name": "Neil C. C. Brown", "affiliation": "King's College London, London, United Kingdom"}], "tags": ["bluej", "blackbox"]}, {"title": "Experiential Accessibility Learning Labs for Computing Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3367001", "abstract": "This workshop will introduce our Accessibility Learning Labs (ALL). The objectives of this collaborative project with The National Technical Institute for the Deaf (NTID) are to both inform participants about foundational topics in accessibility and to demonstrate the importance of creating accessible software. The labs enable easy classroom inclusion by providing instructors all necessary materials including lecture and activity slides and videos. Each lab addresses an accessibility issue and contains: I) Relevant background information on the examined issue; II) An example web-based application containing the accessibility problem; III) A process to emulate this accessibility problem; IV) Details about how to repair the problem from a technical perspective; V) Incidents from people who encountered this accessibility issue and how it has impacted their life.\nThe labs may be integrated into a wide variety of curriculum at high schools (9-12), and in undergraduate and graduate courses. The labs will be easily adoptable due to their self-contained nature and their inclusion of all necessary instructional material (eg slides, quizzes, etc). No special software is required to use any portion of the labs since they are web-based and are able to run on any computer with a reasonably recent web browser. There are currently four available labs on the topics of: Colorblindness, Hearing, Blindness and Dexterity. Material is available on our website: http://all.rit.edu A laptop is recommended.", "authors": [{"name": "Daniel E. Krutz", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Yasmine El-Glaly", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Paul Tymann", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["computing accessibility", "accessibility education", "computing education"]}, {"title": "Introducing Beginners to Distributed Computing using Raspberry Pi Clusters", "link": "https://dl.acm.org/doi/10.1145/3328778.3367004", "abstract": "The 2019 ABET computer science criteria requires that all computing students learn parallel and distributed computing (PDC) as undergraduates, and CS2013 recommends at least fifteen hours of PDC in the undergraduate curriculum. Consequently, many educators look for easy ways to integrate PDC into courses at their institutions. This hands-on workshop introduces Message Passing Interface (MPI) basics in C/C++ and Python using clusters of Raspberry Pis. The Message Passing Interface (MPI) is a multi-language, platform independent, industry-standard library for parallel and distributed computing. Raspberry Pis are an inexpensive and engaging hardware platform for studying PDC as early as the first course. Participants will experience how to teach distributed computing essentials with MPI by means of reusable, effective \"parallel patterns\", including single program multiple data (SPMD) execution, send-receive message passing, the master-worker pattern, parallel loop patterns, and other common patterns, plus longer \"exemplar\" programs that use MPI to solve significant applied problems. The workshop includes: (i) personal experience with the Raspberry Pi (clusters provided for workshop use); (ii) assembly of Beowulf clusters of Raspberry Pis quickly in the classroom; (iii) self-paced hands-on experimentation with the working MPI programs; and (iv) a discussion of how these may be used to achieve the goals of CS2013 and ABET. No prior experience with MPI, PDC, or the Raspberry Pi is expected. All materials from this workshop will be freely available from CSinParallel.org; participants should bring a laptop to access these materials.", "authors": [{"name": "Joel C. Adams", "affiliation": "Calvin University, Grand Rapids, MI, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, Saint Paul, MN, USA"}, {"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Richard Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}], "tags": ["mpi", "parallel computing", "raspberry pi", "cluster", "distributed computing", "computer science education"]}, {"title": "Guiding Students to Discover CS Concepts and Develop Process Skills Using POGIL", "link": "https://dl.acm.org/doi/10.1145/3328778.3367018", "abstract": "This workshop introduces Process Oriented Guided Inquiry Learning (POGIL) to anyone who teaches CS or related subjects. In a POGIL classroom, teams of 3-4 learners work on activities with a particular structure based on learning cycles. Through scripted inquiry and investigation, learners discover concepts and construct their own knowledge. Using assigned team roles and other scaffolding, learners develop process skills and individual responsibility. The teacher is not a lecturer, but an active facilitator who helps all students to be engaged and achieve the learning objectives.POGIL is an evidence-based approach that has been shown to improve student performance significantly. Workshop participants will work through POGIL activities as students and complete meta-activities designed to introduce core POGIL concepts, practices, and benefits. We will share POGIL materials for a variety of CS courses. For more information, see http://IntroCSpogil.org and http://pogil.org, where you will find activities for CS1, CS2, and other courses.", "authors": [{"name": "Debra Duke", "affiliation": "Virginia Commonwealth University, Richmond, VA, USA"}, {"name": "Chris Mayfield", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Margarethe Posch", "affiliation": "Salt Lake Community College, Salt Lake City, UT, USA"}], "tags": ["facilitator", "active learning", "pogil", "cs2", "process oriented", "cs1", "evidence based", "learning cycles", "guided inquiry", "student engagement", "concept discovery", "student success"]}, {"title": "Leading Conversations about Microaggressions, Bias, and Other Difficult Topics", "link": "https://dl.acm.org/doi/10.1145/3328778.3367000", "abstract": "Many SIGCSE attendees bring what they learn at SIGCSE back to their colleagues. In our well attended Special Sessions at SIGCSE in 2018 and 2019, attendees learned to respond to bias, which might be more difficult to bring back to their colleagues. This workshop will prepare attendees to lead interactive-sessions about responding to bias at their institution or at other conferences. The workshop will begin by modeling an interactive-session with updated materials from SIGCSE 2019. The workshop attendees will then explore facilitation strategies, ways of managing difficult conversations, and all attendee concerns. All attendees will receive printed copies of the game (csteachingtips.org/cards) to use at their institution or to local conferences.", "authors": [{"name": "Wendy M. DuBow", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Catherine Ashcraft", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Kyla McMullen", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Helen Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}], "tags": ["diversity", "microaggressions", "bias"]}, {"title": "Introduction to Quantum Computing", "link": "https://dl.acm.org/doi/10.1145/3328778.3367014", "abstract": "In just hours or days, a quantum computer can solve complex problems that would otherwise take billions of years for today's computers to solve. This has massive implications for research and workforce development for healthcare, energy, and environmental systems. Microsoft is focused on bringing the only scalable quantum system to the broadest set of customers and partnering with universities to ensure that we have the people ready to staff the quantum economy and ecosystem of tomorrow.\nThis workshop includes:\nAn overview of quantum computing. A brief landscape discussion on Microsoft's unique approach to quantum computing, including our \"full stack\" approach and why there is high demand for learning quantum computing these days.\nAn overview and case study of hands-on, software-driven quantum computing curriculum. Our quantum computing experts partnered with University of Washington to bring a 10-week, for credit, course \"Introduction to quantum computing and quantum programming in Q#\" to the school of Computer Science. We discuss why it is important to bring quantum programming into quantum computing courses, showcase our approach to doing this and discuss the results.\nDemo and Hands-on: In this session you will learn one of the core quantum algorithms, Grover's search, in a hands-on quantum programming tutorial. You will implement the algorithm in Q# and see how it enables a quadratic speedup for solving search problems. You will also learn how students can get started with hands-on quantum programming quickly by completing a rich collection of self-guided quantum programming tutorials exercises in Q# (the Quantum Katas).\nPlease bring laptop computers for hands-on portion.", "authors": [{"name": "Mariia Mykhailova", "affiliation": "Microsoft Corporation, Redmond, WA, USA"}, {"name": "Chris Granade", "affiliation": "Microsoft Corporation, Redmond, WA, USA"}, {"name": "Mark Tsang", "affiliation": "Microsoft Corporation, Redmond, WA, USA"}], "tags": ["quantum computing", "software-driven curriculum", "case study", "quantum programming", "grover's search algorithm"]}, {"title": "Machine Learning on the Move: Teaching ML Kit for Firebase in a Mobile Apps Course", "link": "https://dl.acm.org/doi/10.1145/3328778.3367022", "abstract": "This workshop will teach instructors how to incorporate Machine Learning into their mobile course using ML Kit for Firebase. ML Kit provides powerful machine learning functionality to your app running either iOS or Android and is for both experienced and novice machine learning developers. With just a few lines of code, you can use these powerful and easy to use machine learning packages. This workshop will focus on using machine learning in mobile applications to solve real-world problems.\nIn this workshop, we will explore some of the functionality ML Kit provides. Topics include text recognition, facial detection, recognizing points of interest, image characterization and labeling. We will integrate a few of these features into fully functional apps running on iOS or Android. Additionally, we will explore tradeoffs between executing ML Kit in the cloud and on a device.\nThis workshop is targeted for instructors teaching a web development or mobile application course looking to incorporate cloud and native ML functionality. It is also suited for anyone wanting to deploy ML applications quickly using a feature-rich API. A laptop running Android Studio or Xcode is required. Prior to the workshop participants will be given instructions for software installation.", "authors": [{"name": "Doug Shook", "affiliation": "Washington University in St. Louis, Saint Louis, MO, USA"}, {"name": "Todd Sproull", "affiliation": "Washington University in St. Louis, Saint Louis, MO, USA"}, {"name": "Bill Siever", "affiliation": "Washington University in St. Louis, Saint Louis, MO, USA"}], "tags": ["mobile software development kit", "machine learning framework"]}, {"title": "Making Manual Code Review Scale", "link": "https://dl.acm.org/doi/10.1145/3328778.3367026", "abstract": "Although personalized feedback is believed to improve student learning more than correctness tests alone, resource constraints make it difficult for many CS programs to provide personalized feedback on student programming work. This workshop discusses strategies for reducing the cost of code review, as well as pedagogical benefits that can be reaped once a course implements a robust code review process. We showcase the code review process implemented by Princeton's CS1 and CS2 courses which leverages codePost (https://codepost.io), and will teach participants to implement a similar process.\ncodePost is a tool that allows instructors to annotate code with comments, points, and rubrics in a GUI. Beyond code annotation, codePost also includes three classes of functionality that Princeton leverages to provide personalized feedback at scale. (1) Functionality to help instructors manage teams of reviewers by distributing unreviewed code and auditing their review quality. (2) Ways for students to provide \"feedback on feedback\", allowing quantification of student comprehension and uncovering learning breakdowns. (3) A RESTful API that enables instructors to programmatically read and write codePost data. The codePost API enables Princeton to connect codePost with a custom autograding environment and programmatically comment on student work according to test output. This workshop seeks to show participants one possible way of providing human feedback, which mostly scales. We will do so in two concrete steps: First, introduce participants to workflows achievable using the codePost GUI. Second, introduce the codePost API and provide tips for writing custom scripts to unlock pedagogical use cases.", "authors": [{"name": "James Evans", "affiliation": "codePost, San Francisco, CA, USA"}, {"name": "J\u00e9r\u00e9mie Lumbroso", "affiliation": "Princeton University, Princeton, NJ, USA"}], "tags": ["autograding", "grading"]}, {"title": "Session details: Friday Workshops", "link": "https://dl.acm.org/doi/10.1145/3385597", "abstract": "No abstract available.", "authors": [{"name": "Dennis Bouvier", "affiliation": "Southern Illinois University Edwardsville"}, {"name": "Laurence D. Merkle", "affiliation": "Air Force Institute of Technology"}], "tags": []}, {"title": "Bringing Real-World Data, Interactive Games and Visualizations into Early CS Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3367011", "abstract": "This workshop provides instructors with a hands-on introduction to BRIDGES, a software infrastructure for programming assignments in early computer science courses, including introductory programming (CS1, CS2), data structures, and algorithm analysis. BRIDGES provides capabilities for creating more engaging programming assignments, including: (1) a simplified API for accessing real-world data sets, including from social networks; scientific, government, and civic organizations; and movie, music, and literature collections; (2) interesting visualizations of the data, (3) an easy to use API that supports creation of games that leverage real-world data, and, (4) algorithm benchmarking. Workshop attendees will engage in hands-on experience with BRIDGES with multiple datasets and will have the opportunity to discuss how BRIDGES can be used in their own courses.", "authors": [{"name": "Kalpathi Subramanian", "affiliation": "The University of North Caroline at Charlotte, Charlotte, NC, USA"}, {"name": "Erik Saule", "affiliation": "The University of North Caroline at Charlotte, Charlotte, NC, USA"}, {"name": "Jamie Payton", "affiliation": "Temple University, Philadelphia, PA, USA"}], "tags": ["visualization, real-world data", "interactive games", "data structures", "algorithm analysis"]}, {"title": "Gamifying Computer Science Courses with OneUp Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3367009", "abstract": "The low performance and drop-outs in Computer Science classes are frequently attributed to lack of student engagement and motivation. Meanwhile, gamification increasingly attracts the interest of educators due to its potential to foster motivation and behavioral changes in learning contexts. This workshop introduces participants to the concept of gamification and the use of OneUp Learning, a platform aimed at gamifying academic courses. OneUp is aimed at encouraging students' out-of-class practicing and increasing their overall engagement in the course through employing game design elements. The platform is course-independent and highly configurable, allowing the instructor to turn on and off a number of gamification features, such as avatars, points (challenge and skill points), leaderboards, skill boards, a progress bar, content unlocking, goal-setting, badges, virtual currency, duels, chat, etc. For using OneUp, an instructor has to provide practice exercises and to specify the gamification elements to be used. Apart from the standard question types, OneUp supports Parson's problems and dynamic problems (e.g. programming problems). The workshop proceeds in two sessions. In the first session we introduce the OneUp platform and present our experience of gamifying a Data Structures course. In the second, workshop attendees engage in hands-on experience: we show them how to use OneUp in their classes. In particular, we assist them in creating problems and challenges, configuring desired gamification features, defining their own badges and rules for earning and spending virtual currency, and monitoring the engagement and progress of their students. Laptops required.", "authors": [{"name": "Austin Hodge", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Lillian Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Darina Dicheva", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Christo Dichev", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Keith Irwin", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}], "tags": ["course gamification platform", "gameful practicing", "gamification", "student engagement", "computer science education"]}, {"title": "Beyond the Flipped Classroom: Implementing Multiple, Simultaneous Pedagogical Styles Using Scrumage", "link": "https://dl.acm.org/doi/10.1145/3328778.3367024", "abstract": "While the \"flipped classroom\" style has some educational benefits, there are also known benefits to other pedagogical approaches such as lectures, educational games, class discussions, and case studies. In addition to a wide variety of pedagogical approaches, there are a wide variety of computer science learning materials, including videos, interactive tutorials, e-textbooks and traditional textbooks. The choices of approach and materials present a series of trade-offs and may favor some groups of students over others. In this workshop, we present a methodology called Scrumage, (SCRUM for AGile Education) which allows each student in a course to adopt the pedagogical approach and materials that best fit each student's individual learning needs. Scrumage adapts concepts from the Scrum project management technique to manage student teams where the project is learning. Each team learns with the style they prefer, so that multiple pedagogical styles and materials are in use in the course simultaneously. Participants in this workshop will be introduced to the methodology, benefits, and tools of this approach and will work through guided steps to implementing it in the course of their choice.", "authors": [{"name": "Dugald Ralph Hutchings", "affiliation": "Elon University, Elon, NC, USA"}, {"name": "Scott Spurlock", "affiliation": "Elon University, Elon, NC, USA"}, {"name": "Robert C. Duvall", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Shannon Duvall", "affiliation": "Elon University, Elon, NC, USA"}], "tags": ["team-based learning", "scrum", "pedagogy", "computer science education"]}, {"title": "Adopting, Integrating, and Evaluating Computational Creativity Exercises and an Experience Report", "link": "https://dl.acm.org/doi/10.1145/3328778.3367003", "abstract": "In this workshop, participants will learn how to integrate into their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing one of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, an experience report, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop", "authors": [{"name": "Leen-Kiat Soh", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Markeya S. Peteranetz", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Olga Glebova", "affiliation": "Georgia State University, Atlanta, GA, USA"}], "tags": ["exercises", "creative thinking", "computational thinking"]}, {"title": "Going Native with Your Web Dev Skills: An Introduction to React Native for Mobile App Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3367023", "abstract": "This workshop will show how web development skills can be used to develop native mobile apps (iOS, Android, and Web) using a JavaScript library called React Native, an open-source framework developed by Facebook. React Native extends the popular React web framework with support for truly native mobile apps. After completing the workshop, participants will have a classroom-ready assignment to share with their students.\nIn this workshop, we will explore the fundamentals of React, discussing concepts such as Components, State, and Props. Next, we will discuss the \"native\" features added by React Native and build an app that will run on the Web and natively on iOS and Android devices. We will also incorporate mobile-specific concepts, such as Touch Events and Scroll Views. Finally, we will introduce more advanced React Native topics, including debugging techniques and deployment to actual iOS/Android devices.\nThis workshop requires a laptop. Deployment of code to an actual device is optional but requires either an Android or iOS Device. Prior to the workshop participants will be given instructions for both software installation (required) and mobile device configuration (optional).", "authors": [{"name": "Todd Sproull", "affiliation": "Washington University in St. Louis, Saint Louis, MO, USA"}, {"name": "Bill Siever", "affiliation": "Washington University in St. Louis, Saint Louis, MO, USA"}], "tags": ["web frameworks", "javascript", "mobile application development"]}, {"title": "Building and Hacking an Exploitable WiFi Environment for your Classroom", "link": "https://dl.acm.org/doi/10.1145/3328778.3367005", "abstract": "With the current widespread use of WiFi, it is important for students to understand how WiFi access points can be exploited in practice in order to defend networks better. The theory behind exploiting WEP and WPA2 has been available for a number of years. However, it has not been easy to offer students the opportunity to apply these theories in a real environment. In this workshop, we demonstrate and discuss how to build an exploitable WiFi environment for your classroom, how Raspberry Pis can be used to act as the necessary clients for access points, different hacking scenarios where WEP access points have connected clients versus no connected clients, WEP vs WPA2 hacking and how to hack these access points. Then, you will get a chance to hack up to four WEP access points as well as a WPA2 access point.", "authors": [{"name": "Ahmed Ibrahim", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["wifi hacking", "wep", "hands-on", "wpa2"]}, {"title": "How to Become Fluent in Diversity and Inclusion in one Evening", "link": "https://dl.acm.org/doi/10.1145/3328778.3367020", "abstract": "The computing discipline is struggling to diversify its ranks. While we recognize the value of a diverse workforce, we often lack the language to discuss the issues. We even struggle to justify the benefits that might come from diversifying our ranks. This workshop presents concepts and frameworks about diversity with a focus on Broadening Participation in Computing (BPC). The workshop will be broken up into three parts. In part 1, What is diversity?, we will provide some basic definitions and take a quick tour of resources available for BPC. We will expand the view diversity by considering a multi-disciplinary perspective (e.g., scientific, educational, legal, business). In Part 2, Engagement with Diversity concepts, the participants will get to have a candid conversation about different themes in diversity. Among the concepts discussed, we will explore issues of privilege, identity, implicit bias, micro aggressions, stereotype threat, and imposter syndrome. In Part 3, What can we do to improve diversity?, we will discuss why diversity is relevant to computing and why we should support the case for diversity. We present two frameworks of diversity & inclusion, the inclusive excellence model (AACU) and the cultural wealth model (T.J. Yosso). We explore how these models could be used in academic settings to make computing more inclusive. While the bulk of the conversation will be about diversity in academic programs with particular emphasis on students, the topics discussed also apply to faculty hiring and are relevant to creating an inclusive culture in any organization.", "authors": [{"name": "Manuel A. P\u00e9rez-Qui\u00f1ones", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["broadening participation in computing", "diversity", "inclusion", "equity"]}, {"title": "CS50's GitHub-Based Tools for Teaching and Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3367027", "abstract": "For CS50 at Harvard, we have developed a suite of free, open-source tools to help students with writing, testing, and submitting programming assignments; and to help teachers grade those assignments and check them for plagiarism. help50, a program that parses error messages and provides beginner-friendly advice to interpreting them, helps students understand and resolve often-cryptic compiler errors. check50 runs a set of automated tests on students' code, providing feedback and hints about where students have made errors. style50 lints students' code, highlighting places where it doesn't meet the course's style guide. submit50 allows students to submit assignments to a GitHub repository, without students needing to have knowledge of git or version control themselves. And compare50, an open-source and customizable alternative to Moss, allows teachers to analyze submissions for similarity, looking for pairs or clusters of submissions that might be the result of improper collaboration. The grading and submission tools require only a GitHub account to use, and can serve as free, extensible alternatives to tools like Codio, Gradescope, and Vocareum. In this workshop, we'll introduce each of the tools, and discuss how to use them for your own classroom. To date, each tool has been deployed to hundreds of students on campus and thousands online. Along the way, we'll discuss how to use the tools effectively, compare and contrast them with other options, identify how the tools have changed students' behavior for the better and for worse, and highlight pedagogical and technological changes we've made to redress the latter. Laptop (with Wi-Fi) required. Linux, macOS, or Windows. Latest version of Chrome.", "authors": [{"name": "Jelle van Assema", "affiliation": "University of Amsterdam, Amsterdam, Netherlands"}, {"name": "Brian Yu", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Kareem Zidane", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Chad Sharp", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}], "tags": ["open-source", "homework submission", "correctness testing", "error messages", "style", "linting"]}, {"title": "Teaching Cybersecurity in CSP (or Any CS Class): Introducing the Security Mindset", "link": "https://dl.acm.org/doi/10.1145/3328778.3367028", "abstract": "Cybersecurity is vital to a technology-driven society. Daily headlines about data breaches and ransomware attacks demonstrate that we cannot ignore the security risks inherent to our highly networked lives. Cybersecurity is a growing job field -- and even for students who don't go on to pursue cybersecurity careers, it is crucial to have some level of security awareness. But until very recently, the intrigue and opportunity of cybersecurity was usually not introduced until advanced undergraduate CS courses. However, the real world implications and applied nature of the topic lends itself well to catching the interest of a diverse group of students in CS at a younger age. The Teaching Security lessons (at teachingsecurity.org) introduce the broad idea of cybersecurity through threat modeling and the human-centered nature of authentication. They were prepared by subject-matter experts with research backgrounds in the technical workings and social implications of cybersecurity. Our lessons were designed to meet the cybersecurity learning objectives in the AP Computer Science Principles framework, but they are appropriate for any high school computer science class or program. This will be an interactive workshop for CS educators at all levels; no previous cybersecurity experience required. (Laptops also optional.) Participants will learn how to begin developing the \"security mindset\" by teaching students a simplified version of threat modeling (mostly via \"unplugged\" activities). We will also preview lessons on authentication and social engineering. The workshop will also provide opportunities for attendees who teach cybersecurity to share their own strategies.", "authors": [{"name": "Maritza Johnson", "affiliation": "Google Research, Mountain View, CA, USA"}, {"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Buffie Holley", "affiliation": "Albemarle High School, Charlottesville, VA, USA"}, {"name": "Julia Bernd", "affiliation": "International Computer Science Institute, Berkeley, CA, USA"}], "tags": ["cybsersecurity", "unplugged", "threat modeling", "ap computer science principles"]}, {"title": "Using Sensor Technologies to Introduce Secondary Education Students to Computational Thinking and Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3367013", "abstract": "This workshop will explore using school-based sensor technologies to bring computational thinking into middle school science and integrated STEM courses. Participants will learn how to introduce students to sensor technologies and support their understanding of how to use sensor technologies to \"make the invisible, visible.\" We will use the sensor technologies to conduct a variety of short, real-world investigations, such as measuring air quality and noise levels using the available sensors. Teachers will largely play the role of students as they learn to program the sensor technologies, gather and analyze data, and create displays to share their findings. The workshop will use an open-access, one-week sensor immersion curriculum, and ideas for improvements will be solicited from by the group. No prior experience using sensor technologies or programming is needed.", "authors": [{"name": "Alexandra Gendreau Chakarov", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Quentin Biddy", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Derek Runberg", "affiliation": "SparkFun Electronics, Niwot, CO, USA"}], "tags": ["sensors", "computational thinking"]}, {"title": "Session details: Saturday Workshops", "link": "https://dl.acm.org/doi/10.1145/3385598", "abstract": "No abstract available.", "authors": [{"name": "Dennis Bouvier", "affiliation": "Southern Illinois University Edwardsville"}, {"name": "Laurence D. Merkle", "affiliation": "Air Force Institute of Technology"}], "tags": []}, {"title": "Using and Customizing Ebooks for Computing Courses with Runestone Interactive", "link": "https://dl.acm.org/doi/10.1145/3328778.3367025", "abstract": "Runestone Interactive is an open-source ebook platform (http://runestoneinteractive.org). Runestone supports executable and editable examples in Python, Java, C, C++, JavaScript, HTML, Processing, and SQL. It also includes code visualization/stepping and a wide variety of practice activities, including multiple-choice, fill-in-the-blank, clickable-code, and mixed-up code (Parsons) problems. A new practice tool reuses ebook content to provide spaced, retrieval-based, and interleaved practice. Free textbooks have been created for CS1, CS2, web development, data science, and Advanced Placement (AP) CS (both CSP and CSA). Over 25,000 people a day use Runestone ebooks. Several studies have demonstrated positive learning and attitude outcomes from the use of interactive ebooks versus static ebooks.\nThe goal of this workshop is to introduce computing teachers (both secondary and post-secondary) to Runestone ebooks. The hands-on session will lead participants through use of the ebooks as if they were students to familiarize them with the interactive features. Participants will next create a custom course from an existing ebook in the library and will use the instructor's dashboard to review student activity, modify the course, grade students, and set up the practice tool. Participants will create their own assignments using existing material in the ebooks. Participants will also be shown how to create new problems for assignments, such as multiple-choice questions for a quiz. The presenters have several years of experience creating, using, and conducting research with Runestone ebooks. Laptop required.", "authors": [{"name": "Barbara Ericson", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Bradley Miler", "affiliation": "Luther College & Founder Runestone Interactive, Minneapolis, MN, USA"}], "tags": ["data-science", "active-learning", "cs2", "parsons-problems", "cs1", "online-learning", "ebooks", "practice"]}, {"title": "Active Learning with LEGO for Teaching Software Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3367021", "abstract": "LEGO is a construction toy familiar to many students. Creating software, regardless of scale, is often similar to building with tangible objects, such as houses or bridges--an analogy that is often used in the classroom. In this workshop, we will show how to use LEGO as an engaging medium to introduce students to concepts of iterative development, software interfaces, team velocity, and distributed software projects. LEGO-based analogies and case studies enacted as hands-on exercises for student teams help develop a better understanding of the underlying concepts, while keeping students deeply engaged in the course material. This workshop is intended for faculty teaching undergraduate and graduate courses focusing on software development, software engineering, and related concepts. This workshop will also benefit other educators looking for ways to supplement their courses with engaging and playful hands-on activities aimed to strengthen the teamwork, oral communication, problem solving, and design skills of students. We will practice several hands-on LEGO-based activities during the workshop. Specific topics of these activities will include change management and object-oriented interfaces, as well as activities specific to the phases of software development. Workshop participants will learn about other LEGO-based activities that focus on a broad range of topics including requirements engineering, architectural design, and software dependability. A laptop is not required for this workshop. This work is supported in part by the National Science Foundation Awards 1611905, 1709244 and a 2015 ACM SIGCSE Special Project grant. For more information visit http://www.cs.ccsu.edu/~stan/sigcse2020/", "authors": [{"name": "Stephanie Ludi", "affiliation": "University of North Texas, Denton, TX, USA"}, {"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["software-development", "active-learning", "lego"]}, {"title": "Challenging Social Exclusion in Computing via 'Theatre of the Oppressed' Pedagogy", "link": "https://dl.acm.org/doi/10.1145/3328778.3367008", "abstract": "Micro-aggressions, hostile climates, and intersectional discrimination contribute to students feeling excluded from fully participating in Computer Science or other STEM programs. To address this exclusion, students need to empathize with each other, and for that we need them to be having frank, open conversations about difficult situations. This is hard to achieve, as people do not typically want to talk about difficult situations with strangers. Computer Science faculty may shy away from these difficult conversations, as they may feel they lack the expertise to address social issues effectively. To address this issue, we have been conducting 'Exclusion Response Workshops' based on the 'Theatre of the Oppressed' methodology of rehearsing social change. This involves students anonymously contributing scenarios of micro-aggressions they have experienced or witnessed and then roleplaying alternate outcomes. These workshops create an empathetic environment for frank and open discussion of difficult issues. We have been scaling this effort by conducting workshops with all freshmen and transfer students in our College of Computing and Informatics. In this SIGCSE workshop, attendees will participate in an Exclusion Response Workshop, then have an open discussion about the workshop experience, workshop logistics, and pros and cons of running this workshop as a mandatory class activity versus a voluntary activity. Participants will learn about the workshop structure, and the Theatre of the Oppressed methodology. This workshop is a taste of a 3-day, train-the-trainer workshop that we will be conducting at our institution in May 2020. Supported by NSF IUSE/RED Award #151960.", "authors": [{"name": "Tonya Frevert", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Sarah Provencal", "affiliation": "Winthrop University, Rock Hill, SC, USA"}, {"name": "Celine Latulipe", "affiliation": "University of Manitoba, Winnipeg, MAN, Canada"}], "tags": ["participatory-theatre", "diversity", "inclusion", "theatre-of-the-oppressed"]}, {"title": "Progressive Web Apps are a Game-Changer! Use Active Learning to Engage Students and Convert Any Website into a Mobile-Installable, Offline-Capable, Interactive App", "link": "https://dl.acm.org/doi/10.1145/3328778.3367007", "abstract": "Learn how to design and create powerful new progressive web apps (PWA). This workshop introduces the computer science principles that enable modern web sites to be converted into installable apps. This course starts with an example web site (built with HTML/CSS/JavaScript) and shows in just two easy steps how to create an engaging app that can be installed on mobile devices, including Android phones, iPhones, iPads, tablets, and more. The course illustrates the principles by converting an open source, cloud-hosted, client-side app. It introduces manifest files and JSON, then introduces the powerful new JavaScript service workers. The course employs Google's free Workbox libraries and shows how service workers enable web apps to interact with device APIs and alter requests before and after sending. You can easily install (and uninstall) the apps on mobile devices - and even use an app while your device is offline. The course illustrates how engaging tools like Lighthouse provide critical feedback on performance, accessibility, best practices, and more. As a bonus, a PWA syllabus is provided that can be customized to your courses. Skills for developing these apps are in demand and quite accessible to students. Laptop Required. Presenters are most familiar with Windows, but another OS should be fine. Internet access and the ability to create and edit files is required. Chrome browser is required to run the Lighthouse audits. All software and libraries are free and open source.", "authors": [{"name": "Colton Steeve", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}, {"name": "Denise M. Case", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}, {"name": "Matthew Woolery", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}], "tags": ["user-experience (ux)", "active-learning", "progressive-web-applications (pwa)", "computer-science-education", "mobile-ready"]}, {"title": "Transform Your Computer Science Course with Specifications Grading", "link": "https://dl.acm.org/doi/10.1145/3328778.3367002", "abstract": "As proposed by Linda B. Nilson in Specifications Grading: Restoring Rigor, Motivating Students, and Saving Faculty Time, specifications grading is an assessment construct that relies on pass/fail grading of assignments and assessments, the structuring of course content into modules linked to learning outcomes, and the bundling of assignments and assessments within those modules. One of the intentions of this type of course grading construct is to more closely align assessment with student attainment of intended learning outcomes. While there has been very visible work in incorporating specifications grading in some academic areas (e.g. in mathematics), examples of the use of specifications grading in computer science courses are less common. The goal of this workshop is to introduce the concepts of specifications grading, explain how to apply these concepts to a wide range of computing courses, and have the participants apply these concepts to one of their current or upcoming computer science courses. Each participant should leave the workshop with at least one revised course syllabus or assignment that incorporates specifications grading. A laptop computer is recommended, but not required. Access to handouts will be provided.", "authors": [{"name": "David L. Largent", "affiliation": "Ball State University, Muncie, IN, USA"}, {"name": "Christian Roberson", "affiliation": "Florida Southern College, Lakeland, FL, USA"}], "tags": ["specifications-grading", "mastery-grading", "student-assessment", "syllabus"]}, {"title": "Teach Girls to Code and Change the World", "link": "https://dl.acm.org/doi/10.1145/3328778.3367017", "abstract": "At Girls Who Code, we believe that all girls are capable of making a positive impact on the world through computer science. That is why we are leading the movement to close the gender gap in technology and change the image of what a programmer looks like and does. Join us to learn more about how to encourage girls in your community to connect their new coding skills and confidence with real world problems they care about.\nDuring this presentation, we will be featuring our Girls Who Code Clubs, which are completely free after-school programs for 3rd-12th grade girls to join a sisterhood of supportive peers and role models and use computer science to change the world. Through fun and interactive curricula, Club girls not only learn about how to positively impact their community through code, but they also are taught to be brave and resilient -- which has an enormous impact on how they approach challenges and whether they stick with coding in the years to come. Anyone can start a Girls Who Code Club - computer science experience is NOT required - and our curriculum is designed to allow the facilitator to learn alongside the girls.", "authors": [{"name": "Emily Ong", "affiliation": "Girls Who Code, New York, NY, USA"}, {"name": "Valerie Tomici", "affiliation": "Girls Who Code, New York, NY, USA"}], "tags": ["stem", "youth", "access", "teen", "education", "gender", "curriculum", "k-12", "equity"]}, {"title": "Innovation in Undergraduate Data Science Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3367015", "abstract": "The workshop will allow participants to gain experience with a series of innovations developed at UC Berkeley that have enabled the teaching of undergraduate data science at scale to students from all backgrounds. Rather than beginning with established introductory strategies as the gateway to computer science, students in the \"Foundations of Data Science\" (data8.org) learn computational skills and concepts in relation to real world issues and with attention to societal implications. By engaging with students' interest in the applications of computing on data, and integrating societal impact from the start, the program has developed long term commitment to advance computational skills for large numbers of students. These innovations in teaching not only convey important computational content, but also broaden participation beyond existing approaches to computer science, and integrate issues of human contexts and ethics throughout the full curriculum. Goals include increasing diversity among students learning computer science, giving students a strong ethical foundation within their computer science work, and encouraging critical thinking in the application of inference and statistical techniques. Bringing a laptop is recommended", "authors": [{"name": "Eric Van Dusen", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Cathryn Carson", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Anthony Suen", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["jupyter", "data science", "broadening-participation", "cloud-based-instruction", "ethics"]}, {"title": "Modifying Existing Evaluation Instruments to Fit Your CS Research Needs", "link": "https://dl.acm.org/doi/10.1145/3328778.3367016", "abstract": "Developing your computer science education research evaluation instruments from scratch may be no longer necessary thanks to the growing catalog of instruments curated by CSEdResearch.org. This workshop will teach participants how to find, remix, and use existing instruments by delving into the process of taking openly shared resources and repurposing them for your projects. In addition to discussing the importance of using instruments that have been shown to have evidence of reliability and validity, the team from The University of Texas at Austin will discuss how they amended existing surveys and interview protocols to develop tools customized to their needs for their NSF-funded CSforAll Research Practitioner Partnership. Workshop participants will break into groups and be given extensive time to review and revise research instruments. Key takeaways from this workshop will be the steps you need to take to choose an instrument based on your research question and study design, the role that validity and reliability play in instrument design, how to make modifications to an instrument (if needed) to better address your research question, and how to add your instruments to the CSEdResearch.org site.", "authors": [{"name": "Carol L. Fletcher", "affiliation": "The University of Texas at Austin, Austin, TX, USA"}, {"name": "Ryan Torbey", "affiliation": "The University of Texas at Austin, Austin, TX, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College & CSEdResearch.org, Galesburg, IL, USA"}, {"name": "Joshua Childs", "affiliation": "The University of Texas at Austin, Austin, TX, USA"}], "tags": ["education-research", "k-12-education", "research-instruments", "computer-science-education"]}, {"title": "The Beauty and Joy of Computing Curriculum and Teacher Professional Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3367029", "abstract": "The Beauty and Joy of Computing (BJC) is a CS Principles course developed at UC Berkeley for high school juniors through university non-majors. Together, UC Berkeley, the Education Development Center, and NC State have brought BJC to 700+ teachers nationwide. Since 2011, NC State has developed regional partnerships and a train-the-trainer model to offer nationwide PD to 600+ high school teachers. Our guiding philosophy is to meet students where they are, but not leave them there. BJC covers the big ideas and computational thinking practices in the AP CSP curriculum framework using Snap!, an easy-to-learn blocks-based programming language, and powerful computing ideas like recursion, higher-order functions, and computability. Through BJC, students create beautiful images, and realize that code itself can be beautiful. Having fun is an explicit course goal. BJC takes a \"lab-centric\" approach, and most learning occurs through guided programming labs where students explore and play. In this workshop, we will provide an overview of BJC, share experiences as instructors at university and high school levels, and share details of summer PD opportunities. Laptop needed.", "authors": [{"name": "Marnie Hill", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Michael Ball", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Efrain Lopez", "affiliation": "Nixon High School, Laredo, TX, USA"}, {"name": "Joshua Paley", "affiliation": "Henry M. Gunn High School, Palo Alto, CA, USA"}, {"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Jason Bohrer", "affiliation": "Nevada Joint Union High School District, Grass Valley, CA, USA"}, {"name": "Lauren Mock", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Alexandra Milliken", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["cs0", "non-majors", "broadening-participation", "blocks-based-programming", "high-school"]}, {"title": "Session details: Birds of a Feather Flock A", "link": "https://dl.acm.org/doi/10.1145/3385599", "abstract": "No abstract available.", "authors": [{"name": "Dale-Marie Wilson", "affiliation": "University of North Carolina at Charlotte"}, {"name": "Mary Anne Egan", "affiliation": "Siena College"}], "tags": []}, {"title": "Pedagogy and Classroom: How Can I Do This in That Space or Does it Even Matter?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372525", "abstract": "The classrooms used by Computer Science students come in all shapes and sizes, from large lecture halls to small computer labs to collaborative active learning classrooms. Does our teaching style need to match the space? Are particular classroom environments more effective than others and might the types of artifacts generated by Computer Science students lend themselves better to one space over the other? As many students come to class with their own personal computer, development environment and opinions about effective instruction, does the classroom and supporting technology even matter? What effect does the space have on the instructional choices made? This BOF will provide a platform for a discussion around individual teaching styles and preferences and how they relate to the classroom space. Access and awareness of active learning pedagogy and active learning classrooms can create both tension (e.g., not wanting to teach in an active learning classroom) and challenges (e.g., desire to have access to an active learning classroom despite the costs associated, how working specific techniques into a given space). Shared experiences will help participants better leverage their classroom spaces to their desired pedagogy.", "authors": [{"name": "Jesse Eickholt", "affiliation": "Central Michigan University, Mount Pleasant, MI, USA"}, {"name": "Patrick Seeling", "affiliation": "Central Michigan University, Mount Pleasant, MI, USA"}], "tags": ["classroom-layout", "classroom-technology", "instructional-design", "teaching-styles"]}, {"title": "Incorporating Parallel Computing in the Undergraduate Computer Science Curriculum", "link": "https://dl.acm.org/doi/10.1145/3328778.3372511", "abstract": "Teaching parallel and distributed computing (PDC) concepts is an ongoing and pressing concern for many undergraduate educators. The ACM/IEEE CS Joint Task Force on Computing Curricula (CS2013) recommends 15 hours of PDC education in the undergraduate curriculum. Most recently, the 2019 ABET Criteria for Accrediting Computer Science requires coverage of PDC topics. For faculty who are unfamiliar with PDC, the prospect of incorporating parallel computing into their courses can seem very daunting. For example, should PDC concepts be covered in a single required course (perhaps computer systems) or be scattered throughout different courses in the undergraduate curriculum? What languages are the best/easiest for students to learn PDC? How much revision is truly needed? This Birds of a Feather session provides a platform for computing educators to discuss the common challenges they face when attempting to incorporate PDC into their curricula and share potential solutions. Chiefly, the organizers are interested in identifying \"gap areas\" that hinder a faculty member's ability to integrate PDC into their undergraduate courses. The multiple viewpoints and expertise provided by the BOF leaders should lead to lively discourse and enable experienced faculty to share their strategies with those beginning to add PDC across their curricula. We anticipate that this session will be of interest to all CS faculty looking to integrate PDC into their courses and curricula.", "authors": [{"name": "Richard Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Joel C. Adams", "affiliation": "Calvin University, Grand Rapids, MI, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, MN, USA"}, {"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}], "tags": ["cs2013", "abet", "undergraduate-curriculum"]}, {"title": "Jupyter for Teaching Data Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372538", "abstract": "There has been a recent evolution of cloud-based tools that allow for easy and powerful ways for students to access the industry standard data science toolkit from within a browser window. Jupyter notebooks were originally developed for sharing of scientific results and reproducible open science. However, when delivered through a cloud-based server, they have huge benefits for teaching, including removing the need to install any software locally or require any specific machine to be used by students. The use of teaching Jupyterhubs to date, both for introductory to Data Science courses, as well as more advanced topics is growing rapidly. We would like to have a conversation about how to use Jupyterhubs and teaching Jupyter notebooks from a variety of instructors and institutions. We are also interested in how to provide these types of resources to additional educational settings who may be more resource constrained.", "authors": [{"name": "Eric Van Dusen", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["jupyter", "data-science", "cloud-based-instruction"]}, {"title": "POGIL in Computer Science for Beginners and Experts", "link": "https://dl.acm.org/doi/10.1145/3328778.3372515", "abstract": "Process-Oriented Guided Inquiry Learning (POGIL) is a research-based instructional strategy with a proven history across STEM disciplines. In a POGIL classroom, teams of students work on activities that are specifically designed to guide them to construct their own understanding of key concepts. At the same time, students develop process skills such as communication, teamwork, problem solving, and critical thinking. POGIL incorporates practices shown to be particularly helpful for students from underrepresented populations. In a POGIL classroom, teachers are facilitators, not lecturers. Multiple studies have shown that students in POGIL classes do better on common exams and in subsequent courses. For more information, see http://cspogil.org and http://pogil.org. This BOF will (1) enable people unfamiliar with POGIL to ask questions and learn more, and (2) bring together experienced POGIL practitioners to share experiences, concerns, ideas, and insights. As in a POGIL classroom, we will discuss topics in small teams and report out to the larger group.", "authors": [{"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Chris Mayfield", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["pogil", "collaborative-learning"]}, {"title": "Toward an Open-source Toolkit for Machine Learning Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372531", "abstract": "Machine Learning (ML) has become one of the highly participated courses at the undergraduate level in Computer Science. Open-source ML libraries make it easy for students to implement papers, share ideas, and conduct experiments on large scale datasets. With the emergence of public dataset portals (such as Kaggle, Amazon Datasets, and Google Datasets Search), the open-source community has produced many useful, high-quality libraries (such as Scikit-Learn, PyTorch, Keras, and Tensorflow among others). These open-source tools aim to make state-of-the-art ML algorithms and large-scale datasets accessible to all. While these ML libraries and datasets can benefit many undergraduate students in their pursuit of data-related careers, the task of choosing them for instructional purposes can be daunting for two reasons. First, all of these tools have advantages, drawbacks, and many overlapping issues. There is no single tool or dataset that covers all of the ML instructional needs. Second, due to the rapid advancements in the field, instructors often find a lack of comprehensive guidelines or standards on evaluating the instructional usability and real-world performance of open-source tools. How can these libraries and tools be integrated to aid the instructional activities of both classical machine learning as well as deep learning? This BOF will provide a platform for the discussion of the development of an open-source toolkit to support the teaching and learning of ML at the undergraduate level.", "authors": [{"name": "N. Rich Nguyen", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["open-source", "machine-learning-education", "toolkit"]}, {"title": "How Can We Make Office Hours Better?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372519", "abstract": "Most personal student interactions with instructional staff come through office hours. Particularly in large courses, office hours are predominantly run by teaching assistants (TAs). TAs are best advantaged by support and training from more senior instructional staff, especially faculty. This Birds-of-a-Feather session will provide a forum for discussing challenges and innovations in managing office hours, particularly in computer science courses, with the aim of improving the student learning experience and environment. This session will have the opportunity for discussing the mentoring and personalized support of TAs, as well as what technological support exists, such as queue software or internal wikis, and additionally ideas for more significant changes to office hours structure that could lead to future collaborations or research. While this session will emphasize TA-supported office hours, the discussion should inspire new ideas and techniques for managing individual-instructor office hours as well.", "authors": [{"name": "Kevin Lin", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Brian Railing", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["office-hours", "tools", "tas", "communication-climate", "course-software", "teaching-assistants", "training", "mentoring"]}, {"title": "Using Validated Assessments to Learn About Your Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3372520", "abstract": "Computer Science now has a number of validated instruments available for measuring student knowledge or interest in computing (SCS1, BDSI, CAS, Digital Logic CI, etc.). But when and how should instructors and researchers use these instruments? In this BOF, we will begin by discussing the available instruments, their purpose, and how to obtain them. Then we will open the discussion to the group on what they would like to measure, how these instruments might work for them, and how to best employ them with their students.", "authors": [{"name": "Cynthia Taylor", "affiliation": "Oberlin College, Oberlin, OH, USA"}, {"name": "Kevin C. Webb", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}, {"name": "Soohyun Nam Liao", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Michael Clancy", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["concept-inventory", "assessment", "data-structures"]}, {"title": "\"I've taken a first CS class and liked it! What's next?\" Exploring the Multiplicity of CS2 Paths for Majors and Non-Majors", "link": "https://dl.acm.org/doi/10.1145/3328778.3372523", "abstract": "Driven by diverse needs of students, as well as increasing needs of other disciplines, the past two decades have seen a proliferation of emerging variations in how computer science programs approach a second course in the discipline. Approaches more focused on majors include adaptations to a traditional introduction to data structures course that may heavily incorporate object-oriented programming or emphasize using data structures from libraries. Paths that might be concurrent with a traditional CS2, or have greater appeal to non-majors include recent efforts with data science or secure computing. In a world of increasingly limited resources but ever-increasing needs and demands from inside and outside the major, how do we provide solutions? Bringing together educators who are concerned about intermediate CS education will allow participants to hear multiple viewpoints about what the needs are and how various institutions are currently, or are considering, addressing them. The discussion leaders will kick off the conversation with local expertise---one approach of a CS2 course for majors and non-majors that emphasizes data science and modern practical skills such as databases and HTTP, another with new curricula for multiple CS2 courses, and a third with novel approaches in a traditional data structures CS2 course. Attendees will be able to connect with other people interested in the future of course curricula following CS1 and share ideas, resources, successes, and failures. We will be soliciting participants' perspectives on preparing CS2 students for downstream paths, including (i) future courses, (ii) interviews, (iii) internships, and (iv) research projects.", "authors": [{"name": "Margaret Ellis", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Thomas Bressoud", "affiliation": "Denison University, Granville, OH, USA"}, {"name": "Lea Wittie", "affiliation": "Bucknell University, Lewisburg, PA, USA"}], "tags": ["cs2", "undergraduate-curriculum"]}, {"title": "For Us, By Us: Resources for Computing Outreach Programs Designed by People of Color", "link": "https://dl.acm.org/doi/10.1145/3328778.3372526", "abstract": "Computer Science outreach programs for Black and Latinx communities are often led by those who are not of the community for which they are building. While there are programs that exist that are being ran by Black and Latinx men and women, they are often conducted in siloes and are not given the resources that other programs are given. This session will serve as a gathering for Black and Latinx BPC program leaders to share resources that could help with operations, funding, and collaboration amongst themselves and other external stakeholders.", "authors": [{"name": "Sheena Erete", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Khalia Braswell", "affiliation": "Temple University, Philadelphia, PA, USA"}, {"name": "Jamkia Burge", "affiliation": "Capital One, Washington, DC, USA"}, {"name": "Christina Harrington", "affiliation": "DePaul University, Chicago, IL, USA"}], "tags": ["summer-camp", "diversity", "black", "latinx", "k-12-education"]}, {"title": "Broadening Participation in Computing: The Critical Role of Community Colleges", "link": "https://dl.acm.org/doi/10.1145/3328778.3372527", "abstract": "By 2026, the number of computing-related job openings in the US are expected to reach 3.5 million [1]. Yet even with an enrollment booming in many 4-year college computing programs, institutions of higher education have been unable to produce enough graduates to meet this growing demand. In addition, women and racial/ethnic minority students continue to be underrepresented in computing majors further reducing the potential computing workforce. Community colleges, because of their mission to serve their local communities, tend to have more diverse student populations. Yet, to date, they have not been considered a critical partner in the conversation on broadening participation in computing (BPC). To fill this gap, universities and community colleges need to work more collaboratively to bridge the workforce and diversity gaps [2]. In this BOF, participants will discuss strategies and resources for community colleges to participate more fully in the BPC community. Topics may include pathways from community colleges to 4-year computing programs, improving institutional culture to support advancement, providing role models so that students are encouraged to see themselves in computing, and strategies to recruit, retain, and motivate diverse students.", "authors": [{"name": "Beth Quinn", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Lynne Grewe", "affiliation": "California State University, East Bay, Hayward, CA, USA"}, {"name": "Amardeep Kahlon", "affiliation": "Austin Community College, Austin, TX, USA"}, {"name": "Lisa Sandoval", "affiliation": "Seattle Central College, Seattle, WA, USA"}, {"name": "Deborah Boisvert", "affiliation": "University of Massachusetts, Boston, Boston, MA, USA"}], "tags": ["recruiting-diverse-faculty", "community-college-to-university-pathways", "student-recruitment", "diversity-in-computing"]}, {"title": "You Are Not Alone: Building Community Among Graduate Students in CS Education Research", "link": "https://dl.acm.org/doi/10.1145/3328778.3372513", "abstract": "CSEd graduate students face a variety of unique issues. First, within a CS or information science program, this research area is not considered to be highly popular with respect to the quantity of CSEd faculty, graduate courses, and professionals immersed in this research area. Already, this presents a disadvantage compared to other peers in popular areas who have resources and/or a research community at their institutions to support them. Further, graduate students in this field are frequently one of the few, if not the only, CSEd researchers at their institutions. As a result, many graduate students have limited avenues to get consistent, relevant, critical feedback on their work, especially research-in-progress, i.e. research that has not already been published. In this Birds of a Feather (BoF) session, we aim to create and foster a safe and open environment that allows participants to get feedback on research-in-progress and share experiences and issues with being a graduate student in CSEd research. We invite genuine and honest conversations about the challenges facing rising academics and professionals in this area. Though the focus will be on CSEd research graduate students, any attendee who would like to hear about our experiences is welcome. We have two goals: (1) to cultivate mentorship relationships among participants to send them off with potential collaborators, supporters and advocates, and (2) to brainstorm ways to sustain these discussions in the ACM CSEd community.", "authors": [{"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Joslenne Pe\u00f1a", "affiliation": "Pennsylvania State University, University Park, PA, USA"}, {"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["collaboration", "mentorship", "graduate-education"]}, {"title": "Fix the Course, Not the Student: Positive Approaches to Cultivating Academic Integrity", "link": "https://dl.acm.org/doi/10.1145/3328778.3372535", "abstract": "The best-studied techniques for reducing academic dishonesty rates rely on increasing the likelihood of consequences. These techniques offer instructors effective tools for identifying dishonest behavior as a means to \"encourage\" honesty. We wonder if we can promote integrity through proactive measures, such as designing courses' structures and assignments to reduce temptations for cheating, or by sculpting culture and forming relationships to foster a robust \"community of trust.\" Our discussion will consider students' perspectives on academic integrity, how those might differ from instructors' perspectives, and how to build firm yet compassionate systems for promoting honesty in coursework.\nThrough conversations with students and faculty, the discussion leaders have identified several compelling explanations for student cheating that largely derive from student culture and faculty messaging. We hope to share these lessons and inspire tactics for instructors to address student temptations to cheat that do not rely on the threat of penalty. This can help foster mentoring, rather than antagonistic, relationships between students and instructors, making computing courses increasingly welcoming for a greater diversity of students.", "authors": [{"name": "Nathan Brunelle", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "John R. Hott", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["undergraduate-instruction", "cheating", "proactive-measures", "learning-environment"]}, {"title": "Effective Practices for Online Teaching", "link": "https://dl.acm.org/doi/10.1145/3328778.3372534", "abstract": "Have you been asked to teach online and don't know how to get started? Have you delivered your course online to mixed reviews? Have you been teaching online for years? As more and more courses are begin offered online in an effort to deliver a quality education to a larger, more diverse group of students, one things is clear -- many of the pedagogical practices that we have come to rely on in our on ground courses do not translate to an online course. How do the on best practices in online education adapt to CS? This BOF will provide a platform for discussion of what it means to teach an instructor-led, asynchronous online course in CS. We will discuss methodologies used by online faculty that were particularly successful in helping students learn. Topics may include designing courses for distance learning, using media and technology tools effectively, engaging the online learner, building community among students, motivating student persistence and success, and/or building an online presence.", "authors": [{"name": "Maria Jump", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Martin Schedlbauer", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["distance-learning", "best-practices", "pedagogy", "online"]}, {"title": "A Town Meeting: SIGCSE Committee on Expanding the Women-in-Computing Community", "link": "https://dl.acm.org/doi/10.1145/3328778.3372533", "abstract": "In January 2004, we organized the second SIGCSE Committee (\"Expanding the Women-in-Computing Community\"). The SIGCSE Board approved the charter, because the underrepresentation of women in computing is an international problem and an embarrassment for our profession. A BOF provides SIGCSE program advertising that will create a large audience for dissemination of information concerning successful gender issues projects and can provide time for discussion and brainstorming. Generally, the organizers divide the audience into a discussion subgroup and a dissemination section. We select discussion topics from our large listserv membership and offer short project presentations from representatives of ACM-W, NCWIT, ABI, CDC, CRA-W, etc. Last year, our listserv membership selected \"assessment of Women-in-Computing projects\" as the discussion topic. The forum provides an important annual meeting for a large group of people, who work to increase the representation of women in computing in their separate organizations and who do not customarily have an opportunity to share ideas face-to-face.", "authors": [{"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Wendy Powley", "affiliation": "Queen's University, Kingston, ON, Canada"}, {"name": "Paula Gabbert", "affiliation": "Furman University, Greenville, SC, USA"}], "tags": ["Gender-Issues"]}, {"title": "Ethics and Social Responsibility in Computer Science Curricula", "link": "https://dl.acm.org/doi/10.1145/3328778.3372518", "abstract": "This BOF will provide a platform for the discussion of ethics in Computer Science curricula. This will be a place to discuss challenges and successes over the years, as well as recent efforts to integrate ethics into the curricula. We will discuss some strategies developed in cohorts like the Responsible Computer Science Challenge, where universities and colleges were supported in the conceptualization, development, and piloting of curricula that integrate ethics with undergraduate computer science training, educating a new wave of engineers who bring holistic thinking to the design of technology products.", "authors": [{"name": "Kathy Pham", "affiliation": "Mozilla, Boston, MA, USA"}], "tags": ["social-responsibility", "ethics"]}, {"title": "Session details: Birds of a Feather Flock B", "link": "https://dl.acm.org/doi/10.1145/3385600", "abstract": "No abstract available.", "authors": [{"name": "Dale-Marie Wilson", "affiliation": "University of North Carolina at Charlotte"}, {"name": "Mary Anne Egan", "affiliation": "Siena College"}], "tags": []}, {"title": "The Landscape of Broadening Participation in Computing, Using State and National Datasets to Advocate for Equity in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372530", "abstract": "As many U.S. states continue to work to increase and broaden participation in K-20 computing education, it is imperative to collect data and construct landscape reports to create organized efforts and strategic plans. Effective CS education interventions, and strategic plans, must be data-driven in order to ensure that all students have access to and are retained in high quality K- 20 computer science pathways (Stanton et al., 2017). The Expanding Computing Education Pathways (ECEP) Alliance, and the 23 member states, have been leaders in the development and promotion of state-level landscape reports. Several ECEP states have successfully designed, delivered, and analyzed data collection tools to landscape the current status of computer science education within their own state (e.g., Maryland, Indiana, Texas). However, there have been instances where data collected by different stakeholders have provided conflicting perspectives and viewpoints. Conflicting data, data that fails to account for intersectionality, or leaves out critical populations or context, potentially distracts time and effort from broadening participation in computing. This session will provide a platform for researchers and evaluators to discuss data relevant to BPC efforts, how to develop surveys, and how to structure and disseminate reports.", "authors": [{"name": "Chris Stephenson", "affiliation": "Google, Eugene, OR, USA"}, {"name": "Jayce Warner", "affiliation": "University of Texas, Austin, TX, USA"}, {"name": "Megean Garvin", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Sarah T. Dunton", "affiliation": "ECEP Alliance, Florence, MA, USA"}, {"name": "Anne Leftwich", "affiliation": "Indiana University, Bloomington, IN, USA"}], "tags": ["cs-education", "data-collection", "educational-reform", "landscape-reports", "bpc"]}, {"title": "Teaching on the Front End: Gathering all Educators Interested in Web and Mobile Design and Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3372512", "abstract": "Front-end development skills are a practical necessity for creating impactful \"real-world\" systems. Yet universities don't often prioritize skills-focused courses such as web or mobile development that teach students to design and implement user-facing systems. We believe our curricula should include these skills and stacks, and that they are a key practice through which foundational CS concepts are applied. While other technology areas have research- or education-focused conferences, front-end programming and design skill-sets are mostly relegated to professional conferences where little time is focused on education. Currently there is no way for people teaching web and mobile development in higher education to easily connect. This BoF will gather as-of-yet unconnected instructors in these areas. We will discuss questions of practice, and share expertise and support around how to best teach these user-focused skills. How can you and your students keep up with rapid changes to programming languages such as JavaScript or Swift? Should teaching focus on a particular framework such as React or Vue (or something else)-and if so which one? What is the role of \"no code\" tools (e.g., Webflow, Bubble.io) in teaching front-end development? Should you teach front-end courses like a traditional CS course or like a code bootcamp? How can you integrate foundational skills in your web and mobile development courses? Does your department want to teach these practical skills, but lacks the resources, faculty or knowledge to do so? Let's share and discuss.", "authors": [{"name": "Jen Kramer", "affiliation": "Harvard University Extension, Boston, MA, USA"}, {"name": "Erika Lee", "affiliation": "Indiana University, Bloomington, IN, USA"}, {"name": "Joel Ross", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["front-end-development", "mobile-development"]}, {"title": "Access to Computing Education for Students with Disabilities", "link": "https://dl.acm.org/doi/10.1145/3328778.3372514", "abstract": "Approximately 10% of computer science and engineering majors have a disability. Students with disabilities face a variety of challenges including those related to stigma around disability, inaccessible tools and instruction, disability disclosure, and a lack of mentors. This BOF will bring together individuals who are interested in increasing the representation of students with disabilities in computing and improving their success. Participants will share strategies to help each other do a better job of including these students in our classes and research projects. Resources related to accessible tools and instruction, universal design of learning, opportunities for students, and more will be shared.", "authors": [{"name": "Amy J. Ko", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Brianna Blaser", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Andreas Stefik", "affiliation": "University of Nevada Las Vegas, Las Vegas, NV, USA"}], "tags": ["universal-design", "accessibility", "disability", "broadening-participation"]}, {"title": "From Human-Computer Interaction to User Experience: Evolving Curriculum to Meet Student Needs", "link": "https://dl.acm.org/doi/10.1145/3328778.3372522", "abstract": "Computer Science Curriculum 2013 and Software Engineering Curriculum 2014 recommend eight and ten hours of human-computer interaction (HCI) concepts, respectively. SE2014 notes that human factors and usability are areas where motivation is needed within SE pedagogy, \"Students will often not appreciate the need for attention to those areas unless they actually experience usability differences or watch users having difficulty using software.\" However, while HCI topics include user-centered design, basic human principles, evaluation and understanding of links to technological and societal issues, many contemporary industry settings require broader skills in support of the user experience (UX), defined by Neilsen and Norman as \"all aspects of the end-user's interaction with the company.\" As industry demands for people with skills in UX grow, it is useful for educators to share their best ideas and practices in the teaching of these concepts. For educators currently teaching HCI and for those planning to teach HCI and UX, we hope to discuss strategies for including broader UX topics in their classes. Additionally, we hope to include faculty who might be integrating UX topics into curricula from psychology, human factors, Advanced Placement CS Principles courses and others. We anticipate discussion of the following: UX research methods, approaches to UX design and validation, UX requirements analysis, specification and UX business case development. We will discuss these concepts in the context of computer science and software engineering education and application as well as other settings of interest to participants.", "authors": [{"name": "Samuel D. Jaffee", "affiliation": "Google, Mountain View, CA, USA"}, {"name": "Rachelle Kristof Hippler", "affiliation": "Baldwin Wallace University, Berea, OH, USA"}, {"name": "Laura Marie Leventhal", "affiliation": "The University of Findlay, Findlay, OH, USA"}], "tags": ["user-experience-curriculum", "student-needs"]}, {"title": "Cybersecurity Across All Disciplines in 2020", "link": "https://dl.acm.org/doi/10.1145/3328778.3372536", "abstract": "We need to greatly expand the number of students studying cybersecurity in order to meet the increasing demand for security professionals. As a community, we can use our expertise and alliances with other fields to create interdisciplinary courses and modules to attract diverse students into cybersecurity. For example, Liberal Arts Colleges have a strong core general education curriculum that can be enhanced with cybersecurity concepts. On one hand, students from non-CS majors are important for the cybersecurity workforce as they will be shaping the policies and business processes that affect cybersecurity decisions. On the other hand, well rounded CS students that take interdisciplinary security courses and CS1 will be able to apply the concepts and solve today's complex security problems. This BoF will explore ideas for integrating the technical content of cybersecurity with political science, business, law, psychology, philosophy, international affairs, and others. Participants from colleges, universities and K-12 will be able to co-create plans for these interdisciplinary experiences.\nWe will discuss possible ways to integrate security-related topics hands-on exercises into existing courses from other fields or the general education core curriculum. The questions we will ask are, \"Have you created interdisciplinary courses or modules? If so, what was your experience? Were there problems? If you had no resource or policy constraints, what would an interdisciplinary security curriculum look like at your school?\" We will generate a list of ideas and disseminate that publicly.", "authors": [{"name": "Ankur Chattopadhyay", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Xenia Mountrouidou", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Elizabeth Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}, {"name": "Stacey Watson", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["interdisciplinary-education", "liberal-arts-curriculum", "cybersecurity", "security"]}, {"title": "Variable Interest Rate: What Experiences Explain Differences in Interest in Computer Science Among Students?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372537", "abstract": "The entire enterprise of computer science education is predicated on the ability to develop and sustain students' interest in the subject. Given how fundamental this aspect of the educational process is, our understanding of what experiences are actually driving the development of interest in computer science remains far from complete. This BOF session seeks to inform the direction of a new research project dedicated to investigating this question, by eliciting a discussion from expert practitioners about what they know from their experiences about how interest in CS develops.", "authors": [{"name": "Joshua Rosenberg", "affiliation": "University of Tennessee, Knoxville, TN, USA"}, {"name": "Alex Lishinski", "affiliation": "University of Tennessee, Knoxville, TN, USA"}], "tags": ["motivation", "teaching", "interest"]}, {"title": "Engaging JROTC Youth in CS Pathways: A Community Discussion of K-12 Cyber Security and Data Science Topics", "link": "https://dl.acm.org/doi/10.1145/3328778.3372516", "abstract": "CSforALL is collaborating with the US Air Force JROTC HQ and additional partners to launch JROTC-CS, a demonstration project to design and test implementation models for the long-term scale up of CS and cybersecurity education programs within the Junior Reserve Officers Training Corps (JROTC). There are approximately 500K Junior Reserve Officer Training Corps (JROTC) cadets at 3,400 partner high schools across the US. The JROTC represents a significant pool of public service oriented talent. The JROTC program is comprised of a highly diverse population, with a majority-minority student population and 40% of the JROTC being female, and JROTC is strongly represented in schools serving economically disadvantaged populations (over 50% Title 1 schools). The JROTC infrastructure is under-leveraged as a technology talent development opportunity, and represents an accessible, high ROI/low cost opportunity to accelerate preparation of the future workforce in critical areas such as computing, cybersecurity, defense technologies, AI and more. The JROTC-CS Demonstration project aims to design and test experiences for the participating districts, schools, teachers, JROTC instructors, and cadets that lead to a comprehensive implementation model for future scale across the JROTC infrastructure. An estimated additional 60K students will benefit from this project, as capacity for CS and cyber security is increased at their schools.", "authors": [{"name": "Tina Boyle Whyte", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Anthony Todd Taylor", "affiliation": "United States Air Force Junior ROTC, Montgomery, AL, USA"}, {"name": "Ruthe Farmer", "affiliation": "CSforALL, New York, NY, USA"}], "tags": ["computer-science", "cybersecurity", "demonstration-project", "usaf", "jrotc", "k12", "csforall"]}, {"title": "What Mathematics Should be Required of Computer Science Majors?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372524", "abstract": "Mathematics requirements for computer science students vary broadly by institution. The general question of what mathematics should be required of computer science majors naturally leads to more specific questions such as: What mathematics content should be required? What mathematical concepts? Should the theory of computation be required? Should calculus, discrete mathematics, probability, and/or linear algebra? What impact do newer fields such as data science and machine learning have on the mathematics needed or required for computer science majors? What are faculty members doing to integrate mathematics into their computer science courses and does this help some students overcome difficulties learning the mathematics? What level of mathematical maturity should a computer science graduate attain? In this session, participants will share their answers to these questions with the goal of coming to a broader understanding of how mathematics informs the discipline. Through this discussion, we will try to reconcile our idealized curriculum with the practical reality of requirements, dependencies, and limits imposed by our institutions.", "authors": [{"name": "James R. Matthews", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Peter-Michael Osera", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "John P. Dougherty", "affiliation": "Haverford College, Haverford, PA, USA"}], "tags": ["mathematics-requirements", "data-science", "machine-learning", "integration", "discrete-mathematics", "theory-of-computation", "mathematical-maturity"]}, {"title": "Supporting CS Students Living with Mental Illnesses: Sharing Experiences, Establishing Support, and Discussing Best Practices", "link": "https://dl.acm.org/doi/10.1145/3328778.3372528", "abstract": "Recent studies have demonstrated the prevalence of mental health issues and illnesses among students in higher education, especially in STEM degree programs like computing. While we work as a community towards solutions that benefit the mental health of all students, we must also take targeted action towards supporting students with diagnosed mental illnesses (e.g. major depression, bipolar disorder, schizophrenia). This should begin by allowing these often unheard students an opportunity to voice their invisible experiences in a safe space. This will start creating a shared understanding among faculty and students of how these illnesses can affect the educational experience, as well as how our common university practices can affect the lives of those living with these illnesses. This space will give students an understanding that their voices and experiences are valued and heard by the general academic community. We hope this will also show students that they are not alone and grant an opportunity for them to connect with others and establish networks of support. We will end this session discussing and disseminating best practices for supporting this community.", "authors": [{"name": "Brianna Blaser", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Christian Murphy", "affiliation": "University of Pennsylvania, Philadelphia , PA, USA"}, {"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["cs-students", "mental-health", "mental-illness"]}, {"title": "Assessment of CS Students' Ethical Reasoning Skills", "link": "https://dl.acm.org/doi/10.1145/3328778.3372529", "abstract": "The national push for CS departments to teach students to think about ethical implications of their work raises critical questions about how we approach this pedagogically. In contrast to the typical assessments of CS ethical thinking, which have focused on a student's ability to operate successfully within one kind of normative paradigm, our research group advocates for teaching ethics as an ongoing practice that incorporates multiple normative frameworks and an emphasis on the descriptive element of ethical reflection. In this special session, we will discuss the differences between normative and descriptive ethics, practice describing ethical dilemmas, and work together on developing assessment capabilities for descriptive ethical thinking for CS.", "authors": [{"name": "Michael D. Toland", "affiliation": "University of Kentucky, Lexington, KY, USA"}, {"name": "Emanuelle Burton", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Beth Goldstein", "affiliation": "University of Kentucky, Lexington, KY, USA"}, {"name": "Shannon Sampson", "affiliation": "University of Kentucky, Lexington, KY, USA"}, {"name": "David Dueber", "affiliation": "University of Kentucky, Lexington, KY, USA"}, {"name": "Judy Goldsmith", "affiliation": "University of Kentucky, Lexington, KY, USA"}], "tags": ["teaching-cs-ethics", "assessment", "scenarios"]}, {"title": "Graduate Programs in CS Education: Why 2020 is the Right Time", "link": "https://dl.acm.org/doi/10.1145/3328778.3372517", "abstract": "Opportunities for training CS K-12 pre-service and in-service teachers, research in CS Education, and career pathways for PhDs/EdDs in CS education are happening, but often in an uncoordinated way. We advocate that now is the right time for CS and Education to collaborate on developing new joint degree programs in Computer Science Education and to explore joint faculty appointments. High undergraduate enrollment in computing programs and the increasing interest in CS courses from non-majors represent a unique opportunity for starting successful programs. As more of CS undergraduates are undergraduate TAs and see teaching and learning from a non-learner perspective, their interest in education has also increased. The growing interest in CS education, including the need for effecting CS teaching at both K-12 and the undergraduate level, provide interesting job opportunities for CS education researchers. As CS departments develop new undergraduate degree programs and scale class sizes, research on questions like How do we teach effectively computing to different audiences? How can we assess CS learning? What are culturally responsive pedagogies? is important. To answer many of these and related questions, CS departments should be actively engaged in CS Education research, from training graduate students in interdisciplinary programs to research programs. This BOF will provide a platform for the discussion on what such graduate programs - from certificate to a PhD - can and should look like, what challenges exist to creating them, and how students with different backgrounds should get trained in the relevant foundations of CS and Education.", "authors": [{"name": "Alan Peterfreund", "affiliation": "SageFox Consulting, Amherst , MA, USA"}, {"name": "Amy Ko", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Susanne Hambrusch", "affiliation": "Purdue University, West Lafayette, IN, USA"}, {"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}], "tags": ["graduate-programs", "new-interdisciplinary-degrees"]}, {"title": "Research Questions regarding Undergraduate TA and Mentor Programs in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372532", "abstract": "Undergraduates have been an important part of the teaching staff at many universities for decades. Recent work such as the Peer Teaching Summit at SIGCSE 2019 [1] and a systematic literature review [2] have focused more attention on issues related to the use of undergraduates in teaching assistant roles. This BOF provides a forum to discuss open research questions about undergrad TA/mentor programs at various stages in their evolution. Attendees will have an opportunity to discuss research questions, research methods, and explore possible collaborations. Discussion Leader(s): Diba Mirza will open the session by summarizing the key findings of literature review on UTAs from ICER'19 [1]-in particular, the fact that while there is widespread consensus that using UTAs is a good idea, the evidence backing up this consensus is mostly anecdotal. This creates many opportunities to establish the effectiveness of current practices, and the claimed benefits of the use of UTAs through more rigorous research and to discuss innovative ways to incorporate UTAs in teaching outside of what has been reported in the literature. This will be followed by a themed discussion to brainstorm about research within each of these areas. Based on the large turnout at the BOF on Undergraduate Teaching Assistants in SIGCSE'19, we plan to organize the discussion in smaller groups. Diba Mirza, Phillip Conrad, and Cynthia Lee will lead the discussion within each group. The leads will also document the discussions and share it with the participants.", "authors": [{"name": "Phillip Conrad", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Diba Mirza", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["undergraduate-mentors", "undergraduate-teaching-assistants", "undergraduate-tutors", "peer-teaching"]}, {"title": "Birds of a Feather Who'd Like to Share Software Together: Teaching Tools that Improve Efficiency and Outcomes", "link": "https://dl.acm.org/doi/10.1145/3328778.3372510", "abstract": "Odds are we've all used (or tried!) quite a few tools to facilitate efficiency inside and outside of the classroom and empower students to learn more effectively. Some of these tools are perhaps homegrown and unique to one's own institution, but freely available educational technologies abound as well, some in the cloud, some for Macs and PCs, some open-source. And quite a few commercial tools offer free or discounted educational plans as well. In this BoF, we'll begin with a whirlwind tour of the tools we ourselves use, identifying the problems they solve and how well, then quickly open the floor to everyone to share their favorites as well. Along the way, we'll note every tool mentioned and share the results. Attendees should exit this session with a better understanding of the educational-technology landscape, familiarized with innovations they can bring back to their own classes.", "authors": [{"name": "Brian Yu", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Doug Lloyd", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["tools", "edtech", "innovation", "efficiency", "learning", "software", "teaching"]}, {"title": "Teaching Track Faculty in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372521", "abstract": "Many computer science departments have chosen to hire faculty to teach in teaching-track positions that parallel the standard tenure-track position, providing the possibility of promotion, longer-term contracts, and higher pay for excellence in teaching and service. This birds-of-a-feather is designed to gather educators, both experienced and new to teaching track positions, who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information. This year, we plan on discussing teaching load, particularly as it relates to expanding class sizes and limited budgets for teaching staff support (e.g., TAs, graders, etc.). We will also discuss office hours strategies for both faculty and TAs in light of the same large class-size concerns.", "authors": [{"name": "Chris Gregg", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Laney Strange", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Shawn Lupoli", "affiliation": "Texas A&M University, College Station, TX, USA"}], "tags": ["pedagogy", "class-size", "teaching-track-faculty", "lecturers", "teaching load", "teaching"]}, {"title": "Teaching Interdisciplinary Courses with Data", "link": "https://dl.acm.org/doi/10.1145/3328778.3372539", "abstract": "Teaching interdisciplinary courses is an exciting way to build collaborations between different departments and to make students aware of the potential impact of their work. Students in these courses can develop skills in synthesis and complex problem solving by learning to draw parallels between different fields of study and application areas. The goal of this BoF is to bring together a community of educators who are teaching interdisciplinary and/or data science courses with the goal of expanding a support network of data science faculty and developing educational standards for undergraduate data science curricula. We would like to leverage the SIGCSE community to bring together people from different disciplines, institutions, and organizations. The session will include a chance for participants to discuss their experience with and challenges with interdisciplinary course teaching. The second half of the hour will be spent trying to identify common themes to be addressed in follow up discussions and meetings. These materials will be posted on the Data Science Pedagogy repository: https://github.com/data-science-pedagogy", "authors": [{"name": "Yekaterina Kharitonova", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Marc Rigas", "affiliation": "Pennsylvania State University, University Park, PA, USA"}], "tags": ["critical-thinking", "statistics", "data-science"]}, {"title": "Session details: Lightning Talks 1", "link": "https://dl.acm.org/doi/10.1145/3385601", "abstract": "No abstract available.", "authors": [{"name": "Lina Battestilli", "affiliation": "North Carolina State University"}, {"name": "Jennifer Campbell", "affiliation": "University of Toronto"}], "tags": []}, {"title": "Automatic Grading for Program Tracing Exercises", "link": "https://dl.acm.org/doi/10.1145/3328778.3372561", "abstract": "Understanding how a programming construct executes is a prerequisite for coding. Tracing exercises are often used to help students develop accurate mental models of how different constructs execute. Besides asking students for the final result, a full tracing exercise, similarly to an instructor's white-board demo, checks whether students understand the execution flow and how the memory/output changes with each step of execution. Such exercises can be time-consuming to grade or set up. For paper-based full tracing exercises, once submitted, they represent the final state of the memory/output. It is time-consuming to infer whether students have traced each step correctly. For an auto-gradable quiz, if the questions are too specific (e.g. the value of a variable), they already reveal partially what the program will do. It takes time to set up auto-gradable questions that avoid this problem. We are developing a web-based system that allows instructors to set up auto-gradable full tracing exercises easily. Our approach is to augment pythontutor.com, a popular open-source code visualization system that graphically demonstrates the execution flow and memory/output changes of a complete program. Before demonstrating a step, the new system will prompt a student to determine which line is executed next and what changes happen in memory/output. The system will be auto-gradable, making it easy to deliver full tracing exercises. We will demonstrate implemented features, discuss future plans, and gather feedback from those present.", "authors": [{"name": "Wei Jin", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}], "tags": ["cs1", "program-tracing", "automatic-grading"]}, {"title": "All Means All: Bringing Project-based, Approachable AI Curriculum to More High School Students through AI4ALL Open Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3372554", "abstract": "Aimed at people interested in teaching AI to students of all backgrounds and others interested in broadening participation in AI, this lightning talk describes the thought process behind AI4ALL's online Open Learning curriculum, the first module of which was officially released in September 2019. AI4ALL Open Learning makes AI education free and approachable to groups that are otherwise excluded from the tech economy due to socioeconomic status, geographic location, access to resources, race, gender, and other factors. The module released in September is designed for high school students and requires no programming or Math experience. It centers around \"AI literacy\" - what AI is, how students are using it in their everyday lives, how they might in the future, and the ethics and social impacts of AI. It engages students through discussion with their classmates, their community, and their other classes, and it offers students opportunities to pursue AI projects that intersect with their interests. During the lightning talk, we will also discuss the next stage of development for the AI4ALL Open Learning curriculum: modules that build students' technical AI skills in the context of the students' interests and passions.", "authors": [{"name": "Sarah Judd", "affiliation": "AI4ALL, New York, NY, USA"}], "tags": ["experiential-learning", "diversity-in-ai", "blended-learning", "k-12-ai-education", "student-centered-learning"]}, {"title": "Student Alumni Networking", "link": "https://dl.acm.org/doi/10.1145/3328778.3372560", "abstract": "This lightning talk describes a pair of on-campus events and their possible effects on student retention and graduate employment rate. The Physics Department at St. Mary's College of Maryland has built a program to help its students prepare for the job market. This fall I replicated one part of this program in the computer science department with a two-hour networking event at which alumni answered questions as part of a panel and then participated in a speed dating type meet and greet with current students. In the future I would like to hold similar events while collecting data on how student's understanding of career opportunities change as a result of the event, and in the long term the difference in career type and employment rate. I would also like to test the effect of these events on student perception of diversity in the field of computer science. Faculty who might be interested in holding similar events and collecting data on their campus' or collaborating with the proposer to develop the study should email the proposer", "authors": [{"name": "Ariel Webster", "affiliation": "St. Mary's College of Maryland, St. Mary's City, MD, USA"}], "tags": ["career", "retention", "alumni"]}, {"title": "Make Your Escape: An Active Learning Approach", "link": "https://dl.acm.org/doi/10.1145/3328778.3372557", "abstract": "This lightning talk describes the use of escape rooms in Computer Science and Mathematics education. Escape rooms are games where players work collaboratively to solve a series of puzzles in order to achieve a goal within a limited time frame. Student created escape room puzzles are a novel way for students to foster and demonstrate their knowledge through non-traditional methods. This activity can be used in courses across the CS curriculum as well as in K-12 education. Students enjoy building the escape rooms, so they don't consider it a formal assessment and it promotes creativity and teamwork skills. Our presentation will cover the key elements in this process from formation of groups to acquiring traditional escape room elements as well as other resources that students use to create the puzzles. We will also discuss how we familiarized the students with escape rooms before the activity. We will give examples of some of the puzzles created by our CS students that included the history of computing, tracing computer code, designing algorithms, solving logic problems, binary numbers, decoding ASCII codes, encryption and sequence and series problems.", "authors": [{"name": "Elana Reiser", "affiliation": "St. Joseph's College, Patchogue, NY, USA"}, {"name": "Victoria Hong", "affiliation": "St. Joseph's College, Patchogue, NY, USA"}], "tags": ["non-traditional-methods", "encryption", "time-management-skills", "collaborative-learning", "critical-thinking"]}, {"title": "Leveraging Industry Benchmarks to Teach Database Concepts", "link": "https://dl.acm.org/doi/10.1145/3328778.3372562", "abstract": "Databases have been a part of core curriculum in computer science for decades. Courses exist at both introductory and advanced levels and topics include data modeling and design, query optimization, and studying features of specific database platforms such as MySQL. Concepts such as normalization in relational databases, OLTP/OLAP are taught using assignments that are based on short synthetic examples. In this talk, we propose the use of open use industry benchmark kits (HammerDB), the Wisconsin benchmark, and/or TPC-defined industry benchmark to create \"close to real-world\" and engaging course modules. The use of benchmarks will not only offer new ways of teaching the existing topics but also allow extending the scope of current database courses to contemporary data management systems and big data technologies. Students will be exposed to a breadth of areas including database internals, performance optimization, schema design (real world schemas with \"large\" datasets), an insight into the underlying system and its performance, and exposure to -what's possible\" with current hardware all under one course. The three benchmarks we discuss cover three different data management scenarios. TPC-[C/E] serves OLTP use-case, TPC-[H/DS] addresses OLAP while TPCx-BB supports a mix of OLAP and Big Data. We experimented with this idea by organizing two guest lectures on database benchmarks to a class of computer science students at Portland State University; and it was very well-received as evident from students' feedback. Through this proposal, we hope to invite interested faculty for further discussions so that it may develop into a multi-institutional endeavor.", "authors": [{"name": "Dippy Aggarwal", "affiliation": "Intel Corporation, Bellevue, WA, USA"}, {"name": "Charles Winstead", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Kristin Tufte", "affiliation": "Portland State University, Portland, OR, USA"}], "tags": ["databases", "big-data", "benchmarks", "performance-engineering"]}, {"title": "Teaching with Program2Play: Using Programming Instructions to Play Games", "link": "https://dl.acm.org/doi/10.1145/3328778.3372563", "abstract": "Program2Play is a web-based initiative that teaches learners to program through gameplay. Program2Play games generally have two versions for each game. One game can be played by using a mouse or arrow keys, depending on the type of user interaction required. This version demonstrates the desired functionality of the game. The second game is identical to the first game except there are programming instructions missing from the first which the user must supply for the game to function correctly. The user can then test the programming instructions by playing the second version of the game and observing the results of the inserted instructions. Because learners code a small portion of a game, they can see the result of their efforts quickly in an exciting context. Also, by coding a subset of the game the sources of error are greatly reduced, enhancing the likelihood of a successful learning experience. The initial games target relatively simple, yet powerful instructions. For example, learners are asked to code the instruction that moves a bee in the game so that it avoids a dragonfly and reaches the honeycomb. The simplicity and power of an instruction like, bee.x += value, can be experienced in the context of an animation loop.\nThis pedagogical approach encourages experimentation with programming instructions. Program2Play is suited for beginning programmers and programmers who may need additional learning experiences or motivation. Program2Play can be used in high schools or to help remediate deficient programming skills for first-year students.", "authors": [{"name": "Evelyn M. Stiller", "affiliation": "Plymouth State University, Plymouth, NH, USA"}], "tags": ["programming-pedagogy", "javascript", "games-for-learning", "web-based-games"]}, {"title": "Transitioning From Peer Instruction to POGIL with Guided Lecture Notes", "link": "https://dl.acm.org/doi/10.1145/3328778.3372565", "abstract": "There is overwhelming evidence that active learning is better than completely passive lecture. However, adoption of evidence-based teaching practices has been slow in part because creating new course materials is often a time-consuming and labor-intensive process. Inspired by prior work in the sciences, we describe our experiences deploying guided lecture notes to transition from peer instruction (10% of lecture time) to process oriented guided inquiry learning (POGIL, 50% of lecture time) over two offerings of data structures and algorithms in a large R1 university. In the first offering, we added metacognitive questions in the presentation speaker notes, providing additional scaffolding between pre-lecture reading and in-lecture peer instruction activities. At the beginning of each class session, we distributed guided lecture notes to students by printing the presentation speaker notes alongside lecture slide content. In this way, we were able to seamlessly integrate new supporting materials alongside lecture graphics and examples. In the second offering, we expanded guided lecture notes into POGIL worksheets by migrating most of the remaining passive lecture content to pre-lecture readings and consolidating lecture around three levels of process oriented guided inquiry: (1) metacognitive questions, (2) peer instruction activities scaffolded by the metacognitive questions, and (3) practice problems integrating multiple ideas. The resulting POGIL classroom leverages presentation software as a canvas for introducing problems with graphics and animations while structuring activities around active learning via process oriented guided inquiry.", "authors": [{"name": "Kevin Lin", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["peer-instruction", "process-oriented-guided-inquiry-learning", "pogil", "metacognitive-scaffolding", "lecture"]}, {"title": "Improving the Outcomes of Hispanics in AP Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372567", "abstract": "This lightning talk describes a proof of concept research project funded by a Google CS Education (CS-ER) Research grant. The project focuses on pedagogical interventions aimed at improving the outcomes of English Language Learners (ELLs) in Advanced Placement Computer Science. The research underway examines the use of Sheltered Instruction (SI), a model from English as a Second Language (ESL) and bilingual education, used in mainstream classrooms across other content areas, in the AP CSA and AP CSP classroom. Strategies and pedagogy from the Sheltered Instruction model are being infused into AP Computer Science curriculum and used in classrooms in participating districts. The districts have been selected to include a range of ELLs and native English speakers. The impact of this approach will be measured by comparing the AP CS exam scores of students in the participating districts with the national and state AP CS exam scores. This lightning talk will focus on the pedagogy development which has taken place and preliminary findings from two cohorts of AP CS and AP CSA teachers, in particular the impact and changes to the teacher's development of CS education lessons and in-class lesson delivery. The project is an interdisciplinary collaboration between faculty from the School of Computer Science and the School of Curriculum and Teaching.", "authors": [{"name": "Mayra Bachrach", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Patricia Morreale", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Gail Verdi", "affiliation": "Kean University, Union, NJ, USA"}], "tags": ["hispanics", "scaffolding", "academic-language", "pedagogy", "academic-discourse", "equity"]}, {"title": "A Study Away Summer Program Addressing Accessibility", "link": "https://dl.acm.org/doi/10.1145/3328778.3372569", "abstract": "Accessibility is an important part of designing and building products, yet many computer science students are not receiving any instruction on how to design for accessibility. Teach Access was founded in 2015 as a joint endeavor between industry and academia to address this issue. As part of this larger initiative to include accessibility topics within the field of computer science, we discuss our experiences organizing and participating in a summer study away program that brought together faculty and students from seven universities to spend a week visiting and learning from accessibility experts at a variety of technology companies within Silicon Valley. This second annual offering of this study away program allowed the participating students to learn more about accessibility, participate in accessibility design challenges, and increase discussion and awareness about disabilities and accessibility. We believe this program to be transformational for the students who participate; and are exploring ways to expand the program offerings to reach even more students.", "authors": [{"name": "Kendra Walther", "affiliation": "University of Southern California, Los Angeles, CA, USA"}, {"name": "Kate Sonka", "affiliation": "Michigan State University, Lansing, MI, USA"}], "tags": ["accessibility", "design-challenges", "interdisciplinary-project", "disabilities"]}, {"title": "Computational Thinking in Teacher Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372571", "abstract": "Teacher education programs are beginning to acknowledge the important role they play in preparing teachers to support students in the area of STEM, coding, Computational Thinking and robotics. As a result, new courses are being developed that connect research, pedagogy and technology within this nascent field. An example of this is Western University's Computational Thinking in Mathematics and Science Education course, which has been offered in year one of the Bachelor of Education program since 2015 and is part of the STEM cohort. Research has been conducted during each iteration of the course and subsequent adjustments were made in order to better serve the preservice teachers as well as respond to new insights in the field. The preservice teachers have completed at least one university degree, mostly in the areas of science or mathematics, prior to beginning their Bachelor of Education degree. This lightning talk presents highlights from the most recent version of the course following this iterative process of course design. The 36-hour course provides pre-service teachers with opportunities to explore hands-on-activities and theoretical-based approaches to Computational Thinking and pedagogy in grades 7-12, all within a blended learning context. The researchers will be further studying the pre-service teacher experience and are looking to provide recommendations for other preservice teacher education programs as well as in-service professional development programs.", "authors": [{"name": "Lisa Anne Floyd", "affiliation": "Western University, London, ON, Canada"}], "tags": ["preservice-teachers", "computational thinking", "blended-learning", "teacher-education", "coding", "computer-science-education"]}, {"title": "Session details: Lightning Talks Session 2", "link": "https://dl.acm.org/doi/10.1145/3385602", "abstract": "No abstract available.", "authors": [{"name": "Lina Battestilli", "affiliation": "North Carolina State University"}, {"name": "Jennifer Campbell", "affiliation": "University of Toronto"}], "tags": []}, {"title": "AppConnect NW: A Collaborative Network of Seven Community and Technical College Programs in Software Development", "link": "https://dl.acm.org/doi/10.1145/3328778.3372555", "abstract": "AppConnect NW is a network of seven community and technical colleges in the Puget Sound region offering applied baccalaureate degrees in software and application development. As the need for qualified developers continues to increase, the AppConnect NW colleges are preparing the next generation of the workforce with the most in-demand skills, technologies, and hands-on project experience. The network is engaging with the Washington Technology Industry Association, regional employers, local high schools, and graduate schools to increase the awareness of applied bachelor's degree pathways and support the local talent pipeline. Faculty collaborate across colleges on industry-driven curriculum that prepares students for careers in technology. The purpose of this lightning talk is to share some of the initial results of the project (year two, out of a four-year project) and to share opportunities for further work in developing similar regional collaboration networks.", "authors": [{"name": "Brianna Rockenstire", "affiliation": "Lake Washington Institute of Technology, Kirkland, WA, USA"}, {"name": "Alexandra Vaschillo", "affiliation": "Lake Washington Institute of Technology, Kirkland, WA, USA"}, {"name": "Kendrick Hang", "affiliation": "Green River College, Auburn, WA, USA"}], "tags": ["software-engineering-education", "community-college", "applied-baccalaureate", "coordination-network", "community-college-baccalaureate", "information-technology-education"]}, {"title": "Examining Language Bias in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372556", "abstract": "This lightning talk will discuss the current efforts to identify and analyze the possibility of language bias in documents, exams, technical interviews, and actual interviews used in computer science as contributing factors in the continued lack of participation/success of underrepresented populations in computers science despite extensive efforts to develop a more inclusive environment. Although many factors have been examined while attempting to explain the continued lack of participation/success of under-represented populations in computer science, language bias in the very instruments that are used to measure success and entry does not seem to be among the forefront of these endeavors. This work is inspired by previous work done to examine biased language based upon neutral point of view (NPOV) revisions done on Wikipedia pages and seeks to apply similar methodologies to computer science instruments of evaluation in order to determine if there may indeed be a subtle and unconscious language bias within them.", "authors": [{"name": "Catherine M. Tabor", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}], "tags": ["retention", "underrepresented-students"]}, {"title": "Best Practices for Reviewing Material at the Beginning of a Semester", "link": "https://dl.acm.org/doi/10.1145/3328778.3372559", "abstract": "This lightning talk describes three different styles of beginning of semester review and a study designed to show which styles are more or less effective. An initial study comparing traditional review and traditional review with the addition of an educational video game was completed with 33 subjects in three classes. The study found that students showed more confidence on specific tasks, such as recursion, and improved their answers for questions on those topics after playing the game during their review. However, the students who played the game were less confident, compared to their peers, in their overall ability in computer science. For more reliable results a second study should be run with more participants. While the initial research focused on review with and without game play incorporated into the review, a second study would split the first condition in two, review with and without additional practice problems. Faculty who might be interested in participating this research by collecting data in their classes or collaborating with the proposer to develop the second study should email the proposer.", "authors": [{"name": "Jared Segal", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Ariel Webster", "affiliation": "St. Mary's College of Maryland, St. Mary's City, MD, USA"}], "tags": ["student-engagement", "review"]}, {"title": "Software Engineering for Data Scientists", "link": "https://dl.acm.org/doi/10.1145/3328778.3372558", "abstract": "Software is one of the three key pillars in the emerging field of data science, the other two being statistics and domain knowledge. With software engineering having matured into a full-fledged discipline, can it inform data science projects through its extensive knowledgebase? Data scientists of today are experiencing what software engineers experienced around 1970s. We are at the cusp of a new era with many promising opportunities, but we have yet to find a process-centric approach that could guide our data science ventures.\nSoftware development methodologies evolved from a structured waterfall to an iterative exploration. They transitioned from trying to create products that are built-to-last to products that are built-to-change. Data science projects, coming from the other end of the spectrum, need to shift from being ever-changing short-lived experiments to long-term sustainable organizational capabilities without losing the ability to explore and adapt. To make this shift, software engineers need to re-articulate their learning in the context of the emerging data science paradigm. Software engineering needs to develop its data science lens.\nMany tools such as programming languages, database systems, and infrastructural platforms are common across the two worlds, so which of the underlying principles can benefit data scientists? These are the questions that will be explored in this talk and those interested in joining this exploration are welcome to share their thoughts.", "authors": [{"name": "Neelam Dwivedi", "affiliation": "Carnegie Mellon University & Heinz College, Pittsburgh, PA, USA"}], "tags": ["data-science", "software-engineering"]}, {"title": "Using Self-Efficacy Surveys as a Tool for Student Reflection", "link": "https://dl.acm.org/doi/10.1145/3328778.3372564", "abstract": "This lightning talk will describe how we have introduced self-efficacy surveys into an object-oriented programming course with the goal of encouraging reflection and positive learning behaviors on the part of our students. Self-efficacy surveys such as the Motivated Strategies for Learning Questionnaire (MSLQ) are frequently used to quantify the effect of pedagogical innovations on student learning. This is motivated by an understanding that a positive attitude of self-efficacy can lead to improved student retention and outcomes. Some authors have also written about the benefits of measuring self-efficacy to help instructors better support individual students. We conjectured that asking students to reflect on their own sense of self-efficacy could help students make positive choices about their learning behaviors. For the past two semesters we have deployed a self-efficacy survey at the start of the course and at midterm - two natural points for students to consider how they are approaching their coursework. Students assess elements of their own self-efficacy as well as answer open-ended questions about actions they can take to support their learning and barriers they are concerned may get in the way of their learning. We will present our survey, describe how it is used in the course, and discuss some initial positive effects we have observed.", "authors": [{"name": "Amanda M. Holland-Minkley", "affiliation": "Washington & Jefferson College, Washington, PA, USA"}], "tags": ["self-efficacy", "programming-instruction", "computing-education", "student-reflection"]}, {"title": "Exploring Intercultural Approaches to Resolving Sociocultural Tension in CS Classes", "link": "https://dl.acm.org/doi/10.1145/3328778.3372566", "abstract": "CS education currently considers problems of access or participation for various marginalized groups, often in the U.S.-based settings. Yet even where such thorny problems are resolved, equity research suggests that sociocultural tension in classrooms -often between students themselves -may reproduce disparities and boundaries of the wider society, even (or especially) in politically- or ethically-conscious curricula (as argued recently by STEM equity researchers such as Sepehr Vahil and Na'ilah Nasir). A challenge thus remains in some diverse classrooms and contexts to teach understanding between all students, rather than purely computing. This lightning talk introduces our effort for intercultural computing education called the Nairobi Play Project, a computational thinking (CT) course for multi-ethnic East African youth that integrates intercultural competence and peace-building activities. We talk about our current exploration of theoretical and pedagogical alignments (and tensions) between CT and intercultural learning, and our current challenges in dealing with the complications of intercultural computing endeavors. We hope the talk opens up further discussion and debate on the role of CS educational spaces as sites sociocultural learning and disruption of the reproduction of disparities.", "authors": [{"name": "Ian Arawjo", "affiliation": "Cornell University, Ithaca, NY, USA"}, {"name": "Ariam Mogos", "affiliation": "Nairobi Play Project, Nairobi, Kenya"}], "tags": ["sociocultural-tension", "k-12-computing-education", "equity", "intercultural-learning"]}, {"title": "Accruing Interest: What Experiences Contribute to Students Developing a Sustained Interest in Computer Science Over Time?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372568", "abstract": "This lightning talk describes a new grant-funded research project investigating how undergraduate computer science students' interest in CS develops. The goal of this project is to investigate how sustained, individual interest develops from finer-grained experiences of situational interest that students have in introductory CS courses. This project will accomplish this goal using the experience sampling method (Hektner, Schmidt, & Csikszentmihalyi, 2007), which is a longitudinal research method that asks participants to report on their immediate experiences at many occasions. Prior research has not adequately investigated what drives individual differences in CS interest at the level at which policymakers and educators can most effectively act, namely, at a situation-to-situation level, rather than in terms of what happens in courses, programs of study, or occupations in general and overall. Moreover, research has shown that some overall factors, such as competence-related beliefs and co-curricular supports, might be related to the development of sustained interest in CS (e.g., Lishinski, Yadav, Good, & Enbody, 2016). Thus, we will explore how students' initial interest, as well as their individual motivational characteristics, such as CS self-concept, and CS self-efficacy, relate to interest at a situation-to-situation level. Furthermore, we will also explore how contextual factors - those internal to students, such as how challenging they found the activities, as well as those external to students, such as the focus of each class - relate to students' situational interest. Overall, we hope to better understand how students' situational interest relates to changes in their longer-term, individual interest.", "authors": [{"name": "Joshua Rosenberg", "affiliation": "University of Tennessee, Knoxville, TN, USA"}, {"name": "Alex Lishinski", "affiliation": "University of Tennessee, Knoxville, TN, USA"}], "tags": ["motivation", "teaching", "interest"]}, {"title": "Evaluating 10 Years of Girls Only Computing Camps: Impacts, Lessons Learned and a New Future Direction", "link": "https://dl.acm.org/doi/10.1145/3328778.3372570", "abstract": "For many years, summer computing camps have been offered as a means to attract girls and underrepresented groups to computing. This lightning talk describes the current effort to assess the return on investment for a girls only summer computing camp program offered for ten years at a Midwestern university in the U.S. In the 9th year of the program, the sponsoring college observed changing trends that suggested a need to evaluate the program's short and long term impacts and either discontinue the program or develop a new approach for the future.\nIn this, the 11th year since the program started, a review team has been formed to 1) evaluate enrollment and retention numbers from years one through 10, 2) evaluate demographic trends among the girls who participated in the program, 3) review annual pre- and post-camp camper surveys to assess interim impacts, and 4) track campers' current school and/or career status (through a combination of alumni surveys and university enrollment records) to identify long term impacts. Following this initial assessment, the review team will compare program recruitment and retention processes to similar programs and organizations and more recent research-based developments in diversity-focused programs and outreach. The ultimate goal of this project is to move beyond summer computing camps to a more effective approach to recruiting more women and underrepresented groups to the computing field. We will share our 10-year results, lessons learned and suggestions for future efforts in this area and gather audience feedback.", "authors": [{"name": "Christina N. Outlay", "affiliation": "University of Wisconsin - Whitewater, Whitewater, WI, USA"}], "tags": ["diversity", "outreach", "camps", "middle-school", "computing", "gender", "k-12", "high-school"]}, {"title": "Making Undergrad Research Required at the CS Freshmen Level as an Equity-Minded HIP", "link": "https://dl.acm.org/doi/10.1145/3328778.3372573", "abstract": "This lightning-talk will discuss our novel work towards making undergraduate research a required part of our CS freshmen classes as a High-Impact-Practice (HIP) activity. We have developed a nifty undergrad-scholarly-creative-activity (URSCA) as a mandatory assignment for CS freshmen in this pilot experiment. We are investigating whether undergrad research can be included in an equitable and inclusive manner at the freshmen level so that it is accessible to all students for enhanced learning, better experience and more impactful professional development. Thus, this project is an initiative towards bringing URSCA to CS freshmen in a user-friendly and accessible form, so that the opportunity to taste URSCA is not limited to a few i.e. only the talented, self-motivated and selected CS students. The goal of this project is to discover a user-friendly and an equity-focused way for exposing CS freshmen to the essence of URSCA, which includes understanding the notion of a research-question, how to read and analyze research-articles, how to identify research-questions and think out-of-the-box, and how to develop writing-skills. Our innovative URSCA-HIP assignment has been designed as a team project for CS freshmen, with each team being assigned a senior CS student as a peer research mentor. We are collecting survey-data from the freshmen research-mentees and their corresponding senior research-mentors in order to evaluate our unique URSCA-HIP experiential-learning model, and gauge its overall efficacy. To our knowledge, this is a first-of-its-kind initiative of engaging CS freshmen in an inclusive, equity-focused URSCA-HIP experience through a user-friendly but required class project.", "authors": [{"name": "Ankur Chattopadhyay", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Sherry Verdon", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}, {"name": "Kevin Grondahl", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}], "tags": ["undergraduate-research", "ursca", "hip", "cs-freshmen", "equity"]}, {"title": "The World's Fastest Fractal Drawing Program!", "link": "https://dl.acm.org/doi/10.1145/3328778.3372572", "abstract": "Many of us use fractals (e.g., C-Curve) and the Fibonacci sequence to teach recursion to our students. We show that the na\u00efve recursive implementations of them have exponential running time. However, while we all explain that the Fibonacci sequence can be computed in linear time, how many of us show that completely self-similar fractals can also be created in linear time?\nSnap! is a blocks-based programming environment with a hidden and magical feature - the ability to save pen trails (i.e., the lines that the turtle-geometry sprite has drawn on the screen) into a single \"costume\", which can later be \"stamped\" onto the stage at an arbitrary position, orientation and size. Stamping takes constant time, regardless of the complexity of the pen trails that have been saved. This allows a sprite to draw a complicated picture once, save it as a pen trail, and simply stamp it over and over again, rather than redraw it.\nWe have created \"the world's fastest fractal drawing program\", which makes use of this feature, & can draw the C-Curve fractal at level 40 (with over 1 trillion \"lines\") in a fraction of a second; the speed is quite startling! We encourage you to see it for yourself: https://tinyurl.com/SIGCSE2020WorldsFastestFractal\nIn this lightning talk, we'll show our program, explain how it works, encourage educators to teach this new approach with Fractals, and challenge everyone to \"think out of the box\" when approaching problems that may have previously seemed intractable.", "authors": [{"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["fractals", "thinking-out-of-the-box"]}, {"title": "Session details: Demonstrations", "link": "https://dl.acm.org/doi/10.1145/3385603", "abstract": "No abstract available.", "authors": [{"name": "Lina Battestilli", "affiliation": "North Carolina State University"}, {"name": "Jennifer Campbell", "affiliation": "University of Toronto"}], "tags": []}, {"title": "Snap! v5, Our Biggest, Feature-filled Release Ever!", "link": "https://dl.acm.org/doi/10.1145/3328778.3372549", "abstract": "In early June, we released Snap! version 5, with more new features than in any previous release. We now have a community website where users can share and publish projects so others can find and remix them, and where they can ask questions and discuss the beauty and joy of computing. We can now embed Snap! projects in other web pages. We've also enhanced the programming language, making it easier to discover and to use powerful blocks for analyzing data and transforming media. Did you know you can now use the video motion from the camera as an input device? How about painting by whistling? There's nothing that beats a live demonstration of all these wonderful features, and we have two veteran power users to take it through its paces.", "authors": [{"name": "Michael Ball", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Dan Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["media-computation", "build-your-own-blocks", "beauty-and-joy-of-computing", "csforall"]}, {"title": "Implementing a More Challenging Parsons Problem Interface for Teaching Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372548", "abstract": "Parsons Problems, in which students unscramble provided lines of code, are an exciting innovation for teaching introductory Computer Science. Prior work has shown that students can learn more efficiently by solving Parsons Problems compared to writing code and can learn more effectively by solving Parsons Problems compared to worked examples. Though Parsons Problems have been found effective, there is some evidence that students can use syntactic heuristics to help them solve these problems without full understanding, confirmed to be in use by mature CS1 students in our pilot study. To address this limitation, we propose Faded Parsons Problems, a variation of Parsons Problems where parts of the provided code are incomplete. We built a Flask app that supports Python programming exercises - traditional code writing, standard Parsons Problems, and Faded Parsons Problems - as well as survey and simple comprehension questions (multiple choice and short answer questions). The system can log anonymized data from participants, enforce time limits, and randomize treatment selection. Exercises support an autograder, implemented as a separate worker using RQ that safely executes arbitrary code. Students can run pre-configured tests as frequently as they want to receive detailed output from the test cases: function arguments, expected output, actual output, print statement output, raised exceptions, and custom messages configured by the instructor. Exercise descriptions, provided code lines (including blanks), initial code, and test cases may be configured from YAML files. The system has been used successfully with 50 simultaneous users. A demo can be viewed at https://codestyle.herokuapp.com/sigcse-demo", "authors": [{"name": "Nathaniel Weinman", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Brian Hsu", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Alexia Camacho", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["cs1", "practice-tools", "faded-scaffolding", "parsons-problem"]}, {"title": "The Quantum Katas: Learning Quantum Computing using Programming Exercises", "link": "https://dl.acm.org/doi/10.1145/3328778.3372543", "abstract": "Quantum computing harnesses quantum laws of nature to enable new types of algorithms, not efficiently possible on traditional computers, that may lead to breakthroughs in crucial areas like materials science and chemistry. There is rapidly growing demand for a quantum workforce educated in the basics of quantum computing. However, there have been very few offerings that help the learner to bridge the gap between the theoretical quantum computing knowledge and applying it to solving real-world problems.\nThe Quantum Katas project has been designed specifically to reduce that gap. Each kata is a sequence of programming exercises that walk the learner through one or several closely related topics in quantum computing. The learner turns to the kata once they have studied the theory on this topic, to internalize their new knowledge. Each exercise requires writing a fragment of code in Q# - a quantum programming language. Most importantly, each kata includes a testing framework that provides immediate feedback for the attempted solutions, allowing the learner to study at their own pace even without access to instructor. This makes the project beneficial both for instructor-led studies and for self-learning.\nThe Quantum Katas are an open-source project available at https://github.com/microsoft/QuantumKatas.\nIn this demo I will showcase the Quantum Katas and talk about our experience using them in a variety of learning environments, from guided university courses to workshops and study groups to self-paced learning.", "authors": [{"name": "Mariia Mykhailova", "affiliation": "Microsoft, Redmond, WA, USA"}], "tags": ["quantum-programming", "interactive-learning", "active-learning", "quantum-computing"]}, {"title": "Deep Thought: An Intelligent Logic Tutor for Discrete Math", "link": "https://dl.acm.org/doi/10.1145/3328778.3372544", "abstract": "Undergraduate students often struggle to learn optimal logic proof solving strategies in Discrete Math courses, primarily because of the open-ended nature of the domain. Students can, therefore, benefit from personalized tutoring, where they can receive user-adaptive support. Over the past decade, the advancements in the field of intelligent tutoring systems (ITSs) have made it possible to provide personalized tutoring with minimal involvement of a teacher or a human expert. While such tutoring systems have the potential to augment student learning on a large scale, few intelligent tutors are made open source. Deep Thought is a logic tutor where students practice constructing deductive logic proofs. Extensive research has been conducted for 11 years to provide data-driven intelligent tutoring support in Deep Thought. The logic tutor provides adaptive support using data-driven approaches on two levels: problem level, where the tutor decides whether the student should view the next problem as a worked example or they should solve it, and step level, where the tutor decides when an unsolicited partially-worked step should be provided to the student to direct them towards optimal problem-solving strategies. We have found encouraging evidence to support that the intelligent policies in Deep Thought help undergraduate students learn logic. Deep Thought is currently being used in discrete math classes at two universities: North Carolina State University, and the University of North Carolina at Charlotte. Our aim is to make this tutor available to a larger audience so as to contribute to the Computer Science Education community.", "authors": [{"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Mehak Maniktala", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["intelligent-tutor", "logic", "discrete-math"]}, {"title": "Bricks: Extreme Active Learning for Introductory Programming", "link": "https://dl.acm.org/doi/10.1145/3328778.3372547", "abstract": "Bricks is an extreme active learning environment developed for teaching intro programming using learn-by-doing: students learn by writing code in class and getting instant feedback on their progress. In use for 6 years at UNC, Bricks has increased class attendance, student comprehension and mastery of content, in-class interactions, and student satisfaction. The demo shows \"a day in the life\" of a Bricks student, with the presenter as instructor. Audience members with laptops will be able to participate in the student coding and learning experience. In the Bricks pedagogy, the instructor writes code in-class to demonstrate basic language use, as well as algorithmic design thinking. Students \"type what I type\" and write the same code, for small credit. Every class period is almost entirely coding, and discussing the programs. Out of class, these in-class examples guide students in \"do it yourself\" programming. Bricks has a client/server web-based architecture. The demo runs both the student programming interface and the instructor dashboard. We illustrate tracking class progress as the audience writes student code, and we project some student work for class discussion and comparisons. We also show the on-line help system, where student questions about program problems are handled in real-time. A new feature called \"crowd sourcing solutions\" supports collaborative coding of larger programs. Starter code is distributed to students through the Bricks database, and student solution components are collected back for integration and testing. More details can be found in this paper: http://www.cs.unc.edu/~stotts/SIGCSE2020/BricksExLearn.pdf", "authors": [{"name": "David Stotts", "affiliation": "University of North Carolina at Chapel Hill, Chapel Hill, NC, USA"}, {"name": "Yu Ji", "affiliation": "University of North Carolina at Chapel Hill, Chapel Hill, NC, USA"}], "tags": ["pedagogy", "collaboration", "learn-by-doing", "programming", "ide"]}, {"title": "SecureCvisual: Visualization and Analysis for C Code Security", "link": "https://dl.acm.org/doi/10.1145/3328778.3372540", "abstract": "In many undergraduate programs, students primarily write code in Java or other scripting languages. Yet C and C++ are widely used when performance is important. Poor understanding of a C program's layout in memory and its execution leads to the introduction of security vulnerabilities. We present the SecureCvisual system, which is designed to help students learn to develop more secure and robust C programs.\nThe system takes input from dynamic analysis using Pintool. The analysis produces a sequence of events that are processed by the visualizations. A student or instructor can step forward or backwards through an execution. Source code is displayed, and events are linked to a line of source code. A program address space visualization depicts the values of registers and the program address space. Buffer overflows and other memory errors are easily seen. An integer representation window identifies integer coercions that take place within an equation. The result of a conversion between integer types is also shown. A sensitive data visualization teaches students how to protect data so that it does not appear unencrypted on secondary storage. The tool is convenient for lecture. Multiple levels of detail and different perspectives on an execution make the tool useful in a variety of courses. This work has been supported by the National Science Foundation under grants DUE-1245310, DGE-1522883 and DGE-1523017.", "authors": [{"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Steve Carr", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}], "tags": ["cyber-security", "c-programming", "visualization"]}, {"title": "Bringing Creative Thinking Exercises into the Computing Classroom with Ready-to-Use Video Scenarios", "link": "https://dl.acm.org/doi/10.1145/3328778.3372546", "abstract": "The need to integrate the development of innovative thinking and creative problem-solving skills into computer science curricula has been increasingly recognized. However, two major hurdles face many computer science educators: (1) What exercises can be used to develop creative and innovative thinking in the context of computing? and (2) How, in crowded curricula, can the time be found to engage students in creative problem-solving exercises? This demonstration presents a solution to both questions using video scenarios. These short films, with associated discussion questions, feature fictitious companies facing problems that computing solutions could alleviate. For example: Can an art gallery please a patron who wants paintings categorized by redness? In what innovative ways can a pet shop create customer communities? The problems the characters are facing are not explicitly stated nor do they have a single solution. Instead, the viewer must discern the problems through critical listening and observation, and then develop creative solutions to solve them. Since the videos decouple problem-solving from implementation, they also provide an equal-footing environment that allows students with varying technical abilities to participate productively in the exercises. Participants will be introduced to how video-based creative problem-solving exercises can be used, even in time-restricted situations. The videos and associated discussion questions are available at http://www.youtube.com/virt-university.", "authors": [{"name": "Madalene Spezialetti", "affiliation": "Trinity College, Hartford, CT, USA"}], "tags": ["innovation", "creative-problem-solving", "active-learning"]}, {"title": "Individualized Assessments using Dividni - Enhancing Learning via Assessments Unique to Every Student", "link": "https://dl.acm.org/doi/10.1145/3328778.3372545", "abstract": "Using the same assessment questions for all students is problematic, especially in large classes. In exams, it incentivizes students to glean answers from neighbours or memorize answers to past questions. In homework, it encourages copying and the use of cheating websites. Individualized assessments remove these incentives and encourage concept-oriented discussions among students rather than mere memorization and exchange of answers. They render copying ineffective, and make posts on cheating websites traceable, effectively mitigating collusion and plagiarism. However, individualized assessments are traditionally expensive to create and grade for all but small classes. Dividni (www.dividni.com), our free framework for creating individualized assessments, reduces this expense and creates a unique assessment for each student in classes of any size. It also enables auto-grading. We use Dividni at the University of Auckland for printable homework, online assessments and examinations, all individualized, for some of our largest classes in computer systems, programming, networking, and cybersecurity, ranging from CS1 to CS3. This demo is a tutorial introduction to using Dividni for creating individualized assessments. We will demonstrate three individualized assessment contexts: printable homework, online assessments, and examinations. The audience will have the opportunity to create their own printable homework and multiple-choice assessments. Bring a laptop with the latest .NET framework or Mono installed. Basic knowledge of HTML and C# will be useful.", "authors": [{"name": "Ulrich Speidel", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Sathiamoorthy Manoharan", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["assessments", "plagiarism", "individualized assessment", "academic-integrity"]}, {"title": "CMU CS Academy: A Browser-based, Text-based Introduction to Programming through Graphics and Animations in Python", "link": "https://dl.acm.org/doi/10.1145/3328778.3372541", "abstract": "There are a great number of resources to introduce CS in the K-8 space, most notably Scratch and code.org. There are two AP CS courses at the High School level, but there are not nearly as many resources to bridge the gap between the engaging, fun, K-8 resources and those AP courses. And what is available tends to lack continuity and rigor. It is generally accepted that coding and creativity go hand-in-hand. This is apparent in the learning opportunities in the K-8 space but as programming courses get more challenging, they tend to lose the creative aspect. In this demo, attendees will be able to unpack how students can learn to code as they learn to create, They will also discover resources that support creativity while introducing students to text-based programming through coding in Python with CMU Graphics. The goal of this session is to provide teachers with an opportunity to learn how they can bridge the gap from block-based coding experiences to the AP courses with a text-based, year-long, introduction to programming course whose only recommended prerequisite is algebra readiness. We will be using CMU CS Academy which teaches students to code in Python through a browser-based graphics and animation framework that provides instant, automated feedback and has a strong focus on creativity and problem-solving.", "authors": [{"name": "David Kosbie", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Mark Stehlik", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Erin Cawley", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["free-browser-based-programming-environment", "python-programming", "auto-graded-graphics-and-animations"]}, {"title": "BlueJ 5: Still Going Strong", "link": "https://dl.acm.org/doi/10.1145/3328778.3372542", "abstract": "BlueJ is a Java IDE for beginners that has been in widespread use for over twenty years. It is designed specifically for novices, to minimise the amount of cognitive load when learning to program and provide a productive learning experience that supports the teaching of key object-oriented concepts such as the class/object distinction, encapsulation, construction and inheritance.\nThis year sees the release of BlueJ 5, including among other changes a rewritten program editor and a rewritten extensions API. This demo will present a wide range of BlueJ features, several significant ones added since the last presentation of BlueJ at a SIGCSE Symposium, and also highlight its existing main features for attendees unfamiliar with the system: support for interactive invocation, object inspection, debugging, unit testing and version control. Viewers of the demo will gain a solid understanding of BlueJ's features and how they are designed to support teaching.", "authors": [{"name": "Neil C. C. Brown", "affiliation": "King's College London, London, United Kingdom"}], "tags": []}, {"title": "Session details: ACM SRC: ACM Student Research Competition", "link": "https://dl.acm.org/doi/10.1145/3385604", "abstract": "No abstract available.", "authors": [{"name": "Stephen Hughes", "affiliation": "Coe College"}, {"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University"}], "tags": []}, {"title": "A Modular Ethics Curriculum for Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372690", "abstract": "To address the challenging issues presented to a technology-driven generation, we have been designing and testing 15-20 minute modules with conversations surrounding ethical issues in computing and data science. The goal is to meet the needs of current students by incorporating engaging activities, including demonstrations, debates, and interactive quizzes, to maintain their interest and promote critical thinking. The short length of the modules allows them to fit with packed courses and short attention spans. The curriculum is designed to lay the groundwork in the first year, giving a basic understanding of four ethical frameworks. In years two through four, students gain practice in recognizing course material-related dilemmas and in applying these frameworks to find ethical solutions. Additionally, we are developing comprehensive background materials so that professors with limited experience in ethics can easily implement the modules in their classrooms, and students who do not experience the foundational modules will not feel lost. Through workshops, focus groups, and in-class testing of the materials, teachers and students have shown excitement and support for the curriculum, and students not typically engaged in class have found their voice. Verbal and written feedback have shown that the module activities have been successful in helping students evaluate the ethicality of challenging computing-related situations and in effectively articulating their conclusions. To date, twelve modules have been tested, modified, and in some cases re-tested. We are looking forward to sharing our results. Many of the materials created will be available for examination.", "authors": [{"name": "Morgan Wheeler", "affiliation": "Point Loma Nazarene University, San Diego, CA, USA"}, {"name": "Whitney Featherston", "affiliation": "Point Loma Nazarene University, San Diego, CA, USA"}], "tags": ["computing-ethics-curriculum", "focus-groups"]}, {"title": "Regenerator Placement in Survivable Optical Networks Using Deep Tensor Neural Network", "link": "https://dl.acm.org/doi/10.1145/3328778.3372691", "abstract": "With the rapid adoption of the Internet of Things and mobile devices, the global Internet traffic is estimated to increase by nearly three times from 2017 to 2022. Hence, the demand for higher bit rates is necessary to support massive data transfers over optical networks. Ideally, a network that is able to handle many long distance requests at high transmission speeds is preferable. However, given limited spectrum resources, a trade-off is inevitable when selecting the correct routing parameters. On the one hand, we can minimize the usage of resources using spectrally efficient modulation formats. As a result the effective transmission distance of the signal will be reduced. Similarly, if we are to use a low-level modulation format, we can increase the effective range of transmission, but the amount of the used spectrum will also increase. It is in these scenarios where the importance of regenerators become apparent. When the link distance between two nodes is too large, a regenerator is required to regenerate the signal strength. However, regenerators are expensive to install. Additionally, given that the regenerator number needs to be set during the design of the network architecture, efficient calculation of their allocation is required to reduce each node's limitations, thus optimizing the network CAPEX and OPEX. In this paper, we demonstrated the feasibility of using deep tensor neural network to optimize regenerator placement in optical networks. Our approach brings significant improvements over the results achieved by the currently deploying techniques and can be used in the real-life networks.", "authors": [{"name": "Michal Aibin", "affiliation": "British Columbia Institute of Technology, Vancouver, BC, Canada"}, {"name": "Derek Wong", "affiliation": "British Columbia Institute of Technology, Vancouver, BC, Canada"}, {"name": "Hally Mao", "affiliation": "British Columbia Institute of Technology, Vancouver, BC, Canada"}, {"name": "Shaun Tseng", "affiliation": "British Columbia Institute of Technology, Vancouver, BC, Canada"}], "tags": ["optical-networks", "cost-optimization", "neural-networks", "dynamic-routing", "deep-learning"]}, {"title": "The AP Computer Science Principles Exam: Teacher Reflections", "link": "https://dl.acm.org/doi/10.1145/3328778.3372698", "abstract": "While AP Computer Science Principles (CSP) has made great strides in increasing the number of women and underrepresented minorities (URM) taking an AP Computer Science course, the percentage of women and URM passing the AP CSP Exam remains lower than that of non-minority males. The AP CSP Exam consists of two performance-based tasks, create and explore, in addition to a multiple-choice section. We conducted one-on-one interviews with Beauty and Joy of Computing (BJC) Master Teachers to find what they like about the exam, what they do not like, and potential barriers to passing. The teachers mentioned preparedness, including test taking skills, and motivation, specifically to complete the tasks, as reasons for their students' performance on the AP Exam. Community mindset was mentioned as a possible reason for lack of motivation and engagement. Some potential barriers to passing, expressed by teachers, are access to technology, job obligations, and languages in which the AP Exam is offered. Although the create task was well liked by the teachers, some thought the scoring could be improved. In addition, teachers detail how their own assessments compare to the AP CSP Exam, with the majority using programming projects as their main way to assess for student understanding. Half of the teachers cited the amount of time for performance tasks and multiple-choice questions as components of the exam they would change. These findings provide insight into AP CSP Exam performance, teacher suggestions for exam improvements, and details on CS classroom assessments.", "authors": [{"name": "Marnie Hill", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Hannah E. Chipman", "affiliation": "Rhodes College, Memphis, TN, USA"}], "tags": ["assessments", "secondary-computer-science-education"]}, {"title": "Increasing Understanding of Students' Programming Process through Scratch Programming Event Data Analysis", "link": "https://dl.acm.org/doi/10.1145/3328778.3372699", "abstract": "Computational thinking (CT) is a problem solving approach that is becoming prominent in educational settings. To help ease students into the world of programming, visual programming tools such as Scratch are used. Researchers are also developing various tools in an attempt to assess students' proficiency in thought processes that make up CT. However, current existing tools mainly utilize students' final code products when evaluating their demonstration of CT, losing their opportunity to understand students' actual learning and programming procedures. This work presents a logging methodology that records programming actions of students in the Scratch block coding environment to enable an in-depth analysis of students' programming process. With this logging methodology, we conducted a case study with introductory programmers to study how the logs of students' programming processes can provide insight into how they practice CT during programming.", "authors": [{"name": "Minji Kong", "affiliation": "University of Delaware, Newark, DE, USA"}], "tags": ["logging", "computational-thinking", "block-based-programming", "novice-programmer-learning"]}, {"title": "Exploring the Impact of Exposing CS Majors to Programming Concepts using IDE Programming vs. non-IDE Programming in the Classroom", "link": "https://dl.acm.org/doi/10.1145/3328778.3372701", "abstract": "Due to the increased demand for computer scientists in the, the importance to improve the retention rate of CS majors who could potentially fill such positions has been ongoing. Literature has produced many efforts for increasing the engagement of CS majors in the field while also exploring ways to improve their ability to develop the ideal skill sets for success. In such efforts, our research explores the impact of visual and/or command-line based programming editors and their ability to shape the students' mental model as they learn to program. This abstract discusses a \"think-aloud\" protocol assessment that was conducted on two entry level programming courses at a university in the United States during the 2018-2019 school year. The objective of this assessment was to determine whether Repl.IT, a web-based IDE, and Cygwin/Nano Editor, a command line-based tool, impacted student performance while being used for programming. Our preliminary results showed that 41% of the students using Repl.IT completed the assigned task for the assessment, while 53% of the students using the Cygwin/Nano editor did the same. The results concerning assignment incompletion revealed that students who did not complete their assignment and used Repl.IT did so because of assignment complexity and programming language difficulty, whereas assignment complexity and tool usage difficulty lead to assignment incompletion for students using Cygwin/Nano. This assessment also revealed that Repl.IT students exhibited a higher comfort, confidence, and fondness for using their editor than the Cygwin/Nano students.", "authors": [{"name": "Ben Clinkscale", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Saraah Cooper", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Myles Lewis", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Briana Williams", "affiliation": "Morgan State University, Baltimore, MD, USA"}], "tags": ["programming-editors", "verbal-protocol-assessment", "cs-majors"]}, {"title": "Using Parsons Problems to Scaffold Metacognitive Awareness", "link": "https://dl.acm.org/doi/10.1145/3328778.3372702", "abstract": "After novice programmers learn to code, they ideally move directly through a six-stage programming problem-solving process when programming. However, they are usually unaware of this process and often skip stages in the problem-solving process or move through these stages in a sub-optimal order. Avoiding those errors requires a metacognitive awareness of their problem-solving process, which novices often lack. This paper reports on the results of an intervention, which utilizes a Parsons Problem, designed to determine if implicit guidance up through the solution search stage of the problem-solving process will lead to better outcomes for the students as they build a metacognitive scaffolding to support their problem-solving process.", "authors": [{"name": "John Marsden", "affiliation": "Abilene Christian University, Abilene, TX, USA"}], "tags": ["cs1", "parsons-problem"]}, {"title": "Exploring the Use of Coding Reviews in Early Programming Courses to Gauge Student Learning", "link": "https://dl.acm.org/doi/10.1145/3328778.3372703", "abstract": "Programming is a skill that many individuals in tech-related fields have to develop. It is an essential component to all Computer Science (CS) majors' development and learning. Literature show that there is a consistent percentage of CS majors that become stuck and discouraged while learning to program, which sometimes deter them from the major as a whole. Coding reviews are one potential practice that could combat this learning barrier. This practice is common in industry settings and is used by professionals to solve major computational problems. Likewise, in the classroom, coding review practices could be used to help students identify both syntax and semantic flaws, and related code defects of developed solutions. Literature also show that modest attention has been placed on the exploration of coding reviews in early stages of a CS course curriculum. Therefore, more attention could be given to this particular topic. To personally explore this topic in more detail, we analyzed the outcomes from coding review assessments that were conducted on two programming courses at a Mid-Atlantic University in the United States during the 2018-2019 school year. These assessments were embedded into the periodical exams administered in these two courses that taught either Python or C++ programming concepts. The data structures imposed for these reviews ranged from simple function usage to advanced class & object-oriented programming paradigms. The results revealed that students in these respective courses on average were able to analyze the behavior of the code effectively for most of the employed data structures.", "authors": [{"name": "Chauncey Rogers", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Joshua Olumese", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Morgan Whitaker", "affiliation": "Morgan State University, Baltimore, MD, USA"}, {"name": "Donald Conteh", "affiliation": "Morgan State University, Baltimore, MD, USA"}], "tags": ["coding-reviews", "cs-majors", "data-structures"]}, {"title": "Automatically Merging Evolving Goal Models", "link": "https://dl.acm.org/doi/10.1145/3328778.3372705", "abstract": "Goal models helped stakeholders make trade-off decisions in the early stages of project development. While these models were well studied within the academy they had yet to see broad industrial adoption, with the construction of large realistic goal models acting as a significant barrier. Recent work suggested creating models piecemeal, and then merging them together. This merge algorithm had only been demonstrated manually and was time consuming due to unnecessary repetition, as well as deferring all decisions to the user. We aimed to automate the majority of the merge algorithm. We divided this project into two parts: (1) merging the content of goal models, and (2) creating a visual representation of the merged model. Since this work extended prior work on evolving goal models we also considered merging timing information. Using a motivating example, we discussed how we handled conflicts between node names and types, as will as conflicts across multiple time scales. We improved the original algorithm by simplifying evolving functions described over multiple intervals, where possible, and proved the correctness of these changes. We extended a force-directed algorithm to include goal model heuristics to alter the relative position of node types, which made for an aesthetically pleasing layout. To demonstrate effectiveness and scalability of the algorithm, we implemented our automated algorithm in BloomingLeaf, an analysis and modeling tool that allows stakeholders to model goals and intentions.", "authors": [{"name": "Yilin (Lucy) Wang", "affiliation": "Smith College, Northampton, MA, USA"}], "tags": ["model-merging", "goal-modeling", "automatic-layout"]}, {"title": "What are We Asking our Students?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372706", "abstract": "Many CS education research papers pull data from student surveys. But are those surveys well designed? Are the questions used validated? Are the results comparable across studies? What exactly are we asking our students? In this work, we performed a systematic literature review of the past 15 years of papers in the three main conferences sponsored by the ACM Special Interest Group on Computer Science Education. Out of 1313 papers analyzed, 44 papers referred to general questions applicable to many or all computer science students. Our analysis showed that many papers were using surveys to extract similar types of information, such as demographics, prior experience or motivation to study computer science. However, the questions were being asked in different ways, using different scales, thus making it difficult or impossible to compare survey results between studies. We further found that while some studies based their questions on well-validated surveys, or shared their questions for possible later validation, approximately half of the papers retrieved neither validated their questions nor shared them to allow for post-hoc validation.", "authors": [{"name": "Angela M. Zavaleta Bernuy", "affiliation": "University of Toronto Scarborough, Toronto, ON, Canada"}], "tags": ["literature-review", "surveys", "questions", "questionnaires", "validation"]}, {"title": "Bias Clustering for Online Political Articles", "link": "https://dl.acm.org/doi/10.1145/3328778.3372707", "abstract": "News articles can have a profound influence on voter opinions and preferences according to studies conducted on the effects of bias in political news coverage. Because political opinions and preferences can be persuaded, it is important that readers are aware of biases embedded within a story, as it may be perceived differently by others and motivate readers to find different sources to inform their opinions. Whereas previous research has attempted to characterize bias strictly from article text, ours examines the subjective perception of it as a function of the reader's political leanings and salience of the article's source. Our research seeks to determine if we can empirically verify in-group out-group bias in news sources rather than news article content. We present Mechanical Turk participants with a neutral definition of bias and administer a survey that collects data on whether or not readers believe the given definition of bias applies to the given article. The three news sources (CNN, Fox News, and BBC) are randomly displayed as the authoring body on the same article content. Afterward, participants answer demographic questions including their own political leanings. Furthermore, we will discuss the perceived bias by political camp, implications for news source bias, and our goal to harness the results of this experiment in pursuit of training machine learning models that can detect bias from the perspectives of members belonging to particular political leanings.", "authors": [{"name": "Lauren Alvarez", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Andrew Forney", "affiliation": "Loyola Marymount University, Los Angeles, CA, USA"}, {"name": "Sofia Ruiz", "affiliation": "Loyola Marymount University, Los Angeles, CA, USA"}, {"name": "Sureena Hukkoo", "affiliation": "Loyola Marymount University, Los Angeles, CA, USA"}], "tags": ["political-bias", "online-clustering", "topic-modeling"]}, {"title": "Analyzing Data Consistency in Smart Home Applications", "link": "https://dl.acm.org/doi/10.1145/3328778.3372708", "abstract": "Smart Home applications are a quickly growing segment of the Internet of Things (IoT) domain. Many companies offer cloud platforms that enable developers to create and run applications that provide specific Smart Home functions for physical devices installed and connected to the Internet in people's homes. Unfortunately, problems and vulnerabilities relating to data consistency have emerged for these Smart Home platforms, stemming from interfaces that have limited and varied guarantees with respect to atomicity, data consistency, and event ordering. These data consistency concerns are important because many applications are related to devices used for home security and control systems, like smart locks. The Amazon AWS IoT platform enables Internet-connected devices to connect to the AWS Cloud and lets applications in the cloud interact with Internet-connected devices. Because of its many configurable options, the AWS IoT API makes it easy for developers to write applications that do not correctly handle concurrency and data consistency issues, resulting in lost or incorrect state updates. We have developed a static analysis tool for AWS IoT JavaScript applications that detects when software may experience data consistency issues due to how the AWS IoT API was configured and used. We deployed our tool on 10 JavaScript applications in our preliminary analysis; most of these applications could experience erroneous updates of state in the cloud.", "authors": [{"name": "Kelly A. Shaw", "affiliation": "Williams College, Williamstown, MA, USA"}, {"name": "Lanqin Wang", "affiliation": "University of Richmond, Richmond, VA, USA"}], "tags": ["data-consistency", "internet-of-things", "static-analysis"]}, {"title": "A Game Theoretic Analysis of Improvements to Tor's Resilience to Entry-Exit and End-to-End Attacks", "link": "https://dl.acm.org/doi/10.1145/3328778.3372709", "abstract": "Tor is among the most used overlay networks for anonymous communication. This anonymity can be undermined via entry-exit and end-to-end attacks. Using Game Theory, we analyze the viability of several methods for reducing Tor's vulnerability to such attacks. Entry-exit attacks rely upon controlling entry and exit nodes -- internal elements within the Tor Network, while end-to-end attacks utilize Autonomous Systems (internet service providers), elements outside of the Tor Network. Because both types of attacks rely on probability, we use Monte Carlo simulation and model the success probability maximizing strategies of adversaries. We analyze changes to Tor's node selection strategy that decrease the success probability of such attacks. Our goal is to support anonymity preserving systems against large Autonomous Systems providers and attackers with plenty of resources. We build upon previous work, but we also test eliminating the exit node bandwidth threshold and decreasing asymmetric routing to make compromising anonymity less likely. Given our results, we suggest the abandonment of the bandwidth threshold of exit nodes. Abandoning this threshold would not affect the bandwidth of the Tor network much, while it would impair an attacker's success probability significantly. We show that an attackers' success probability can be lowered by 23% over a year of usage. While prior to our changes (and assuming a large fraction of compromised nodes), anonymity is preserved ~62% of the time over a year, implementing our changes increases anonymity preservation to 85%.", "authors": [{"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Alexander Lotero", "affiliation": "Lewis and Clark College, Portland, OR, USA"}, {"name": "Krisztian Gado", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Lana Parezanin", "affiliation": "Lewis & Clark College, Portland, OR, USA"}], "tags": ["anonymity", "tor", "monte-carlo-simulation", "entry-exit-attack", "game-theory", "end-to-end-attack"]}, {"title": "Dynamic Data Visualization for CSEdResearch.org using Tableau and MySQL", "link": "https://dl.acm.org/doi/10.1145/3328778.3372710", "abstract": "With the increase in research in the field of computer science education over the last decade, there are datasets with valuable information for researchers, educators and policy makers. Oftentimes in large datasets, it can be difficult to tell what the data represents and this can get more difficult as the datasets grow every year. To help people understand and interpret what is happening in the landscape of computing education research, data visualization can be an important tool. For this study, we used Tableau with CSEdResearch.org's database to show how effective data visualization can be to understand the data. We first used data curated from over 500 articles across 10 publication venues (2012-2018) to analyze the research trends in K-12 computing education in the United states as a sample case. We then expanded the dataset to include 2019 data and created a separate page on the site that presents a portion of this data visually. We then used JavaScript and Tableau \"short codes\" to provide the capability for users to customize the data represented in the visuals. Data now presented on the site includes a heatmap of the locations of students involved as participants in research studies, the types of research reports provided, and the grade levels, gender, race/ethnicity, and other demographic data. This research provides a glimpse of our techniques and outcomes in working toward the ultimate goal of generating a visual representation of data on the website.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Bishakha Upadhyaya", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["primary-education", "ses", "education", "secondary-education", "curriculum", "k-12", "schools", "data-visualization", "research", "activities"]}, {"title": "How do Non-Majors Approach a CS1 Course?", "link": "https://dl.acm.org/doi/10.1145/3328778.3372714", "abstract": "As CS1 enrollment continues to grow, the challenge to address all students' learning preferences grows as well. Accounting for the needs of larger and more diverse populations of students requires innovation in the realms of course design and structure. In a non-major context, these challenges are made even more explicit. By studying the manner in which non-major engineering students approach an introductory programming course, revisions to existing course designs may be better informed. This study presents the analysis of one semester of qualitative data provided by 237 students via survey about their approach to an introductory programming course designed for engineering students. By clustering students into groups based on factors such as their usage of different study materials and prior programming experience, trends in student engagement are observed. We find that students with significant levels of prior programming experience exhibit higher levels of confidence and enjoyment in programming, as well as satisfaction with overall performance. However, these students make less use of available study materials. Students entering the course without any prior experience are more frequently utilize the available course resources. This contrast in approaches and attitudes demonstrates the need for flexibility within CS1 courses that face large, diverse enrollment populations. In order to ensure that all students receive a positive learning experience, many learning pathways must be made available. Therefore, knowledge of student behavior can help to guide instructors in the creation of course content which is more closely focused on what students use to succeed.", "authors": [{"name": "Caleb O'Malley", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["non-majors", "course-approach", "learning-preferences", "cs1", "matlab"]}, {"title": "Learning Loop Invariants", "link": "https://dl.acm.org/doi/10.1145/3328778.3372715", "abstract": "One aspect of developing correct code, code that functions as specified, is annotating loops with suitable invariants. Loop invariants are useful for human reasoning and are necessary for tool-assisted automated reasoning. Writing loop invariants can be a difficult task for all students, especially beginning software engineering students. In helping students learn to write adequate invariants, we need to understand not only what errors they make, but also why they make them. This poster discusses the use of a Web IDE backed by the RESOLVE verification engine to aid students in developing loop invariants and to collect performance data. In addition to collecting submitted invariant answers, students are asked to provide their steps or thought processes regarding how they arrived at their answers for each submission. The answers and reasons are then analyzed using a mixed-methods approach. Resulting categories of answers indicate that students are able to use formal method concepts with which they are already familiar, such as, pre and post-conditions as a starting place to develop adequate loop invariants. Additionally, some common trouble spots in learning to write invariants are identified. The results will be useful to guide classroom instruction and automated tutoring.", "authors": [{"name": "Megan Fowler", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["reasoning", "software-engineering", "loop-invariants", "correctness", "tracing", "objects", "online tool"]}, {"title": "The Data Gap: A Potential Barrier to Gender Equity in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3328778.3372692", "abstract": "The substantial decline in female enrollment in computer science programs has been a cause of concern, especially as the application of computer technology to an ever-wider range of human endeavor expands. While many studies have examined the attitudes and perceptions of female computer science students, little attention has been paid to studying empirically how classroom interventions-such as curricular choices and pedagogical approaches-may result in disparate impacts in the learning outcomes of male and female students. This study examines recent research articles in leading journals and conference proceedings of computer science education to analyze the gender composition of the subject pool, the extent to which cognitive learning results are disaggregated by gender, and whether there are gender differences in outcomes. This study found that about one-third of studies indicated the gender composition of the subjects, and about one-third of those research subjects were female. About ten percent of papers disaggregated research findings by gender; of those, 30% found differences between male and female subjects. No studies recommended gender disaggregation of data in future work. The lack of data for learning outcomes by gender may be one of the contributors to the paucity of female computer science students; it is possible that interventions found to be more (or less) effective would show different outcomes if the data were considered in light of the gender of the participants. Thus, further research into potential gender differences in the effectiveness of computer science instructional tools is recommended.", "authors": [{"name": "Julie M. Smith", "affiliation": "University of North Texas, Denton, TX, USA"}], "tags": ["women", "research", "curriculum", "underrepresented-students", "gender-equity", "computer-science-education"]}, {"title": "Using Augmented Reality to Support Collaborative Problem Solving in Computer Debugging Practice", "link": "https://dl.acm.org/doi/10.1145/3328778.3372693", "abstract": "Augmented reality (AR) is a visualization technology allowing virtual information to be imposed on physical objects. The contiguity of two-channel representations can enhance understanding of information by reducing extraneous cognitive load resulted by aligning information from different sources. For example, in chemistry, AR can be used to visualize the reaction of catalysts and provides relevant information like molecules and formulas during a lab experiment in real time. AR also makes user interaction with the content more natural compared to traditional computer-based interfaces, e.g., a user can easily share the content with others by pointing a new device to the same target. There has been much research exploring how these AR affordances can support learning of abstract concepts, invisible or unobservable phenomena, and improve interaction. However, the use of AR is less explored in learning computer programming which actually shares similar challenges: the integration of programming logic and the produced outcome is invisible and the interaction between students is usually limited due to the restricted access to computer keyboards and mice. To fill this gap, this study is aimed to explore how AR can support programming problem solving and group collaboration by multimodal analytics including program snapshots and group conversation. I developed a mobile app, Ogmented, which is able to present collaborative programming tasks by AR visualization and meanwhile collect student's conversation during the tasks for multimodal behavior analysis. The result of a pilot study provides an insight into student's reaction on Ogmented and provides a path to further investigation.", "authors": [{"name": "Cheng-Yu Chung", "affiliation": "Arizona State University, Tempe, AZ, USA"}], "tags": ["collaborative-learning", "computer-science-education", "augmented-reality"]}, {"title": "Understanding Coding Behaviors in Intermediate CS Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3372694", "abstract": "Gaining proficiency in code design, implementation, testing, and debugging in the context of large projects are essential parts of progressing beyond introductory programming. In intermediate (post CS2) programming courses, many students fail to complete one or more projects on time. The problem starts with poor time-management when developing projects with a 3-5 week lifecycle. These projects become even more difficult to manage if not developed incrementally. Many students neglect to write sufficient test cases and so miss that bugs exist. Then, they have trouble with locating a bug once it is identified. Our goal is to identify bad coding behaviors so that we can provide feedback to students long before the project is due. Therefore, we plan to analyze the time-management, incremental development, testing, and debugging behavior of students to distinguish better coding practice from worse. We have used mixed-method research techniques. First, we collected students' IDE-based clickstream data. From the clickstream data, we deduced the students' personal development process, such as to what extent they use a debugger vs print statements for debugging. We found 90% and 75% of students use print statements and debugger, respectively. We interviewed 12 students to understand their process for time-management, incremental development, testing, and debugging. We also plan to survey 300+ students to see if the interview findings represent the larger population. Our research will be extended to recognize bad coding behaviors in real-time and provide necessary feedback about best coding practices with the help of an intelligent developer assistant.", "authors": [{"name": "Rifat Sabbir Mansur", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["cs-education", "incremental-development", "time-management", "print-statement", "debugger", "coding-behavior", "testing", "debugging"]}, {"title": "Evaluating the Effectiveness of Iteration Visualizations", "link": "https://dl.acm.org/doi/10.1145/3328778.3372695", "abstract": "Virginia Tech's Introduction to Computational Thinking course is designed for non-majors to learn key concepts in computer science. In an effort to support student reports of struggling with iteration, interactive visualizations have been developed and initial research into their effectiveness is currently under review. While the preliminary data was promising, we are currently conducting interviews with students under IRB to better understand the shorter term gains in student learning. We will be recording these interviews and formally analyzing responses. This poster will present our findings from this analysis and better define the common pitfalls students are experiencing when learning iteration.", "authors": [{"name": "Molly Domino", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["novice-programmers", "iteration"]}, {"title": "The Attrition of Underrepresented Students in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3328778.3372696", "abstract": "Recent concern about the underrepresentation of women and racial minorities in computer science (CS) has initiated measures to increase their participation in the field. Unfortunately, these groups remain underrepresented in the undergraduate level of CS. To improve this situation and specifically at the University of Rhode Island, we conducted a study to investigate the attrition rate of underrepresented students who switched to other majors compared to the majority of students. We collected background, demographic, and performance data of all of our students in the first four CS classes for the past four years. We used logistic regression to show any significant effect of gender and/or race on the attrition rate. We also used the Synthetic Minority Oversampling Technique (SMOTE) for oversampling to make up for the small sample of underrepresented students in the major. As a result, we find that underrepresented students are at a higher risk of leaving CS. Another finding of this research is that female students who left CS outperformed male students under the same circumstances, which implies that academic progress is not the main reason that women are changing their majors. Conversely, underrepresented minorities had low grades' averages when they change their majors, which implies that they likely leave CS due to academic struggles.", "authors": [{"name": "Noura Albarakati", "affiliation": "University of Rhode Island, Kingston, RI, USA"}], "tags": ["attrition", "statistical learning", "underrepresented-students"]}, {"title": "FLAMES: A Socially Relevant Computing Experience for High School Students", "link": "https://dl.acm.org/doi/10.1145/3328778.3372697", "abstract": "In this poster, I examine a two-pronged, female-oriented, high school computing outreach program, FLAMES, incorporating 1) workshops throughout the school year and 2) an 8-week high school summer intern program run within the Game2Learn lab at North Carolina State University. I focus on examining the effects of the program on students' skills and affect towards computing. Literature has shown that socially relevant themes in computing are engaging for women and underrepresented minorities. Students understanding how these themes connect to computer science helps broaden their view of computing and increases their interest in pursuing a computing career. This initiative uses socially relevant themes, specifically around the context of developing educational tools and block-based programming activities for use in K-12 classrooms. High school students were trained to assist North and South Carolina teachers with the development of Computational Thinking-infused curricula for their science, math, English, and social studies classrooms. Additionally, summer students assisted in research labs alongside undergraduate researchers, aiding in field study observations, software testing, and data classification. This poster presents the design of the program, an overview of the curriculum, and results including both student and teacher feedback. Results show that the outreach program has benefited each of the parties involved, including its student participants, researchers, and the teachers assisted by the participants. I share lessons learned from this experience in order to help other CS departments develop similar broadening participation in computing programs.", "authors": [{"name": "Amy Isvik", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["internship", "computational-thinking"]}, {"title": "Introducing Middle School Students to Programmable Sensor Technologies Through an Immersive Experience", "link": "https://dl.acm.org/doi/10.1145/3328778.3372704", "abstract": "Integrating computational thinking into middle school science classes through the use of programmable sensor technologies requires that students are familiar with the sensors and how the sensors can help them figure out the answers to their scientific questions. However current best practice in science education integrates science content and scientific practices (i.e. planning an investigation using the sensors) instead of teaching the practices first. In addition, the goal is to have the students recognize that the sensors would be useful for answering their current questions. To address this issue, I collaboratively designed a week long sensor immersion experience with middle school science teachers as part of a larger design based implementation research project that creates middle school science units that integrate computational thinking using these sensors. Through our observations and reflections with teachers, the necessity of a unit that introduces the students to the sensors became apparent. Working with the teachers, we developed a sensor immersion experience centered around the investigation of a classroom data display that illustrates information about the classroom environment using lights and sound. The data display was constructed using the programmable sensor technologies available to the students and the unit involved them creating and refining a model of how the classroom data display worked. This unit was implemented during the first three months of the 2019/2020 school year and preliminary results suggest that students have a better sense of the capabilities of the sensors and how they can help them in their scientific inquiry.", "authors": [{"name": "Alexandra Gendreau Chakarov", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}], "tags": ["middle school-science", "computational-thinking", "micro:bit", "sensors"]}, {"title": "Teaching Formal Languages through Visualizations, Simulators, Auto-graded Exercises, and Programmed Instruction", "link": "https://dl.acm.org/doi/10.1145/3328778.3372711", "abstract": "The material taught in a Formal Languages course is mathematical and requires students to practice proofs and algorithms to understand the content. Traditional Formal Languages textbooks are heavy on prose, and homework typically consists of solving many paper exercises. Students need to read a significant amount of text to achieve understanding. Inspired by the principles of the Programmed Instruction (PI) teaching method, we seek to develop a new Formal Languages eTextbook. The PI approach has students read a little, ideally a sentence or a paragraph, and then answer a question or complete an exercise related to that information. Based on the question response, students are permitted to continue to other frames of information or must retry to solve the exercise. However, students need to build Formal Languages models and apply different algorithms. Some instructors make use of Finite State Machine simulators like JFLAP for this purpose. However, JFLAP is built using Java, and it gives no support for auto-grading. We developed an open-access version of JFLAP, called OpenFLAP. OpenFLAP provides proficiency exercises, auto-graded exercises, and visualizations to help students understand and practice Formal Languages contents. To evaluate the pedagogical effectiveness of our new eTextbook, we conduct time and performance evaluations across three offerings of the course CS4114 Formal Languages and Automata at Virginia Tech.", "authors": [{"name": "Mostafa Kamel Osman Mohammed", "affiliation": "VIRGINIA POLYTECHNIC INSTITUTE, Blacksburg, VA, USA"}], "tags": ["visualizations", "auto-graded-exercises", "jflap", "openflap", "programmed-instruction", "turing-machines", "formal-languages"]}, {"title": "Pin Status: An Arduino Debugging Library for High School E-textile Courses", "link": "https://dl.acm.org/doi/10.1145/3328778.3372712", "abstract": "When learning to code a student must learn both to create a program and then how to debug said program. Novices often start with print statements to help trace code execution and isolate logical errors. Eventually, they adopt advance debugger practices such as breakpoints, \"stepping\" through code execution, and \"watching\" variables as their values are updated. Unfortunately for students working with Arduino devices, there are no debugger tools built into the Arduino IDE. Instead, a student would have to move onto a professional IDE like Atmel Studio and/or acquire a hardware debugger. Except, these options have a steep learning curve and are not intended for a student who has just started to learn how to write code. I am developing an Arduino software library, called Pin Status, to assist novice programmers with debugging common logic errors and provide features specific to the e-textile microcontroller, Adafruit Circuit Playground Classic. These features include a breakpoint method which pauses an Arduino program's execution and offers, via Serial communication, a menu for viewing and/or updating the current value of digital pins and \"watched\" variables. On the Adafruit Circuit Playground Classic, the library also uses on-board LEDs to show the current value of the digital pins (High/Low). This work has been funded by NSF STEM+C, award #1742081.", "authors": [{"name": "Michael Schneider", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["debugging-tools", "arduino", "e-textiles", "novice-programmer"]}, {"title": "A \"Low-Floor\" Multimeter: Supporting E-textile Debugging by Revealing Voltage and Continuity", "link": "https://dl.acm.org/doi/10.1145/3328778.3372713", "abstract": "STEAM curriculums are widely implemented in K-12 schools as part of the effort to promote computational thinking skills. This, together with increased accessibility of electronic components and kits, has opened the door for novices to engage in physical computing projects. Debugging these projects challenges students to learn and apply electrical concepts together with programming skills. Multimeter, the most common tool for measuring electric circuits, is placing a very high bar for novices to use. This paper presents a work in progress toward the development of a \"low floor\" multimeter that is designed to be used by novices with no prior electricity knowledge. By providing students the opportunity to form a conceptual understanding of voltage and current flow, we hope to scaffold their exploration and debugging process in a meaningful way.", "authors": [{"name": "Rona Sadan", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["e-textiles", "computer-science-education", "debugging"]}]