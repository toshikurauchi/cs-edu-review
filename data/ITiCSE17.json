[{"title": "Broadening Participation in the Arab World", "link": "https://dl.acm.org/doi/10.1145/3059009.3080530", "abstract": "In my talk, I will present two important projects that I've been leading during the past several years focusing on increasing diversity and innovation in computer Science education. I will first focus on the research that I have been leading for the past few years on the Representations, Challenges and Opportunities for Women in Computing in the Arab World. Women in Computing is an important and timely topic. Despite the remarkable progress that women made in almost all professions in the US, Canada, Australia, and several countries in Europe, however, their underrepresentation in the fields of computing raises an on-going societal concern. Very few women are in senior-level positions and the number of women technology-entrepreneurs is scarce. Various international studies have documented the underrepresentation of women at every level of science and technology.", "authors": [{"name": "Sana Odeh", "affiliation": "New York University, New York, NY, USA"}], "tags": ["empirical studies in collaborative and social computing", "computing education", "computing education programs", "collaborative and social computing", "collaborative learning."]}, {"title": "Software Heritage: Scholarly and Educational Synergies with Preserving Our Software Commons", "link": "https://dl.acm.org/doi/10.1145/3059009.3059066", "abstract": "embedded in software source code, that is publicly available and can be freely altered and reused. Free and Open Source Software (FOSS) constitutes the bulk of it. Sadly we seem to be at increasing risk of losing this precious heritage built by the FOSS community over the paste decades: code hosting sites shut down when their popularity decreases, tapes of ancient versions of our toolchain (bit-)rot in basements, etc. The ambitious goal of the Software Heritage project is to contribute to address this risk, by collecting, preserving, and sharing all publicly available software in source code form. Together with its complete development history, as captured by state-of-the art version control systems.", "authors": [{"name": "Stefano Zacchiroli", "affiliation": "University Paris Diderot & Inria, Paris, France"}], "tags": ["source code", "source book", "free and open source software", "software preservation", "reproducibility.", "software commons"]}, {"title": "Learning to Program: Choose Your Lecture Seat Carefully!", "link": "https://dl.acm.org/doi/10.1145/3059009.3059020", "abstract": "Much previous research has indicated that where a student sits in a university lecture theatre has a correlation with their final grade. Frequently those students that sit regularly in the front rows have been reported to achieve the highest grades. However most of the research restricted student seat movement, which is both unnatural and may have adversely influenced the research results. A previously reported unique unrestricted seat tracking investigation by the authors of this paper used a web and mobile software tracking application (PinPoint) to investigate student seating related performances in a 12 week Java programming university module. The PinPoint investigation concluded that the best assessment results were achieved by the students in the front rows and that assessment scores degraded the further students sat from the front. Additionally while the most engaged students were found to regularly sit at the front the same was not true for the most academically able or those with the greatest prior programming experience. This paper presents a further analysis of the PinPoint data, focusing on assessment performances within similar groups (academic ability, engagement and prior programming experiences) and additionally presents results of a temporal movement study and a qualitative analysis of the group and individual student seating decisions. It concludes that a comparison of student assessment performances within each of the peer groups, in every instance, found that the front row students outperformed their peers sitting further back. This strongly suggests that there is a benefit to sitting at the front regardless of academic ability, engagement or prior subject knowledge. It also points to other untested factors that may be positively influencing the front row performances.", "authors": [{"name": "Philip Hanna", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}, {"name": "Aidan McGowan", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}, {"name": "John Busch", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}, {"name": "Des Greer", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}], "tags": ["computing", "seating lecture theatre", "assessment performance", "temporal movement", "attitudes"]}, {"title": "First Year Computing Students' Perceptions of Authenticity in Assessment", "link": "https://dl.acm.org/doi/10.1145/3059009.3059062", "abstract": "The problem of how best to assess student learning is a fundamental one in education. Changes to computer science curricula seek to emphasise teaching practices that promote deep learning through direct, contextual examination of student performance on tasks that resemble those of practitioners, rather than more traditional methods. This kind of \"authentic assessment\" is becoming more popular as it appears to incorporate employability skills associated with professional practice into the curriculum in a natural way.\nIn this paper, we report on an investigation into how computing students themselves understand the terminology of authentic assessment. We give a brief summary of some of the salient points of the theory before using a simple qualitative methodology to analyse responses from a cohort of first year students on their understanding of the term. We produce a learner characterisation of the concept and compare this to those found in educational models of this assessment approach. We comment on the similarities and differences that emerge and draw inferences about its use and the necessary scaffolding that should accompany it in order for it to be successful.", "authors": [{"name": "Ville Isom\u00f6tt\u00f6nen", "affiliation": "University of Jyv\u00e4skyl\u00e4, Jyv\u00e4skyl\u00e4, Finland"}, {"name": "Roger McDermott", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Mats Daniels", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": ["situated learning", "authentic assessment", "authentic learning", "first year computer science"]}, {"title": "Analyzing How Interest in Learning Programming Changes During a CS0 Course: A Qualitative Study with Brazilian Undergraduates", "link": "https://dl.acm.org/doi/10.1145/3059009.3059015", "abstract": "In this paper, we present the preliminary findings of a study proposed to understand how interest of novices in learning programming changed during a CS0 course. This in-depth qualitative study, based on a longitudinal design, was performed over four months. Observing the learning experience of ten Brazilian freshmen students, the authors could obtain a dynamic view about how their interest in learning programming changed and why changes occurred. Six trajectories of interest were identified and the factors that had influence on them. As an example, the sense of being completing same tasks again when working on similar problems as before but in more detail was revealed as an inhibitor aspect to develop their interest. The Four-Phase Model of Interest Development was used as a theoretical framework to identify these trajectories. Looking at interest under this perspective was important to better understand how novices engage with introductory computer science and what might nurture and inhibit their interest in learning this content. This knowledge is something that CS educators could take into account when planning instructional strategies, course material and tasks.", "authors": [{"name": "Pasqueline Dantas Scaico", "affiliation": "Federal University of Pernambuco, Recife, Brazil"}, {"name": "Ruy Jos\u00e9 G.B. de Queiroz", "affiliation": "Federal University of Pernambuco, Recife, Brazil"}, {"name": "Jos\u00e9 Jorge Lima Dias", "affiliation": "Federal University of Paraiba, Rio Tinto, Brazil"}], "tags": ["cs0 course", "interest development", "trajectories of interest", "qualitative research", "programming education"]}, {"title": "Comparing Remote and Co-located Interaction in Free and Open Source Software Engineering Projects", "link": "https://dl.acm.org/doi/10.1145/3059009.3059019", "abstract": "By working on open source software projects, software engineering students can benefit from working on more realistic products than traditional, educational programming assignments. However, careers in software engineering demand learning how to work within a professional environment and how to follow software development processes. We studied the impact of students' interactions with external collaborators on open source projects and found many similar outcomes between those who communicated remotely and those who communicated face-to-face. However, we also discovered that face-to-face interactions with local software professionals following the Localized Free and Open Source (LFOSS) model had particular advantages in teaching Agile methods, holding students accountable, and introducing professional networking opportunities.", "authors": [{"name": "Kevin Buffardi", "affiliation": "California State University, Chico, Chico, CA, USA"}], "tags": ["co-located", "agile", "localized free and open source software (lfoss)", "interaction", "communication", "software engineering", "remote"]}, {"title": "Learning Agile with Tech Startup Software Engineering Projects", "link": "https://dl.acm.org/doi/10.1145/3059009.3059063", "abstract": "The Tech Startup model is an approach to learning software engineering methods by partnering with students studying entrepreneurship to collaborate on real software products. Agile software development methods align with Lean Startup practices so that students in sister classes experience leading contemporary practices in their respective fields. This paper describes a pilot study of interdisciplinary Tech Startup projects with a heuristic evaluation of software engineering realism and formative assessment of students' surveyed experiences. The study found several similar student outcomes to other project models; however, it also identified limitations in the pilot with corresponding recommendations for future implementations.", "authors": [{"name": "Kevin Buffardi", "affiliation": "California State University, Chico, Chico, CA, USA"}, {"name": "David Rahn", "affiliation": "California State University, Chico, Chico, CA, USA"}, {"name": "Colleen Robb", "affiliation": "California State University, Chico, Chico, CA, USA"}], "tags": ["agile software development", "software engineering", "lean startup", "entrepreneurship", "team projects", "interdisciplinary collaboration"]}, {"title": "Student Software Designs at the Undergraduate Midpoint", "link": "https://dl.acm.org/doi/10.1145/3059009.3059016", "abstract": "We replicate a study and extend previous research that examined graduating students' achievement and understanding when asked to \"produce a design\". In this paper, we examine software designs produced by students at an earlier stage in their undergraduate studies -- the midpoint. We were looking for characteristics of the development of skill at software design as students progress through the curriculum. These students did about as well as graduating students from the same institution in terms of the quality of their software designs, although they failed to produce as many complete designs. In addition to attributes uncovered in previous research, a new design attribute was noticed -- meaningful links between static components. We raise the question of where GUI designs fit in the area of software design.\nWe were also looking for evidence that mastering software design is a Threshold [8] that could be seen in development in this earlier cohort. There was some evidence for this, and the identified design attributes provide an indication of the sub-skills that need to be mastered.\nThe paper concludes with some implications for the teaching of software design.", "authors": [{"name": "Anna Eckerdal", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Lynda Thomas", "affiliation": "Aberystwyth University, Aberystwyth, United Kingdom"}, {"name": "Chris Loftus", "affiliation": "Aberystwyth University, Aberystwyth, United Kingdom"}, {"name": "Carol Zander", "affiliation": "University of Washington, Bothell, Bothell, WA, USA"}], "tags": ["threshold skills", "replication", "software engineering", "software design", "threshold concepts", "uml"]}, {"title": "Initial Experiences with a CS + Law Introduction to Computer Science (CS 1)", "link": "https://dl.acm.org/doi/10.1145/3059009.3059029", "abstract": "We present the curriculum, pilot offering, and initial evaluation of a CS + Law based CS 1 course that was team taught by a Computer Science professor and a law school professor. Relevant legal topics were interwoven through the course.\nThe results from this initial offering suggest that this sort of highly interdisciplinary offering can be successful both in computing education and in making students realize the relevance of Computer Science to the broader world beyond IT.", "authors": [{"name": "Richard Warner", "affiliation": "IIT Chicago-Kent College of Law, Chicago, IL, USA"}, {"name": "Robert H. Sloan", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Cynthia Taylor", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["cs~1", "cs + law", "cs + x", "contextualized cs"]}, {"title": "A Hybrid Open/Closed Lab for CS 1", "link": "https://dl.acm.org/doi/10.1145/3059009.3059014", "abstract": "In this paper we introduce hybrid labs, an alternative to open or closed labs for CS 1, in which a set of written instructions, demonstration of techniques, and code examples are provided to students in lieu of a lecture. The hybrid lab also consists of several challenges which require students to write code or answer questions based off the concepts introduced in the document. Students are presented with the lab two days prior to a class period and are given an option of submitting solutions to the challenges on their own time (similar to an open lab) or attending the class in which an instructor is available to provide additional help as needed (similar to a closed lab). We compare a section of CS 1 that utilized a combination of hybrid labs and lectures against a section that utilized only lectures. We found no statistical significance between the abilities of the students of the two sections, but surveys show that students found the hybrid labs to be more engaging and preferred the hybrid labs over lectures as means of instruction. Furthermore, instructors found that the hybrid labs allowed for more tailored, individualized instruction for a variety of student abilities.", "authors": [{"name": "Timothy Urness", "affiliation": "Drake University, Des Moines, IA, USA"}], "tags": ["cs 1", "open labs", "closed labs"]}, {"title": "Opening a (Sliding) Window to Advanced Topics", "link": "https://dl.acm.org/doi/10.1145/3059009.3059041", "abstract": "It is widely agreed that an introductory computer science (CS) course should be about more than just programming. Other aims are acquainting students with concepts and principles of CS and developing students' problem-solving skills. In this paper we propose an early introduction of a term often used by computer scientists: the Sliding Window (SW). The term has evolved over time among professionals to simplify the description of algorithms and can be used as well to support beginners when solving algorithmic problems. This metaphoric term enables abstracting and communicating ideas and at the same time it is easy to implement with elementary programming tools. We illustrate a set of stimulating problems in contemporary CS topics that use the SW and may be introduced in an introductory course.", "authors": [{"name": "Ayelet Butman", "affiliation": "Holon Institute of Technology, Holon, Israel"}, {"name": "Moshe Butman", "affiliation": "College of Management Academic Studies, Rishon Lezion, Israel"}, {"name": "Orna Muller", "affiliation": "ORT Braude College of Engineering, Karmiel, Israel"}], "tags": ["cs1", "sliding window", "image processing", "string matching", "convolution.", "problem solving"]}, {"title": "Media Literacy as a By-Product of Collaborative Video Production by CS Students", "link": "https://dl.acm.org/doi/10.1145/3059009.3059047", "abstract": "Understanding, promoting, and teaching media literacy is an important societal challenge. STEM educators are increasingly looking to incorporate 21st century skills such as media literacy into core subject education. In this paper we investigate how undergraduate Computer Science (CS) students can learn media literacy as a by-product of collaborative video tutorial production. The paper presents a study of 34 third-year CS undergraduates who, as part of their learning, were each asked to produce three video tutorials on Raspberry Pi programming, using a collaborative video production tool for mobile phones (Bootlegger). We provide results of both quantitative and qualitative analysis of the production process and resulting video tutorials, and conclude that the student cohort demonstrated a clear development of media literacy skills. The paper's contribution is twofold. First, we add to the understanding of how the use of mobile collaborative video production technology by non-professionals can help them learn to create meaningful media messages with little scaffolding. Second, we present an alternative pedagogical approach that can help CS students acquire 21st century skills such as media literacy.", "authors": [{"name": "Anne Preston", "affiliation": "Kingston University, London, United Kingdom"}, {"name": "Anna Vasilchenko", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}, {"name": "David Philip Green", "affiliation": "Northumbria University, Newcastle upon Tyne, United Kingdom"}, {"name": "Tom Bartindale", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}, {"name": "Madeline Balaam", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}, {"name": "Haneen Qarabash", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}], "tags": ["content creation", "media literacy", "co-production", "skills", "video", "higher education", "education", "contributing student pedagogy", "mobile video", "computer science", "pedagogy", "stem", "collaborative content creation", "video tutorial", "user-generated content", "21st century skills", "cs"]}, {"title": "Raspberry Pi as a Platform for the Internet of Things Projects: Experiences and Lessons", "link": "https://dl.acm.org/doi/10.1145/3059009.3059028", "abstract": "The Internet of Things (IoT) represents a new computing paradigm that may soon add a new dimension to the skillset expected from a well-rounded computing professional. Computer Science education is addressing these demands by adding IoT-centric courses to the curriculum and including relevant content into a broad range of existing courses. This paper presents the experience of incorporating IoT projects into an existing Systems Programming course. We examine several suitable hardware platforms, provide a sampling of student projects implemented using the Raspberry Pi with a variety of sensors, and discuss a number of lessons learned that could benefit other educators planning to incorporate the IoT material into their coursework.", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}, {"name": "Chad Williams", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["internet of things", "sensors", "student projects", "raspberry pi"]}, {"title": "An Experience-based Comparison of Unity and Unreal for a Stand-alone 3D Game Development Course", "link": "https://dl.acm.org/doi/10.1145/3059009.3059013", "abstract": "Students' interest in game development often leads departments to attempt to put together a stand-alone game development course. We have used both Unity and Unreal for just such a course. Unity and Unreal are discussed here in the context of how viable they are and how they compare in terms of usefulness for teaching game development. We also present them in context of high level overviews of other game engines and discuss which factors add to a more effective game engine for teaching game development. This paper is intended to help answer some of the questions asked by those without experience in the field who find themselves developing stand-alone game development courses.", "authors": [{"name": "Paul E. Dickson", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Gina N. Echevarria", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Jeremy E. Block", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Kristina C. Keenan", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["unity", "unreal", "game development", "3d games"]}, {"title": "Curriculum Mapping as a Tool for Improving Students Satisfaction with the Choice of Courses", "link": "https://dl.acm.org/doi/10.1145/3059009.3072978", "abstract": "Computing is a field that is constantly evolving and as a result curricula at the universities are frequently under reconstruction. The number of curricula reconstructions at the author's institution produced multitude of options and sometimes confusingly similar choices that the students can have. This is considered as one of the main problems in improving student guidance and the primary objective behind the structured solution presented in this paper that enables the tracking of all the variances and inter-dependencies produced by all the curricula changes and helps the students make the most relevant choices towards specialization.", "authors": [{"name": "Vangel V. Ajanovski", "affiliation": "Ss. Cyril and Methodius University, Skopje, Macedonia"}], "tags": ["curricula guidelines", "virtual guidance", "curriculum development", "curriculum analysis", "course enrollment"]}, {"title": "When the Robot Meets the Turtle: A Gentle Introduction to Algorithms and Functions", "link": "https://dl.acm.org/doi/10.1145/3059009.3072974", "abstract": "Educators have long been trying to motivate students in their introductory programming courses. Games help students to practice formulas, facts and processes, motivating learning by adding fun. This work describes our experience in the use of Lightbot and the graphic library Turtle to introduce students to the concepts of algorithm and function. This approach has been implemented in two Universities in Arequipa. We present the assignments used in the first and second session of CS1. Our experience has shown us that students get a clear understanding of algorithm and functions that are later implemented with Python (Universidad La Salle) and Java (Universidad Nacional de San Agustin). We believe that the visual nature of games and the graphical component to teaching anything is more effective for students. Results were measured by students' perception in 2016.", "authors": [{"name": "Elizabeth Vidal Duarte", "affiliation": "Universidad La Salle, Arequipa, Peru"}, {"name": "Marco Aedo", "affiliation": "Universidad Nacional de San Agust\u00edn, Arequipa, Peru"}, {"name": "Eveling Castro Gutierrez", "affiliation": "Universidad Nacional de San Agust\u00edn, Arequipa, Peru"}], "tags": ["teaching", "game-oriented", "motivation", "pedagogical tool", "first programming course", "specific assignments"]}, {"title": "Immersive Algorithms: Better Visualization with Less Information", "link": "https://dl.acm.org/doi/10.1145/3059009.3072972", "abstract": "Visualizing algorithms, such as drawings, slideshow presentations, animations, videos, and software tools, is a key concept to enhance and support student learning. A typical visualization of an algorithm show the data and then perform computation on the data. For instance, a standard visualization of a standard binary search on an array shows an array of sorted numbers and then illustrate the action of the algorithm in a step-by-step fashion. However, this approach does not fully capture the computational environment from the perspective of the algorithm. Specifically, the algorithm does not \"see\" the full sorted array, but only the single position that it accesses during each step of the computation. To fix this discrepancy we introduce the \\emph{immersive principle} that states that at any point in time, the displayed information should closely match the information accessed by the algorithm. We give several examples of immersive visualizations of basic algorithms and data structures, discuss methods for implementing it, and briefly evaluate it.", "authors": [{"name": "Philip Bille", "affiliation": "Technical University of Denmark, Copenhagen, Denmark"}, {"name": "Inge Li G\u00f8rtz", "affiliation": "Technical University of Denmark, Copenhagen, Denmark"}], "tags": ["algorithms", "immersiveness", "visualization"]}, {"title": "GIT: Pedagogy, Use and Administration in Undergraduate CS", "link": "https://dl.acm.org/doi/10.1145/3059009.3072980", "abstract": "A pedagogical and technical HOW-TO for the git version control system, including administration, applications in class, for student collaboration, and assignment submission.", "authors": [{"name": "Andrew Wang", "affiliation": "University of Toronto at Mississauga, Mississauga, ON, Canada"}, {"name": "Sadia Sharmin", "affiliation": "University of Toronto at Mississauga, Mississauga, ON, Canada"}, {"name": "Arnold Rosenbloom", "affiliation": "University of Toronto at Mississauga, Mississauga, ON, Canada"}], "tags": ["software engineering", "version control", "course management"]}, {"title": "Machine Learning Modules for All Disciplines", "link": "https://dl.acm.org/doi/10.1145/3059009.3072979", "abstract": "Recognizing that the changing nature of science and its reliance on massive amounts of data has led to the integral use of machine learning approaches in just about every discipline, we present the results of a multi-year research effort entitled \"Broader and Earlier Access to Machine Learning.\" For this project, we explored teaching strategies for introducing machine learning topics to non-technical students in discipline-relevant ways, culminating in a large collection of ready-to-use learning modules suitable for use in a wide variety of academic fields. We present a roadmap to our online repository of module materials, a detailed walk-thru of the contents of an example module, ideas and approaches for incorporating modules into a class or assisting non-technical colleagues in doing the same, and a summary of results of using these modules in course settings.", "authors": [{"name": "Carol Weiss", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Lillian Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Mary-Angela Papalaskari", "affiliation": "Villanova Univesity, Villanova, PA, USA"}, {"name": "Yamini Praveena Tella", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Thomas Way", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Paula Matuszek", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["big data", "computing in the humanities", "computer science education", "learning modules", "machine learning"]}, {"title": "A 12 Week Full Stack Web Course in 2017", "link": "https://dl.acm.org/doi/10.1145/3059009.3072977", "abstract": "Taught and continually evolved since 2001, we discuss the critical path through a full stack, single term web development course including a discussion of topics and academic content. Our course design addresses the challenge of selecting a small collection of topics, technologies and classroom examples that provide the best pedagogical value in the rapidly changing area of web development. With the solid understanding of the fundamental Web/CS concepts learned in this course, the students are able to adapt to the favorite web frameworks of their employers and solve problems on the web.", "authors": [{"name": "Arnold Rosenbloom", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}, {"name": "Larry Yueli Zhang", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}], "tags": ["computer science education", "course outline", "web development"]}, {"title": "TetrisOS and BreakoutOS: Assembly Language Projects for Computer Organization", "link": "https://dl.acm.org/doi/10.1145/3059009.3072976", "abstract": "TetrisOS and BreakoutOS are projects developed for a sophomore-level computer organization course. Each project teaches a wide range of x86 assembly language topics, including iteration, function calls, data storage, segmentation, communication with devices, and polling-based and interrupt-based I/O. They run \"bare-metal\" and avoid system calls. Each game can run natively on any PC and boot from a USB stick. The projects were tested on six classes of students over three semesters at two universities, and though rigorous, had a high completion rate.", "authors": [{"name": "Michael Black", "affiliation": "Bridgewater State University, Bridgewater, MA, USA"}], "tags": ["computer organization", "assembly language", "x86"]}, {"title": "Courseware: HFOSS Project Evaluation", "link": "https://dl.acm.org/doi/10.1145/3059009.3072975", "abstract": "1. Many instructors are excited by the potential learning that occurs via student participation in Humanitarian Free and Open Source Software (HFOSS) projects. However, one of the main challenges for instructors desiring to support such participation is identifying an appropriate project. There are a vast number of HFOSS projects with varying sizes, complexities, domains and community cultures. This presentation describes a guided approach to evaluating an HFOSS project for someone trying to pick a project to which they will contribute. The activity is designed with particular attention to instructors who need to identify an HFOSS project that they will use in a class. The characteristics evaluated include the pattern of contributions, pattern of commits, programming languages used, and more. This activity uses OpenMRS as a sample project to evaluate.", "authors": [{"name": "Gregory W. Hislop", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Darci Burdge", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Heidi J.C. Ellis", "affiliation": "Western New England University, Springfield, MA, USA"}], "tags": ["open source software", "hfoss", "computing education"]}, {"title": "Automatic Grading and Feedback using Program Repair for Introductory Programming Courses", "link": "https://dl.acm.org/doi/10.1145/3059009.3059026", "abstract": "We present GradeIT, a system that combines the dual objectives of automated grading and program repairing for introductory programming courses (CS1). Syntax errors pose a significant challenge for testcase-based grading as it is difficult to differentiate between a submission that is almost correct and has some minor syntax errors and another submission that is completely off-the-mark. GradeIT also uses program repair to help in grading submissions that do not compile. This enables running testcases on submissions containing minor syntax errors, thereby awarding partial marks for these submissions (which, without repair, do not compile successfully and, hence, do not pass any testcase). Our experiments on 15613 submissions show that GradeIT results are comparable to manual grading by teaching assistants (TAs), and do not suffer from unintentional variability that happens when multiple TAs grade the same assignment. The repairs performed by GradeIT enabled successful compilation of 56% of the submissions having compilation errors, and resulted in an improvement in marks for 11% of these submissions.", "authors": [{"name": "Praveen Kumar Singh", "affiliation": "Indian Institute of Technology, Kanpur, Kanpur, India"}, {"name": "Ziyaan Dadachanji", "affiliation": "Indian Institute of Technology, Kanpur, Kanpur, India"}, {"name": "Amey Karkare", "affiliation": "Indian Institute of Technology, Kanpur, Kanpur, India"}, {"name": "Arnab Bhattacharya", "affiliation": "Indian Institute of Technology, Kanpur, Kanpur, India"}, {"name": "Sagar Parihar", "affiliation": "Indian Institute of Technology, Kanpur, Kanpur, India"}, {"name": "Rajdeep Das", "affiliation": "Indian Institute of Technology, Kanpur, Kanpur, India"}], "tags": ["programming assignments", "cs1", "automated grading"]}, {"title": "An Automated System for Interactively Learning Software Testing", "link": "https://dl.acm.org/doi/10.1145/3059009.3059022", "abstract": "Testing is an important, time-consuming, and often difficult part of the software development process. It is therefore critical to introduce testing early in the computer science curriculum, and to provide students with frequent opportunities for practice and feedback. This paper presents an automated system to help introductory students learn how to test software. Students submit test cases to the system, which uses a large corpus of buggy programs to evaluate these test cases. In addition to gauging the quality of the test cases, the system immediately presents students with feedback in the form of buggy programs that nonetheless pass their tests. This enables students to understand why their test cases are deficient and gives them a starting point for improvement. The system has proven effective in an introductory class: students that trained using the system were later able to write better test cases -- even without any feedback -- than those who were not. Further, students reported additional benefits such as improved ability to read code written by others and to understand multiple approaches to the same problem.", "authors": [{"name": "Rebecca Smith", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Joe Warren", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Terry Tang", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Scott Rixner", "affiliation": "Rice University, Houston, TX, USA"}], "tags": ["computer science education", "interactive learning", "automated assessment", "software testing"]}, {"title": "DevEventTracker: Tracking Development Events to Assess Incremental Development and Procrastination", "link": "https://dl.acm.org/doi/10.1145/3059009.3059050", "abstract": "Good project management practices are hard to teach, and hard for novices to learn. Procrastination and bad project management practice occur frequently, and may interfere with successfully completing major programming projects in mid-level programming courses. Students often see these as abstract concepts that do not need to be actively applied in practice. Changing student behavior requires changing how this material is taught, and more importantly, changing how learning and practice are assessed. To provide proper assessment, we need to collect detailed data about how each student conducts their project development as they work on solutions. We present DevEventTracker, a system that continuously collects data from the Eclipse IDE as students program, giving us in-depth insight into students' programming habits. We report on data collected using DevEventTracker over the course of four programming projects involving 370 students in five sections of a Data Structures and Algorithms course over two semesters. These data support a new measure for how well students apply \"incremental development\" practices. We present a detailed description of the system, our methodology, and an initial evaluation of our ability to accurately assess incremental development on the part of the students. The goal is to help students improve their programming habits, with an emphasis on incremental development and time management.", "authors": [{"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Ayaan M. Kazerouni", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "T. Simin Hall", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["procrastination", "project management practice", "incremental development", "educational data mining", "interactive development environment"]}, {"title": "Code Quality Issues in Student Programs", "link": "https://dl.acm.org/doi/10.1145/3059009.3059061", "abstract": "Because low quality code can cause serious problems in software systems, students learning to program should pay attention to code quality early. Although many studies have investigated mistakes that students make during programming, we do not know much about the quality of their code. This study examines the presence of quality issues related to program flow, choice of programming constructs and functions, clarity of expressions, decomposition and modularization in a large set of student Java programs. We investigated which issues occur most frequently, if students are able to solve these issues over time and if the use of code analysis tools has an effect on issue occurrence. We found that students hardly fix issues, in particular issues related to modularization, and that the use of tooling does not have much effect on the occurrence of issues.", "authors": [{"name": "Johan Jeuring", "affiliation": "Utrecht University & Open University of the Netherlands, Utrecht, Netherlands"}, {"name": "Hieke Keuning", "affiliation": "Open University of the Netherlands & Windesheim University of Applied Sciences, Heerlen, Netherlands "}, {"name": "Bastiaan Heeren", "affiliation": "Open University of the Netherlands, Heerlen, Netherlands"}], "tags": ["programming education", "code quality"]}, {"title": "Experiences in Teaching and Learning Requirements Engineering on a Sound Didactical Basis", "link": "https://dl.acm.org/doi/10.1145/3059009.3059011", "abstract": "Requirements are of paramount importance for the quality of software systems. Yet, requirements engineering education at universities is surprisingly hard. University students encounter difficulties in understanding the role of requirements and applying relevant methods to deal with requirements appropriately. One potential cause may be a lack of authenticity, i.e. settings that are too artificial to mirror the complexity of real-world situations adequately. This paper presents an innovative and integrated didactical approach for teaching requirements engineering that was devised in a goal- and competence-oriented manner to avoid some of these shortcomings, in particular by including requirements elicitation with real customers into an integrated didactic step-by-step approach. Obviously, requirements engineering education is far more than assembling technical knowledge. Rather, it involves many non-technical skills that obtain a specific flavor in requirements engineering. Our didactic approach also addresses these skills, while resting on a sound pedagogical underpinning. The paper also summarizes indications for the success of this approach, in particular by participants' self-evaluations.", "authors": [{"name": "Dieter Landes", "affiliation": "Coburg University of Applied Sciences, Coburg, Germany"}, {"name": "Yvonne Sedelmaier", "affiliation": "Coburg University of Applied Sciences, Coburg, Germany"}], "tags": ["requirements engineering education", "student learning", "competence-oriented didactics", "higher education"]}, {"title": "About Programming Maturity in Finnish High Schools: A Comparison Between High School and University Students' Programming Skills", "link": "https://dl.acm.org/doi/10.1145/3059009.3059021", "abstract": "In this study, we compare students' ability to learn and master a variety of computer programming concepts in two different student groups. The first group consists of 64 university level students with various backgrounds (adult control), and the second group consists of 40 Finnish junior high school students of age 15 (adolescent treatment group). Neither group had significant prior programming experience. Both groups were taught a similar semester-long introductory course on Python programming, using the same learning management system (LMS). We find that for almost all of the concepts, both groups perform equally well, but students in the adolescent treatment group perform significantly worse when learning the concepts of loop structures and repetition. The results are further compared to the lecture surveys that were collected from the junior high school course to further explain the causes of the findings. Based on the results and the teaching methods that are presented in this paper, we are able to show that adolescent junior high school students and adult university students have similar abilities to learn abstract computer science concepts using a fully functional programming environment.", "authors": [{"name": "Mikko-Jussi Laakso", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Erkki Kaila", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Rolf Lind\u00e9n", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Erno Lokkila", "affiliation": "University of Turku, Turku, Finland"}], "tags": ["teaching methods", "progamming education", "computer science education", "programming", "adolescence", "junior high school", "study habits", "python", "university", "maturity"]}, {"title": "Nailing the TA Interview: Using a Rubric to Hire Teaching Assistants", "link": "https://dl.acm.org/doi/10.1145/3059009.3059057", "abstract": "Where would we be without them? Teaching assistants (TAs) make it possible for us to deliver high-quality large-scale computer science courses with relatively few faculty. Though their responsibilities vary by institution, TAs often play a crucial role in student learning. The use of teaching assistants in computer science courses is a common and longstanding practice and, yet, little has been published about how to choose the best TAs among those interested in the job. This paper describes the development of an interview rubric in use by faculty teaching a large introductory computer science course to score applicant responses in a formal in-person 30-minute interview. We describe the motivation behind developing such a rubric, the initial development process, its refinement based on feedback provided by students about their TAs, and the preliminary results of implementing this hiring system.", "authors": [{"name": "Christopher Moretti", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "J\u00e9r\u00e9mie Lumbroso", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Dan Leyzberg", "affiliation": "Princeton University, Princeton, NJ, USA"}], "tags": ["hiring practices", "course management", "hiring", "job interview", "course staff", "hiring rubric", "large courses", "teaching assistants"]}, {"title": "Bridging the Gap Between Desired and Actual Qualifications of Teaching Assistants: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3059009.3059023", "abstract": "We report on our experience implementing a Teaching Assistant Training Program for Computer Science Teaching Assistants. The program is rooted in the well-established Instructional Skills Workshop's principles and methodologies. We describe the structure of the program, reflect on its successes, and discuss future expansion of, and improvements to the program.", "authors": [{"name": "Francisco J. Estrada", "affiliation": "University of Toronto at Scarborough, Toronto, ON, Canada"}, {"name": "Anya Tafliovich", "affiliation": "University of Toronto at Scarborough, Toronto, ON, Canada"}], "tags": ["teaching methodologies", "instructional skills workshop", "quality of teaching", "ta", "isw", "training program", "teaching assistants"]}, {"title": "A Comparison of Online and Hybrid Professional Development for CS Principles Teachers", "link": "https://dl.acm.org/doi/10.1145/3059009.3059060", "abstract": "The College of St. Scholastica, in partnership with Trinity College, adapted the Mobile Computer Science Principles (CSP) curriculum and professional development (PD) for delivery online to reach high school teachers unable to attend traditional face-to-face PD. The Mobile CSP curriculum and PD were designed to increase the number of schools offering computer science (CS) courses and to broaden the participation of traditionally underrepresented students such as females and minorities. A deliberate and intentional process was used that incorporates evidence-based practices for the online environment and professional development. A comparison of student and teacher results suggests that online PD can be a successful strategy for scaling computer science professional development. This paper will discuss not only these results but also challenges from the first year of the project and how they are being addressed in subsequent years. This report focuses primarily on the activities and accomplishments of the online PD, although data and accomplishments are provided for the Mobile CSP project as a whole where appropriate.", "authors": [{"name": "Jennifer Rosato", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}, {"name": "Chery Lucarelli", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}, {"name": "Ralph Morelli", "affiliation": "Trinity College, Hartford, CT, USA"}, {"name": "Cassandra Beckworth", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}], "tags": ["community of practice", "online professional development", "computer science principles", "k-12 computer science"]}, {"title": "Examining a Student-Generated Question Activity Using Random Topic Assignment", "link": "https://dl.acm.org/doi/10.1145/3059009.3059033", "abstract": "Students and instructors expend significant effort, respectively, preparing to be examined and preparing students for exams. This paper investigates question authoring, where students create practice questions as a preparation activity prior to an exam, in an introductory programming context. The key contribution of this study as compared to previous work is an improvement to the design of the experiment. Students were randomly assigned the topics that their questions should target, removing a selection bias that has been a limitation of earlier work. We conduct a large-scale between-subjects experiment (n = 700) and find that students exhibit superior performance on exam questions that relate to the topics they were assigned when compared to those students preparing questions on other assigned topics.", "authors": [{"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}, {"name": "Ewan Tempero", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Dawn Garbett", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["self-testing", "question authoring", "study behaviours"]}, {"title": "Impact of Performance Level and Group Composition on Student Learning during Collaborative Exams", "link": "https://dl.acm.org/doi/10.1145/3059009.3059024", "abstract": "Collaborative exams have shown promise for improving student learning in computing. Prior studies have focused on benefits for all students, whereas this study seeks to refine our understanding of which students benefit and how group composition impacts that benefit. Using a crossover experimental design, the study first investigates whether students from differing performance levels (low, medium, or high) benefit from the collaborative exam. We find that students in the middle of the class (neither high nor low performers) tend to benefit strongly from the collaborative exam. Second, we explore whether group composition based on performance levels impacts the performance of members of the group. The results suggest more homogeneous groups (i.e., students in the group are at similar performance levels) are beneficial whereas students in groups with high heterogeneity do not experience significant performance differences between the pre-test and post-test.", "authors": [{"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Yingjun Cao", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["cs1", "group composition", "performance level", "collaborative exam"]}, {"title": "Study Habits, Exam Performance, and Confidence: How Do Workflow Practices and Self-Efficacy Ratings Align?", "link": "https://dl.acm.org/doi/10.1145/3059009.3059056", "abstract": "Do students recognize the relationship between self-sufficient problem solving and exam performance? We explore this question based on log data and survey results collected over 3 semesters from 465 students who were split into cohorts based on final exam performance. Specifically, we consider three metrics: time on task, question difficulty, and self-efficacy ratings.\nOur results show that, on average, median values for time on task between Low and High performing cohorts are within 16%. However, increased question difficulty revealed very different modes of spending time: when working through practice tool exercises, the High cohort regularly attempted to solve problems without assistance, whereas the Low cohort frequently requested hints during initial and subsequent attempts. Overall, when re-attempting a question that was previously attempted but incorrect, slightly over 20% of the Low cohort were able to complete the question without using hints, whereas roughly 50% of the High cohort were able to do so. Most strikingly, as the semester progressed, the average increase in confidence to solve a similar question after viewing hints was greatest for students in the Low cohort. It appears that students among the Low cohort, who went on to fail the final exam, believed that viewing solutions to problems, instead of solving the problem on their own, adequately prepared them to be able to solve similar problems without assistance in the future.", "authors": [{"name": "Anthony Estey", "affiliation": "University of Victoria, Victoria, BC, Canada"}, {"name": "Yvonne Coady", "affiliation": "University of Victoria, Victoria, BC, Canada"}], "tags": ["study behaviour", "cs1", "educational data mining"]}, {"title": "Application of the Delphi Method in Computer Science Principles Rubric Creation", "link": "https://dl.acm.org/doi/10.1145/3059009.3059042", "abstract": "Growing public demand for computer science (CS) education in K-12 schools requires an increase in well-qualified and well-supported computing teachers. To alleviate the lack of K-12 computing teachers, CS education researchers have focused on hosting professional development workshops to prepare in-service teachers from other disciplines to teach introductory level computing courses. In addition to the curriculum knowledge and pedagogical content knowledge taught in the professional development workshops, these new teachers need support in computer science subject matter knowledge throughout the school year. In particular, these new teachers find it difficult to grade programs and labs. This research study uses two variations of the Delphi Method to create learning-oriented rubrics for Computer Science Principles teachers using the Beauty and Joy of Computing curriculum. To perform this study we implemented (1) a heavy-weight, heterogeneous wide-net Delphi, and (2) a lower-weight, homogeneous Delphi composed of master teachers. These methods resulted in the creation of two systematically- and rigorously-created rubrics that produce consistent grading and very similar inter-rater reliabilities.", "authors": [{"name": "Veronica Catet\u00e9", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["ap cs principles", "delphi method", "evaluation", "rubrics", "bjc"]}, {"title": "Educational Magic Tricks Based on Error-Detection Schemes", "link": "https://dl.acm.org/doi/10.1145/3059009.3059034", "abstract": "Magic tricks based on computer science concepts help grab student attention and can motivate them to delve more deeply. Error detection ideas long used by computer scientists provide a rich basis for working magic; probably the most well known trick of this type is one included in the CS Unplugged activities. This paper shows that much more powerful variations of the trick can be performed, some in an unplugged environment and some with computer assistance. Some of the tricks also show off additional concepts in computer science and discrete mathematics.", "authors": [{"name": "Ronald I. Greenberg", "affiliation": "Loyola University, Chicago, IL, USA"}], "tags": ["multidimensional representations", "error detection", "counting principles", "bijections", "modular arithmetic", "public engagement", "parity checks", "probability", "computer science education", "magic", "discrete mathematics", "outreach", "permutations", "error correction", "computational thinking", "unplugged activities", "pigeonhole principle", "analysis of algorithms"]}, {"title": "Playfully Coding: Embedding Computer Science Outreach in Schools", "link": "https://dl.acm.org/doi/10.1145/3059009.3059038", "abstract": "This paper describes a framework for successful interaction between universities and schools. It is common for computing academics interested in outreach (computer science evangelism) to work with local schools, particularly in countries where the computing curriculum in K-12 is new or underdeveloped. However it is rare for these collaborations to be ongoing, and for resources created through these school-university links to be shared beyond the immediate neighborhood. We have achieved this, through shared resources, careful evaluation, and cross-country collaboration. The activities themselves are inspired by ideas from the Lifelong Kindergarten group at MIT, emphasizing playful exploration of computational concepts and interdisciplinary working.", "authors": [{"name": "Marius Marian", "affiliation": "University of Craiova, Craiova, Romania"}, {"name": "Hannah Dee", "affiliation": "Aberystwyth University, Aberystwyth, United Kingdom"}, {"name": "Valentina Poggioni", "affiliation": "University of Perugia, Perugia, Italy"}, {"name": "Alfredo Milani", "affiliation": "University of Perugia, Perugia, Italy"}, {"name": "Olivier Aubreton", "affiliation": "Universite de Bourgogn\u00e9 Franche Comt\u00e9, Le Creusot, France"}, {"name": "Tomi Rowlands", "affiliation": "Ysgol Bro Hyddgen, Machynlleth, United Kingdom"}, {"name": "Xefi Cufi", "affiliation": "Universitat de Girona, Girona, Spain"}, {"name": "Anna Roura Rabionet", "affiliation": "Escola Ve\u00efnat, Salt, Spain"}], "tags": ["computational thinking", "playful coding", "school-university links"]}, {"title": "High-Coverage Hint Generation for Massive Courses: Do Automated Hints Help CS1 Students?", "link": "https://dl.acm.org/doi/10.1145/3059009.3059058", "abstract": "In massive programming courses, automated hint generation offers the promise of zero-cost, zero-latency assistance for students who are struggling to make progress on solving a program. While a more robust hint generation approach based on path construction requires tremendous engineering effort to build, another easier-to-build approach based on program mutations suffers from low coverage.\nThis paper describes a robust hint generation system that extends the coverage of the mutation-based approach using two complementary techniques. A syntax checker detects common syntax misconception errors in individual sub-expressions to guide students to partial solutions that can be evaluated for the semantic correctness. A mutation-based approach is then used to generate hints for almost-correct programs. If the mutation-based approach fails, a case analyzer detects missing program branches to guide students to partial solutions with reasonable structures.\nAfter analyzing over 75,000 program submissions and 8,789 hint requests, we found that using all three techniques together could offer hints for any program, no matter how far it was from a correct solution. Furthermore, our analysis shows that hints contributed to students' progress while still encouraging the students to solve problems by themselves.", "authors": [{"name": "Sumukh Sridhara", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Phitchaya Mangpo Phothilimthana", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["computer-aided education", "automated tutor", "program analysis", "program synthesis"]}, {"title": "CodeWorkout: Short Programming Exercises with Built-in Data Collection", "link": "https://dl.acm.org/doi/10.1145/3059009.3059055", "abstract": "Learning programming techniques can be challenging and frustrating for many students. Many instructors use drill-and-practice strategies to help students develop basic programming techniques and improve their confidence. Online systems that provide short programming exercises with immediate, automated feedback are often seen as a valuable approach to drill-and-practice. However, the relationship between practicing with short programming exercises and performance on larger programming assignments or exams is unclear. This paper describes CodeWorkout, an open-source drill-and-practice system that supports short programming exercises and multiple choice questions. CodeWorkout combines an open, gradual engagement model that allows any student to practice exercises, whether or not they have an account or are enrolled in a course, together with powerful course management features that support graded assignments, quizzes, and even practicum style exams. It also provides a rich data collection and evaluation infrastructure for educational research purposes. We report on initial experiences using CodeWorkout in a CS1 course, including student perceptions of the tool and its benefits.", "authors": [{"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Krishnan Panamalai Murali", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["codeworkout", "homework", "coding", "practice", "skill development", "exam"]}, {"title": "UNIXvisual: A Visualization Tool for Teaching UNIX Permissions", "link": "https://dl.acm.org/doi/10.1145/3059009.3059031", "abstract": "UNIXvisual is a user-level visualization tool designed to facilitate the study and teaching of access control in UNIX. UNIXvisual is aimed at both novice users, who need only to control access to their own files, and students of computer security, who need a deeper and more comprehensive understanding. The system allows students to analyze permission settings in the underlying real file system, as well as in a combination of real and pseudo file systems defined through a specification file. It also allows a student to trace the value and effect of credentials within an executing process. UNIXvisual gives instructors flexibility in the allocation of lecture time by supporting self-study, lowers the overhead required for teaching access control by running under an ordinary user account, and enhances learning through the use of visualization. We also present the results of an evaluation of UNIXvisual within a junior-level course on concurrent computing. The evaluation indicated that UNIXvisual helped students understand UNIX permissions and enhanced the course coverage of UNIX permissions, regardless of their prior UNIX experience.", "authors": [{"name": "Steve Carr", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}, {"name": "Man Wang", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Chaoli Wang", "affiliation": "University of Notre Dame, Notre Dame, IN, USA"}, {"name": "Ching-Kuang Shene", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["unix", "security", "visualization"]}, {"title": "Understanding the Effects of Intervention on Computer Science Student Behaviour in On-line Forums", "link": "https://dl.acm.org/doi/10.1145/3059009.3059053", "abstract": "A key challenge for educators using online discussion forums is how to provide effective feedback and support to students, to ensure they are engaged with discussions on the forums, and do not disengage from the course. In addition, there is a significant problem of scale to address. Even relatively low population forums of less than a hundred students can generate thousands of posts, so it is infeasible for the lecturer to monitor every discussion to identify disengaging students. There is a need to understand the act of intervention, in order to provide automated tools to better assist teaching staff with this task. Measuring the impact of intervention can be challenging and requires us to, first, understand what ``standard'' behaviour looks like across different student groups and identify topics where intervention would be most effective. In this paper, we identify the impact of intervention on different groups of students, characterising their behaviour in terms of response time and activity, compare the different responses to programming-related questions and other questions, and identify the useful aspects of this study for computer science educators. We conduct an initial examination of the impact of the nature of the question on intervention effectiveness and propose an analysis method that can be applied to any computer science forum. we showcase the application of the method to three courses. Our results indicate that associating student activity with the number of forum posts is misleading, as students who are only reading the forums respond also to intervention.", "authors": [{"name": "Nickolas Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Daniel La Vista", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Claudia Szabo", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["intervention", "electronic forums", "computing education"]}, {"title": "Identifying Domain-Specific Cognitive Strategies for Software Engineering", "link": "https://dl.acm.org/doi/10.1145/3059009.3059032", "abstract": "Due to the rapidly changing nature of today's work environment, software engineering (SE) students are required to have self-regulated learning (SRL) and problem solving skills. Previous research suggests that training students in the use of domain-specific cognitive strategies and using scaffolded instruction for strategy training improves students' SRL and problem solving task performance. In order to identify SE-specific cognitive strategies, we conducted a survey of advanced-level SE students. We then conducted a pre-test and post-test experiment with one control and two treatment groups, to analyze the effectiveness of identified strategies in improving students' task performance. The control group was not exposed to any strategies, while one treatment group was instructed verbally in the use of strategies and the other was trained using a newly developed scaffolded strategy training module. The results of the experiment demonstrate significant improvement in post-test task performance for both treatment groups, with a further increase in performance for those undertaking the training module.", "authors": [{"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Claudia Szabo", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Shifa-e-Zehra Haidry", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["instructional scaffolding", "learning and education", "software engineering", "problem solving", "self-regulated learning"]}, {"title": "Specification by Example for Educational Purposes", "link": "https://dl.acm.org/doi/10.1145/3059009.3059039", "abstract": "The Specification By Example (SBE) is a guideline for building the right software, a software that meets customer requirements. It is based on seven process patterns and enhances communication and collaboration and it usually is used in agile software development. The connection between education and agile software development sounds actually as an emergent topic. In this paper, we propose to structure a teaching approach in analogy to an agile software developement by transposing each process pattern of SBE to a corresponding one in the teaching domain. Moreover, we show that thanks to the emergence of a collective intelligence process, the students are more confident and more responsible. Such a course offers the opportunity to learn not only technical skills, but also some values in a new mindset.", "authors": [{"name": "Herv\u00e9 Leblanc", "affiliation": "IRIT, Toulouse, France"}, {"name": "Isabelle Blasquez", "affiliation": "Limoges University, Limoges, France"}], "tags": ["specification by example", "agile software development", "agile teaching"]}, {"title": "The Solothurn Project: Bringing Computer Science Education to Primary Schools in Switzerland", "link": "https://dl.acm.org/doi/10.1145/3059009.3059017", "abstract": "Currently Switzerland is going through a major reform in its education system. One of its most ambitious and important goals is the inclusion of Computer Science Education already on the primary school level, an important measure in achieving the establishment of an information society. Such a reform raises questions about the appropriate types of approaches to be developed and employed for an effective implementation of Computer Science Education concepts in Swiss primary schools. To this end, the project \"Scalable Game Design Solothurn\" was developed and evaluated. This project both trained teachers and exposed students to Computational Thinking concepts through the two Computational Thinking Tools AgentSheets and AgentCubes online. Results show that teaching Computational Thinking through Scalable Game Design is not only feasible on the primary school level but also enjoyable, with AgentSheets and AgentCubes online proving to be sustainable and effective tools for the implementation of Computer Science Education on this school level. Further analysis of the data enables us to make recommendations regarding optimal ways of implementation for the Swiss reality and point towards new research directions.", "authors": [{"name": "Anna Lamprou", "affiliation": "Univ. of Applied Sciences and Arts, Northwestern Switzerland (FHNW), Windisch, Switzerland"}, {"name": "Nora A. Escherle", "affiliation": "Univ. of Applied Sciences and Arts, Northwestern Switzerland (FHNW), Windisch, Switzerland"}, {"name": "Alexander Repenning", "affiliation": "Univ. of Applied Sciences and Arts, Northwestern Switzerland (FHNW), Windisch, Switzerland"}], "tags": ["professional teacher development", "experience repor", "computer science education", "primary schools", "computational thinking"]}, {"title": "Computational Thinking in Italian Schools: Quantitative Data and Teachers' Sentiment Analysis after Two Years of \"Programma il Futuro\"", "link": "https://dl.acm.org/doi/10.1145/3059009.3059040", "abstract": "In this paper the first two years of activities of \"Programma il Futuro\" project are described. Its goal is to disseminate among teachers in Italian primary and secondary schools a better awareness of informatics as the scientific basis of digital technologies. The project has adapted Code.org learning material and has introduced it to Italian schools with the support of a dedicated web site. Response has been enthusiastic in terms of participation: in two years more than one million students have been engaged and have completed a total of 10 million hours of informatics in schools. Almost all students found the material useful and were interested, teachers have reported. They have also declared to have experienced high satisfaction and a low level of difficulty. A detailed analysis of quantitative and qualitative data about the project is presented and areas for improvement are identified. One of the most interesting observations appears to corroborate the hypothesis that an exposure to informatics since the early age is important to attract students independently from their gender.", "authors": [{"name": "Isabella Corradini", "affiliation": "Themis Research Centre, Rome, Italy"}, {"name": "Enrico Nardelli", "affiliation": "University of Roma, Rome, Italy"}, {"name": "Michael Lodi", "affiliation": "University of Bologna, Bologna, Italy"}], "tags": ["experience report", "informatics education", "computational thinking"]}, {"title": "Computing Curriculum in Middle Schools: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3059009.3059012", "abstract": "This paper explores the results of a piloting and field-testing of Alice in the Middle East (Alice ME), a computing curriculum for students in Middle Schools in Qatar. Alice ME is a project aimed at designing and delivering a Qatari context appropriate computing curriculum using Alice software. Curricular materials and professional development were created to help participating teachers deliver the course. An evaluation of the effectiveness of the implementation was carried out during all stages of the project. Results show that students who studied computing through Alice ME showed an improvement in their critical thinking and problem solving skills. Moreover, students and teachers became more motivated to learn programing as a result. This paper suggests best practices in teacher training and CS teaching in K-12 schools in Qatar in addition to sharing lessons learned from the process.", "authors": [{"name": "Huda Gedawy", "affiliation": "Carnegie Mellon University, Doha, Qatar"}, {"name": "Samah Al Sabbagh", "affiliation": "Carnegie Mellon University, Doha, Qatar"}, {"name": "Saquib Razak", "affiliation": "Carnegie Mellon University, Doha, Qatar"}, {"name": "Hanan Alshikhabobakr", "affiliation": "Carnegie Mellon University, Doha, Qatar"}], "tags": ["computational thinking", "curriculum evaluation", "k-12", "alice"]}, {"title": "International Perspectives on CS Teacher Formation and Professional Development", "link": "https://dl.acm.org/doi/10.1145/3059009.3059067", "abstract": "Drawing on Mishra and Koehler's \"TPACK\" model [1], we recognize that great Computer Science (CS) teaching demands great pedagogy, great technology skills and great subject knowledge. The main challenge facing any jurisdiction in implementing a CS curriculum within schools is the shortage of new teachers being trained in CS and to meet the demand many countries have focused on professional development (PD) for existing teachers across a diverse range of subjects. Some initial PD efforts in CS were often brief, with little follow-on support, and supported through external grant funding. This created challenges and opportunities for teacher PD in CS. As the need for CS at the K-12 level continues to grow, approaches should be sustainable and scalable. This includes preparing teachers at all levels, pre k-12, while they are still learning to be teachers and some funding initiatives have included preservice teacher support as part of this [2]. Inside the European Union (EU) the Scientix project [3] represents a focus European Commission (EC) funded projects and is a repository for PD with resources for pedagogy, technology and subject knowledge. Besides this effort, spreading CS knowledge has been supported by volunteers led movements like CoderDojo. The panelists will discuss the following main topics: 1) Pre-service vs in-service, where do teachers come from? 2) Interdisciplinary ways of infusing CS. 3) Ways of replicating across countries CS teacher training initiatives aimed at sustaining and growing the number and quality of both in-service and pre-service teachers able to teach CS effectively. 4) Effective approaches to help teachers to build confidence in their ability to teach Computer Science (CS)", "authors": [{"name": "Francesco Maiorana", "affiliation": "Universit\u00e0 di Catania, Catania, Italy"}, {"name": "Shitanshu Mishra", "affiliation": "Indian Institute of Technology, Bombay, India"}, {"name": "Andrea Benassi", "affiliation": "INDIRE, Firenze, Italy"}, {"name": "Miles Berry", "affiliation": "University of Roehampton, Roehampton, United Kingdom"}, {"name": "Mark Nelson", "affiliation": "Computer Science Teachers Association, USA, USA"}, {"name": "Margot Phillipps", "affiliation": "Sunderland College, Auckland, Auckland, New Zealand"}, {"name": "Chery Lucarelli", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}], "tags": ["computational thinking", "pedagogies", "computer science", "teacher professional development"]}, {"title": "Plagiarism in Take-home Exams: Help-seeking, Collaboration, and Systematic Cheating", "link": "https://dl.acm.org/doi/10.1145/3059009.3059065", "abstract": "Due to the increased enrollments in Computer Science education programs, institutions have sought ways to automate and streamline parts of course assessment in order to be able to invest more time in guiding students' work.\nThis article presents a study of plagiarism behavior in an introductory programming course, where a traditional pen-and-paper exam was replaced with multiple take-home exams. The students who took the take-home exam enabled a software plugin that recorded their programming process. During an analysis of the students' submissions, potential plagiarism cases were highlighted, and students were invited to interviews.\nThe interviews with the candidates for plagiarism highlighted three types of plagiarism behaviors: help-seeking, collaboration, and systematic cheating. Analysis of programming process traces indicates that parts of such behavior are detectable directly from programming process data.", "authors": [{"name": "Petri Ihantola", "affiliation": "Tampere University of Technology, Tampere, Finland"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["programming process data", "plagiarism", "educational data mining"]}, {"title": "Strategies for Maintaining Academic Integrity in First-Year Computing Courses", "link": "https://dl.acm.org/doi/10.1145/3059009.3059064", "abstract": "Safeguarding academic integrity is an issue of concern to all computing academics due to high and rising levels of plagiarism and other cheating in computing courses. There have been many studies of the cheating and plagiarism practices of computing students and the factors that can influence these practices, and a variety of strategies for reducing cheating have been proposed. This national study of first-year computing programs provides insights into what strategies computing academics use to discourage or prevent their students from cheating. Having interviewed 30 academics from 25 universities we found 21 different types of strategy, which we classified into five themes: education; discouraging cheating; making cheating difficult; and empowerment. We also found that academics often employ strategies across all of these themes.", "authors": [{"name": "Amali Weerasinghe", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Matthew Butler", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Michael Morgan", "affiliation": "Monash University, Melbourne, Australia"}], "tags": ["cheating", "cs1", "assessment", "academic integrity", "plagiarism"]}, {"title": "Academic-Industry Collaborations: Effective Measures for Successful Engagement", "link": "https://dl.acm.org/doi/10.1145/3059009.3095098", "abstract": "Drawing on Mishra and Koehler's \"TPACK\" model [1], we recognize that great Computer Science (CS) teaching demands great pedagogy, great technology skills and great subject knowledge. The main challenge facing any jurisdiction in implementing a CS curriculum within schools is the shortage of new teachers being trained in CS1 and to meet the demand many countries have focused on professional development (PD) for existing teachers across a diverse range of subjects. Some initial PD efforts in CS were often brief, with little follow-on support, and supported through external grant funding. As the need for CS at the K-12 level continues to grow, approaches should be sustainable and scalable. This includes preparing teachers at all levels, pre k-12 and some funding initiatives have included preservice teacher support as part of this [2]. Inside the European Union (EU) the Scientix project [3] represents a focus European Commission (EC) funded projects and is a repository for PD with resources for pedagogy, technology and subject knowledge . Besides this effort, spreading CS knowledge has been supported by volunteers led movements like CoderDojo . The panelists will discuss the following main topics: 1) Pre-service vs in-service, where do teachers come from? 2) Interdisciplinary ways of infusing CS. 3) Ways of replicating across countries CS teacher training initiatives aimed at sustaining and growing the number and quality of both in-service and pre-service teachers able to teach CS effectively. 4) Effective approaches to help teachers to build confidence in their ability to teach CS.", "authors": [{"name": "Panayiotis Andreou", "affiliation": "InSPIRE Research Center, Pyla , Cyprus"}, {"name": "Cary Laxer", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, IN, USA"}, {"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}, {"name": "Irene Polycarpou", "affiliation": "UCLan Cyprus, Pyla , Cyprus"}], "tags": ["industry informed curriculum", "student internships", "industry engagement", "academic-industry collaborations"]}, {"title": "Broadening Participation in Computing: Examining Experiences of Girls of Color", "link": "https://dl.acm.org/doi/10.1145/3059009.3059054", "abstract": "In order to enhance participation in computer science for girls of color, this study examines the outcomes of a rigorous out-of-school culturally relevant computer science intervention designed to engage underrepresented students in computing. Findings demonstrated that within-race gender differences exist in early interest in computing. Female students of color demonstrated significantly lower engagement and interest in computing, suggesting that being a member of a marginalized gender group plays a unique role and has a multiplying (negative) effect. Further, there were still significant gender differences in computing engagement after participation in one summer of the computer science intervention. Promising outcomes were revealed among a group of students who chose to enroll in the optional Advanced Placement CS A preparatory course; there were no gender differences in enrollment and completion of the course. In examining longitudinal outcomes, gender is a significant predictor of majoring in computer science in college, with male students much more likely to major in computer science than female students. These findings have important implications for addressing the gender gap in computing, including understanding how the intersection of race and gender presents unique barriers and challenges for women of color in computing, and that interventions to broaden participation in computing must address the unique experiences of women of color.", "authors": [{"name": "Allison Scott", "affiliation": "Kapor Center, Oakland, CA, USA"}, {"name": "Alexis Martin", "affiliation": "Kapor Center, Oakland, CA, USA"}, {"name": "Sonia Koshy", "affiliation": "Kapor Center, Oakland, CA, USA"}, {"name": "Frieda McAlear", "affiliation": "Kapor Center, Oakland, CA, USA"}], "tags": ["computing", "underrepresented", "disparities", "culturally relevant", "high school", "efficacy", "intersectionality"]}, {"title": "Out from the Shadows: Encouraging Girls in New Zealand into IT Careers", "link": "https://dl.acm.org/doi/10.1145/3059009.3059010", "abstract": "Shadow IT is a New Zealand intervention in which high school girls observe a day in the life of a woman working in IT. The effectiveness of Shadow IT in influencing girls to consider a career in IT was the subject of this research. Surveys conducted before and soon after Shadow IT showed that the girls participated in the event with an open mind and a positive attitude, and that the girls' levels of interest in an IT career had increased. In addition, the girls' perceptions of an IT workplace had become more realistic, with positive aspects better understood and earlier concerns allayed. However another survey one year later indicated that the influence of the event had not persisted for some of the girls. Girls intent on an IT career were studying IT subjects and had specific IT roles in mind, whereas girls who were now planning careers in other fields were not studying IT subjects. All the girls stated that Shadow IT had influenced their subject and career choices.", "authors": [{"name": "Raewyn Boersen", "affiliation": "Designertech, Auckland, New Zealand"}, {"name": "Alison Hunter", "affiliation": "Manukau Institute of Technology, Auckland, New Zealand"}], "tags": ["it", "girls", "interventions", "education", "high school", "careers"]}, {"title": "Insights on Gender Differences in CS1: A Multi-institutional, Multi-variate Study.", "link": "https://dl.acm.org/doi/10.1145/3059009.3059048", "abstract": "This paper describes a multivariate, multi-institutional study conducted in the academic year 2015-16. Six hundred and ninety-three students participated from 11 institutions, (ten institutions in Ireland and one in Denmark). The goal of the study was to compare the profile of male and female students enrolled on introductory programming modules (CS1), to determine if any significant differences could be identified by gender. The gender split was 79:21, male to female respectively. The study took place early in the CS1 module with three instruments used to capture data: a background survey, a survey on programming self-efficacy, comfort and anxiety, and a short programming test. At the end of the module, the overall result for each participant was gathered. Of importance, the study was conducted across multiple levels of Computer Science education, from Level 5 Certificate up to and including Honors Bachelor Degree and Higher Diploma, (which are based on the Irish National Framework of Qualifications NFQ). This paper describes the approach taken and the detailed analysis performed. Several significant differences between male and female students were identified early in CS1, some of which did not hold true at the end of the module. A gender comparison between the two participating countries and the different institution types was also performed and discussed. The findings could be used to positively influence teaching practice and to the development of gender focused retention and recruitment strategies.", "authors": [{"name": "Susan Bergin", "affiliation": "Maynooth University, Maynooth, Ireland"}, {"name": "Natalie Culligan", "affiliation": "Maynooth University, Maynooth, Ireland"}, {"name": "Keith Quille", "affiliation": "Maynooth University, Maynooth, Ireland"}], "tags": ["cs1.", "female", "programming self-efficacy", "gender", "computer science education", "programming"]}, {"title": "Linking Language & Thinking with Code: Computing within a Writing-Intensive Introduction to the Liberal Arts", "link": "https://dl.acm.org/doi/10.1145/3059009.3059018", "abstract": "This paper describes the design, implementation and preliminary evaluation of a computing component for a three-week writing-intensive introductory program at a liberal arts college. Specific curricular recommendations are presented that could have a direct, positive impact if adopted in similar courses. A two-pronged approach involving a faculty-led HTML workshop, along with student-led contextualized coding studios, was employed. Computing Unplugged activities were used, including a novel Page Rank Unplugged networking activity. An analysis of attitude surveys shows the program positively changed students attitudes about enjoyment solving CS problems, but potentially reinforced the misconception that CS is just learning programming languages.", "authors": [{"name": "Sven Anderson", "affiliation": "Bard College, Annandale, NY, USA"}, {"name": "Diana Ruggiero", "affiliation": "Bard College, Annandale, NY, USA"}, {"name": "Kathleen Burke", "affiliation": "Bard College, Annandale, NY, USA"}, {"name": "Keith J. O'Hara", "affiliation": "Bard College, Annandale, NY, USA"}], "tags": ["computing unplugged", "attitudes", "computing in liberal arts"]}, {"title": "A First Look at the Year in Computing", "link": "https://dl.acm.org/doi/10.1145/3059009.3059049", "abstract": "In this paper, we discuss students' expectations and experiences in the first term of the Year in Computing, a new programme for non-computing majors at the University of Kent, a public research university in the UK. We focus on the effect of students' home discipline on their experiences in the programme and situate this work within the context of wider efforts to make the study of computing accessible to a broader range of students.", "authors": [{"name": "Ian Utting", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Sebastian Dziallas", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Colin G. Johnson", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Sally Fincher", "affiliation": "University of Kent, Canterbury, United Kingdom"}], "tags": ["non-majors", "curriculum", "student experience", "qualitative research"]}, {"title": "Computing for Medicine: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3059009.3059027", "abstract": "We report our experience developing and teaching a computing elective course for students enrolled in a Doctor of Medicine (MD) program. Students participated in a series of workshops to learn and practice programming, and gained additional experience by completing programming assignments. Students then participated in a novel seminar series delivered by experts who each discussed one application of computing to medicine. Each seminar included a corresponding programming project where students worked with the ideas introduced in the seminar and practiced their newly-acquired programming skills. We found that by streaming the students into levels based on prior experience, carefully scaffolding project handouts, and having each seminar co-led by a faculty member, we are able to support students --- even beginners --- to succeed. Students report that the topics are relevant, they appreciate the medical context of the programming exercises, and they would recommend the program to others.", "authors": [{"name": "Jennifer Campbell", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Marcus Law", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["non-majors", "medicine", "novice programming"]}, {"title": "On the Educational Impact of Lecture Recording Reduction: Evidence from a Randomised Trial", "link": "https://dl.acm.org/doi/10.1145/3059009.3059037", "abstract": "Students often use lecture recordings to learn and revise. This approach, however, demands time to locate and review relevant topics. The automatic reduction and indexing of lecture recordings, then, could focus students' attention on the most relevant content. This article investigates whether lecture recording reduction leads to improved learning outcomes on an undergraduate computer networking module. Students participated in a randomised trial which compared lightly edited full lecture recordings to those that had been significantly reduced in duration and indexed. A pre-test conducted after the initial lecture series was followed up with a post-test after several weeks of using the recordings. The results show a statistically significant difference between the groups in terms of perceived effort. However, only the students with little prior knowledge showed a statistically significant difference in learning outcome in favour of the reduced lecture recordings. Moderating factors, such as prior knowledge, warrant further research to help elicit guidelines to inform the design and deployment of future lecture video reduction approaches.", "authors": [{"name": "Gheorghita Ghinea", "affiliation": "Brunel University, Uxbridge, Middlesex, United Kingdom"}, {"name": "Michael James Scott", "affiliation": "Falmouth University, Penryn, Cornwall, United Kingdom"}], "tags": ["human factors", "lecture", "video", "summaries", "experiment", "recording", "reduction", "randomised trial", "revision", "learning"]}, {"title": "Silence, Words, or Grades: The Effects of Lecturer Feedback in Multi-Revision Assignments", "link": "https://dl.acm.org/doi/10.1145/3059009.3059030", "abstract": "Detailed in-depth feedback on programming assignments is beneficial because it identifies specific software design and development aspects that students can improve on. For the feedback to be effective, it is important that students are given the opportunity to address the feedback in a timely manner. However, detailed in-depth feedback often needs to be manually written by the lecturer or marker, especially for large and complex final year assignments where automated test suites are difficult to implement, introducing potential delay in providing the feedback. Following existing work, we propose a two-stage assignment design where students receive feedback on their final submission and are then given the opportunity to address the feedback. We analyse 147 assignment submissions and show that this assignment design improves assignment marks when compared to a single-stage submission, with failure rates dropping by up to 30%. To determine the impact of in-depth detailed feedback, we compare the learning outcomes across two years where students taking the two-stage assignment were given either detailed feedback or simple feedback consisting of component marks at the initial stage. We show the benefits of both approaches and analyse the potential advantages of providing more costly, manual feedback.", "authors": [{"name": "Nickolas Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Claudia Szabo", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["feedback", "revision assignment"]}, {"title": "Learning Dimensions: Lessons from Field Studies", "link": "https://dl.acm.org/doi/10.1145/3059009.3059046", "abstract": "In this paper, we describe work to investigate the creation of engaging programming learning experiences. Background research informed the design of four fieldwork studies involving a range of age groups to explore how programming tasks could best be framed to motivate learners. Our empirical findings from these four studies, described here, contributed to the design of a set of programming \"Learning Dimensions\" (LDs). The LDs provide educators with insights to support key design decisions for the creation of engaging programming learning experiences. This paper describes the background to the identification of these LDs and how they could address the design and delivery of highly engaging programming learning tasks. A web application has been authored to support educators in the application of the LDs to their lesson design.", "authors": [{"name": "Christopher Martin", "affiliation": "University of Dundee, Dundee, United Kingdom"}, {"name": "John Richards", "affiliation": "IBM T.J. Watson Research Center & University of Dundee, New York, NY, USA"}, {"name": "Janet Hughes", "affiliation": "Open University, Edinburgh, United Kingdom"}], "tags": ["motivation", "programming", "learning dimensions"]}, {"title": "On the Ability to Reason About Program Behaviour: A Think-Aloud Study", "link": "https://dl.acm.org/doi/10.1145/3059009.3059036", "abstract": "Abstraction is a core skill for both programming and problem solving, however it is also a challenge for many students to develop a correct understanding of abstract concepts, such as program behaviour, which causes them to struggle with both introductory and advanced programming courses. Thus, evaluating students' ability to reason about programs should be an important topic for CS education.\nWe use a think-aloud study to record and analyse the strategies students apply to reason about program behaviour within the context of reversibility. Reversibility is a property of a program or function that indicates it could be brought back to its original state. Reasoning about reversibility requires students to have a mental model of the state, thus they should reason about program behaviour as a whole, compared with reasoning about concrete cases using testing and tracing. We have identified four strategies used by students to complete the reversibility task, which we have named as algorithm decomposition, input analysis, abstraction and inductive testing. Although 70% of students successful identified reversibility in 2 of the 3 exercises, most students fail to correctly reason about reversibility in an exercise involving a seemingly simple conditional statement.", "authors": [{"name": "Cheryl Pope", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Cruz Izu", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Amali Weerasinghe", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["reasoning", "state", "think-aloud", "programming", "reversibility"]}, {"title": "How Tool Support and Peer Scoring Improved Our Students' Attitudes Toward Peer Reviews", "link": "https://dl.acm.org/doi/10.1145/3059009.3059059", "abstract": "We wanted to introduce peer reviews for the final report in a course on Software Testing. The students had however experienced issues with peer reviews in a previous course which made this a challenge. To get a better understanding of the situation, we distributed a pre-questionnaire to the students. 48 of the 83 students provided their expectations on peer reviews. To deal with some of the perceived issues, we developed a peer review tool where we introduce anonymity, grading of reviews, teacher interventions, as well as let students score and comment on the reviews they receive. In total, 67 reports were submitted by 83 students and 325 reviews were completed. The post-questionnaire was answered by 48 students (not necessarily the same respondents as for the pre-questionnaire as both were collected anonymously). While 27 of the students expected incorrect feedback only 13 students agreed to have got incorrect feedback in the post-questionnaire. The students reported that they found the feedback from their peers more valuable (+15%) than expected, and 88% of the students reported that they learned from doing peer reviews. Overall, we find that the students' attitudes towards peer reviews have improved.", "authors": [{"name": "Anna Wingkvist", "affiliation": "Linnaeus University, V\u00e4xj\u00f6, Sweden"}, {"name": "Daniel Toll", "affiliation": "Linnaeus University, Kalmar, Sweden"}], "tags": ["peer grading", "software testing", "peer review", "courseware"]}, {"title": "Evaluating Test Suite Effectiveness and Assessing Student Code via Constraint Logic Programming", "link": "https://dl.acm.org/doi/10.1145/3059009.3059051", "abstract": "A good suite of test inputs is an indispensable tool both for manual and automated assessment of student submissions to programming assignments. Yet, without a way to evaluate our test suites, it is difficult to know how well we are doing, much less improve our practice. We present a technique for evaluating a hand-generated test suite by comparing its ability to find defects against that of a test suite generated automatically using Constraint Logic Programming (CLP). We describe our technique and present a case study using student submissions for an assignment from a second-year programming course. Our results show that a CLP-generated test suite was able to identify significant defects that the instructor-generated suite missed, despite having similar code coverage.", "authors": [{"name": "Elena Morozova", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Phillip Conrad", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Kyle Dewey", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}], "tags": ["testing", "automated test-generation", "constraint logic programming"]}, {"title": "Use of Gamification to Teach Agile Values and Collaboration: A multi-week Scrum simulation project in an undergraduate software engineering course", "link": "https://dl.acm.org/doi/10.1145/3059009.3059043", "abstract": "Collaboration and communication are key to successful agile software development. Respect, openness, transparency and trust are core Agile values. However studies show, that there is a shortage of software developers with these skills. How can we teach these skills to software engineering students' This paper presents the approach of using a multi-week Scrum Paper City simulation game. The course execution was accompanied by a thorough evaluation to find out how effective this approach is compared to traditional ex-cathedra teaching. While the evaluation shows some aspects to be improved, it clearly shows that students like to experience the Agile approach directly in a project, that they enjoy more fun, and the collaboration in the team.", "authors": [{"name": "Martin Kropp", "affiliation": "University of Applied Sciences Northwestern Switzerland, Windisch, Switzerland"}, {"name": "Marla Landolt", "affiliation": "University of Applied Sciences Northwestern Switzerland, Windisch, Switzerland"}, {"name": "Sonja Hof", "affiliation": "Baloise Insurance Ltd, Basel, Switzerland"}], "tags": ["agile", "education", "gamification", "values", "undergraduate", "software development", "collaboration"]}, {"title": "Practical Robotics in Computer Science Using the LEGO NXT: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3059009.3059025", "abstract": "We report on our experience building and implementing a robotics course for Computer Science based on the LEGO NXT. The goal of the course is to provide students with an opportunity to learn the fundamental principles involved in designing, programming, and operating mobile robots in a completely experiential setting, while abstracting away the hardware complexity of typical robotics platforms. To this end, we built the course around the LEGO NXT robot kits. We have developed a software framework that allows the NXT to be used in conjunction with a laptop computer and a webcam to enable our students to learn in the context of a robotics soccer game. We describe the process of designing the robotics soccer project so that it is tightly coupled with course learning goals, and report on our experience running the course over the past three years. The software platform is freely available, and allows anyone with a webcam-equipped laptop and an NXT set to implement their own soccer playing bot.", "authors": [{"name": "Francisco J. Estrada", "affiliation": "University of Toronto at Scarborough, Toronto, ON, Canada"}], "tags": ["lego nxt", "robotics in computer science", "experiential learning", "course curriculum", "robotic soccer"]}, {"title": "Teaching Operating Systems Concepts with SystemTap", "link": "https://dl.acm.org/doi/10.1145/3059009.3059045", "abstract": "The study of operating systems is a fundamental component of all undergraduate computer science degree programmes. Making operating system concepts concrete typically entails large programming projects. Such projects traditionally involve enhancing an existing module in a real-world operating system or extending a pedagogical operating system. The latter programming projects represent the gold standard in the teaching of operating systems and their value is undoubted. However, there is room in introductory operating systems courses for supplementary approaches and tools that support the demonstration of operating system concepts in the context of a live, real-world operating system. This paper describes an approach where the Linux monitoring tool SystemTap is used to capture kernel-level events in order to illustrate, with concrete examples, operating system concepts in the areas of scheduling, file system implementation and memory management. For instructors and students (where often for the latter seeing is believing) this approach offers an additional simple and valuable resource for solidifying understanding of concepts that might otherwise remain purely theoretical.", "authors": [{"name": "Darragh O'Brien", "affiliation": "Dublin City University, Dublin, Ireland"}], "tags": ["operating system", "memory management", "file system", "systemtap", "scheduling"]}, {"title": "Improved Mobile Robot Programming Performance through Real-time Program Assessment", "link": "https://dl.acm.org/doi/10.1145/3059009.3059044", "abstract": "The strong interest children show for mobile robots makes these devices potentially powerful to teach programming. Moreover, the tangibility of physical objects and the sociability of interacting with them are added benefits. A key skill that novices in programming have to acquire is the ability to mentally trace program execution. However, because of their embodied and real-time nature, robots make the mental tracing of program execution difficult.\nTo address this difficulty, in this paper we propose an automatic program evaluation framework based on a robot simulator. We describe a real-time implementation providing feedback and gamified hints to students.\nIn a user study, we demonstrate that our hint system increases the percentage of students writing correct programs from 50% to 96%, and decreases the average time to write a correct program by 30%. However, we could not show any correlation between the use of the system and the performance of students on a questionnaire testing concept acquisition. This suggests that programming skills and concept understanding are different abilities.\nOverall, the clear performance gain shows the value of our approach for programming education using robots.", "authors": [{"name": "Robert W. Sumner", "affiliation": "ETH Zurich, Zurich, Switzerland"}, {"name": "R\u00e9my Siegfried", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne, Lausanne, Switzerland"}, {"name": "Severin Klinger", "affiliation": "ETH Zurich, Zurich, Switzerland"}, {"name": "St\u00e9phane Magnenat", "affiliation": "ETH Zurich, Zurich, Switzerland"}, {"name": "Markus Gross", "affiliation": "ETH Zurich, Zurich, Switzerland"}, {"name": "Francesco Mondada", "affiliation": "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne, Lausanne, Switzerland"}], "tags": ["robotics in education", "thymio", "automatic program evaluation", "gamified hint system", "simulation"]}, {"title": "TrAcademic: Improving Participation and Engagement in CS1/CS2 with Gamified Practicals", "link": "https://dl.acm.org/doi/10.1145/3059009.3059052", "abstract": "Practice is an important part of introductory CS courses, and practical sessions are a student's best opportunity for hands-on experience with the material covered in the course in a supervised, supportive environment. However, finding a balance between challenging more experienced students and alienating newcomers can be difficult and frustrating. One possible solution is to let the students self-select the problems they wish to attempt. The difficulty then becomes one of motivation and administration.\nThis paper details our experiences with implementing a gamified system for practicals whereby students in CS1 and CS2 level courses receive points for various activities, including attendance, attempting basic problems, completing challenge problems and aiding fellow students with their work. These points have no bearing on final grades, but are displayed on a public leaderboard.\nIn our experience, this gamified system dramatically improved attendance at practical sessions, was well received by students and TAs alike, improved retention rates, and offered students the opportunity and motivation to overcome poor performance early in the course and improve their results.", "authors": [{"name": "Ayaan Chaudhry", "affiliation": "University of Toronto, Scarborough, Toronto, ON, Canada"}, {"name": "Brian Harrington", "affiliation": "University of Toronto, Scarborough, Toronto, ON, Canada"}], "tags": ["cs1", "engagement", "gami- fication", "practicals", "computer science education", "cs2"]}, {"title": "Programming as a Performance: Live-streaming and Its Implications for Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3059009.3059035", "abstract": "This article discusses an emerging phenomenon of streaming programming to a live audience who in turn can interact with the streamer. In essence, this means broadcasting the programming environment and typically a web camera feed of the streamer to viewers. Streaming programming bears many similarities with live-streaming playing of video games, which has become extremely popular among gamers over the recent years. In fact, streaming programming often use the same web services as streaming gaming, and the audiences overlap.\nIn this article, we describe this novel approach to programming and situate it in the broader context of computer science education. To gain a deeper insight into this phenomena, we analyzed viewer discussions during a particular programming stream broadcasted during a game programming competition. Finally, we discuss the benefits this approach could offer to computer science education.", "authors": [{"name": "Lassi Haaranen", "affiliation": "Aalto University, Espoo, Finland"}], "tags": ["computer science education", "online communities", "game-based learning", "streaming"]}]