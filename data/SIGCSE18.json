[{"title": "Session details: Opening Keynote", "link": "https://dl.acm.org/doi/10.1145/3247814", "abstract": "No abstract available.", "authors": [{"name": "Dan Garcia", "affiliation": "UC Berkeley"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "The Evolution Before the Revolution", "link": "https://dl.acm.org/doi/10.1145/3159450.3166085", "abstract": "As founder of the original Computer Science for All (CS4All) initiative in the Chicago Public Schools, Brenda Darden Wilkerson set the standard for integrating computer science classes into the curriculum for every student. Now, she's leading the charge to break down barriers for women and members of other underrepresented minorities in the tech industry. She argues that, while many administrators and community leaders see CS4All as merely a key component of a new core curriculum, CS educators are actually sowing the seeds of the next workplace revolution. In this inspirational keynote, Brenda will share the ways that educators on the front lines of this inclusive movement can expect to reap the fruits of their labor -- not just professionally, but personally -- in surprising ways. And she'll spotlight the historic role of women, and people of color, in technology and computer science, offering examples that will better allow us all to reclaim our rightful seats at the table.", "authors": [{"name": "Brenda Darden Wilkerson", "affiliation": "AnitaB.org, Palo Alto, CA, USA"}], "tags": ["computer science for all", "computing education"]}, {"title": "Session details: Paper Session: Automated Support for Education", "link": "https://dl.acm.org/doi/10.1145/3247815", "abstract": "No abstract available.", "authors": [{"name": "Becky Grasser", "affiliation": "Lakeland Community College"}], "tags": []}, {"title": "The Effect of a Web-based Coding Tool with Automatic Feedback on Students' Performance and Perceptions", "link": "https://dl.acm.org/doi/10.1145/3159450.3159579", "abstract": "In this paper we do three things. First, we describe a web-based coding tool that is open-source, publicly available and provides formative feedback and assessment. Second, we compare several metrics on student performance in courses that use the tool versus courses that do not use it when learning to program in Haskell. We find that the dropout rates are significantly lower in those courses that use the tool at two different universities. Finally we apply the technology acceptance model to analyse students perceptions.", "authors": [{"name": "Luciana Benotti", "affiliation": "Universidad Nacional de C\u00f3rdoba & CONICET, Cordoba, Argentina"}, {"name": "Federico Aloi", "affiliation": "Universidad Nacional de Quilmes, Buenos Aires, Argentina"}, {"name": "Franco Bulgarelli", "affiliation": "Mumuki Project, Buenos Aires, Argentina"}, {"name": "Marcos J. Gomez", "affiliation": "Universidad Nacional de C\u00f3rdoba, Cordoba, Argentina"}], "tags": ["haskell", "functional programming", "automatic assessment", "coding tools", "replication"]}, {"title": "Assessing Bootstrap: Algebra Students on Scaffolded and Unscaffolded Word Problems", "link": "https://dl.acm.org/doi/10.1145/3159450.3159498", "abstract": "Bootstrap:Algebra is a curricular module designed to integrate introductory computing into an algebra class; the module aims to help students improve on various essential learning outcomes from state and national algebra standards. In prior work, we published initial findings about student performance gains on algebra problems after taking Bootstrap. While the results were promising, the dataset was not large, and had students working on algebra problems that had been scaffolded with Bootstrap's pedagogy. This paper reports on a more detailed study with (a) data from more than three times as many students, (b) analysis of performance changes in incorrect answers, (c) some problems in which the Bootstrap scaffolds have been removed, and (d) an IRT analysis across the elements of Bootstrap's program-design pedagogy. Our results confirm that students improve on algebraic word problems after completing the module, even on unscaffolded problems. The nature of incorrect answers to symbolic-form questions also appears to improve after Bootstrap.", "authors": [{"name": "Emmanuel Schanzer", "affiliation": "Bootstrap/Brown University, Providence, RI, USA"}, {"name": "Kathi Fisler", "affiliation": "Brown University/WPI/Bootstrap, Providence, RI, USA"}, {"name": "Shriram Krishnamurthi", "affiliation": "Brown University/Bootstrap, Providence, RI, USA"}], "tags": ["K-12 education", "integrating math and CS", "skills transfer"]}, {"title": "On the Use of Semantic-Based AIG to Automatically Generate Programming Exercises", "link": "https://dl.acm.org/doi/10.1145/3159450.3159608", "abstract": "In introductory programming courses, proficiency is typically achieved through substantial practice in the form of relatively small assignments and quizzes. Unfortunately, creating programming assignments and quizzes is both, time-consuming and error-prone. We use Automatic Item Generation (AIG) in order to address the problem of creating numerous programming exercises that can be used for assignments or quizzes in introductory programming courses. AIG is based on the use of test-item templates with embedded variables and formulas which are resolved by a computer program with actual values to generate test-items. Thus, hundreds or even thousands of test-items can be generated with a single test-item template. We present a semantic-based AIG that uses linked open data (LOD) and automatically generates contextual programming exercises. The approach was incorporated into an existing self-assessment and practice tool for students learning computer programming. The tool has been used in different introductory programming courses to generate a set of practice exercises different for each student, but with the same difficulty and quality.", "authors": [{"name": "Benito Mendoza", "affiliation": "New York City College of Technology, CUNY, Brooklyn, NY, USA"}, {"name": "Laura Zavala", "affiliation": "Medgar Evers College, CUNY, Brooklyn, NY, USA"}], "tags": ["assessment tools", "programming exercises", "semantic-based aig", "contextual examples", "semantic web", "motivation", "linked open data", "automatic item generation"]}, {"title": "Session details: Paper Session: Courses for Non-majors", "link": "https://dl.acm.org/doi/10.1145/3247816", "abstract": "No abstract available.", "authors": [{"name": "Patrick Kinnicutt", "affiliation": "Central Michigan University"}], "tags": []}, {"title": "Mixed Approaches to CS0: Exploring Topic and Pedagogy Variance after Six Years of CS0", "link": "https://dl.acm.org/doi/10.1145/3159450.3159592", "abstract": "Since 2010, the Cal Poly Computer Science Department has required computing majors to select from a variety of CS0 courses to start their academic year. The broad objective of the course is to attract and retain undergraduates that have no prior experience in CS by using authentic problems that demonstrate the relevance and highlight the role of computers in solving \"real world\" problems. The course is offered in a variety of thematic \"flavors\" that leverage a student's pre-existing interests (e.g. in music or art), but all share the common goals of introducing students to the basics of programming, teamwork, and college-level study. While there is overlap in overall goals, the courses vary drastically in topic matter (e.g. robotics, gaming, music, computational art, mobile apps, security) and in pedagogical approach (e.g. principles of design, project-based student driven learning, and traditional topic-based programming modules). The introduction of this CS0 course has increased students' commitment to their major and success in follow-on classes. We present these successes and show that student GPAs in a follow-on object oriented programming course do not vary significantly for the differing subtopics and teaching pedagogies employed in the various flavors. Our report includes examining two student subgroups (those experienced with programming and those new to programming). Our evaluations suggest that the existence and goal of the course matter more than the specific content, with all subtopics and pedagogical approaches performing well.", "authors": [{"name": "Bruce DeBruhl", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Zo\u00eb J. Wood", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Zachary Peterson", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "John Clements", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "John Bellardo", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Michael Haungs", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "David Janzen", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Julie Workman", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Hugh Smith", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["retention", "cs0", "computer science education", "introductory programming"]}, {"title": "Designing an Introductory Programming Course to Improve Non-Majors' Experiences", "link": "https://dl.acm.org/doi/10.1145/3159450.3159548", "abstract": "Demand for computing courses from students in disciplines outside of Computer Science is growing. This growth has created increasing challenges in offering one-size-fits-all CS1 courses. We found that non-CS majors' experiences and outcomes in our existing CS1 course were worse than those of intended CS majors. In response, we developed an introductory programming course, CS0.5, aimed at meeting the needs of the diverse population of non-CS major students interested in our courses. In this paper, we present the motivation, curriculum design, and evidence of effectiveness for this new course. We describe the specific design decisions we made in response to the experiences of non-CS majors in CS1. We also demonstrate that students' outcomes in CS0.5--measured in terms of students' pass rates, satisfaction, and attitudes--all not only improve compared to non-CS majors in CS1, but also largely match those of CS majors in CS1. Finally, we present student feedback, gathered through surveys and Appreciative Inquiry focus groups, that illustrates how our curriculum design choices better meet our non-major students' needs. The most-valued course design elements, as identified by focus group participants, provide insight for other CS educators who are designing similar courses.", "authors": [{"name": "Anasazi Valair", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Meghan Allen", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Jessica Q. Dawson", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Alice Campbell", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["appreciative inquiry", "CS1", "blended-learning", "evaluation", "CS for all", "non-majors", "curriculum design"]}, {"title": "Brain-Computer Interface for Novice Programmers", "link": "https://dl.acm.org/doi/10.1145/3159450.3159603", "abstract": "As CS + X courses become more common, it is important for us to investigate ways to leverage interdisciplinary learning tools to expand the types of experiences available to students. This paper discusses our experiences introducing CS undergraduates to basic Brain-Computer Interface (BCI) concepts using NeuroBlock. Neuroblock is a visual programming environment that allows users to build applications driven by near-real-time neurophysiological (i.e., brainwaves) data. Brainwave data is captured using a commercial-grade BCI device. Students use brainwave data from the BCI device to create interactive hybrid-BCI applications (e.g., games) featuring objects that respond to students' affective states (e.g. engagement, relaxation, and attention) and keyboard events. In this paper, we describe NeuroBlock, three example activities, and results from an exploratory empirical study that suggests exposure to NeuroBlock increased students' confidence in their ability to develop applications that leverage neurophysiological signals. NeuroBlock and the discussed activities have the potential to supplement future CS + X courses by providing students hands-on experiences with emerging physiological devices.", "authors": [{"name": "Juan E. Gilbert", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Chris S. Crawford", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["neurofeedback", "block-based programming", "brain-computer interface"]}, {"title": "Session details: Paper Session: CS4All", "link": "https://dl.acm.org/doi/10.1145/3247817", "abstract": "No abstract available.", "authors": [{"name": "Leigh Ann Delyser", "affiliation": "NYC Foundation for CS Education"}], "tags": []}, {"title": "CS for All: Catering to Diversity of Master's Students through Assignment Choices", "link": "https://dl.acm.org/doi/10.1145/3159450.3159464", "abstract": "Increasingly, students enrolled into foundational CS courses such as programming fundamentals include those from many non-CS majors including Data Analytics, Business, Science and Social Sciences. Staff teaching foundational programming courses must therefore cater for varying student backgrounds, cognitive abilities and interests while teaching abstract concepts such as encapsulation, inheritance and polymorphism. In the past assignments played a major role in learning such abstract concepts as they allowed students to construct their own meanings experientially. However, a single assignment in a given domain pitched at an average student cannot cater effectively to students with varying cognitive abilities and backgrounds resulting in poor learning outcomes and student satisfaction. In this paper we report our experience, substantially improving learning outcomes and student satisfaction in a Master's level introductory programming course with weak learning outcomes and poor student satisfaction by offering a choice of assignments. Our novel approach requires designing assignments which take into account the interests of students and their zone of proximal development which determines the extent to which a learner can grasp new concepts. Our pre and post assignment tests and survey feedback clearly show a substantial improvement in learning outcomes and student perception.", "authors": [{"name": "Margaret Hamilton", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Sohail Alhazmi", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Charles Thevathayan", "affiliation": "RMIT University, Melbourne, Australia"}], "tags": ["novice programming", "assessment design"]}, {"title": "A Landscape Study of Computer Science Education in NYC: Early Findings and Implications for Policy and Practice", "link": "https://dl.acm.org/doi/10.1145/3159450.3159467", "abstract": "NYC's Computer Science for All (CS4All) is a 10-year, districtwide initiative aimed at providing high-quality computer science (CS) education to all NYC public school students. It aspires to greatly increase the number of students, teachers, and schools exposed to CS in NYC, and to offer meaningful learning experiences that build on prior exposure and skills at every grade level. These plans include providing high-quality professional development (PD) to some 5,000 teachers, designed to help them learn new programs and pedagogies in CS education, as well as strategies for integrating CS into existing courses. This paper presents findings from an assessment of CS in NYC, conducted in the second year of the CS4All initiative. Using a telephone survey of a representative sample of schools, we describe the current state of CS programming and training in the City. Overall, we found high participation in CS teacher training opportunities (both through and independent of the initiative) and widespread offering of CS courses Specifically, we estimate just over half of schools districtwide (56%) participated in some type of CS training in the 2015-16 school year, and about two thirds of schools (64%) offered students some kind of CS coursework in the 2016-17 school year (through either stand-alone CS courses or the integration of CS into other subjects). The type of programming and training varied by school level (elementary, middle and high). We also explored the extent to which programming and training are reaching schools and students who are historically underrepresented in CS--including women and girls, students of color, low-income students and students with disabilities. We found that schools offering CS courses and activities served fewer Black and Latino students and more White and Asian Students, compared with schools not offering CS. This work is unique, as it is the only districtwide assessment of CS education conducted anywhere in the country to date, thus adding to an under-researched but important and growing field of study", "authors": [{"name": "Rachel Cole", "affiliation": "Research Alliance for New York City Schools, New York University, NY, USA"}, {"name": "Cheri Fancsali", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}, {"name": "Paulina Toro Isaza", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}, {"name": "Linda Tigani", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}], "tags": ["barriers", "implementation", "funding", "landscape", "NYC", "computer science education", "access", "survey"]}, {"title": "Equal Outcomes 4 All: A Study of Student Learning in ECS", "link": "https://dl.acm.org/doi/10.1145/3159450.3159529", "abstract": "This study investigated patterns in the development of computational thinking practices in the context of the Exploring Computer Science (ECS) program, a high school introductory CS course and professional development program designed to foster deep engagement through equitable inquiry around CS concepts. Past research indicates that the personal relevance of the ECS experience influences students' expectancy-value towards computer science. Expectancy-value is a construct that is predictive of career choices. We extended our research to examine whether expectancy-value influences the development of computational thinking practices. This study took place in the context of two ECS implementation projects across two states. Twenty teachers, who implemented ECS in 2016-17, participated in the research. There were 906 students who completed beginning and end of year surveys and assessments. The surveys included demographic questions, a validated expectancy-value scale, and questions about students' course experiences. The assessments were developed and validated by SRI International as a companion to the ECS course. Overall, student performance statistically increased from pretest to posttest with effect size of 0.74. There were no statistically significant differences in performance by gender or race/ethnicity. These results are consistent with earlier findings that a personally relevant course experience positively influences students' expectancy for success. These results expanded on prior research by indicating that students' expectancy-value for computer science positively influenced student learning.", "authors": [{"name": "Dennis Brylow", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Catherine McGee", "affiliation": "The Learning Partnership, Western Spring, IL, USA"}, {"name": "Eric Snow", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Randi McGee-Tekula", "affiliation": "The Learning Partnership, Western Springs, IL, USA"}, {"name": "Daisy Rutstein", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Don Yanek", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Lucia Dettori", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Steven McGee", "affiliation": "The Learning Partnership, Western Springs, IL, USA"}, {"name": "Brenda Wilkerson", "affiliation": "AnitaB.org, Palo Alto, CA, USA"}, {"name": "Jennifer Duck", "affiliation": "The Learning Partnership, Western Springs, IL, USA"}, {"name": "Ronald I. Greenberg", "affiliation": "Loyola University, Chicago, IL, USA"}, {"name": "Dale Reed", "affiliation": "University of Illinois, Chicago, Chicago, IL, USA"}, {"name": "Andrew M. Rasmussen", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}], "tags": ["computer science assessment", "expectancy-value-cost", "high school computer science", "computer science teaching practices", "exploring computer science", "computer science attitudes"]}, {"title": "Session details: Paper Session: Cybersecurity #1", "link": "https://dl.acm.org/doi/10.1145/3247818", "abstract": "No abstract available.", "authors": [{"name": "Roberto Hoyle", "affiliation": "Oberlin College"}], "tags": []}, {"title": "Challenges Arising from Prerequisite Testing in Cybersecurity Games", "link": "https://dl.acm.org/doi/10.1145/3159450.3159454", "abstract": "Cybersecurity games are an attractive and popular method of active learning. However, the majority of current games are created for advanced players, which often leads to frustration in less experienced learners. Therefore, we decided to focus on a diagnostic assessment of participants entering the games. We assume that information about the players' knowledge, skills, and experience enables tutors or learning environments to suitably assist participants with game challenges and maximize learning in their virtual adventure. In this paper, we present a pioneering experiment examining the predictive value of a short quiz and self-assessment for identifying learners' readiness before playing a cybersecurity game. We hypothesized that these predictors would model players' performance. A linear regression analysis showed that the game performance can be accurately predicted by well-designed prerequisite testing, but not by self-assessment. At the same time, we identified major challenges related to the design of pretests for cybersecurity games: calibrating test questions with respect to the skills relevant for the game, minimizing the quiz's length while maximizing its informative value, and embedding the pretest in the game. Our results are relevant for educational researchers and cybersecurity instructors of students at all learning levels.", "authors": [{"name": "Valdemar \u0160v\u00e1bensk\u00fd", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Jan Vykopal", "affiliation": "Masaryk University, Brno, Czech Rep"}], "tags": ["active learning", "linear regression modeling", "prerequisite testing", "cybersecurity games", "self-assessment", "diagnostic assessment"]}, {"title": "Assessing the Impact of a National Cybersecurity Competition on Students' Career Interests", "link": "https://dl.acm.org/doi/10.1145/3159450.3159462", "abstract": "It is well documented that there is a sizable shortage of workers in cybersecurity and related careers. Exacerbating this problem are severe imbalances with respect to gender and other underrepresented categories, with one recent study finding only 11% of cybersecurity professionals are women. One approach to addressing these shortages is to attempt to increase interest in cybersecurity careers through extracurricular cybersecurity competitions. CyberPatriot is the largest cybersecurity competition for middle and high school students in North America, with over 14,000 young people participating during the 2016-2017 school year. This paper assesses the impact of this competition on participants' interest in cybersecurity careers. Survey data previously collected by the competition organizers is analyzed with rigorous statistical methods. Results show that participants' interest in cybersecurity increased meaningfully in several dimensions relevant to career selection. Further analysis also finds that despite lower initial interest in cybersecurity careers among female participants, this interest increased by an even greater amount than it did for male participants.", "authors": [{"name": "Laurence D. Merkle", "affiliation": "Air Force Institute of Technology, Wright-Patterson AFB, OH, USA"}, {"name": "Michael H. Dunn", "affiliation": "Air Force Institute of Technology, Wright-Patterson AFB, OH, USA"}], "tags": ["cyberpatriot", "underrepresented populations", "cybersecurity education", "K-12 education", "competitions", "gender"]}, {"title": "Game based Cybersecurity Training for High School Students", "link": "https://dl.acm.org/doi/10.1145/3159450.3159591", "abstract": "Cybersecurity is critical to the national infrastructure, federal and local government, military, industry, and personal privacy. To defend the U.S. against the cyber threats, a significant demand for skilled cybersecurity workforce is predicted in government and industrial sectors. To address this issue, National Security Agency and the National Science Foundation jointly funded GenCyber program to stimulate the K-12 students' interest in the cybersecurity field and raise their awareness of cybersecurity and safe online behavior. Purdue University Northwest has successfully launched four GenCyber summer camps in 2016 and 2017 to 181 high school students, with 51.3% underrepresented minority ratio (Africa American and Hispanics), and about 2:1 male to female ratio. We delivered GenCyber summer camp activities in the format of game based learning and hands-on labs. The use of game-based learning in the camp was an excellent platform to teach concepts of cyber security principles. For example, in Cyber Defense Tower Game, students need to protect their servers from the different types of cyber-attack. They need to select the correct type of defense to stop each wave of cyber-attack. As the students advanced through the game, combinations of the different attacks would come faster, making it more difficult for the students to defend their servers. This game was well received by the students, support staffs, instructors, and site visit team. Learning through these activities provided high school students with an immersive, learner-centered experience, which has been proven very effective on cybersecurity awareness training and practical skill acquisition for learners from diverse backgrounds. Further analysis of survey data revealed that the gamification of cybersecurity education to raise students' interests in computer science and cybersecurity was more effective in male high school students than in female students.", "authors": [{"name": "Ge Jin", "affiliation": "Purdue University Northwest, Hammond, IN, USA"}, {"name": "Jonathan White", "affiliation": "Purdue University Northwest, Hammond, IN, USA"}, {"name": "Justin Heffron", "affiliation": "Purdue University Northwest, Hammond, IN, USA"}, {"name": "Manghui Tu", "affiliation": "Purdue University Northwest, Hammond, IN, USA"}, {"name": "Tae-Hoon Kim", "affiliation": "Purdue University Northwest, Hammond, IN, USA"}], "tags": ["game base learning", "cybersecurity education", "cybersecurity"]}, {"title": "Session details: Paper Session: Introductory Courses", "link": "https://dl.acm.org/doi/10.1145/3247819", "abstract": "No abstract available.", "authors": [{"name": "Sarah Heckman", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "The Effect of Reporting Known Issues on Students' Work", "link": "https://dl.acm.org/doi/10.1145/3159450.3159456", "abstract": "Students in Computer Science programming courses often have difficulty with coding, which results in flawed exercises. We asked students working on programming exercises to report known defects in their submission. We distinguish between three types of defects: bugs in the program, missing features, and poorly written code. Results show that students detect and report missing features and bugs quite accurately (59% of the bugs and 61% of the missing features were reported), but they are much less aware of the quality of their code (only 28% of the code issues were reported). After comparing their grades to the grades of the previous year we argue that the request to report defects helps student in submitting exercises with fewer bugs. Finally, the students affirmed that the request to report defects helped them in detecting problems and improved their time management.", "authors": [{"name": "Iris Gaber", "affiliation": "Academic College of Tel Aviv-Yaffo, Tel Aviv, Israel"}, {"name": "Amir Kirsh", "affiliation": "Academic College of Tel Aviv-Yaffo, Tel Aviv, Israel"}], "tags": ["code quality", "object-oriented course", "software defects", "students' exercises", "known issues", "students perception"]}, {"title": "Quantifying the Benefits of Prior Programming Experience in an Introductory Computer Science Course", "link": "https://dl.acm.org/doi/10.1145/3159450.3159480", "abstract": "The superior performance of students with prior exposure to programming has long been evident to faculty that teach introductory courses. In this paper we replicate previous studies that quantify the difference between students with and without previous programming experience, and we provide further focus on gender differences. Our research is based on an initial CS1 course that we divided into a section with students having previous programming experience (P) and two sections for students without (N). Both sections of CS1 were taught with the same curriculum and assessments. We find that the advantages of prior experience are substantial, with P students outscoring N students by more than 6% on exams and 10% on programming quizzes. However, the performance gap between P and N students narrows considerably by the end of the following CS2 course, with no significant difference in overall scores. Analyzing results by gender, our data shows that 22% of N students in CS1 are female versus only 12% of P students. However, the female students with prior exposure outperform their male peers in all areas. Another finding of our research is the confirmation of a significant difference in confidence between female and male students.", "authors": [{"name": "Chris Wilcox", "affiliation": "Colorado State University, Fort Collins, CO, USA"}, {"name": "Albert Lionelle", "affiliation": "Colorado State University, Fort Collins, CO, USA"}], "tags": ["previous experience", "broadening participation", "CS1", "CS2"]}, {"title": "Python Versus C++: An Analysis of Student Struggle on Small Coding Exercises in Introductory Programming Courses", "link": "https://dl.acm.org/doi/10.1145/3159450.3160586", "abstract": "Many teachers of CS 1 (introductory programming) have switched to Python rather than C, C++, or Java. One reason is the belief that Python's interpreted nature plus simpler syntax and semantics ease a student's learning, but data supporting that belief is scarce. This paper addresses the question: Do Python learners struggle less than C++ learners? We analyzed student submissions on small coding exercises in CS 1 courses at 20 different universities, 10 courses using Python, and 11 using C++. Each course used either the Python or C++ version of an online textbook from one publisher, each book having 100+ small coding exercises, expected to take 2-5 minutes each. We considered 11 exercises whose Python and C++ versions were nearly identical and that appeared in various chapters. We defined struggle rate for exercises, where struggle means a student spent excessive time or attempts on an exercise. Based on that rate, we found the learning for Python was not eased; in fact, Python students had significantly higher struggle rates than C++ students (26% vs. 13%). Higher rates were seen even when considering only classes with no prerequisites, classes for majors only, or classes for non-majors only. We encourage the community to do further analyses, to help guide teachers when choosing a CS 1 language.", "authors": [{"name": "Nabeel Alzahrani", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Roman Lysecky", "affiliation": "University of Arizona & zyBooks, Tucson, AZ, USA"}, {"name": "Kevin Nguyen", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Frank Vahid", "affiliation": "University of California, Riverside & zyBooks, Riverside, CA, USA"}, {"name": "Alex Edgcomb", "affiliation": "University of California, Riverside & zyBooks, Riverside, CA, USA"}], "tags": ["CS1", "student struggle", "homework", "python versus c++", "introductory programming", "coding exercises"]}, {"title": "Session details: Paper Session: Systems Courses", "link": "https://dl.acm.org/doi/10.1145/3247820", "abstract": "No abstract available.", "authors": [{"name": "Peter Froehlich", "affiliation": "Johns Hopkins University"}], "tags": []}, {"title": "Portable Parallel Computing with the Raspberry Pi", "link": "https://dl.acm.org/doi/10.1145/3159450.3159558", "abstract": "With the requirement that parallel & distributed computing (PDC) topics be covered in the core computer science curriculum, educators are exploring new ways to engage students in this area of computing. In this paper, we discuss the use of the Raspberry Pi single-board computer (SBC) to provide students with hands-on multicore learning experiences. We discuss how the authors use the Raspberry Pi to teach parallel computing, and present assessment results that indicate such devices are effective at achieving CS2013 PDC learning outcomes, as well as motivating further study of parallelism. We believe our results are of significant interest to CS educators looking to integrate parallelism in their classrooms, and support the use of other SBCs for teaching parallel computing.", "authors": [{"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Richard A. Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, Saint Paul, MN, USA"}, {"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, MI, USA"}], "tags": ["parallel computing", "raspberry pi", "education"]}, {"title": "A User Space-based Project for Practicing Core Memory Management Concepts", "link": "https://dl.acm.org/doi/10.1145/3159450.3159581", "abstract": "This paper presents the design and evaluation of a novel project designed to facilitate the learning of memory management concepts and interactions between different components. This project removes the complexity of a full or specific operating system by implementing memory management inside the user space. Evaluation results show that the mean exam scores improved by about 29% to 34%. On average, the total code size is less than 300 lines and time spent working on this project is under 17 hours. Therefore, this project is beneficial in helping students learn memory management while maintaining a reasonable project workload.", "authors": [{"name": "Dakai Zhu", "affiliation": "University of Texas at San Antonio, San Antonio, TX, USA"}, {"name": "Sam Silvestro", "affiliation": "University of Texas at San Antonio, San Antonio, TX, USA"}, {"name": "Timothy T. Yuen", "affiliation": "University of Texas at San Antonio, San Antonio, TX, USA"}, {"name": "Tongping Liu", "affiliation": "University of Texas at San Antonio, San Antonio, TX, USA"}, {"name": "Corey Crosser", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Turgay Korkmaz", "affiliation": "University of Texas at San Antonio, San Antonio, TX, USA"}], "tags": ["operating systems", "memory management", "user space project", "education"]}, {"title": "Implementing Malloc: Students and Systems Programming", "link": "https://dl.acm.org/doi/10.1145/3159450.3159597", "abstract": "This work describes our experience in revising one of the major programming assignments for the second-year course Introduction to Computer Systems, in which students implement a version of the malloc memory allocator. The revisions involved fully supporting a 64-bit address space, promoting a more modern programming style, and creating a set of benchmarks and grading standards that provide an appropriate level of challenge. With this revised assignment, students were able to implement more sophisticated allocators than they had in the past, and they also achieved higher performance on the related questions on the final exam.", "authors": [{"name": "Brian P. Railing", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Randal E. Bryant", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["systems programming", "programming assignment", "malloc"]}, {"title": "Session details: Paper Session: Pedagogy #1", "link": "https://dl.acm.org/doi/10.1145/3247821", "abstract": "No abstract available.", "authors": [{"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina, Charlotte"}], "tags": []}, {"title": "TMOSS: Using Intermediate Assignment Work to Understand Excessive Collaboration in Large Classes", "link": "https://dl.acm.org/doi/10.1145/3159450.3159490", "abstract": "As computer science classes grow, instructor workload also increases: teachers must simultaneously teach material, provide assignment feedback, and monitor student progress. At scale, it is hard to know which students need extra help, and as a result some students can resort to excessive collaboration--using online resources or peer code--to complete their work. In this paper, we present TMOSS, a tool that analyzes the intermediate steps a student takes to complete a programming assignment. We find that for three separate course offerings, TMOSS is almost twice as effective as traditional software similarity detectors in identifying the number of students who exhibit excessive collaboration. We also find that such students spend significantly less time on their assignment, use fewer class tutoring resources, and perform worse on exams than their peers. Finally, we provide a theory of the parametric distribution of typical student assignment similarity, which allows for probabilistic interpretation.", "authors": [{"name": "Chris Piech", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Nick McKeown", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Lisa Yan", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["teaching at scale", "student performance", "undergraduate courses", "programming courses", "plagiarism detection"]}, {"title": "Social Help-seeking Strategies in a Programming MOOC", "link": "https://dl.acm.org/doi/10.1145/3159450.3159495", "abstract": "Being able to seek help is a crucial part of any learning process. This includes both collaborative models such as asking for help from others as well as independent models such as using course materials and the vast resources provided by the Web. Currently, MOOC research has addressed social help-seeking within the MOOC course, either using MOOC platform tools (forum, chat) or arranging activities using external platforms (Google Hangout, Facebook groups). However, MOOC learning activities take place in a larger social ecology, including friends and teachers, general online communities and alumni communities. Using survey data from a programming MOOC, we show a typology of social learning strategies: non-use of social help-seeking, seeking help from friends and seeking help from alumni and teacher communities. We further show that students using social help-seeking strategies orient themselves more with a surface approach but are also less likely to drop the course. We conclude this work by addressing the various design possibilities identified by this work.", "authors": [{"name": "Matti Nelimarkka", "affiliation": "Aalto University & University of Helsinki, Espoo and Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["MOOC buddy", "constructive learning", "MOOC", "social learning", "social interaction", "collaborative learning", "K-means", "learning approaches", "survey", "help-seeking strategies"]}, {"title": "Lightweight Techniques to Support Students in Large Classes", "link": "https://dl.acm.org/doi/10.1145/3159450.3159601", "abstract": "With surging enrollments in computer science, large classes are becoming standard, even at the upper division. Unfortunately, this new reality can leave students feeling anonymous and unsupported. This work examines the impact of several lightweight interventions on students' sense of connection with instructors and the class. These strategies were employed in a range of large courses at a public research-focused university. The implemented techniques include: opportunities for one-on-one tutoring, seating assignments with consistent teaching staff members seated in class, and assigned small discussion sections, among others. All strategies are lightweight and require only the usual staffing resources afforded to a class. In this report, we evaluate student sense of community and reflect on the benefits and challenges of these techniques.", "authors": [{"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Christine Alvarado", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Mia Minnes", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["large classes", "computing education", "sense of belonging", "classroom community", "educational interventions"]}, {"title": "Holistic Approaches to Computer Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159614", "abstract": "Computer science curricula has been well defined for many years through the publication of the Computer Science Curricula reports developed jointly by the two major professional societies, the Association for Computing Machinery (ACM) and the IEEE Computer Society. These documents define computer science curricula by providing knowledge areas and course exemplars. The most recent curriculum report, the Computer Science Curricula 2013 (CSC13 [1]), provides 18 knowledge areas (KAs). Though it stresses that KAs do not necessary represent courses, computer science departments have traditionally created courses around the KAs. Indeed, the course exemplars presented in the CSC13 report, for the most part, center around KAs.", "authors": [{"name": "Michael Goldweber", "affiliation": "Xavier University, Cincinnati, OH, USA"}, {"name": "Valerie Barr", "affiliation": "Mount Holyoke College, South Hadley, MA, USA"}, {"name": "John Barr", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Deepak Kumar", "affiliation": "Bryn Mawr College, Bryn Mawr, PA, USA"}, {"name": "Ali Erkan", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["holistic", "networks", "acm guidelines", "education", "operating systems", "algorithms"]}, {"title": "Integrating Social Good into CS Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159622", "abstract": "Computing for social good has become a common topic in computing circles, with professional organizations and conferences sponsoring discussions on the relevance of \"social good\" material for computer science research [e.g., 1] and for education [e.g., 12,13,18].", "authors": [{"name": "Stephanie August", "affiliation": "National Science Foundation, Alexandria,, VA, USA"}, {"name": "Jacqueline Cameron", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Douglas H. Fisher", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Tamara Clegg", "affiliation": "University of Maryland, College Park, MD, USA"}], "tags": ["citizen science", "privacy and security", "computing education", "social justice", "citizenship", "informal education", "sustainability", "k-12 education", "higher education", "social good"]}, {"title": "What Would You Say if...: Responding to Microaggressions, Bias, and Other Nonsense", "link": "https://dl.acm.org/doi/10.1145/3159450.3159634", "abstract": "Many SIGCSE attendees are committed to inclusive teaching practices and creating an inclusive culture within their classrooms; yet, advocating for and sustaining these initiatives may require having difficult conversations with our colleagues and students. Understandably, many faculty are unsure about how to talk about sensitive topics such as race and gender with their colleagues and students. Research suggests that practicing some of these difficult conversations is essential to achieve the goals of inclusive teaching and culture. Most SIGCSE attendees probably use active learning throughout their teaching, but we rarely see active learning at SIGCSE - let's try it! In this interactive session, attendees will learn strategies for responding to bias in academic settings. Attendees will then practice those strategies in small groups. This will be facilitated by playing two rounds of a research-based game learning approach developed by the NSF project CSTeachingTips.org (#1339404), which has been tested in group of 200 teaching assistants. This is the fifth iteration of the game-learning approach and all attendees will receive a printed copy of the game and a link to download and print more copies.", "authors": [{"name": "Catherine Ashcraft", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Kyla McMullen", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["inclusive teaching", "bias", "microaggressions"]}, {"title": "NSF/IEEE-TCPP Curriculum Initiative on Parallel and Distributed Computing: Status Report", "link": "https://dl.acm.org/doi/10.1145/3159450.3159632", "abstract": "No abstract available.", "authors": [{"name": "Charles C. Weems", "affiliation": "University of Massachusetts, Amherst, PA, USA"}, {"name": "Sushil K. Prasad", "affiliation": "Georgia State University, Atlanta, GA, USA"}, {"name": "Debzani Deb", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "John P. Dougherty", "affiliation": "Haverford College, Haverford, PA, USA"}], "tags": ["curriculum guidelines", "parallel and distributed computing", "status report.", "education"]}, {"title": "Session details: First Timer's Lunch Keynote & 2018 SIGCSE Award for Lifetime Service to the Computer Science Education Community", "link": "https://dl.acm.org/doi/10.1145/3247822", "abstract": "No abstract available.", "authors": [{"name": "Dan Garcia", "affiliation": "UC Berkeley"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "Teaching Computer Science in a Time of Opportunities and Challenges", "link": "https://dl.acm.org/doi/10.1145/3159450.3166086", "abstract": "Academic computer science is at a critical juncture that offers both challenges and opportunities. More students than ever before are choosing to major in computer science and an even larger number of students are taking computer science courses in recognition of the fact that knowledge of computing is essential in the modern world. That interest, of course, is exciting. At the same time, most computer science departments are overwhelmed by the growing demand from students. In this talk, I draw on my own experience as a young faculty member in the similarly challenging 1980s to offer advice on how to make the most of the opportunities that are intrinsic to teaching in such a vibrant field.", "authors": [{"name": "Eric Roberts", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["computer science education"]}, {"title": "Session details: Paper Session: Computational Thinking #1", "link": "https://dl.acm.org/doi/10.1145/3247823", "abstract": "No abstract available.", "authors": [{"name": "Elizabeth Hawthorne", "affiliation": "Union County College"}], "tags": []}, {"title": "Computational Thinking for All: An Experience Report on Scaling up Teaching Computational Thinking to All Students in a Major City in Sweden", "link": "https://dl.acm.org/doi/10.1145/3159450.3159586", "abstract": "The Swedish government has recently introduced digital competence including programming in the Swedish K-9 curriculum starting no later than fall 2018. This means that 100 000 teachers need to learn programming and digital competence in less than a year. In this paper we report on our experience working with professional teacher training in Sweden's fifth largest city. The city has about 150 000 inhabitants and about 50 schools with about 14 000 students in primary education. The project has been carried out in close cooperation with the municipality.\nThe work started in the fall of 2014 with a pilot study with 10 teachers in different subjects that was carried out during spring 2015. The pilot study was successful as the teachers were able to introduce activities related to programming and computational thinking in their subjects after only two half day workshops. The next step was to scale this up to include all the schools in the city. As expected, this turned out to be a larger challenge. More than 70 teachers were involved in the second part of the project. Some of the lessons learned are that it is quite easy to provide teacher training, but harder to get teachers to actually change their teaching and even more challenging to get teachers to help their colleagues introduce programming or computational thinking in their teaching.\nBased on our experience we draw some general conclusions and make suggestions for how to scale up the teaching of programming and computational thinking to all.", "authors": [{"name": "Fredrik Heintz", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}, {"name": "Linda Mannila", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}], "tags": ["k-9 education", "teacher professional development", "programming", "digital competence", "computational thinking"]}, {"title": "Analysis of Collaborative Learning in a Computational Thinking Class", "link": "https://dl.acm.org/doi/10.1145/3159450.3159470", "abstract": "Collaborative learning can help reduce the anxiety level of learners, improve understanding and thus create a positive atmosphere for learning. This study analyzes students' collaborative learning experiences within small interdisciplinary \"cohorts\" while learning computational thinking in a university-level class. The cohort allows students from different disciplines to contribute diverse perspectives, socially interact with each other and in turn create situations where two or more students learn together. This study uses both qualitative and quantitative means to explore students' collaborative learning experiences. Ethnographically-informed qualitative data using Stahl's collaborative framework is analyzed. The analysis revealed that most students found the cohort model to be valuable in learning computational thinking by allowing them to ask about and explain problems, especially with students from different disciplines who perceive and explain a problem differently. Quantitative data from a multi-term survey complements and confirms the findings from the qualitative data. Our study helps to inform those teaching foundational computing concepts to a diverse audience of learners.", "authors": [{"name": "Bushra Chowdhury", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Austin Cory Bart", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Dennis Kafura", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["interdisciplinary groups", "computational thinking", "collaborative learning", "cohort"]}, {"title": "The Computational Algorithmic Thinking (CAT) Capability Flow: An Approach to Articulating CAT Capabilities over Time in African-American Middle-school Girls", "link": "https://dl.acm.org/doi/10.1145/3159450.3159473", "abstract": "Computational algorithmic thinking (CAT) is the ability to design, implement, and assess the implementation of algorithms to solve a range of problems. It involves identifying and understanding a problem, articulating an algorithm or set of algorithms in the form of a solution to the problem, implementing that solution in such a way that the solution solves the problem, and evaluating the solution based on some set of criteria. Supporting Computational Algorithmic Thinking (SCAT) is both a longitudinal between-subjects exploratory research project and a free enrichment program supporting and guiding African-American middle school girls over three years as they iteratively design a set of games for social change. This paper explores the CAT Capability Flow, which begins to describe the processes and sub-skills and capabilities involve in CAT. To do this, we engage in an approach which results in an initial flowchart that depicts the processes students are engaging in as an iteratively-refined articulation of the steps involved in computational algorithmic thinking.", "authors": [{"name": "Jakita O. Thomas", "affiliation": "Auburn University, Auburn, AL, USA"}], "tags": ["middle school", "girls", "cat capability flow", "African-American", "computational algorithmic thinking"]}, {"title": "Session details: Paper Session: Creativity", "link": "https://dl.acm.org/doi/10.1145/3247824", "abstract": "No abstract available.", "authors": [{"name": "Dee A.B. Weikle", "affiliation": "James Madison University"}], "tags": []}, {"title": "Examining the Impact of Computational Creativity Exercises on College Computer Science Students' Learning, Achievement, Self-Efficacy, and Creativity", "link": "https://dl.acm.org/doi/10.1145/3159450.3159459", "abstract": "The purpose of the present study was to investigate how the inclusion of computational creativity exercises (CCEs) merging computational and creative thinking in undergraduate computer science (CS) courses affected students' course grades, learning of core CS knowledge, self-efficacy, and creative competency. CCEs were done in lower- and upper-division CS courses at a single university. Students in CCE implementation courses were compared to students in the same courses in different semesters. Propensity score matching was used to create comparable groups (control and implementation) based on students' GPA, motivation, and engagement. Results showed that implementing CCEs in undergraduate CS courses enhanced grades, learning of core CS knowledge, and self-efficacy for creatively applying CS knowledge. However, CCEs did not impact creative competency. The effect of the CCEs was consistent across upper- and lower-division courses for all outcomes. Unlike previous studies that only established the support for CCEs, such as positive dosage effects, the results of this study indicate that CCEs have a causal effect on students' achievement, learning, and self-efficacy, and this effect is independent of general academic achievement, motivation, and engagement. These findings establish the CCEs as a validated, evidence-based instructional method.", "authors": [{"name": "Leen-Kiat Soh", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Markeya S. Peteranetz", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Abraham E. Flanigan", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Duane F. Shell", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Shiyuan Wang", "affiliation": "Rowan University School of Osteopathic Medicine, Stratford, NJ, USA"}], "tags": ["computational thinking", "computational creativity", "computer science education"]}, {"title": "Creativity, Customization, and Ownership: Game Design in Bootstrap: Algebra", "link": "https://dl.acm.org/doi/10.1145/3159450.3159471", "abstract": "Game programming projects are concrete and motivational for students, especially when used to teach more abstract concepts such as algebra. These projects must have open-ended elements to allow for creativity, but too much freedom makes it hard to reach specific learning outcomes. How many degrees of freedom do students need to make a game feel like one they genuinely designed? What kinds of personalization do they undertake of their games? And how do these factors correlate with their prior game-playing experience or with their identified gender? This paper studies these questions in the concrete setting of the Bootstrap:Algebra curriculum. In this curriculum, students are only given four parameters they can customize and only a few minutes in which to do so. Our study shows that despite this very limited personalization, students still feel a strong sense of ownership, originality, and pride in their creations. We also find that females find videogame creation just as satisfying as males, which contradicts some prior research but may also reflect the nature of games created in this curriculum and the opportunities it offers for self-expression.", "authors": [{"name": "Emmanuel Schanzer", "affiliation": "Bootstrap/Brown University, Providence, RI, USA"}, {"name": "Kathi Fisler", "affiliation": "Brown University/WPI/Bootstrap, Providence, RI, USA"}, {"name": "Shriram Krishnamurthi", "affiliation": "Brown University/Bootstrap, Providence, RI, USA"}], "tags": ["motivation", "videogames", "K-12 education", "design", "gender", "ownership"]}, {"title": "Updating Introductory Computer Science with Creative Computation", "link": "https://dl.acm.org/doi/10.1145/3159450.3159539", "abstract": "This paper reports on the results of a multi-year project in which we identified essential pedagogy and curriculum for teaching introductory computing courses focused on Creative Computation using Processing. The curriculum aligns with a traditional 'CS1' approach as well as 'AP CS A', and goes well beyond \"CS Principles\" standards to teach foundations of computer science and programming. We addressed the bridge between high school and entry-level college curriculum in computer science (American freshman high school to freshman college) and demonstrated how algorithmic art provides a powerful vehicle for diverse student populations within a broad range of pedagogical frameworks ranging from traditional structured classrooms to inquiry-based student-driven project labs. A secondary result is that instructors require long-term engagement with mentors to extend their own knowledge of computing, visual arts and appropriate pedagogy.", "authors": [{"name": "Deepak Kumar", "affiliation": "Bryn Mawr College, Bryn Mawr, PA, USA"}, {"name": "Ursula Wolz", "affiliation": "Bennington College, Bennington, VT, USA"}, {"name": "Ira Greenburg", "affiliation": "Southern Methodist University, Dallas, TX, USA"}, {"name": "Dianna Xu", "affiliation": "Bryn Mawr College, Bryn Mawr, PA, USA"}], "tags": ["k-12 computing", "CS AP", "CS1", "creative computation", "processing", "CS0"]}, {"title": "Session details: Paper Session: Cybersecurity #2", "link": "https://dl.acm.org/doi/10.1145/3247825", "abstract": "No abstract available.", "authors": [{"name": "Sotirios Kentros", "affiliation": "Salem State University"}], "tags": []}, {"title": "Timely Feedback in Unstructured Cybersecurity Exercises", "link": "https://dl.acm.org/doi/10.1145/3159450.3159561", "abstract": "Cyber defence exercises are intensive, hands-on learning events for teams of professionals who gain or develop their skills to successfully prevent and respond to cyber attacks. The exercises mimic the real-life, routine operation of an organization which is being attacked by an unknown offender. Teams of learners receive very limited immediate feedback from the instructors during the exercise; they can usually see only a scoreboard showing the aggregated gain or loss of points for particular tasks. An in-depth analysis of learners' actions requires considerable human effort, which results in days or weeks of delay. The intensive experience is thus not followed by proper feedback facilitating actual learning, and this diminishes the effect of the exercise.\nIn this initial work, we investigate how to provide valuable feedback to learners right after the exercise without any unnecessary delay. Based on the scoring system of a cyber defence exercise, we have developed a new feedback tool that presents an interactive, personalized timeline of exercise events. We deployed this tool during an international exercise, where we monitored participants' interactions and gathered their reflections. The results show that learners did use the new tool and rated it positively. Since this new feature is not bound to a particular defence exercise, it can be applied to all exercises that employ scoring based on the evaluation of individual exercise objectives. As a result, it enables the learner to immediately reflect on the experience gained.", "authors": [{"name": "Krist\u00edna Z\u00e1kop\u010danov\u00e1", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Karol\u00edna Bursk\u00e1", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Radek O\u0161lej\u0161ek", "affiliation": "Masaryk University, Brno, Czech Rep"}, {"name": "Jan Vykopal", "affiliation": "Masaryk University, Brno, Czech Rep"}], "tags": ["active learning", "professional learners", "exercise", "timely feedback", "personalized feedback", "cybersecurity"]}, {"title": "Teaching Cyber Security Using Competitive Software Obfuscation and Reverse Engineering Activities", "link": "https://dl.acm.org/doi/10.1145/3159450.3159489", "abstract": "Teaching cyber security techniques can be challenging due to the complexity associated with building secure systems. The major issue is these systems could easily be broken if proper protection techniques are not employed. This requires students to understand the offensive approaches that can be used to breach security in order to better understand how to properly defend against cyber attacks. We present a novel approach to teaching cyber security in a graduate course using an innovative assessment task that engages students in both software obfuscation and reverse engineering of obfuscated code. Students involved in the activities gain an appreciation of the challenges in defending against attacks. Our results demonstrate a positive change in the students' perception during the learning process.", "authors": [{"name": "Muhammad Rizwan Asghar", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Andrew Luxton-Reilly", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["competition", "obfuscation", "active learning", "reverse engineering", "peer learning", "contributing student pedagogy", "cyber security"]}, {"title": "Enhancing Security Education Through Designing SDN Security Labs in CloudLab", "link": "https://dl.acm.org/doi/10.1145/3159450.3159514", "abstract": "Software-Defined Networking (SDN) represents a major shift from ossified hardware-based networks to programmable software-based networks. It introduces significant granularity, visibility, and flexibility into networking, but at the same time brings new security challenges. Although the research community is making progress in addressing both the opportunities in SDN and the accompanying security challenges, very few educational materials have been designed to incorporate the latest research results and engage students in learning about SDN security. In this paper, we presents our newly designed SDN security education materials, which can be used to meet the ever-increasing demand for high quality cybersecurity professionals with expertise in SDN security. The designed security education materials incorporate the latest research results in SDN security and are integrated into CloudLab, an open cloud platform, for effective hands-on learning. Through a user study, we demonstrate that students have a better understanding of SDN security after participating in these well-designed CloudLab-based security labs, and they also acquired strong research interests in SDN security.", "authors": [{"name": "Younghee Park", "affiliation": "San Jose State University, San Jose, CA, USA"}, {"name": "Hongda Li", "affiliation": "Clemson University, South Carolina, SC, USA"}, {"name": "Hongxin Hu", "affiliation": "Clemson University, South Carolina, SC, USA"}, {"name": "Xiaohong Yuan", "affiliation": "North Carolina A&T State University, North Carolina, NC, USA"}], "tags": ["software defined networking", "CloudLab", "security"]}, {"title": "Session details: Paper Session: Diverse Topics in CS Ed", "link": "https://dl.acm.org/doi/10.1145/3247826", "abstract": "No abstract available.", "authors": [{"name": "Meghan Allen", "affiliation": "The University of British Columbia"}], "tags": []}, {"title": "Understanding Professional Identities and Goals of Computer Science Undergraduate Students", "link": "https://dl.acm.org/doi/10.1145/3159450.3159474", "abstract": "Understanding professional goals and identities of undergraduate Computer Science (CS) students is critical for curriculum decisions, workforce development, and retention programs. This paper aims to explore the ways in which undergraduate CS students describe their professional goals and identities, and gauge how these goals and identities vary across gender and academic standing. This paper is part of a larger study aimed at understanding how students form their professional goals and identities. In the study presented in this paper, we surveyed 109 CS undergraduate students and interviewed 14 CS undergraduate students across gender and academic standing. The data were qualitatively analyzed using inductive coding and thematic analysis. Our findings indicate that most students identify themselves professionally as software development professionals, various specialized CS professionals, and by their majors. We also found that both male and female students were interested in becoming entrepreneurs, and females were more likely to have professional goals to move into management. This paper contributes to the fields' growing knowledge of undergraduate students' professional goals and professional identities. This knowledge can help CS departments to better align their degree programs, curriculum, and specialization tracks with student goals. Such an alignment has the potential to increase retention in the major as well as prepare students to be competitive in the workforce.", "authors": [{"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Amanpreet Kapoor", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["student expectation", "professional identity", "computer science education", "professional goals", "CS identity"]}, {"title": "Who Teaches Accessibility?: A Survey of U.S. Computing Faculty", "link": "https://dl.acm.org/doi/10.1145/3159450.3159484", "abstract": "Industry demand for software developers with knowledge of accessibility has increased substantially in recent years. However, there is little knowledge about the prevalence of higher education teaching about accessibility or faculty's perceived barriers to teaching accessibility. To address this gap, we surveyed 14,176 computing and information science faculty in the United States. We received a representative sample of at least one response from 318 of the 352 institutions we surveyed, totaling 1,857 responses. We found that 175 institutions (50%) had at least one instructor teaching accessibility and that no fewer than 2.5% of faculty overall teach accessibility. Faculty that teach accessibility are twice as likely to be female, to have expertise in HCI and software engineering, and to know people with disabilities. The most critical barriers to teaching accessibility that faculty reported were the absence of clear and discipline-specific accessibility learning objectives and the lack of faculty knowledge about accessibility. Faculty desired resources that were specific to the areas of computing in which they teach rather than general accessibility resources and guidelines.", "authors": [{"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Kristen Shinohara", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Andrew J. Ko", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Saba Kawas", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["curriculum change", "accessibility", "computing education"]}, {"title": "A Survey of Instructors' Experiences Supporting StudentLearning using HFOSS Projects", "link": "https://dl.acm.org/doi/10.1145/3159450.3159524", "abstract": "Studies have shown that Humanitarian Free and Open Source Software (HFOSS) projects provide a rich learning environment for students, allowing them to gain a range of both technical and professional skills. Although there have been a number of studies on student attitudes toward learning within HFOSS projects, little has been documented about instructors' experiences supporting their students in the classroom. This paper examines survey results from 26 faculty members who participated in an NSF-funded Professors' Open Source Software Experience workshop with the goal of incorporating HFOSS into their curriculum. The survey was designed to identify barriers to using HFOSS in the classroom, to understand the type of classes where instructors incorporated HFOSS, the successes attained and challenges faced by instructors, and to understand instructors' future plans. The data gathered was used to enhance semi-structured interviews that are currently being analyzed. This paper focuses on the hurdles reported by faculty members, the cross-section of uses of HFOSS in the classroom as well as factors that may influence one's ability to integrate HFOSS into the curriculum. The results of the survey demonstrate that faculty have successfully incorporated HFOSS into a wide range of courses across all four years of the curriculum with both large and small classes. The major hurdles are time to prepare materials for one's course as well as finding time within an existing course to integrate HFOSS material.", "authors": [{"name": "Heidi J.C. Ellis", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Gregory W. Hislop", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Lori Postner", "affiliation": "Nassau Community College, Garden City, NY, USA"}], "tags": ["HFOSS", "open source software", "computing education"]}, {"title": "Session details: Paper Session: Pedagogy #2", "link": "https://dl.acm.org/doi/10.1145/3247827", "abstract": "No abstract available.", "authors": [{"name": "Brandon Myers", "affiliation": "University of Iowa"}], "tags": []}, {"title": "Supporting Differentiated Instruction in Programming Courses through Permanent Progress Monitoring", "link": "https://dl.acm.org/doi/10.1145/3159450.3159578", "abstract": "Several studies showed that teacher's support is essential to the students learning process. Often it is difficult for teachers to follow all their student's evolution and make timely interventions when needed. Often, in the same class, there are students with substantially different performance levels, and many times a teacher intervention is cructial to help lower performing students. To help the teacher identify these students, we propose the use of CodeInsights, a tool able to capture autonomously and unobtrusively real-time information about the students' performance based on snapshots of their code. The information available can be used by the teachers to support the adoption of the necessary measures to address each student needs or difficulties in a more grounded manner. We present the system and some results of a field test involving students from an introductory course on PHP programming.", "authors": [{"name": "Lu\u00eds Macedo", "affiliation": "University of Coimbra, Coimbra, Portugal"}, {"name": "Ant\u00f3nio Jos\u00e9 Mendes", "affiliation": "University of Coimbra, Coimbra, Portugal"}, {"name": "Nuno Gil Fonseca", "affiliation": "Oliveira do Hospital & Polytechnic Institute of Coimbra, Oliveira do Hospital , Portugal"}], "tags": ["programming", "working pace", "differentiated instruction", "performance monitoring"]}, {"title": "Reflections on 17 years of ICT Capstone Project Coordination: Effective Strategies for Managing Clients, Teams and Assessment", "link": "https://dl.acm.org/doi/10.1145/3159450.3159584", "abstract": "Many undergraduate ICT degrees culminate with students completing a team-based capstone project under academic supervision. Capstone projects provided by external clients facilitate authentic experiential learning, but sourcing external projects can be difficult, and there can be issues managing industry clients within an academic setting. Capstone projects also provide an opportunity for professional skill development to increase student employability, though to fully assess generic learning outcomes requires evaluating more than the final product created for the client. Teamwork can have a positive impact on student learning, however it is challenging to determine a process of assessment that enables formative and summative assessment that does not require an academic to immerse themselves within a team to evaluate an individual's contribution. Team members are often the best source of meaningful information, and self and peer assessment is commonly used as part of an assessment scheme, but to ensure the objectivity and integrity of the final grade it is necessary to correlate data from a variety of sources. This experience report reflects on a team-based capstone project approach that has been offered for 17 years and proposes some effective strategies for coordinating the more challenging aspects of capstone projects.", "authors": [{"name": "Nicole Herbert", "affiliation": "University of Tasmania, Hobart, Australia"}], "tags": ["teamwork", "capstone project", "peer assessment"]}, {"title": "Design and Evaluation of an Undergraduate Course on Software Development Practices", "link": "https://dl.acm.org/doi/10.1145/3159450.3159542", "abstract": "This paper describes the design, evolution, and evaluation of a second-year undergraduate course on professional software development practices. The course design arose from two properties of a curriculum revision: the removal of redundancy across Discrete Mathematics, Data Structures, and Algorithms coursework and the identification of desired skills for students entering the upper-division courses. A research-informed design for the course incorporates code quality, version control, teamwork, user-centered design, risk management, design thinking, and reflective practice, presented in keeping with the values of agile software development. We describe the evolution of the course over its six years of implementation, including a transition from a Java-specific textbook to a more generic book about code quality and the transition from a six-week to a nine-week project. The course has become a linchpin for mid-major assessment of students' software development skills, and we discuss the strengths, weaknesses, and results of our assessment strategy. We provide a reflection of the role this course has had within our program and advice for those who might wish to adopt or adapt this design.", "authors": [{"name": "Paul Gestwicki", "affiliation": "Ball State University, Muncie, IN, USA"}], "tags": ["agile software craftsmanship", "test-driven development", "clean code", "assessment", "course design", "education", "higher education"]}, {"title": "Session details: Paper Session: Science Education", "link": "https://dl.acm.org/doi/10.1145/3247828", "abstract": "No abstract available.", "authors": [{"name": "Suzanne Matthews", "affiliation": "United States Military Academy"}], "tags": []}, {"title": "Low-Cost Programmable Air Quality Sensor Kits in Science Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159569", "abstract": "We describe our citizen science approach and technologies designed to introduce students in upper secondary schools to computational thinking and engineering. Using an Arduino microcontroller and low-cost sensors we have developed the air:bit, a programmable sensor kit that students build and program to collect air quality data. In our course, students develop their own research questions regarding air quality before using their own air quality sensor kit to answer their respective questions. This project combines electronics and coding with natural sciences providing a truly interdisciplinary course. We have open-sourced the teaching materials including the building and coding instructions. In addition, students can contribute to our web-based platform for storing, visualizing, and exploring the collected air quality data. It also provides an open API for anyone to download air quality data collected by the students. Through the website, available at airbit.uit.no, students are motivated to contribute air quality data open to the public. We describe lessons learned from our pilot project in a Norwegian upper secondary school and how we are deploying it in 10 schools across Northern Norway. In the pilot, students successfully built and coded the air:bits, and after two months of data collection they could correctly describe local patterns in the air quality. We believe that by combining electronics and coding with the natural sciences we motivate students to engage in all scientific disciplines.", "authors": [{"name": "Hedinn Gunhildrud", "affiliation": "Science Centre of Northern Norway, Troms\u00f8, Norway"}, {"name": "Joachim Sveia Knutsen", "affiliation": "Kongsbakken Videreg\u00e5ende Skole, Troms\u00f8, Norway"}, {"name": "Nina Angelvik", "affiliation": "UiT The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Lars Ailo Bongo", "affiliation": "UiT The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Bj\u00f8rn Fjukstad", "affiliation": "UiT The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Morten Gr\u00f8nnesby", "affiliation": "UiT The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Maria Wulff Hauglann", "affiliation": "UiT The Arctic University of Norway, Troms\u00f8, Norway"}], "tags": ["electronics", "air-quality", "microcontroller", "computer science", "open-source", "education"]}, {"title": "A Biology-themed Introductory CS Course at a Large, Diverse Public University", "link": "https://dl.acm.org/doi/10.1145/3159450.3159538", "abstract": "We present the curriculum and evaluation of a pilot Biology-themed CS1 course offering at a large public university. Inspired by Harvey Mudd's CS 5 Green, we adapt CS1 + Bio to fit the needs of our student body, which is much more typical for those US institutions that produce the bulk of the nation's CS undergraduate degrees. This course was team-taught by a computer science professor and a biology professor, and combined typical CS1 topics with relevant biology content. Our initial offering attracted students who would not otherwise have taken CS1, and was the only one of our three CS1 courses where more students reported planning to major in CS after the course than before it.", "authors": [{"name": "Rachel Poretsky", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Cynthia Taylor", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Robert Sloan", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Tanya Berger-Wolf", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Boris Igic", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["contextualized cs", "CS1 + biology", "CS + X", "CS1"]}, {"title": "Programming the Central Dogma: An Integrated Unit on Computer Science and Molecular Biology Concepts", "link": "https://dl.acm.org/doi/10.1145/3159450.3159590", "abstract": "Much of modern biology requires quantitative and computational skills for the proper analysis of large-scale datasets, and there is a recognized need for computational training in undergraduate biology programs. This experience report describes a four-week unit designed to introduce fundamental computer science concepts and molecular biology concepts in an integrated fashion. The unit serves as the first four weeks of an introductory course taught within the Biology Department at an undergraduate institution, and is designed to introduce computational thinking to non-computational science majors. Survey results reveal that the course has attracted students from all years (first years through seniors), the majority of students have been women, and students have large self-perceived learning gains in computer science concepts. The unit shows promise for engaging non-computational students through applications in introductory molecular biology. Materials are available at http://www.reed.edu/biology/courses/bio131/resources.html.", "authors": [{"name": "Anna Ritz", "affiliation": "Reed College, Portland, OR, USA"}], "tags": ["computational thinking", "undergraduate education", "computational biology", "introductory programming"]}, {"title": "Session details: Paper Session: Visualization", "link": "https://dl.acm.org/doi/10.1145/3247829", "abstract": "No abstract available.", "authors": [{"name": "Cliff Shaffer", "affiliation": "Virginia Tech"}], "tags": []}, {"title": "PVC: Visualizing C Programs on Web Browsers for Novices", "link": "https://dl.acm.org/doi/10.1145/3159450.3159566", "abstract": "Many researchers have proposed program visualization tools for memory management because this is a challenging concept for novice programmers. For example, SeeC and PythonTutor (PT) are state-of-the-art tools for C languages. However, three problems hinder the use of these and other tools: capability (P1), installability (P2), and usability (P3). (P1) Tools do not fully support dynamic memory allocation or File Input / Output (I/O) and Standard Input. (P2) Novice programmers often have difficulty installing SeeC due to its dependence on Clang and setting up an offline environment that uses PT. (P3) Revisualization of the modified source code in SeeC requires several steps. To alleviate these issues, we propose a new visualization tool called PlayVisualizerC (PVC). PVC, which is designed for novice C language programmers to provide solutions (S1-3) for P1-3. S1 offers complete support for dynamic memory allocation, standard I/O, and file I/O. S2 involves installation in a user web browser and its server program is initiated by executing a jar file. S3 reduces the steps required for revisualization. To evaluate PVC, we conducted an experiment and questionnaire involving 30 students. Students using PVC solved a set of four programming tasks on average 1.7 times faster and with 19% more correct answers than those using a current state-of-the-art visualization tool.", "authors": [{"name": "Hironori Washizaki", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Yoshiaki Fukazawa", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Ryosuke Ishizue", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Kazunori Sakamoto", "affiliation": "National Institute of Informatics, Tokyo, Japan"}], "tags": ["c language", "visualization", "web application"]}, {"title": "Instructor Perspectives on Comparative Heatmap Visualizations of Student Engagement with Lecture Video", "link": "https://dl.acm.org/doi/10.1145/3159450.3159487", "abstract": "The use of online video in learning environments is prevalent -- serving in a variety of roles, such as multimedia textbook, video lecture, or medium for documenting student coursework. For instructors who employ video as a learning material, it is becoming increasingly important to gain a deeper understanding of the fit of video content across student cohorts, as well as the impact on student engagement, learning, and success. In order to better understand instructor interests and needs in this regard, we developed a learning analytics visualization tool that links data on student viewing and video interactions with student demographics and performance measures. Instructors can use the tool to generate and compare correlated heatmap visualizations representing student engagement across segments of the video. This paper describes an initial user study conducted with instructors in an HCI course context to understand how this kind of feedback can inform their use of video in the classroom. Results show that instructors find such feedback very useful across a variety of use cases.", "authors": [{"name": "Jinyue Xia", "affiliation": "University of North Carolina at Charlotte, Charlotte, USA"}, {"name": "David C. Wilson", "affiliation": "University of North Carolina at Charlotte, Charlotte, USA"}], "tags": ["learning analytics", "video", "visualization"]}, {"title": "Supporting Self-Regulated Learning with Visualizations in Online Learning Environments", "link": "https://dl.acm.org/doi/10.1145/3159450.3159509", "abstract": "In this article, we study how visualizations could be used to support students' self-regulation in online learning. We conducted a randomized controlled trial with three groups: one control group without visualization, one treatment group with textual visualization, and one treatment with graphical visualization with information on peers' average achievement. We studied how different visualizations affect students' academic performance and behavior. We focused on four factors; starting, scheduling, earliness and exercise points, where the first three are related to time management and self-regulation. The last factor measures course performance in terms of completed exercises. Our results suggest that the lowest performing students can benefit from a visualization, whereas the highest performing students are not affected by the presence or absence of a visualization. We also found that visualizations that do not provide the means to compare your own performance with others may even be harmful to performance oriented students.", "authors": [{"name": "Kalle Ilves", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["time management", "CS1", "online course", "self-regulation", "visualization"]}, {"title": "Fostering Meaningful Collaboration in an Interdisciplinary Capstone Course", "link": "https://dl.acm.org/doi/10.1145/3159450.3159625", "abstract": "No abstract available.", "authors": [{"name": "Liz Hutter", "affiliation": "Valparaiso University, Valparaiso, IN, USA"}, {"name": "Halcyon M. Lawrence", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Marguerite Murrell", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Melinda McDaniel", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["agile collaboration", "pedagogy", "capstone interdisciplinary"]}, {"title": "Team-Teaching with Colleagues in the Arts and Humanities", "link": "https://dl.acm.org/doi/10.1145/3159450.3159617", "abstract": "This panel will include experience reports from five computer science faculty members who have team-taught courses with professors from outside the sciences. Specifically, we will discuss lessons learned and best practices with collaborating with faculty from the arts and humanities. Courses that look outward have the potential to broaden participation and promote computing's role in the broader world beyond software engineering concerns. The panelists will highlight how to: find a topic, find a collaborator(s), design the course, maintain rigor in both disciplines, target the right audience, assess how well it worked, and do it more than once.", "authors": [{"name": "Sven Anderson", "affiliation": "Bard College, Annandale-on-Hudson, NY, USA"}, {"name": "David Musicant", "affiliation": "Carleton College, Northfield, MN, USA"}, {"name": "Thomas Way", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Keith O'Hara", "affiliation": "Bard College, Annandale-on-Hudson, NY, USA"}, {"name": "Amber Stubbs", "affiliation": "Simmons College, Boston, MA, USA"}], "tags": ["humanities computing", "computing for all", "team-teaching", "interdisciplinary courses", "arts"]}, {"title": "SIGCSE Special Session: Evaluating CS4All Initiatives---Challenges and Opportunities", "link": "https://dl.acm.org/doi/10.1145/3159450.3159638", "abstract": "The objective of this session is to increase evaluator capacity to study CS education initiatives and to share knowledge and resources with the CS education research community. We plan to use the session to share our own experience as evaluators of the NYC CS4All initiative, and to brainstorm effective strategies and approaches to address the challenges inherent in evaluating such efforts. In the session, we will pay particular attention to identifying and developing reliable and valid measures of teacher, student and district outcomes.", "authors": [{"name": "Cheri Fancsali", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}, {"name": "Rachel Cole", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}, {"name": "Paulina Toro Isaza", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}, {"name": "Wendy Martin", "affiliation": "Education Development Center, New York, NY, USA"}, {"name": "Linda Tigani", "affiliation": "Research Alliance for New York City Schools, New York, NY, USA"}], "tags": ["computer science for all", "k-12 cs education", "cs education research", "evaluation design"]}, {"title": "Five Slides About: Abstraction, Arrays, Uncomputability, Networks, Digital Portfolios, and the CS Principles Explore Performance Task", "link": "https://dl.acm.org/doi/10.1145/3159450.3159645", "abstract": "SIGCSE is packed with teaching insights and inspiration. However, we get these insights and inspiration from hearing our colleagues talk about their teaching. Why not just watch them teach? This session does exactly that. Each of six exceptional educators will be given ten minutes to teach the audience something. After this, the moderator will draw the attention of the audience to particular pedagogical moves that the instruction included. Attendees can see a new approach to introducing a topic or a new pedagogical move. No matter what, we expect attendees will be taking ideas from this session directly back to their teaching! The format is based upon a practice in chemistry of sharing \"Five Slides About,\" which introduce a topic in a novel or concise way (https://www.ionicviper.org/types/five_slides_about). Resources from each of the presenters will be shared on the website CSTeachingTips.org.", "authors": [{"name": "Leslie Aaronson", "affiliation": "NCWIT, Boulder, CO, USA"}, {"name": "Jeffrey Forbes", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Zachary Dodds", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Eric Allatta", "affiliation": "Academy for Software Engineering, New York, NY, USA"}, {"name": "Kyla McMullen", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["teaching demonstrations", "innovative teaching", "pedagogy"]}, {"title": "Session details: SRC Session", "link": "https://dl.acm.org/doi/10.1145/3247830", "abstract": "No abstract available.", "authors": [{"name": "Jessica Schmidt", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "A Four Point Student-Led Strategy for Attracting Diverse Small College Commuter Campus Students to Computer Science: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162331", "abstract": "Currently, there is a push for integrating computer science education and computational thinking into the classroom. For example, major local and national organizations such as CS4ALL: NYC and Code.org aim to expose all students, including typically underrepresented groups, to computer science education nurturing students' intrinsic motivation. Furthermore, current research indicates that first-exposure to computer science is an important deciding factor as to whether students are open to computer science in future endeavors. Being one of the most diverse campuses in the nation, and a commuter campus, The State University of New York (SUNY) Old Westbury provides a unique opportunity to pilot how one might go about creating a motivating first exposure to computer science. Through a four point student-led strategy, we explore student pre-conceived attitudes towards computer science and programming to better understand what strategies might increase CS engagement. In order to do this, we host workshops revolving around creative computer science activities such as 3D game design and multimedia art projects. During these workshops, we collect pre and post questionnaires and use their data to gain insight into the Old Westbury student body's notions of computer science. Initial analyzed pre-survey data shows that 70% of students thought Computer Science was difficult. However, post-survey data shows that, after the experience, approximately 90% of students want to take additional workshops involving Computer Science.", "authors": [{"name": "Gabrielle I. Zahuantitla", "affiliation": "SUNY Old Westbury, Old Westbury, NY, USA"}, {"name": "Aryanna Holder", "affiliation": "SUNY Old Westbury, Old Westbury, NY, USA"}], "tags": ["workshops", "computer science education", "undergraduate exposure", "game design", "computational thinking"]}, {"title": "A Mental Approach to Software Testing: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162332", "abstract": "Many software engineering students make the transition from an academic setting to professional software development careers. Due to its popularity in the software industry, it is important for students to learn software testing skills and adhere to professional practices to prepare them for their transition and be successful. Software testing is an important skill for students but there are many different approaches that enables students to gain this skill. We created a unique approach that enables students to learn software testing with a unique mentality and developed a tool to make educational assessments and feedback quick and scalable. Our approach is implemented within an undergraduate classroom where students are separated into two groups. Each group develops software tests through Test-Driven Development (TDD) with a different mentality. With this approach, we hope to see an improvement in the quality of software that students produce.", "authors": [{"name": "Pedro Valdivia", "affiliation": "California State University, Chico, Chico, CA, USA"}], "tags": ["software development", "test driven development (tdd)", "unit testing", "software testing"]}, {"title": "Software Engineering Education: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162333", "abstract": "Software Engineering courses are essential for undergraduates to achieve a smooth transition from higher education to a career. However, many of these courses encounter complications that forbid them from meeting their goals such as: Real products and customers, project duration, software sophistication and more. At Chico State, we have implemented the Tech Startup Model in which the Software Engineering students partner with entrepreneurship students to allow for more collaboration and the creation of a customer-employee relation to address some of these issues. This model utilizes both Lean Startup as well as Agile Development to continuously test a student's ability to adapt to the customer's needs. The data accumulated from the past couple of semesters allowed us to analyze student behavior when exposed to the Tech Startup Model as opposed to other methods tested from previous semesters.", "authors": [{"name": "William Zamora", "affiliation": "California State University, Chico, Chico, CA, USA"}], "tags": ["software", "agile development", "engineering", "education", "lean startup", "foss"]}, {"title": "Air Pollution Data Analysis Platform for Computer Science Education Projects: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162334", "abstract": "We have developed an applied computer science project to introduce students in upper secondary schools to computer science and engineering. In the project, students build and code their own air quality sensor kits before investigating a research question by analyzing their collected data. An important part of the analysis is to investigate the air quality data in context of other data sources, such as data from other sensor kits or climate data. The task of curating such datasets are too complex for such an introductory project and it therefore requires a specialized service. In this poster we present the design and implementation of an air pollution data analysis platform that stores air quality measurements collected by students, combines it with open environmental data, and provides students with an open interface to analyze their data. During spring 2018, ten school classes from Northern Norway are going to use the platform, online at airbit.uit.no, to study air quality patterns across Northern Norway. We also provide the source code for the platform at the same address.", "authors": [{"name": "Nina Angelvik", "affiliation": "UiT The Arctic University of Norway, Troms\u00f8, Norway"}], "tags": ["air quality", "open source", "cloud", "computational thinking", "microcontrollers"]}, {"title": "Developing a Blocked Based Language for the Adafruit Circuit Playground: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162335", "abstract": "With the integrated use of technology in daily activities, the need for more end-users who can program solutions in their domain of expertise is increasing. There is also growing interest to introduce children to coding activities that are engaging and appropriate for their experience level. Additional resources are needed that initiate and teach computer science in a way that incorporates hardware components to children and first-learners. This poster introduces a new block-based programming environment (called CodePlayground) built from Google's Blockly Developer Tools. The Blockly library injects an editor into an HTML file that represents coding concepts as interlocking blocks, and then outputs the blocks as syntactically correct code. CodePlayground was designed to be compatible with the Adafruit Circuit Playground, which was released as an all-in-one low cost device that can be used for education. CodePlayground allows teachers to utilize the Circuit Playground as an educational device that includes both hardware and software elements. The Circuit Playground uses the firmata provided by Adafruit to communicate with Python code generated by CodePlayground. Blockly Developer Tools was used to create the frame for the language and Atom was used to insert the specialized JavaScript for code generation. After the language was complete, 90 sample programs were created and evaluated to demonstrate the ability of CodePlayground to serve as a programming environment for first learners.", "authors": [{"name": "Blayde Dill", "affiliation": "University of Alabama, Jasper, AL, USA"}], "tags": ["adafruit circuit playground", "computer science education", "block-based languages"]}, {"title": "Weather Radar Algorithm Development using Google Blockly: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162336", "abstract": "NADER (NEXRAD Algorithm Development Environment) is a desktop-based programming environment that allows users to build algorithms for the analysis of NEXRAD level-II Doppler weather radar data. NEXRAD level-II data provides a high-resolution 3D mapping of precipitation intensity and wind speeds around a radar site. These datasets are available from NCEI (National Centers for Environmental Information, a division of the National Oceanic and Atmospheric Administration) both from archives and in real-time, providing nearly endless opportunities for automated algorithmic analysis of weather features. The language provided by NADER is block-based and is built on the powerful Google Blockly platform. In addition to blocks for logic, math, and control flow functions, NADER also presents the user with a succinct set of blocks providing abstractions for common radar data structures. NADER also includes a visualization tool for level-II data, allowing users to clearly see exactly what data is passed into their algorithms and exactly what data is output. With NADER, users can develop a huge variety of algorithms' for example, an algorithm for hail detection, an algorithm for tracking snowfall, or even an algorithm for estimating tornado damage. NADER strives to accomplish two main objectives. One objective is to provide beginning programmers with a straightforward programming environment with an intriguing, real-life application. The other objective is to provide meteorology experts with a rapid-feedback prototyping environment for developing new algorithms.", "authors": [{"name": "Eric Tilley", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["meteorology", "computer science education", "block-based programming"]}, {"title": "Toward Continuous Assessment of the Programming Process: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162337", "abstract": "Assessment of software tends to focus on postmortem evaluation of metrics like correctness, mergeability, and code coverage. This is evidenced in the current practices of continuous integration and deployment that focus on software's ability to pass unit tests before it can be merged into a deployment pipeline. However, little attention or tooling is given to the assessment of the software development process itself. Good process becomes both more challenging and more critical as software complexity increases. Real-time evaluation and feedback about a software developer's skills, such as incremental development, testing, and time management, could greatly increase productivity and improve the ability to write tested andcorrect code. My work focuses on the collection and analysis of fine-grained programming process data to help quantitatively model the programming process in terms of these metrics. I report on my research problem, presenting past work involving the collection and analysis of IDE event data from junior level students working on large and complex projects. The goal is to quantify the programming process in terms of incremental development and procrastination. I also present a long-term vision for my research and present work planned in the short term as a step toward that vision.", "authors": [{"name": "Ayaan M. Kazerouni", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["programming process", "testing behavior", "repository mining", "educational data mining"]}, {"title": "Quantum Artificial Intelligence for Natural Language Processing Applications: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162338", "abstract": "Natural Language Processing and Semantic Web include several NP complete/hard problems that are intractable for classical computing machines. Even though distributed computing has provided remarkable advances (more precisely in dealing with big data), non-decomposable NP problems are still intractable in many real-world applications. And, from quantum computing perspective, solving complex problems with universal quantum gates requires developing of quantum algorithms. Considering commercializing quantum annealing machines by D-Wave, achieving global optimum for discrete optimization problems has been realized. In this study, a novel approach has been introduced to convert symbolic AI problems into quadratic unconstrained binary optimization (QUBO) form. More narrowly, this method represents classification of text documents (fragments) as optimizing a QUBO function. After embedding the train corpus into a QUBO function, D-Wave quantum annealer is used to classify new observations with finding the minimum energy level of the system.", "authors": [{"name": "Ramin Ayanzadeh", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}], "tags": ["text-mining", "machine learning", "semantic web", "quantum artificial intelligence", "natural language processing"]}, {"title": "Modelling Correct Operation of Webcams for Security Purposes: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162339", "abstract": "In October of 2016, we saw a Denial of Service (DoS) attack, the Mirai botnet, which made use of machines on a global scale, primarily targeting often-unprotected devices like webcams and routers. Due to the widespread use of the Internet of Things (IoT), and, specifically, webcams, the attack surface available to malicious actors has increased dramatically. Whereas some researchers tackle this problem by measuring and increasing the efficiency of existing Intrusion Detection Systems (IDSs) or by creating models for the purpose of characterizing cyber-attacks, such solutions do not investigate the problem of identifying when a system itself is behaving under incorrect operation. Through our research, we established a set of stochastic models that are able to accurately and efficiently model the correct operation and behavior of webcams. In order to verify the efficacy and validity of such models, we ran a multitude of normal-operation scenarios and cyber-attacks against webcams using an isolated network. Using the data from these emulated experiments, we correlated network traffic data and audit logs to verify the correctness and accuracy of our models.", "authors": [{"name": "Xenia Mountrouidou", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Blaine Billings", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["webcam", "behavior model", "denial of service attack", "network security", "systems security"]}, {"title": "Study Genie: An Intelligent and Collaborative Web-based Study Platform (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162340", "abstract": "Research has shown that the cheat sheet preparation process helps students with performance in exams. However, results have been inconclusive in determining the most effective guiding principles in creating and using cheat sheets. The traditional method of collecting and annotating cheat sheets is time consuming and exhaustive, and fails to capture students' preparation process. This work examines the development and impacts of a new web-based study preparation tool, Study Genie, supporting collaborative note creation, editing, sharing, and cheat sheet organization. This new educational technology enables big-data learning analytics, permitting quantitative data modeling on connecting formal and informal digital learning footprints. Study Genie also systematically automates cheat-sheet quality evaluation, which traditionally could only have been done qualitatively. A classroom study was conducted to measure the technology and learning effects in an introductory computer science programming course. Results suggest that actions associated with editing and organizing cheat sheets are positively correlated with exam performance, and that there is a significant difference between the activity of high-performing and low-performing students. Through these results, Study Genie presents itself as an opportunity for mass data collection, providing insight into the assembly process rather than just the finished product in cheat sheet creation.", "authors": [{"name": "Jiaqi Wu", "affiliation": "Arizona State University, Tempe, AZ, USA"}, {"name": "Terry Wen", "affiliation": "Arizona State University, Tempe, AZ, USA"}], "tags": ["cheat sheet", "learning analytics", "computer science", "educational technology", "study genie", "web application"]}, {"title": "Automation for Instruction Enhancing Feedback: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162341", "abstract": "Automated feedback needs instructor input to be most effective. The increasing demand in computing education necessitates automated feedback systems for teaching programming. However, most current automated feedback tools do not incorporate instructor input. Great strides are being made with identification and code edit steps for automated student feedback, but tools for instructor crafted feedback are lacking in the field of computing. My research, currently targeted at novice programmers aims to close that gap with a hybrid approach of a teacher in the loop feedback system I facilitate writing instructor feedback delivered to students in an automated fashion to give meaningful, instruction enhancing feedback. I also evaluate these mechanisms in classrooms by measuring learning gains, student perception, and other metrics.", "authors": [{"name": "Luke Gusukuma", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["automated feedback", "cs1", "knowledge components", "assessment", "instructional design", "cs education"]}, {"title": "Social Motivators and Inhibitors for Women Entering Software Engineering through Coding Bootcamps vs. Computer Science Bachelor's Degrees: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162342", "abstract": "The gender disparity in technology related fields is well known and well documented. Only 18% of computer science undergraduates and 26% of computer science professionals are women. Despite numerous interventions in the past decade, there is still not gender parity in the undergraduate pipeline. However, 43% of post-baccalaureate \"coding bootcamp\" participants were women in 2016, indicating that this population may have different characteristics, attitudes, and mindsets than younger women and girls. In this project, the authors have investigated these changes in gender role perceptions that create barriers for girls but are seemingly resolved for some adult women. We hypothesize that older women come to view their own abilities as well as the impact of failure differently than girls and younger women. By recruiting a subject pool of women who have entered the computer science profession through traditional baccalaureate as well as non-traditional bootcamp pathways and posing reflective as well as current questions in semi-structured interviews we assess the changes in attitudes regarding the subjects' self-efficacy and mindset with respect to technical work. From these findings, we hope to identify triggers and possible interventions.", "authors": [{"name": "Sherry Seibel", "affiliation": "Simmons College, Boston, MA, USA"}], "tags": ["gender disparities", "coding bootcamps", "women in technology"]}, {"title": "Intelligent Group Suggestions Based on Students' Conceptual Understanding: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162343", "abstract": "Collaborative learning can be beneficial for students, but its success is highly dependent on the characteristics of the students grouped together. Structuring group interactions enhances the effectiveness of collaborative learning [1] and therefore the structuring must be done appropriately. Creating successful groups is challenging for instructors, who generally do not have the ability to hand-select groups. We have created a system to dynamically recommend student groups for short-term collaboration. Instructors can request group suggestions based on various criteria related to students' performance on assessment materials. This system creates groups based on different pedagogical theories we find to be salient to group learning.", "authors": [{"name": "Elisabeth Kimmich Mitchell", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Toby Dragon", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["computer supported collaborative learning (cscl)", "intelligent tutoring systems (its)", "concept maps", "group formation"]}, {"title": "Below C Level: A Simulator for Visualizing x86-64 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162344", "abstract": "Students often encounter assembly language during the course of their education as part of learning about the low-level operation of computer systems. While there are many assembly languages ranging from simple to complex, x86-64 is widely used in introductory level computer systems courses. Unfortunately, students often have difficulty visualizing the execution of an x86-64 program. Interactions between instructions, relevant registers, and the effect that instructions have on memory are all concepts that students struggle to understand. While students can use GDB or other debuggers to help them step through the execution of a program, there are currently no x86-64 simulators aimed at introductory computing students.\nBelow C Level (BCL) is an x86-64 simulator aimed at helping novices overcome the barriers to learning this challenging language. BCL visualizes program state, specifically the program stack and register file in order to assist novice x86-64 programmers in tracing the execution of their programs.\nOne of the primary motives for the creation of BCL was the desire for a simulator with a simple and intuitive interface that enables the user to spend more time focusing on the task at hand rather than attempting to understand a complex program. BCL provides this simple interface, which allows users to view firsthand the effects their code has upon the program stack and registers.", "authors": [{"name": "Caitlin Fanning", "affiliation": "University of San Diego, San Diego, CA, USA"}], "tags": ["simulator", "visualization", "assembly language", "x86-64"]}, {"title": "Summit Selection: Designing a Feature Selection Technique to Support Mixed Data Analysis (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162345", "abstract": "Since data size is continuously increasing, analyzing large-scale data is considered as one of the major research challenges in computational data analysis. Although researchers have proposed numerous approaches, most of them still suffer from analyzing the data efficiently. To overcome the limitation, identifying the optimal number of features is critical for analyzing the data. In this paper, we introduce a newly designed feature selection technique, called Summit Selection, which boosts model performances by determining optimal features in noisy mixed data. First, testing all features is conducted to determine an initial base feature that satisfies a pre-defined criterion for maintaining the highest performance score. Then, a continuous evaluation is managed to build a model by successively adding or removing features based solely on the performance score tested with chosen computational models. To show the effectiveness of our proposed technique, a performance evaluation study was conducted to determine fraudulent activities in the UCSD Data Mining Contest 2009 Dataset. We compared our proposed technique with different feature extraction techniques such as PCA, ANOVA test, and Mutual Information (MI). Specifically, multiple machine learning techniques such as Decision Tree, Random Forest, and k-Nearest Neighbor (KNN) are tested with the feature extraction techniques to determine performance differences. As results, we found that our proposed technique showed about 8.78% performance improvement in detecting fraudulent activities. Since our technique can be extended to a cloud computing environment, we also performed a scalability testing with a known distributed cloud computing model (i.e., Apache Spark).", "authors": [{"name": "Duc Manh Doan", "affiliation": "University of the District of Columbia, Washinton, DC, USA"}, {"name": "Clayton Gordon", "affiliation": "University of the District of Columbia, Washinton, USA"}, {"name": "Dong H. Jeong", "affiliation": "University of the District of Columbia, Washinton, USA"}], "tags": ["cloud computing", "feature selection", "data analysis"]}, {"title": "Creating a Classroom Programming Lab Using Android and Blockly: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162346", "abstract": "Current tools required for teaching computer science at any level of education are expensive and require a dedicated lab. With an increasing desire for early computer science education, pairing with the expensive costs for computers, there is an increasing need for a solution. In this paper, I will investigate a mobile-based solution to more effectively, both educationally and financially, solve this problem. I will describe the system and how it could be used as an effective solution.", "authors": [{"name": "Don Kerrigan", "affiliation": "University of West Florida, Pensacola, FL, USA"}], "tags": ["visual programming", "google blockly", "mobile devices", "android", "k-12 education", "web application"]}, {"title": "Change Impact using Dynamic History Analysis: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162347", "abstract": "As the complexity of software systems grows, it becomes increasingly difficult for developers to be aware of all the dependencies that exist between a system's artifacts (e.g., its files or methods). Change impact analysis has been proposed as a technique to overcome this problem, as it suggests to a developer relevant source-code artifacts related to his/her changes. Association rule mining has shown promise for determining change impact by uncovering relevant patterns in a system's change history.\nState-of-the-art change impact mining typically makes use of a history of tens of thousands of transactions. This makes a priori generation of all possible rules costly and thus led to the introduction of targeted association rule mining, which only generates rules for transactions relevant to a particular query. Because the set of relevant transactions is much smaller than the complete history, these algorithms are more efficient. However, they still require processing the history's complete set of relevant transactions.\nOur work considers the dynamic selection of relevant transactions. It can be viewed as a further constrained version of targeted association rule mining, in which as few as a single relevant transaction might be considered when determining change impact. This initial look at dynamic algorithms empirically studies seven algorithm families. These are referred to as families because some are parameterized and thus give rise to multiple algorithms. Using over 20,000 queries from 19 systems, we empirically show that dynamic algorithms are viable, can be just as applicable as start-of-the-art algorithms, and even outperform them for certain queries.", "authors": [{"name": "Sydney Pugh", "affiliation": "Loyola University Maryland, Baltimore, MD, USA"}, {"name": "David Binkley", "affiliation": "Loyola University Maryland, Baltimore, MD, USA"}], "tags": ["historical co-change", "history", "software change impact analysis", "change recommendation", "targeted association rule mining", "evolutionary coupling", "algorithms"]}, {"title": "WebBCI: An Electroencephalography Toolkit Built on Modern Web Technologies (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162324", "abstract": "In recent years, advances in electroencephalography (EEG) brain-computer interfaces (BCIs) have led to the development of applications that allow users to control prosthetic arms, fly drones, and play video games using only their thoughts. However, these use cases are occasionally restricted to laboratory environments. As BCI software is often designed to work with research-grade equipment, it can be inaccessible to the average consumer. This research poster describes why JavaScript-based BCIs would be more accessible to developers and students. We also discuss the current issues with JavaScript-based BCIs and introduce a new library, WebBCI, which is designed to take the initial step towards addressing these issues. Example BCI systems that can be created with WebBCI are described in this poster, along with the outputs of these systems given sample EEG data.", "authors": [{"name": "Pierce Stegman", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["javascript", "brain-computer interface (bci)", "electroencephalography (eeg)"]}, {"title": "Reported Development of Computational Thinking, Through Computer Science and Programming, and its Benefits for Primary School Students: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162325", "abstract": "Across the world there has been a paradigm shift in school education, as many countries are incorporating Computer Science (CS), programming, and Computational Thinking (CT), into their K-12 curriculums for the first time. In 2018 these subjects will be introduced to the New Zealand (NZ) Digital Technologies curriculum under the subject of \"Computational Thinking\". Like the majority of countries who have introduced these topics, NZ faces challenges in preparing teachers, and in successfully implementing a curriculum which achieves its educational goals. To support this curriculum, we have been conducting studies in primary schools across NZ, trialing resources with teachers and students.\nBuilding on a 2014 exploratory study on CS and programming in intermediate school, this project investigates the existing assumptions around CT education in K-12. It aims to address the specific questions: How do we teach CT concepts and approaches to primary aged students? If they learn CT, does it have the expected positive impacts on students learning? And, what other positive and negative impacts does this have?\nThroughout 2015 and 2016 a study was conducted with 18 primary school teachers from across NZ, who used CS Unplugged and educational programming languages in their classrooms. Teachers submitted feedback on these classes through an online form, and participated in semi-structured interviews. The feedback responses and interview transcripts were analysed using a thematic approach, which revealed many positive impacts on students general learning, minimal negative impacts, and observations of CT development.", "authors": [{"name": "Caitlin Duncan", "affiliation": "University of Canterbury, Christchurch, New Zealand"}], "tags": ["programming education", "primary school", "computational thinking", "problem solving"]}, {"title": "Developing Software Engineers: A Study of Professionalization in a CS Senior Capstone (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162326", "abstract": "My research investigates the role of practical experience on professionalization and confidence in students of software engineering during their university-to-work transition. Practical experience comes in many forms, including internships, capstone projects, and \"year-in-industry\" experiences. These hands-on opportunities place the learner into an authentic role using professional methods and tools to accomplish legitimate work. Improved understanding of the positive and negative influences of practical experience during the university-to-work transition may support ongoing discussions of the potential for integrating such experiences earlier in the learning pipeline. I apply a mixed-methods approach to studying the implementation of a computer science software engineering capstone course at an R1 research institution. My work integrates a case study of the artifacts produced during the capstone, qualitative interviews of student reflections about their experiences in the capstone, and a pilot run of a quantitative survey on professional identity and behaviors. Taken together, the three methods shed light on different roles that professional experience plays during the university-to-work transition.", "authors": [{"name": "Rick Parker", "affiliation": "University of Colorado, Boulder, CO, USA"}], "tags": ["senior capstone", "practical experience", "qualitative interviews", "community of practice", "university to work transition", "educational artifacts"]}, {"title": "BeginToReason: An Introduction to Symbolic Reasoning (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162328", "abstract": "Computer science (CS) students often evaluate the behavior of the code they write by running it on specific inputs, studying the outputs, and then inductively reasoning to a more general understanding of the code. This is a good starting point in the student's career, but successful graduates must be able to reason deductively about the code they create and encounter. They must be able to reason about the code on all inputs, without running the code. This paper describes an online system named \"BeginToReason\" that is designed to introduce symbolic reasoning, and the results of its use. One hundred and fourteen students were asked to use BeginToReason after receiving no prior instructions on formal reasoning. Several weeks later, a question on their final exam tested their ability to utilize formal reasoning. Across all question variations presented to the students, they completed an average of at least 80% correctly indicating that the online tool is a useful tool for teaching formal reasoning. Subsequent analysis of the results indicates that student responses may have been influenced by the phrasing of the questions as well as their use of concrete numerical examples to solve the problem.", "authors": [{"name": "Megan Fowler", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Tim Schwab", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["symbolic reasoning", "reasoning tool", "verification engine", "online system"]}, {"title": "Improve Feedback Mechanism in Programming Assessment Systems with Progress Indicators and Reward to Foster Students' Growth Mindset: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162329", "abstract": "When students learn programming, the assignment feedback information from current automatic programming assessment systems, such as Web-CAT [1] is often negative, objective, and unfriendly. These feedback information can easily frustrate students to lose interest in programming related activities. The negative feedback information can have possible serious consequences to students. We work to improve current feedback mechanism in mindset perspective: encourage students by positive feedback with a group of fifteen progress indicators and possible reward. The fifteen progress indicators were designed and implemented based on students' sequential programming submissions. These fifteen indicators include seven general purpose indicators about various aspects when students construct solutions for assignments; eight other software testing indicators concentrate on students' progress when students self-checking their code [3]. We did statistical analysis for these fifteen indicators' suitability to a collection of programming assignments data set including 257 students. In order to validate fifteen progress indicators' effectiveness, we also apply a student performance model: Recent-Performance Finite Analysis model (R-PFA) [4] to the same programming assignment data set we used before. We calculate R-PFA model's prediction accuracy and apply learning curves analysis. In learning curve analysis, eight software test indicators demonstrate students gradually learn positively when they work on their assignment submissions. Based on progress indicators information, we plan to give students possible reward when they make progress. We will research on reward mechanism, reward format, and timing, etc. In this way, moves students to growth mindset [2] - belief that hard work and practices can improve their skills and capabilities.", "authors": [{"name": "Zhiyi Li", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["indicator", "effort", "feedback", "reward", "growth mindset", "automatic grading", "fixed mindset", "r-pfa model"]}, {"title": "Teaching Programming Style in CS 1 with Erroneous Examples: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162330", "abstract": "Students in introductory computer science courses (CS 1) typically receive little formal instruction in proper programming style. They may gain limited understanding of proper style by reading code samples, observing an instructor write code with proper style, or by receiving feedback on homework submissions. In our research, we evaluate the effectiveness of an alternative pedagogical approach in which students are provided brief instruction on proper style and are then asked to critique examples of improper style. This research answers three questions: First, when a student knows style will be graded, is proper style utilized? Second, does the student's ability to use proper style correlate with academic performance? Third, do our exercises increase the student's ability to employ proper style? We investigated the first two of these questions using data from three CS 1 courses with distinct forms of style assessment: 1) no style grading and no feedback; 2) automated style grading with feedback; and 3) hand-graded style with feedback. We investigated the third research question, by augmenting the first two course forms with our pedagogical approach. In all courses, a CS 1 style guide was distributed at the beginning of the term and similar lecture examples were used. We found that grading of style is necessary to motivate students, and that our approach shows some promise in increasing ability to use proper style.", "authors": [{"name": "Adam Koehler", "affiliation": "University of California, Riverside, Riverside, CA, USA"}], "tags": ["cs 1", "programming style", "erroneous examples", "computer science education"]}, {"title": "Session details: Paper Session: Auto-graders", "link": "https://dl.acm.org/doi/10.1145/3247831", "abstract": "No abstract available.", "authors": [{"name": "Paul Cao", "affiliation": "University of California, San Diego"}], "tags": []}, {"title": "Providing Meaningful Feedback for Autograding of Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/3159450.3159502", "abstract": "Autograding systems are increasingly being deployed to meet the challenge of teaching programming at scale. We propose a methodology for extending autograders to provide meaningful feedback for incorrect programs. Our methodology starts with the instructor identifying the concepts and skills important to each programming assignment, designing the assignment, and designing a comprehensive test suite. Tests are then applied to code submissions to learn classes of common errors and produce classifiers to automatically categorize errors in future submissions. The instructor maps the errors to concepts and skills and writes hints to help students find their misconceptions and mistakes. We have applied the methodology to two assignments from our Introduction to Computer Science course. We used submissions from one semester of the class to build classifiers and write hints for observed common errors. We manually validated the automatic error categorization and potential usefulness of the hints using submissions from a second semester. We found that the hints given for erroneous submissions should be helpful for 96% or more of the cases. Based on these promising results, we have deployed our hints and are currently collecting submissions and feedback from students and instructors.", "authors": [{"name": "Monica Babe\u015f-Vroman", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Georgiana Haldeman", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Danielle Yucht", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Jay Shah", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Andrew Tjang", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Stephen Bartos", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Thu D. Nguyen", "affiliation": "Rutgers University, Piscataway, NH, USA"}], "tags": ["concepts/skills-based hints", "autograding", "error categorization"]}, {"title": "ArTEMiS: An Automatic Assessment Management System for Interactive Learning", "link": "https://dl.acm.org/doi/10.1145/3159450.3159602", "abstract": "The increasing number of students in computer science courses leads to high efforts in manual assessment of exercises. Existing assessment systems are not designed for exercises with immediate feedback in large classes. In this paper, we present an AuTomated assEssment Management System for interactive learning.\nArTEMiS assesses solutions to programming exercises automatically and provides instant feedback so that students can iteratively solve the exercise. It is open source and highly scalable based on version control, regression testing and continuous integration. ArTEMiS offers an online code editor with interactive exercise instructions, is programming language independent and applicable to a variety of computer science courses. By using it, students gain experiences in version control, dependency management and continuous integration.\nWe used ArTEMiS in 3 university and 1 online courses and report about our experiences. We figured out that ArTEMiS is suitable for beginners, helps students to realize their progress and to gradually improve their solutions. It reduces the effort of instructors and enhances the learning experience of students.", "authors": [{"name": "Andreas Seitz", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Munich, Germany"}, {"name": "Stephan Krusche", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Munich, Germany"}], "tags": ["version control", "continuous integration", "programming exercises", "online courses", "in-class exercises", "online editor", "interactive exercise instructions", "instant feedback", "automated assessment"]}, {"title": "MRS: Automated Assessment of Interactive Classroom Exercises", "link": "https://dl.acm.org/doi/10.1145/3159450.3159607", "abstract": "Classroom formative assessment augmented with timely and frequent feedback has become one of the most prominent teaching practices in education research. On the context of Computer Science (CS) courses that expose students to the functionality and dynamic aspects of various algorithms, traditionally, students are evaluated by exploring in-class paper-based exercises. In these exercises, they simulate the steps of an algorithm by drawing several instances of a diagram. This traditional approach is time consuming, is inherently difficult for students to express the dynamics of an algorithm, does not allow timely feedback, and restricts the number of exercises that students can practice and receive feedback on. Mobile Response System (MRS) is a software environment that facilitates in-class exercises and their real-time assessment using mobile devices and therefore focuses on addressing many of the above-mentioned problems. In this paper, we present results of eight semester-long studies using MRS in two of the required CS courses at Winston-Salem State University (WSSU). Our experimental evaluation shows the educational benefits of the proposed approach in terms of enhanced student retention of covered concepts, reduced failing rate, and increased student engagement and satisfaction.", "authors": [{"name": "Clay Gloster", "affiliation": "NC A&T State University, Greensboro, NC, USA"}, {"name": "James Etim", "affiliation": "Winston-Salem State University, Winston-Salem , NC, USA"}, {"name": "Debzani Deb", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Muztaba Fuad", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["interactive learning environments", "algorithm visualization.", "real-time assessment", "mobile learning"]}, {"title": "Session details: Paper Session: Computational Thinking #2", "link": "https://dl.acm.org/doi/10.1145/3247832", "abstract": "No abstract available.", "authors": [{"name": "Scott Turner", "affiliation": "University of Wisconsin, Stout"}], "tags": []}, {"title": "Incorporating Computational Thinking in the Classrooms of Puerto Rico: How a MOOC Served as an Outreach and Recruitment Tool for Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159544", "abstract": "This paper intends to share both the experience of teachers and document the research of the design, implementation, and evaluation of a massive open online course (MOOC). The primary purpose of the MOOC was to do outreach and build community to interest teachers from any discipline in Puerto Rico to incorporate Computational Thinking (CT) into their curriculum and peak their interest in Computer Science Education (CSE). Additional objectives were to use CT as a way to build self-efficacy in high school teachers as integrators of this newly gained knowledge while investigators learned the state of CSE and technology integration in schools of Puerto Rico. The MOOC titled Integrating Computational Thinking into the Curriculum was the first free online Professional Development offered to educators in Puerto Rico and has served as the launching board for the Computer Science Teachers' Association (CSTA) in Puerto Rico. This paper will describe the course's development, content and pertinent activities as they relate to the established goals of the project. Finally, it will share some vignettes of the educators' experiences as well as the results of a survey that was administered to 164 participants of the MOOC in its second rendition and had a 32% response rate.", "authors": [{"name": "Patricia Ord\u00f3\u00f1ez Franco", "affiliation": "University of Puerto Rico R\u00edo Piedras, San Juan, PR, USA"}, {"name": "Joseph Carroll-Miranda", "affiliation": "University of Puerto Rico R\u00edo Piedras, San Juan, PR, USA"}, {"name": "Mar\u00eda L\u00f3pez Delgado", "affiliation": "University of Puerto Rico R\u00edo Piedras, San Juan, PR, USA"}, {"name": "Grace Rodr\u00edguez G\u00f3mez", "affiliation": "University of Puerto Rico R\u00edo Piedras, San Juan, PR, USA"}, {"name": "Eliud Gerena L\u00f3pez", "affiliation": "University of Puerto Rico R\u00edo Piedras, San Juan, PR, USA"}], "tags": ["MOOC", "K-12 professional development", "computational thinking", "cultural relevance"]}, {"title": "Increasing Student Self-Efficacy in Computational Thinking via STEM Outreach Programs", "link": "https://dl.acm.org/doi/10.1145/3159450.3159593", "abstract": "This paper describes our experiences developing and teaching two different interventions focused on computational thinking and computer science at a yearly STEM outreach program hosted by a local school district. We describe the creation of our lesson plans, how we worked with experienced and pre-service teachers alike to deliver the lessons, and how we assessed the effectiveness of each intervention. We will discuss our successes and failures, and provide information on our future plans to incorporate more formalized education theory, pedagogy, and research methodology in future years to further this project. Based on our assessment results, we observed statistically significant gains in student self-efficacy with creating computer programs that perform a variety of operations. In addition, students reported a significantly higher understanding of how computer programming can be used in daily life. Our survey also highlighted differences in student self-efficacy between the two interventions, and we discuss possible sources for that result. We discuss observed results based on student groups with various backgrounds, previous STEM experiences, and socioeconomic status.", "authors": [{"name": "Nathan H. Bean", "affiliation": "Kansas State University, Manhattan, KS, USA"}, {"name": "Russell Feldhausen", "affiliation": "Kansas State University, Manhattan, KS, USA"}, {"name": "Joshua Levi Weese", "affiliation": "Kansas State University, Manhattan, KS, USA"}], "tags": ["STEM", "middle school", "outreach", "pedagogy", "self-efficacy", "K-12"]}, {"title": "Introducing Computational Thinking through Non-Programming Science Activities", "link": "https://dl.acm.org/doi/10.1145/3159450.3159520", "abstract": "Many programs offer informal experiences in programming for select students who may qualify or whose parents pay fees for attending. Integrating computational thinking (CT) in the formal classroom setting provides equal opportunities to develop valuable problem-solving skills for all students. However, such integration poses challenges since teachers may have limited experiences in computing and may be pressured by time constraints due to the need to cover Common Core and Next Generation Science Standards (NGSS) as well as district specific initiatives. A 2-year intervention has been designed to target upper elementary level self-contained classrooms to increase teachers' knowledge and ability for integrating CT into science lessons. Twenty teachers from four school districts in Southern California participated in the first year of the project's professional development activities. These schools have varying levels of diversity and socioeconomic status of student populations. Instead of using popular drag-and-drop programming tools such as Scratch or Tynker, the first year of the project focused on key CT concepts and helped teachers connect these concepts with skills important for student success in science activities. This paper reports on the study of the project's impact on student learning of key CT concepts among students from project classrooms. The main elements of the professional development are also described.", "authors": [{"name": "Katherine L. Hayden", "affiliation": "California State University, San Marcos, San Marcos, CA, USA"}, {"name": "Julie Remold", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Youwen Ouyang", "affiliation": "California State University, San Marcos, San Marcos, CA, USA"}], "tags": ["computational thinking", "assessment", "professional development", "upper elementary grades"]}, {"title": "Session details: Paper Session: Databases", "link": "https://dl.acm.org/doi/10.1145/3247833", "abstract": "No abstract available.", "authors": [{"name": "Debra M. Duke", "affiliation": "Virginia Commonwealth University"}], "tags": []}, {"title": "Teaching NoSQL Databases to Undergraduate Students: A Novel Approach", "link": "https://dl.acm.org/doi/10.1145/3159450.3159554", "abstract": "An increase in data tracking by organizations has created a need for systems that can handle a variety of data models at scale. NoSQL databases and Polyglot persistence - the industry's preferred solution to modern data problems is not covered in sufficient detail, if covered at all in the undergraduate curriculum. The paper reports on our experience of introducing NoSQL paradigms using a four-tiered learning model to undergraduate students over the last two years. We believe that our methodology exposes these new ideas in an approachable manner and would provide a great starting point for other programs interested in teaching modern database paradigms and distributed data modeling and processing.", "authors": [{"name": "Sriram Mohan", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, IN, USA"}], "tags": ["databases", "polyglot persistence", "undergraduates", "curriculum", "education", "nosql"]}, {"title": "A Visual Introduction to Conceptual Database Design for All", "link": "https://dl.acm.org/doi/10.1145/3159450.3159555", "abstract": "The goal of the presented pedagogical tool is to engage all disciplines in learning how to understand their data and the relationships among the data, and subsequently representing those data in a relational database. The tool provides a visual introduction to important concepts in database design using Entity Relationship Diagrams as the primary visual design model, relating these same concepts to other models, such as UML diagrams and the crow's feet notation used in MySQL Workbench. Once the conceptual design is realized, the tool visually presents a methodology for mapping the various data concepts to a collection of relations. Relational databases are ubiquitous and conceptually simple for all majors to understand based on the analogy of a spreadsheet with named columns. A unique feature of this tool is a built-in formative self-assessment feature, called a checkpoint, to engage learners in reflecting on what they have learned. The checkpoint provides 20 questions, multiple-choice and true/false, over a given conceptual design to test the student's understanding of the design features and mapping to relations. Another novel capability of this tool is its ability for instructors to customize the example to their discipline, supporting the introduction of database topics within the context of the domain to which it is being applied. There are already customizations of the tool available in several disciplines, broadening the accessibility of data design to many majors. Experience has shown that the tool supports visual learners in all majors, including computer science.", "authors": [{"name": "Don Goelman", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Suzanne W. Dietrich", "affiliation": "Arizona State University, Phoenix, AZ, USA"}], "tags": ["visualizations", "computer science for all", "courseware"]}, {"title": "Improving Classroom Preparedness Using Guided Practice", "link": "https://dl.acm.org/doi/10.1145/3159450.3159571", "abstract": "Numerous studies have demonstrated the effectiveness of flipped classrooms (e.g. peer instruction) in computer science courses. Flipped classrooms rely on students having obtained first exposure to concepts through pre-class activities such as viewing videos or reading a textbook. Having engaged with the material before class, class time can be spent on more challenging activities with feedback from the instructor and classmates. These pre-class activities can be a challenge for students, who often do not have the skills necessary to critically engage with the assigned reading/viewing. As a result students often come to class under-prepared despite completing the pre-class activities. This paper presents the author's experience with adding guided practice worksheets to improve student preparedness in two courses: a CS1 course and a lower-division \"Introduction to Computer Systems\" course. These pre-class worksheets provided a structured set of learning objectives for students to focus on in their reading as well as exercises to test those objectives. Limited results indicate a high worksheet completion rate and a strong positive correlation between individual completion rates and final course grade. This paper also presents recommendations for those instructors wishing to adopt guided practice in their class.", "authors": [{"name": "Saturnino Garcia", "affiliation": "University of San Diego, San Diego, CA, USA"}], "tags": ["learning objectives", "bloom's taxonomy", "student preparedness", "flipped classroom", "guided practice", "pre-class activities", "peer instruction"]}, {"title": "Session details: Paper Session: Pedagogy #3", "link": "https://dl.acm.org/doi/10.1145/3247834", "abstract": "No abstract available.", "authors": [{"name": "Michelle Craig", "affiliation": "University of Toronto"}], "tags": []}, {"title": "Unencapsulated Collection: A Teachable Design Smell", "link": "https://dl.acm.org/doi/10.1145/3159450.3159469", "abstract": "Design smells are design structures that indicate poor design quality. Many identified smells are difficult to teach as they require a degree of experience and judgement that novices, by definition, do not have. We have identified a design smell, which we call \"unencapsulated collection\", that is common in novice designs. It is simple to describe, allowing it to be objectively detected, and the refactoring steps needed to remove the smell are usually simple to illustrate. We give a description of the smell and present the results of an empirical study showing its prevalence. We outline the general steps for refactoring the smell, and illustrate it with a case study. The simplicity of this smell makes it a good candidate for teaching good design principles to novices.", "authors": [{"name": "Nasser Giacaman", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Andrew Luxton-Reilly", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Ewan Tempero", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Giuseppe De Ruvo", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["collections", "abstraction", "design smells", "software engineering"]}, {"title": "Instructional Design + Knowledge Components: A Systematic Method for Refining Instruction", "link": "https://dl.acm.org/doi/10.1145/3159450.3159478", "abstract": "This paper reports on a systematic method used to improve an existing unit of instruction. The method is distinctive in combining steps of instructional design with \"knowledge components\" from a cognitively-based framework of learning. Instructional design is used to develop assessment instruments that incorporate information about student misconceptions. The method uses the assessment instruments to evaluate student performance and learning gains, while statistical analysis evaluates the quality of the instruments themselves using measures of difficulty and discrimination. Fine-grain insight into possible improvements is enabled by the knowledge components implicated by the assessment. The method is illustrated and evaluated by applying it to a unit of instruction on collection-based iteration in a computational thinking class. Data gathered during this evaluation highlights a number of opportunities within the unit to refine the instruction.", "authors": [{"name": "Austin Cory Bart", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Katherine Cennamo", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Dennis Kafura", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Luke Gusukuma", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Jeremy Ernst", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["CS1", "CS education", "knowledge components", "assessment", "instructional design"]}, {"title": "An Explicit Strategy to Scaffold Novice Program Tracing", "link": "https://dl.acm.org/doi/10.1145/3159450.3159527", "abstract": "We propose and evaluate a lightweight strategy for tracing code that can be efficiently taught to novice programmers, building off of recent findings on \"sketching\" when tracing. This strategy helps novices apply the syntactic and semantic knowledge they are learning by encouraging line-by-line tracing and providing an external representation of memory for them to update. To evaluate the effect of teaching this strategy, we conducted a block-randomized experiment with 24 novices enrolled in a university-level CS1 course. We spent only 5-10 minutes introducing the strategy to the experimental condition. We then asked both conditions to think-aloud as they predicted the output of short programs. Students using this strategy scored on average 15% higher than students in the control group for the tracing problems used the study (p<0.05). Qualitative analysis of think-aloud and interview data showed that tracing systematically (line-by-line and \"sketching\" intermediate values) led to better performance and that the strategy scaffolded and encouraged systematic tracing. Students who learned the strategy also scored on average 7% higher on the course midterm. These findings suggest that in <1 hour and without computer-based tools, we can improve CS1 students' tracing abilities by explicitly teaching a strategy.", "authors": [{"name": "Greg L. Nelson", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Benjamin Xie", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Andrew J. Ko", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["program tracing", "think-aloud", "instructional intervention", "sketching"]}, {"title": "Session details: Paper Session: Retention in CS", "link": "https://dl.acm.org/doi/10.1145/3247835", "abstract": "No abstract available.", "authors": [{"name": "Briana Morrison", "affiliation": "University of Nebraska at Omaha"}], "tags": []}, {"title": "Future-Oriented Motivation and Retention in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159513", "abstract": "Retaining students in computer science (CS) courses and majors is a concern for many undergraduate CS programs in the United States. A large proportion of students who initially declare a major in CS do not complete a CS degree. The impact of future-oriented motivational constructs such as career aspirations and future connectedness on retention has received relatively little research attention, but these are potential contributors to students' retention in CS courses. The purpose of this study was to investigate how future-oriented motivation related to CS students' retention in CS courses over three consecutive semesters. Students enrolled in CS courses (four 100-level courses, one 200-level course, three 300-level courses, and five 400-level courses) completed survey measures of future-oriented motivation, and course enrollment data were collected for the three semesters. Logistic regression was used to determine whether motivation variables could distinguish between students who were enrolled in at least one CS course during a given semester and students who were not enrolled in any CS courses. Results indicate that, across all three semesters, career aspirations and knowledge of CS career paths were associated with a greater likelihood of continuing to take CS courses, and stronger future connectedness was associated with a lower likelihood of continuing to take CS courses. Implications for CS educators are discussed.", "authors": [{"name": "Markeya S. Peteranetz", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Abraham E. Flanigan", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Leen-Kiat Soh", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Duane F. Shell", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}], "tags": ["retention", "computer science education", "future time perspective", "future-oriented motivation"]}, {"title": "Helping Underrepresented Students Succeed in AP CSA and Beyond", "link": "https://dl.acm.org/doi/10.1145/3159450.3159517", "abstract": "Rise Up 4 CS was created at Georgia Tech in the spring of 2013 to help African American students succeed in their Advanced Placement (AP) Computer Science A (CSA) high school course and on the exam. The AP CSA course is intended to be equivalent to a college level CS1 course. In the fall of 2014, Sisters Rise Up 4 CS was also created to help female students succeed. Rise Up (RU) and Sisters Rise Up (SRU) both offer remote and in-person help sessions led by undergraduate students, who serve as near-peer role models. The long-term goal of these projects is to attract more underrepresented students to computing careers by increasing their self-efficacy. Self-efficacy is the belief that one can succeed in a particular task or field. Thanks to generous support from Google, RU and SRU have been offered at several other colleges and universities as well. This paper summarizes the results from spring 2013 to summer 2016, reports on an alumni survey answered by 68 (32%) of the 211 alumni, and includes excerpts from five semi-structured interviews. The majority (63%) of the alumni survey respondents, who are in college, are majoring in computing. A similar percentage of the alumni who are still in high school intend to major in computing (62%). When asked about the programs' impact on their career choices and interest in computing, 61% of respondents indicated that the program increased their interest in computer science and 24% indicated that it changed their career plans to computing.", "authors": [{"name": "Tom McKlin", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Barbara Ericson", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["hispanics", "females", "identity", "advanced placement (AP)", "outreach", "urm", "African Americans", "self-efficacy"]}, {"title": "The Components of a Successful S-STEM Program: What Works at Appalachian State University", "link": "https://dl.acm.org/doi/10.1145/3159450.3159600", "abstract": "In 1999, the National Science Foundation created the \"Computer Science, Engineering, and Mathematics Scholarships\" (CSEMS) program to provide funding for institutions to supply scholarships for academically talented and financially needy students to complete an associate, baccalaureate, or graduate degree in computer science, computer technology, engineering, engineering technology, or mathematics. In 2004, the program was renamed to \"Scholarships for Science, Technology, Engineering, and Mathematics\" (S-STEM) and modified to include students from physical and life sciences. Appalachian State University (ASU) has been the recipient of four CSEMS/S-STEM awards since 2001 and the scholarships have funded 161 students. Nearly all of these students have high levels of financial need and the majority are first generation college students. Overall, the program has retained 87 percent of these students; 12 percent of the scholars completed a bachelor's and then continued on to complete a master's degree or are in the process of doing so. The retention rate has increased as our program has improved. The retention rate of the current cohort of S-STEM students is 92.3 percent; 31 percent of the students in the current program completed a bachelor's degree and are pursuing or have completed a master's degree. These retention numbers are significantly higher than the 31 percent national average reported by the U.S. Department of Education. In addition, these retention numbers are higher than those found at our own institution for all Computer Science and Mathematics majors. This paper discusses the components of our successful program.", "authors": [{"name": "Rahman Tashakkori", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "Mary E. Searcy", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "Cindy Norris", "affiliation": "Appalachian State University, Boone, NC, USA"}], "tags": ["s-stem", "student retention", "computer science"]}, {"title": "Session details: Paper Session: Robotics", "link": "https://dl.acm.org/doi/10.1145/3247836", "abstract": "No abstract available.", "authors": [{"name": "Elva J. Jones", "affiliation": "Winston-Salem State University"}], "tags": []}, {"title": "Enhancing Robotic Experiences throughout the Computing Curriculum", "link": "https://dl.acm.org/doi/10.1145/3159450.3159580", "abstract": "The study of robotics is often an excellent recruitment motivation for students entering a computing curriculum. It is also often cited that Artificial Intelligence (AI) and related robotics is a critical area of future innovation in computing. However, there are a number of challenges to implementing a robotic curriculum at the university level. A few of those challenges include, lack of a uniform hardware platform, incongruity in the software used, and the missing significant deliverable artifacts by students at the end of a term to encourage learning and further interest. Educational robotic activities are often treated as advanced research topics with high associated costs that prohibit widespread integration into the curriculum. In this paper, we present the deployment of a multi-stage robotic platform that attempts to address these challenges and overcome the obstacles. We detail the evolution of the hardware from using a readily available LEGO Mindstorm base platform to next include the addition of an Arduino and Raspberry Pi. Likewise, we detail the transition from the basic LEGO Mindstorm software to the use of leJOS and PYTHON. At each stage, additional sensors and software libraries can likewise be added. Finally, we present an achievable academic goal for students to use the hardware and software platforms to develop a model autonomous vehicle with aspects of intelligent control, learning and adaptive behaviour. All levels of projects can be undertaken at the appropriate level of maturity for the students in the computing curriculum.", "authors": [{"name": "George W. Clark", "affiliation": "University of South Alabama, Mobile, AL, USA"}, {"name": "Michael V. Doran", "affiliation": "University of South Alabama, Mobile, AL, USA"}], "tags": ["robotics", "machine learning", "robotics in education", "ai"]}, {"title": "Enhanced Robotics!: Improving Building and Programming Learning Experiences for Students with Visual Impairments", "link": "https://dl.acm.org/doi/10.1145/3159450.3159501", "abstract": "Making technology and computer science learning experiences accessible to students with disabilities is an important step in preparing them to enter the workforce of the future--one in which many jobs will require skills to solve problems with technology. This paper presents the tool and curricular enhancements developed to make the Exploring Computer Science Robotics unit accessible to students with visual impairments (VI). It describes the evolution of enhancements, based on formative evaluation studies, to increase support as VI students engaged in building and programming LEGO Mindstorms robots. Results describe the ways in which enhancements were iteratively designed in response to student engagement and confidence, as well as their emerging understanding of top-down and bottom-up processes in robotics design and programming.", "authors": [{"name": "Debra Bernstein", "affiliation": "TERC, Cambridge, MA, USA"}, {"name": "Karen Mutch-Jones", "affiliation": "TERC, Cambridge, MA, USA"}, {"name": "Stephanie Ludi", "affiliation": "University of North Texas, Denton, TX, USA"}], "tags": ["robotics", "exploring computer science", "accessibility", "K-12"]}, {"title": "Experiences in Teaching the Internet of Things Courses", "link": "https://dl.acm.org/doi/10.1145/3159450.3159549", "abstract": "With the increasing impact of the Internet of Things (IoT) in our everyday lives, it is imperative that a work force would be needed not only to develop the new IoT solutions but also to maintain the established IoT systems. In this paper, we discuss our experiences in curriculum development for three courses on the topic of IoT. This paper's main focus is course development for the latest offering (Spring 2017), and a discussion about what we changed from the previous two offerings. We discuss our weekly lecture plans for IoT topics' coverage along with programming assignments and other assessment activities. We also discuss our observation of students' interest levels, and how we used an incremental project development approach to keep students engaged and motivated. We conclude with our observations of what did and didn't worked for us. We also discuss what we missed because of time constraints but would try to include in our next offering.", "authors": [{"name": "Farha N. Ali", "affiliation": "Lander University, Greenwood, SC, USA"}], "tags": ["the internet of things", "networks", "distributed systems", "sensor networks", "protocols", "algorithms"]}, {"title": "Session details: Paper Session: Security Education", "link": "https://dl.acm.org/doi/10.1145/3247837", "abstract": "No abstract available.", "authors": [{"name": "Carlos Cabrera", "affiliation": "Florida International University"}], "tags": []}, {"title": "Enhancing Interest in Cybersecurity Careers: A Peer Mentoring Perspective", "link": "https://dl.acm.org/doi/10.1145/3159450.3159563", "abstract": "The focus of this paper is an evaluation of our peer mentoring framework designed to encourage more students to seek cybersecurity career pathways through providing peer interactions. We present and compare results from two years (Spring 2016 and 2017) of interaction between students in an introductory Information Systems class (IS 300: Management of Information Systems) and an upper-level elective Cybersecurity course (IS 471: Data Analytics for Cybersecurity). Our results show a continuation of the general trend observed in the 2016 study. The students who receive peer mentoring show more interest in cybersecurity issues and careers and gain more overall knowledge throughout the semester, than those who don't. This is reflected by the results of an anonymous survey and overall grade improvements. These students show more variations regarding their choice of cybersecurity as a career compared to students who did not receive any mentoring, demonstrating that they are able to make more informed decisions. Female students exhibit more pronounced responses to peer mentoring in contrast to their male counterparts.", "authors": [{"name": "Carolyn Seaman", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Aryya Gangopadhyay", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Abu Zaher Md Faridee", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Amy Everhart", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Vandana P. Janeja", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}], "tags": ["information systems", "workforce development", "peer mentoring", "cybersecurity"]}, {"title": "Evaluating Two Methods for Integrating Secure Programming Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159511", "abstract": "Security vulnerabilities are still prevalent in today's software, yet many can be prevented with standard secure programming techniques. Thus, educators of future developers need to teach students not just how to program, but how to program securely. Many researchers advocate integrating secure programming knowledge and skills across the computer science curriculum. In this paper, we report the results of a study comparing two such methods: our own tool ESIDE, which provides students with security warnings on assignment code, and a security-clinic approach, a one-on-one session with a teaching assistant. Both methods suffered from challenges in incentivizing students to incorporate secure programming techniques into their code. We discuss the relative strengths and weaknesses of these methods, and the challenges of timing and motivation of secure programming education.", "authors": [{"name": "Stacey Watson", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Heather Richter Lipford", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Bill Chu", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Madiha Tabassum", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["motivation and timing", "secure programming", "computer science education"]}, {"title": "Using Virtual Machine Introspection for Operating Systems Security Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159606", "abstract": "Historically, hands-on cybersecurity exercises helped reinforce the basic cybersecurity concepts. However, most of them focused on the user level attacks and defenses and did not provide a convenient way of studying the kernel level security. Since OS kernels provide foundations for applications, any compromise to OS kernels will lead to a computer that cannot be trusted. Moreover, there has been a great interest in using virtualization to profile, characterize, and observe kernel events including security incidents. Virtual Machine Introspection (VMI) is a technique that has been deeply investigated in intrusion detection, malware analysis, and memory forensics. Inspired by the great success of VMI, we used it to develop hands-on labs for teaching kernel level security. In this work, we present three VMI-based labs on (1) stack-based buffer over-flow, (2) direct kernel object manipulation (DKOM), and (3) kernel integrity checker which have been made available online. Then, we analyze the differences in approaches taken by VMI-based labs and traditional labs and conclude that VMI-based labs are better as opposed to traditional labs from a teaching standpoint because they provide more visibility than the traditional labs and superior ability to manipulate kernel memory which provides more insight into kernel security concepts.", "authors": [{"name": "Irfan Ahmed", "affiliation": "University of New Orleans, New Orleans, LA, USA"}, {"name": "Zhiqiang Lin", "affiliation": "Ohio State University, Columbus, OH, USA"}, {"name": "Manish Bhatt", "affiliation": "University of New Orleans, New Orleans, LA, USA"}], "tags": []}, {"title": "Writing in CS: Why and How?", "link": "https://dl.acm.org/doi/10.1145/3159450.3159620", "abstract": "The importance of written communication and critical thinking in Computer Science is widely acknowledged. It was called out specifically in the curriculum guidelines ACM CS2013 [6] and has been the topic of a number of previous SIGCSE papers, for example [1-4]. Moreover, writing as a pedagogical practice can help make CS more accessible for a broader population. However, special challenges may arise for students who are English-language learners or have writing-specific learning differences.", "authors": [{"name": "Stephanie R. Taylor", "affiliation": "Colby College, Waterville, ME, USA"}, {"name": "Mia Minnes", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Phillip Barry", "affiliation": "University of Minnesota, Minneapolis, MN, USA"}, {"name": "Bruce Maxwell", "affiliation": "Colby College, Waterville, ME, USA"}], "tags": ["communication", "writing", "assessment", "professional development", "curriculum design"]}, {"title": "Perfect Harmony: Team Teaching Computing & Music", "link": "https://dl.acm.org/doi/10.1145/3159450.3159619", "abstract": "One of the ways to attract a more diverse group of students to computer science is by offering courses that are interdisciplinary. Some of the first examples of this combined multimedia with programming. There are many more possibilities, but as computer scientists, we often do not have the domain knowledge to teach these courses alone. Team teaching offers a solution to this dilemma. The goal of this panel is to present some of the problems we have encountered and to discuss some of the solutions.", "authors": [{"name": "Kelly Rossum", "affiliation": "Christopher Newport University, Newport News, VA, USA"}, {"name": "James Caristi", "affiliation": "Valparaiso University, Valparaiso, IN, USA"}, {"name": "Richard Weiss", "affiliation": "=Evergreen State College, Olympia, WA, USA"}, {"name": "Aaron Koehl", "affiliation": "College of William & Mary, Williamsburg, VA, USA"}, {"name": "Jesse M. Heines", "affiliation": "Univ. of Massachusetts Lowell, Lowell, MA, USA"}], "tags": ["computing and music", "team teaching", "interdisciplinary"]}, {"title": "CS as a Graduation Requirement: Catalyst for Systemic Change", "link": "https://dl.acm.org/doi/10.1145/3159450.3159646", "abstract": "Since President Obama's announcement of the Computer Science for All Initiative in 2016, there has been a surge in the number of districts that are planning for or newly implementing computer science (CS) offerings at their schools. Chicago Public Schools (CPS) is the first large school district to have adopted Computer Science as a high school graduation requirement, taking this significant step along the path towards systemic change. The foundation was laid eight years ago when an informal alliance was formed between a CPS high school CS teacher, a CPS administrator, and three university computer scientists.", "authors": [{"name": "Dale Reed", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Don Yanek", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}, {"name": "Brenda Wilkerson", "affiliation": "Anita Borg Institute, Palo Alto, CA, USA"}, {"name": "Lucia Dettori", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Steven McGee", "affiliation": "The Learning Partnership, Western Springs, IL, USA"}, {"name": "Ronald I. Greenberg", "affiliation": "Loyola University, Chicago, IL, USA"}], "tags": ["systemic change", "instructional coaching", "teacher professional development", "chicago public schools", "graduation requirement", "csforall", "exploring computer science", "high school"]}, {"title": "Striving for Excellence in Introductory Computer Science Courses Using Culturally Responsive Teaching (CRT)", "link": "https://dl.acm.org/doi/10.1145/3159450.3159631", "abstract": "1.SUMMARY This special session will focus on a multi-year project based on an AAC&U Teaching to Increase Diversity and Equity in STEM (TIDES) grant focused on integrating Culturally Responsive Teaching (CRT) in Computer Science courses at Montgomery College, a highly diverse urban-suburban community college in Maryland. The presenters will discuss the project's development of a CRT model based on a \"Discover-Adjust-Assess\" process that took into account the realities of the college's faculty and student contexts. Attendees will participate in awareness-raising activities, analyze case studies involving common teaching-learning challenges using CRT-based concepts and tools, and be presented with sample data in the form of student/faculty survey results and interview responses. Several CRT resources created as part of the project will also be presented.", "authors": [{"name": "Ray Gonzales", "affiliation": "Montgomery College, Rockville, MD, USA"}, {"name": "Alla Webb", "affiliation": "Montgomery College, Rockville, MD, USA"}], "tags": ["effective teaching practices.", "culturally responsive teaching (crt)", "introduction to computer science"]}, {"title": "Session details: Morning Keynote & 2018 SIGCSE Award for Outstanding Contributions to Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3247838", "abstract": "No abstract available.", "authors": [{"name": "Dan Garcia", "affiliation": "UC Berkeley"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "What's the Big Idea with CS Education in K-12?", "link": "https://dl.acm.org/doi/10.1145/3159450.3166087", "abstract": "Computer Science is seen in many different ways in society; some may consider it to be an esoteric collection of jargon-laden skills, while others view it as an essential topic of study for all citizens. Many of us are very passionate about sharing our enthusiasm for the subject with others, and we are at a time in history where much of the hard work to get the public to understand that it is something special is starting to bear fruit, as we see Computer Science and Computational thinking appearing in K-12 curricula around the world. But what is it about Computer Science that makes it so important and exciting? Is it a subject in its own right that deserves space in the curriculum? We will explore the reasons that young students should become engaged with the subject, illustrated using an Unplugged perspective.", "authors": [{"name": "Tim Bell", "affiliation": "University of Canterbury, Canterbury, New Zealand"}], "tags": ["k-12", "computing education", "computer science unplugged"]}, {"title": "Session details: Paper Session: CS1 #1", "link": "https://dl.acm.org/doi/10.1145/3247839", "abstract": "No abstract available.", "authors": [{"name": "Matthew Hertz", "affiliation": "University at Buffalo"}], "tags": []}, {"title": "Longitudinal Data on Flipped Class Effects on Performance in CS1 and Retention after CS1", "link": "https://dl.acm.org/doi/10.1145/3159450.3159518", "abstract": "We present results of a college wide undergraduate retention study tracking student retention in computing, comparing students who experience a flipped, active learning version of CS1 against those who experience a traditional lecture and lab version of CS1. We examine demographic subgroups to understand retention differences between sexes and racial/ethnic groups. Specifically, we examine which students exit computing majors in the semester immediately after taking CS1, and those who leave following one academic year. This allows us to focus on how the immediate experience of the CS1 teaching approach impacts desire to continue in computer science during the critical first year in CS. Our dataset includes 698 CS majors who took CS1 in either the flipped or traditional style, between Fall 2013 and Fall 2016, at a large, comprehensive, urban research university in the US. Our results show that women were less likely to switch majors after taking the flipped version than after taking the traditional version. Conversely, male students were more likely to be retained following the traditional course, and less likely to be retained following the flipped course. Performance of CS majors in CS1, as measured by DFW rates, is statistically higher in the flipped classes than performance in the traditional classes. One-year retention in the major for under-represented groups (women and racial minorities) was higher in the flipped classes for new freshmen taking CS1, but not for transfer students.", "authors": [{"name": "Celine Latulipe", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Audrey Rorrer", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Bruce Long", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["cs1", "lightweight teams", "retention", "sex", "race", "flipped classes", "gender"]}, {"title": "Does Native Language Play a Role in Learning a Programming Language?", "link": "https://dl.acm.org/doi/10.1145/3159450.3159531", "abstract": "Computer Science (CS) is taught in India, using English as the medium of instruction, to students whose native language is not English. This places a high cognitive load on students who learn programming for the first time and who are not very proficient in English. The problems these students face become even harder since learning to program can be an incredibly difficult task. Our study aims to find out if a student's native language has any effect on the student's ability to learn programming. We taught linked list, a basic concept in CS, to two groups of undergraduate students for a week in Tamil Nadu, India. We used English to teach one group of students and English and Tamil (the native language in Tamil Nadu) to teach the other group. Our intervention consisted of three lectures and one live-coding session. We collected quantitative and qualitative data using technical tests and open-ended feedback respectively. We found that although teaching programming using both English and Tamil is no different when compared to using only English with respect to student learning, students have expressed positive opinions about teaching and learning CS using two languages.", "authors": [{"name": "Richard Halverson", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Adalbert Gerald Soosai Raj", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Jignesh M. Patel", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Kasama Ketsuriyonk", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}], "tags": ["native language", "cs education", "bilingual education"]}, {"title": "Tracing vs. Writing Code: Beyond the Learning Hierarchy", "link": "https://dl.acm.org/doi/10.1145/3159450.3159530", "abstract": "Much work has been done on the achievement gap between code tracing and code writing in CS1 students. The generally accepted explanation for this gap is that tracing and writing form separate steps in a learning scaffolding; students must first learn to trace code before they can be expected to write code. The expectation is that once students have mastered these skills, future grades will be driven by their ability to understand the deeper learning concepts, and so the gap between tracing and writing should disappear. In this paper, we detail and evaluate a study on 384 CS2 students to evaluate whether a tracing-writing gap still exists, and assess whether anything can be deduced about students who continue to exhibit such a gap. We find that not only does the gap seem to have closed by CS2, students are equally likely to show a reverse gap in the writing-tracing direction. However, further analysis shows a strong correlation between students who do continue to have a gap (in either direction) and poor overall performance in the course.", "authors": [{"name": "Brian Harrington", "affiliation": "University of Toronto, Scarborough, Scarborough, ON, Canada"}, {"name": "Nick Cheng", "affiliation": "University of Toronto, Scarborough, Scarborough, ON, Canada"}], "tags": ["code writing", "cs1", "exam questions", "code tracing", "assessment", "computer science education"]}, {"title": "Session details: Paper Session: Curriculum Issues #1", "link": "https://dl.acm.org/doi/10.1145/3247840", "abstract": "No abstract available.", "authors": [{"name": "Chris Gregg", "affiliation": "Stanford University"}], "tags": []}, {"title": "Understanding the New ABET Computer Science Criteria", "link": "https://dl.acm.org/doi/10.1145/3159450.3159534", "abstract": "The Computing Accreditation Commission of ABET accredits over 300 Computer Science programs worldwide under the Computer Science program criteria. In the past few years, the Commission has engaged the computing community to modify and update these criteria, and has now signed off on an updated set of program criteria that take into account factors such as the CS2013 curricular guidelines, impact on currently accredited programs, structural changes to clarify the criteria, and the reduction of the assessment burden. These recent changes to the Computer Science program criteria primarily impact student outcomes (what program graduates are expected to know and be able to do by graduation) and curriculum. Those changes will impact computer science programs in a variety of ways and degrees---some programs will be impacted significantly while others will be affected in a relatively minor way. This paper examines the changes that will take effect starting in the 2019-20 accreditation cycle, covering the rationale for those changes and exploring the likely impact on computer science programs that are currently accredited or seeking accreditation in the near future.", "authors": [{"name": "Michael J. Oudshoorn", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}, {"name": "Rajendra K. Raj", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Allen Parrish", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}, {"name": "Stan Thomas", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}], "tags": ["computing programs", "program accreditation", "computer science degree programs"]}, {"title": "Computer Science Curricular Guidance for Associate-Degree Transfer Programs", "link": "https://dl.acm.org/doi/10.1145/3159450.3159536", "abstract": "After two years of intense curriculum development effort, the ACM CCECC (Committee for Computing Education in Community Colleges) published Computer Science Curricular Guidance for Associate-Degree Transfer Programs with Infused Cybersecurity, known as CSTransfer2017. Based on Computer Science Curricula 2013 (CS2013), this guidance was specially designed to aid in the smooth transfer from associate degrees to baccalaureate degrees. The curriculum contains 17 of CS2013's 18 knowledge areas, and a variety of knowledge units appropriate in the first two years of a computer science degree. The guidance comprises over 200 learning outcomes, 64 of which are infused with cybersecurity, along with a three-tiered assessment rubric using measurable verbs from Bloom's Revised Taxonomy. In addition to the CSTransfer2017 task group consisting of 20 community college educators, input from both two- and four-year educators was collected via surveys administered to a global audience, as well as two rounds of public review and comment on drafts of the guidance. Examples of degree and certificate programs that align with CSTransfer2017 are part of a growing repository hosted on the CCECC website, ccecc.acm.org. These program examples demonstrate the adaptability of this competency-based curriculum approach to a variety of computing programs. The CCECC invites institutions to highlight their computer science degree program by submitting a program example at ccecc.acm.org/correlations.", "authors": [{"name": "Markus Geissler", "affiliation": "Cosumnes River College, Sacramento, CA, USA"}, {"name": "Cindy Tucker", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}, {"name": "Christian Servin", "affiliation": "El Paso Community College, El Paso, TX, USA"}, {"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}], "tags": ["curriculum guidelines", "cstransfer2017", "community college", "computer science education", "CS2013", "two-year college", "transfer programs"]}, {"title": "A Systematic Review of the Use of Bloom's Taxonomy in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159491", "abstract": "Bloom's taxonomy is a model that allows characterizing students' learning achievements. It is frequently used in computer science education (CSE), but its use is not straightforward. We present a systematic review conducted to know actual use of the taxonomy in CSE. We found that it was mostly used in programming education and to assess students' performance. A more relevant contribution is a classification of authors' difficulties. In particular, the most often reported difficulty is determining the level of the taxonomy where an assessment task can be classified. In addition, we present authors' hypotheses about possible causes of the difficulties and the solutions they adopted.", "authors": [{"name": "J. \u00c1ngel Vel\u00e1zquez-Iturbide", "affiliation": "Universidad Rey Juan Carlos, M\u00f3stoles, Spain"}, {"name": "Susana Masapanta-Carri\u00f3n", "affiliation": "Pontificia Universidad Cat\u00f3lica del Ecuador, Quito, Ecuador"}], "tags": ["Bloom's taxonomy", "computer science education", "difficulties"]}, {"title": "Session details: Paper Session: Diversity #1", "link": "https://dl.acm.org/doi/10.1145/3247841", "abstract": "No abstract available.", "authors": [{"name": "Kinnis Gosha", "affiliation": "Morehouse"}], "tags": []}, {"title": "Culturally-Centric Outreach and Engagement for Underserved Groups in STEM", "link": "https://dl.acm.org/doi/10.1145/3159450.3159565", "abstract": "The intersection between Science, Technology and the Arts is providing an insightful and rich playground for engaging historically underrepresented and underserved youth. This paper discusses an innovative and effective approach for learning Science, Technology, Engineering, the Arts and Mathematics (STEAM) with an emphasis on using expressive arts as a culturally-centered engagement tool. Our framework incorporates a multimodal model that considers unconventional learning styles that appeal to underrepresented and underserved students, the power of cultural cues and the presence of minority STEM professionals to shape students learning experiences. In addition to demonstrating the importance of culturally-centered learning approaches, we've identified methods of engaging students' families and communities as a means of strengthening the pipeline to continued education in STEM.", "authors": [{"name": "Loretta Cheeks", "affiliation": "StrongTIES, Phoenix, AZ, USA"}, {"name": "Danielle Cummings", "affiliation": "United States Air Force Academy, USAFA, CO, USA"}, {"name": "Rosario Robinson", "affiliation": "Anita Borg Institute, Palo Alto, CA, USA"}], "tags": ["outreach", "k-12 instruction", "learning environments", "gender and diversity"]}, {"title": "Looking Beyond Representation: How Women Develop Their Leadership Perceptions During the Introductory Computing Course", "link": "https://dl.acm.org/doi/10.1145/3159450.3159458", "abstract": "While the gender gap in undergraduate computing is often discussed in reference to the representation of women in the computing major, less is known about leadership and other affective outcomes for women and men in computing. This study examines how gender shapes (a) introductory computing students' perceptions of their leadership, including measures of both general self-rated leadership ability and perceived capacity for leadership in computing, (b) how these perceptions change during the introductory computing course, and (c) the experiences that are related to change in leadership outcomes. Findings reveal gender differences in how incoming introductory course students report both their general leadership abilities and their perceived capacity for leadership in computing. Additionally, both women and men experienced a decline in their perceived capacity for leadership in computing during the introductory course. These and other findings are discussed, with attention given to the implications for both researchers and instructors seeking to broaden women's participation in computing.", "authors": [{"name": "Jennifer M. Blaney", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}], "tags": ["student leadership", "gender", "women", "introductory computing"]}, {"title": "A Model for Increasing Gender Diversity in Technology", "link": "https://dl.acm.org/doi/10.1145/3159450.3159533", "abstract": "At our university, women are a minority in all computing and engineering majors. This situation is mirrored at other universities nationwide, as well as in technical industries. Stereotype threat, the risk of confirming a negative stereotype about one's social group, can result in women not performing as well as their male counterparts in computing, mathematics, and engineering courses. The aftermath of these experiences cause women to fear they do not belong or are not \"smart enough\", resulting in women switching to a different major. Even high-performing women can be subject to these pressures. We present a Scholar model for increasing gender diversity in technology fields and an evaluation of its impact on the retention and success of women in computing and engineering majors. We compare the performance of Scholars to that of non-Scholars with similar demographic and academic backgrounds who entered into the College of Engineering and Information Technology at the University of Maryland, Baltimore County.", "authors": [{"name": "Erica D'Eramo", "affiliation": "University of Maryland, Baltimore County, Baltimore , MD, USA"}, {"name": "Danyelle Ireland", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Penny Rheingans", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Crystal Diaz-Espinoza", "affiliation": "Baylor University, Waco, TX, USA"}], "tags": ["community", "diversity", "gender", "scholar programs"]}, {"title": "The Impact of AP Computer Science Principles: Are You Ready to Change Your Undergraduate Courses?", "link": "https://dl.acm.org/doi/10.1145/3159450.3159612", "abstract": "No abstract available.", "authors": [{"name": "Carol S. Yarbrough", "affiliation": "Alabama School of Fine Arts, Birmingham, AL, USA"}, {"name": "Dale Reed", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Paul T. Tymann", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Chinma Uche", "affiliation": "Academy of Aerospace and Engineering, Windsor, CT, USA"}], "tags": ["k-12", "computer science principles", "curriculum", "pedagogy"]}, {"title": "Session details: Paper Session: Peers and Cohorts", "link": "https://dl.acm.org/doi/10.1145/3247842", "abstract": "No abstract available.", "authors": [{"name": "Mia Minnes", "affiliation": "University of California, San Diego"}], "tags": []}, {"title": "A Summer Program to Attract Potential Computer Science Majors", "link": "https://dl.acm.org/doi/10.1145/3159450.3159562", "abstract": "Computer Science (CS) is not taught in enough high schools thus many students arrive at college or university knowing little about it and often do not consider taking a CS course during their first year. At the same time, we encounter many college or university juniors and seniors who, while taking their first CS course, discover an aptitude and interest, at which point it is too late. We describe an innovative one-week residential summer program designed to educate non-computer science majors, before their second year of college or university, about the field's many areas and long-term prospects. The program has succeeded at encouraging undecided students to major or minor in CS and thus somewhat ameliorates the lack of CS in K-12 education and furthers the conference goal of \"CS For All\".", "authors": [{"name": "Robin Flatland", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Meg Fryling", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Sharon G. Small", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Scott Vandenberg", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "MaryAnne Egan", "affiliation": "Siena College, Loudonville, NY, USA"}], "tags": ["computer science majors", "cs summer program", "outreach", "retention", "cs education", "recruitment", "stem", "non-majors"]}, {"title": "Docendo Discimus: Students Learn by Teaching Peers Through Video", "link": "https://dl.acm.org/doi/10.1145/3159450.3159466", "abstract": "This study presents and evaluates a scalable approach for improving learning outcomes by having students \"teach\" peers in the same course via video. The approach was tested in a standard upper-level undergraduate computer algorithms course with material commonly considered challenging to teach: combinatorial optimization and NP-complete problems. An important design goal was to incentivize students to learn deeply in crafting their instructional videos while minimizing the added burden on instructors to review their products, allowing for scalability. A learning assessment administered to two successive cohorts (N=89) showed statistically significant improvement (P<0.0001) in learning for students who make the videos compared to those who merely study the materials or view the videos. Students not only enjoyed applying their creativity in making videos but, in the process, also strengthened their conceptual learning. While much of the existing research on student-created videos has shown its effectiveness in motivating students, few studies exist that directly isolate learning gains in those who craft instructional videos.", "authors": [{"name": "Rahul Simha", "affiliation": "George Washington University, Washington, DC, USA"}, {"name": "Pablo Frank-Bolton", "affiliation": "George Washington University, Washington, DC, USA"}], "tags": ["active learning", "SIGCSE", "student-centered learning", "student-created videos", "improved conceptual learning", "scalable instructional resources", "ACM proceedings"]}, {"title": "Two-Stage Programming Projects: Individual Work Followed by Peer Collaboration", "link": "https://dl.acm.org/doi/10.1145/3159450.3159486", "abstract": "Programming projects are widely used in CS1 classes to develop students' coding skills. To improve the learning impact of these projects, we propose and study a special project format named two-stage project in an introductory computer science course. For the first stage, students submit their programming projects individually followed by a second stage where they are paired to work on the same project in order to create an improved solution. Through peer collaboration, students review each other's work from the first stage, and write correctly-styled, well-documented, and more thoroughly tested code during the second stage. We used isomorphic assessments before and after the second stage of a project to measure students' understanding of the course material. Results indicate that two-stage projects tend to improve student understanding of course learning objectives. We also studied students' perceptions and experiences with two-stage projects, and their confidence toward computing. Students liked working on two-stage projects because they saw new ways to approach the same problem, and they liked discussions with their peers.", "authors": [{"name": "Apeksha Awasthi", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Lina Battestilli", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Yingjun Cao", "affiliation": "University of California, San Diego, San Diego, CA, USA"}], "tags": ["peer collaboration", "collaborative project", "CS1", "two-stage project"]}, {"title": "Session details: Paper Session: Service Learning", "link": "https://dl.acm.org/doi/10.1145/3247843", "abstract": "No abstract available.", "authors": [{"name": "Cheryl Seals", "affiliation": "Auburn University"}], "tags": []}, {"title": "A Computer Science Study Abroad with Service Learning: Design and Reflections", "link": "https://dl.acm.org/doi/10.1145/3159450.3159589", "abstract": "Study abroad offers students the opportunity to experience other cultures, languages, and environments while obtaining credits toward their degree. Students are also taught to appreciate the diversity of people and culture, such that they may dismiss stereotypes and learn to communicate and collaborate cross-culturally in a global economy. Unfortunately, few universities offer study abroad programs directed specifically to computer science and particularly in combining student technical learning with service learning for broadening participation in computing throughout the world. In this paper, we describe a service-learning-based model for computer science students and other university students with minimal prior computer science experience to engage and inspire themselves and the next generation of computational thinkers through learning, teaching and creating web-based learning games along with local children and teachers in a foreign country. We describe the model focusing on learning objectives, curriculum, field component, planning, and partnership building. We describe the products that undergraduates were able to create in four weeks and their CS education service learning field experiences. Finally, we investigate the impact of the study abroad model on undergraduates' content knowledge, and their career and personal development.", "authors": [{"name": "Lori Pollock", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Tracy Henderson", "affiliation": "University of Canterbury, Christchurch, New Zealand"}, {"name": "Tim Bell", "affiliation": "University of Canterbury, Christchurch, New Zealand"}, {"name": "James Atlas", "affiliation": "University of Delaware, Newark, DE, USA"}], "tags": ["K-12 outreach", "cs learning game development", "study abroad"]}, {"title": "Combining Agile Software Development and Service-learning: A Case Study in Experiential IS Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159564", "abstract": "Experiential learning is ever-more popular with educators, industry, and with students themselves. Finding and delivering appropriate applied use cases can be challenging though, as on one hand industry partners may not willing to give insights to non-employees into their systems for creating truly meaningful case studies, and on the other hand the appropriate balance between instruction and application is ill-defined. Service learning projects are one solution for filling in the applied project gap. This case study takes place in the nexus between blended classrooms, applied software development, and service learning. Junior and senior level students partnered with a community actor to develop deployable software applying the Agile methodology. The service-learning project enabled students to engage in a full-cycle development project, from requirements gathering to hypercare. However, significant trade-offs in structure and classroom management must be made when the focus of the class is a full implementation. Blended technologies and course delivery were found to aid delivery and project management in a seamless manner. Drawing on feedback from stakeholders and students, this experience report makes a series of recommendations for implementing applied software development. Our contribution is the introduction and assessment of a method to marry (online) information systems education with service learning.", "authors": [{"name": "Spencer Robinson", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}, {"name": "Margeret Hall", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}], "tags": ["agile software development", "undergraduate instruction", "information systems education", "experiential learning.", "service learning"]}, {"title": "Social Software Design To Facilitate Service-learning In Interdisciplinary Computer Science Courses", "link": "https://dl.acm.org/doi/10.1145/3159450.3159572", "abstract": "Service-learning continues to play an increasing role in higher education as instructors look to incorporate high impact practices that challenge students through active and experiential learning. Yet limitations in learning management systems (LMS) can be barriers to service-learning project success. In this paper, we present an experience report on the design and implementation of an interdisciplinary service-learning course for computer science. We also present on the design and implementation of specialized social networking software as a mechanism to support service-learning across interdisciplinary computer science courses. More specifically, this research introduces customized social software, consisting of blogging, wiki and discussion software as tools for facilitating the specialized needs of these courses. These needs range from the ability for project management and milestone tracking, which are supported through wiki technology and messaging, self-reflection, which is supported through blogging and information exchange and knowledge sharing, which are supported through online discussion boards, social bookmarking and file-sharing. Results were largely positive, with a majority of students indicating that the course learning environment supported learning, collaboration and course community.", "authors": [{"name": "Evren Eryilmaz", "affiliation": "California State University, Sacramento, Sacramento, CA, USA"}, {"name": "Brian Thoms", "affiliation": "California State University, Channel Islands, Camarillo, CA, USA"}], "tags": ["cs education", "social networking software", "service-learning"]}, {"title": "Session details: Paper Session: Summer and Boot Camps", "link": "https://dl.acm.org/doi/10.1145/3247844", "abstract": "No abstract available.", "authors": [{"name": "Joseph Chao", "affiliation": "Bowling Green State University"}], "tags": []}, {"title": "Understanding the Software Development Industry's Perspective on Coding Boot Camps versus Traditional 4-year Colleges", "link": "https://dl.acm.org/doi/10.1145/3159450.3159485", "abstract": "This study reports on the perceived capacity of coding boot camps versus computer science (CS) undergraduate programs to instill a range of software development skills from an industry perspective. We present findings from a series of national focus groups and individual interviews with representatives from the software development industry, who spoke about their hiring procedures and preferences as well as how they perceived coding boot camp applicants in comparison to graduates from four-year CS degree programs. We also present findings on how the boot camp and university participants viewed their role in developing necessary skills for employability. Results indicate that hiring managers filling positions, generally have a favorable perspective of coding boot camp hires in relation to their demonstration of \"soft\" skills, such as teamwork, passion, and persistence; With regards to four-year university hires, several industry representatives indicated that a four-year degree is mandatory for hire, while also listing a solid understanding of CS principles and substantial exposure to mathematics. The Discussion section focuses on the future potential of coding boot camps as an alternative training ground for the software development industry.", "authors": [{"name": "Louise Ann Lyon", "affiliation": "Education, Training, Research Associates, Scotts Valley, CA, USA"}, {"name": "Cinamon Bailey", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Emily Green", "affiliation": "Education, Training, Research Associates, Scotts Valley, CA, USA"}, {"name": "Quinn Burke", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["industry needs", "coding boot camps", "experiential learning"]}, {"title": "An Experience Report on a Boot-Camp Style Programming Course", "link": "https://dl.acm.org/doi/10.1145/3159450.3159541", "abstract": "Recently, there has been a strong demand for talented ICT (Information and Communication Technology) graduates in the software industry in New Zealand. To meet this demand, in 2015, the government of New Zealand provided funding for three new ICT Graduate Schools. The challenge for the schools was twofold: to provide a qualification for students transitioning into ICT and to prepare those with an ICT education for the workforce. Each of the Schools offer different programmes. We offer two postgraduate programmes for growing talent and knowledge to support the New Zealand's ICT sector. In this paper, we describe our experience with delivering one of the postgraduate programmes, the Postgraduate Certificate in Information Technology. The programme consists of two courses, Programming for Industry and Programming with Web Technologies. The courses focus on providing industry-focused education to students with non-ICT backgrounds for a career in IT. The programme has been running for 2 years and runs over one semester (12 weeks) in a \"boot-camp\" style, which has proved to be successful. In this paper, we provide an overview of the features of the programme, which incorporates industry-focused activities for building students' knowledge relevant to the software industry. Finally, we discuss key challenges and identify directions for improvement.", "authors": [{"name": "Yu-Cheng Tu", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Gillian Dobbie", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Cameron Grout", "affiliation": "University of Waikato, Hamilton, New Zealand"}, {"name": "Ian Warren", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Andrew Meads", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["programming education", "learning by doing", "bootcamps"]}, {"title": "A Collaborative Course for Learning How to Teach Summer Java Coding Camps", "link": "https://dl.acm.org/doi/10.1145/3159450.3159610", "abstract": "Summer coding or programming camps are popular. With sufficient organization, offering these camps at higher education institutions can facilitate outreach objectives including engaging underrepresented groups. However, the challenges involved in organizing and offering a camp are many, including: recruitment of instructors and campers, camp management, finances, and curriculum development. We addressed these challenges by engaging a non-profit summer camp provider, Pacific Science Center (PSC), to handle camp logistics; and offered a new course for students with backgrounds in computer science (CS) or education (ED) to learn to teach Java programming and develop a curriculum appropriate for middle school aged campers. The university students then worked as paid summer camp instructors. Three professors, one each from CS, ED, and the Office of Research, co-planned and co-facilitated the course. Reflecting a hands-on and collaborative learning philosophy of PSC camps, the course grouped students into multidisciplinary teams and challenged the teams to learn by collaboratively developing and practice teaching the content. By the end of the course, we had classroom-ready instructors with technical knowledge in both programming and learning theories and a customized curriculum ready for use. This paper details our project, including results from the summer camps. With all developed materials freely available. Interested institutions can either adapt the curriculum or offer a similar course.", "authors": [{"name": "Kulsoom Mansoor", "affiliation": "University of Washington Bothell, Bothell, WA, USA"}, {"name": "Karen Gourd", "affiliation": "University of Washington Bothell, Bothell, WA, USA"}, {"name": "Kelvin Sung", "affiliation": "University of Washington Bothell, Bothell, WA, USA"}, {"name": "Riley Gaggero", "affiliation": "University of Washington Bothell, Bothell, WA, USA"}, {"name": "Ann McMahon", "affiliation": "University of Washington Bothell, Bothell, WA, USA"}], "tags": ["summer coding camp", "outreach", "broad impact", "java programming", "cross-disciplinary course"]}, {"title": "Session details: Paper Session: Tools and Exercises", "link": "https://dl.acm.org/doi/10.1145/3247845", "abstract": "No abstract available.", "authors": [{"name": "Ben Stephenson", "affiliation": "University of Calgary"}], "tags": []}, {"title": "Strategies for Basing the CS Theory Course on Non-decision Problems", "link": "https://dl.acm.org/doi/10.1145/3159450.3159557", "abstract": "Computational and complexity theory are core components of the computer science curriculum, and in the vast majority of cases are taught using decision problems as the main paradigm. For experienced practitioners, decision problems are the best tool. But for undergraduates encountering the material for the first time, we present evidence that non-decision problems (such as optimization problems and search problems) are preferable. In addition, we describe technical definitions and pedagogical strategies that have been used successfully for teaching the theory course using non-decision problems as the central concept.", "authors": [{"name": "John MacCormick", "affiliation": "Dickinson College, Carlisle, PA, USA"}], "tags": ["decision problem", "computational complexity", "theory of computation"]}, {"title": "Epplets: A Tool for Solving Parsons Puzzles", "link": "https://dl.acm.org/doi/10.1145/3159450.3159576", "abstract": "Performance on Parsons puzzles has been found to correlate with that on code-writing exercises. Parsons puzzles are preferred by students over alternative programming tasks. In order to make Parsons puzzles widely available to students in the introductory programming course, we developed a tool that administers the puzzles in C++, Java and C#, called epplets. Our design of the tool improves upon the work done by earlier researchers in several ways: students rearrange lines of code rather than program fragments; they get credit based on the number of actions they take to reassemble the code; they get feedback that helps them fix their incorrect answer; and the tool adapts to the needs of the student. The tool runs as a Java Web application. We describe our experience using the tool for two years: how it benefited the students; the revisions made to address the feedback provided by the users; and our plans for future work. We found that practicing with the tool helped reduce the time and actions with which students solved successive puzzles.", "authors": [{"name": "Amruth N. Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["parsons puzzles", "interactive tool", "computer science"]}, {"title": "Connect the Dots to Prove It: A Novel Way to Learn Proof Construction", "link": "https://dl.acm.org/doi/10.1145/3159450.3159609", "abstract": "This paper describes a new method for helping students improve their ability to develop proofs, a skill necessary for comprehending and appreciating the foundational topics of computer science. Our method transforms ordinary pen-and-paper homework problems into a puzzle-like game, where students connect dots to justify assertions, in a quest to reach a desired goal. We have implemented a software tutoring system using this method, for students to use at home as an optional study aid. Potentially, our system could one day become a full replacement for traditional hand-written homework, which has the additional benefit for course instructors of automating the grading of student work. Our system is also easy to adapt to any class that requires students to write proofs, and it is easy for instructors to create new problems to use with this system. This stands in contrast to many other educational tools for teaching proofs, which are limited to specific topic domains. We have demonstrated the versatility of our system by testing it in two computer science classes at a large public university. One was a Sophomore-level discrete mathematics course where the students were learning first-order prepositional logic, and the other was a Junior-level algorithms course where students were being first exposed to the concept of NP-completeness. Students from our experiments reported that they would like our system to be used in more of their classes.", "authors": [{"name": "Beverly Woolf", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}, {"name": "Andrew McGregor", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}, {"name": "Mark McCartin-Lim", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}], "tags": ["intelligent tutoring systems", "active learning", "discrete math", "theoretical computer science", "logic", "e-learning", "proofs", "complexity theory", "automated grading", "algorithms"]}, {"title": "Rising CS Enrollments: Meeting the Challenges", "link": "https://dl.acm.org/doi/10.1145/3159450.3159628", "abstract": "No abstract available.", "authors": [{"name": "Tracy Camp", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Eric Roberts", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Jodi Tims", "affiliation": "Baldwin Wallace University, Berea, OH, USA"}, {"name": "David Culler", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Charles Isbell", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["enrollment growth", "cs education", "national academies"]}, {"title": "2018 Panel of Computing Students with Disabilities", "link": "https://dl.acm.org/doi/10.1145/3159450.3159615", "abstract": "A panel of students with disabilities who are pursuing computing degrees will describe their experiences both in and out of the classroom. The goal of the panel is to provide the audience with an opportunity to hear first-hand how their educational needs were met as non-traditional computing students. In addition to the panelists' short presentations, the moderator will facilitate a dialog between the members of the audience and the panelists.", "authors": [{"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Ramin Ayanzadah", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Kevin Wolfe", "affiliation": "Gallaudet University, Washington, DC, USA"}, {"name": "Samsara N. Counts", "affiliation": "George Washington University, Washington, DC, USA"}, {"name": "Kavita Krishnaswamy", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}], "tags": ["disability", "accessibility", "education"]}, {"title": "How am I Going to Grade All These Assignments?: Thinking About Rubrics in the Large", "link": "https://dl.acm.org/doi/10.1145/3159450.3159641", "abstract": "With the record growth in computing classes, it has been challenging for faculty to keep up with the logistics of the classroom, particularly in assessment. Automatic grading software and unit tests have been employed successfully in many settings to help ensure proper scoring of programming assignments. However, assignments that are not necessarily complete programs (in-class short quizzes, homework problems or worksheets, exams) present different challenges for scoring. In this session, we propose some tips and techniques for scoring such assessment items quickly and consistently, with the added benefit that grading criteria are clearer to the students.", "authors": [{"name": "Adrienne Decker", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Crystal Furman", "affiliation": "The College Board, Atlanta, GA, USA"}, {"name": "John Cigas", "affiliation": "Park University, Parkville, MO, USA"}, {"name": "Timothy Gallagher", "affiliation": "Winter Springs High School, Winter Springs, FL, USA"}], "tags": ["training team of graders", "assessing student work", "rubrics"]}, {"title": "SIGCSE Filk Circle: CS Parody Songs for Learning, Engagement, and Fun", "link": "https://dl.acm.org/doi/10.1145/3159450.3159640", "abstract": "In a session with live music and collaborative parody, we celebrate the long tradition of computing parody songs (\"filks\") and their potential to contribute to education and a fun environment in CS courses. We perform several new and classic CS filks, such as \"Like it Called on Me (QuickSort)\" [1], interspersing discussion of how and why these parodies were written. We also propose a song for the audience to parody and walk them through a structured small-group activity to help them brainstorm topics and lyrical phrases and fit them to the existing lyrics and music. Attendees should expect to laugh (and possibly cry) with the singing and to leave inspired to incorporate filks and other creative activities into their computing education practice: playing, performing, or writing songs themselves, and encouraging their students to do so as well.", "authors": [{"name": "Steven A. Wolfman", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "John P. Dougherty", "affiliation": "Haverford College, Haverford, PA, USA"}, {"name": "Patrick Virtue", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["filks", "singing", "parodies", "music"]}, {"title": "Session details: Paper Session: Algorithms", "link": "https://dl.acm.org/doi/10.1145/3247846", "abstract": "No abstract available.", "authors": [{"name": "Muztaba Fuad", "affiliation": "Winston-Salem State University"}], "tags": []}, {"title": "Quick-Sort: A Pet Peeve", "link": "https://dl.acm.org/doi/10.1145/3159450.3159535", "abstract": "The traditional functional formulation of quick-sort is simple and elegant. But is it fast? Through a dialog, we observe that this traditional formulation does not retain certain crucial properties of the imperative version. We include a known derivation of a higher performing functional implementation together with a graph that illustrates the differences. Our pet peeve is that the faster quick-sort is frequently left out of texts on functional programming.", "authors": [{"name": "Travis Whitaker", "affiliation": "Alphasheets, Inc., San Francisco, CA, USA"}, {"name": "Arthur Nunes-Harwitt", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Matthew Gambogi", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["performance", "functional programming", "quick-sort", "education", "algorithms"]}, {"title": "Map-based Algorithm Visualization with METAL Highway Data", "link": "https://dl.acm.org/doi/10.1145/3159450.3159583", "abstract": "We present the algorithm visualization capabilities of the METAL project. Using METAL's graph data which represents highway systems, a selection of interactive algorithm visualizations are performed. Progress of the algorithm is shown by changing the colors of the graph's vertices and/or edges overlaid on Google Maps and in color-coded tabular form, including contents of important data structures. Advantages include the real-world data set and the variety of data sizes available, enhancing student engagement. While many visualizations and visualization tools exist for graph and related algorithms, most focus on small, synthetic graphs. We describe our algorithm visualization capabilities, which include implementations of sequential search, graph traversals, Dijkstra's algorithm, and convex hulls. These can be executed on graphs ranging in size from a few vertices and edges to hundreds. We also present results of a survey of students who have used METAL's algorithm visualizations.", "authors": [{"name": "Arjol Pengu", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Lukasz Ziarek", "affiliation": "University at Buffalo, Buffalo, NY, USA"}, {"name": "MariaRose Bamundo", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Clarice F. Tarbay", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Razieh Fathi", "affiliation": "University at Buffalo, Buffalo, NY, USA"}, {"name": "James D. Teresco", "affiliation": "Siena College, Loudonville, NY, USA"}], "tags": ["algorithm visualization.", "graph algorithms", "pedagogical tools"]}, {"title": "Student Misconceptions of Dynamic Programming", "link": "https://dl.acm.org/doi/10.1145/3159450.3159528", "abstract": "Dynamic Programming (DP) is considered to be one of the most difficult topics for students to understand in theoretical CS. Prior work suggests that misconceptions arise even when students have completed a course in which there is considerable focus on learning how to solve DP problems. We conducted think-aloud interviews with students who have completed the DP portion of the Algorithms course at a top North American research university. We report on three themes and their misconceptions discovered through this process. The first theme delves into students' struggles defining the notion of a subproblem and identifying particular subproblems. The second theme focuses on the understanding and usage of DP solution techniques compared to other algorithmic approaches. The third theme is composed of misconceptions related to defining and using recurrences. Analysis of each misconception provides insight into student thinking and offers ideas for improving the education of DP to university students.", "authors": [{"name": "Daniel Zingaro", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Larry Yueli Zhang", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Shamama Zehra", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Aishwarya Ramanathan", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}], "tags": ["misconceptions", "dynamic programming", "algorithms"]}, {"title": "Session details: Paper Session: CS1 #2", "link": "https://dl.acm.org/doi/10.1145/3247847", "abstract": "No abstract available.", "authors": [{"name": "Christopher Moretti", "affiliation": "Princeton University"}], "tags": []}, {"title": "BlueBook: A Computerized Replacement for Paper Tests in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159587", "abstract": "This paper presents BlueBook, a lightweight, cross-platform, computer-based, open source examination environment that overcomes traditional hurdles with computerized testing for computer science courses. As opposed to paper exam testing, BlueBook allows students to type coding problems on their laptops in an environment similar to their normal programming routine (e.g., with syntax highlighting), but purposefully does not provide them the ability to compile and/or run their code. We seamlessly transitioned from paper exams to BlueBook and found that students appreciated the ability to type their responses. Additionally, we are just beginning to harness the benefits to grading by having student answers in digital form. In the paper, we discuss the pedagogical benefits and trade-offs to using a computerized exam format, and we argue that both the students and the graders benefit from it.", "authors": [{"name": "Chris Piech", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Chris Gregg", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["assessment", "computerized exam", "pedagogy"]}, {"title": "Using a Computer-based Testing Facility to Improve Student Learning in a Programming Languages and Compilers Course", "link": "https://dl.acm.org/doi/10.1145/3159450.3159500", "abstract": "While most efforts to improve students' learning in computer science education have focused on designing new pedagogies or tools, comparatively little research has focused on redesigning examinations to improve students' learning. Cognitive science research, however, has robustly demonstrated that getting students to practice using their knowledge in testing environments can significantly improve learning through a phenomenon known as the testing effect. The testing effect has been shown to improve learning more than rehearsal strategies such as re-reading a textbook or re-watching lectures. In this paper, we present a quasi-experimental study to examine the effect of using frequent, automated examinations in an advanced computer science course, \"Programming Languages and Compilers\" (CS 421). In Fall 2014, students were given traditional paper-based exams, but in Fall 2015 a computer-based testing facility enabled the course to offer more frequent examinations while other aspects of the course were held constant. A comparison of 292 student scores across the two semesters revealed a significant change in the distribution of students' grades with fewer students failing the final examination, and proportionately more students now earning grades of B and C instead. This data suggests that focusing on redesigning the nature of examinations may indeed be a relatively untapped opportunity to improve students' learning.", "authors": [{"name": "Elsa L. Gunter", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Terence Nip", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Geoffrey L. Herman", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Matthew West", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}, {"name": "Jason W. Morphew", "affiliation": "University of Illinois at Urbana-Champaign, Urbana, IL, USA"}], "tags": ["testing effect", "computer-based testing", "programming languages", "compilers"]}, {"title": "Including Coding Questions in Video Quizzes for a Flipped CS1", "link": "https://dl.acm.org/doi/10.1145/3159450.3159504", "abstract": "In an effort to improve student performance in a flipped classroom environment, this paper explores the impact of including auto-graded coding questions in gate check quizzes associated with videos for a flipped CS1 course. Previous work showed that having students complete multiple choice questions that were intended to verify that they had done the preparation work did not have a statistically significant impact on outcomes as measured through written quizzes and exams. In an attempt to engage higher-level processing of learned information, this work builds on top of that by adding questions that require students to write short segments of code for most of the quizzes in addition to doing some multiple choice questions. We found that students who were given these coding video quizzes performed better on written assessments, especially for the final exam.", "authors": [{"name": "Yu Zhang", "affiliation": "Trinity University, San Antonio, TX, USA"}, {"name": "Albert Jiang", "affiliation": "Trinity University, San Antonio, TX, USA"}, {"name": "Lisa L. Lacher", "affiliation": "University of Houston - Clear Lake, Houston, TX, USA"}, {"name": "Mark C. Lewis", "affiliation": "Trinity University, San Antonio, TX, USA"}], "tags": ["blended learning", "novice programming", "inverted classroom", "active learning", "CS1", "flipped learning", "assessments", "flipped classroom", "programming", "video quizzes"]}, {"title": "Session details: Paper Session: Curriculum Issues #2", "link": "https://dl.acm.org/doi/10.1145/3247848", "abstract": "No abstract available.", "authors": [{"name": "Xuesong Zhang", "affiliation": "Southeast Missouri State University"}], "tags": []}, {"title": "Understanding Computing in a Hybrid World: On the Undergraduate Curriculum Front-End Development", "link": "https://dl.acm.org/doi/10.1145/3159450.3159532", "abstract": "Computing is an interdisciplinary field that can be approached from different points of view. Each point of view has its goals, aims and fundamental assumptions. This makes computing a complex discipline. Moreover, new computing disciplines appear regularly. With the trend that ICT-professionals should have non-ICT competences as well, and non-ICT-professionals should have ICT-competences, new computing curricula are often hybrid in nature. As a hybrid computing curriculum cannot cover the full range of computing, it is interesting to investigate the 'computing part' of such curricula. Our analysis framework consists of three elements: the curricular components 'goals and objectives' and 'instructional strategies', and the underlying epistemological view on the discipline ('cultural styles'). Taking a historical perspective, we describe the origins of the ACM/IEEE Curriculum Recommendation series. We discuss the three main cultural styles of computing: theoretical, scientific and engineering. Observing that in a curriculum the above elements should be aligned, we present three trade-offs for the case of hybrid computing curricula. We apply our results to two concrete examples, Liberal Arts and Computer Science and Front End Development. Based on our investigation, we formulate recommendations for designers of hybrid computing curricula. We recommend, for example, discussing disciplinary boundaries and resulting trade-offs explicitly while designing and documenting curricula.", "authors": [{"name": "Erik Barendsen", "affiliation": "Radboud Universiteit & Open Universiteit, Nijmegen, Netherlands"}, {"name": "Johan Versendaal", "affiliation": "Open Universiteit, Heerlen, Netherlands"}, {"name": "Laura Benvenuti", "affiliation": "Hogeschool van Amsterdam, Amsterdam, Netherlands"}, {"name": "Gerrit C. van der Veer", "affiliation": "Dalian Maritime University, Dalian, China"}], "tags": ["front end development", "interdisciplinary programs (CS+X)", "cultural styles in computing", "hybrid undergraduate curricula"]}, {"title": "Curriculum-Aligned Work-Integrated Learning: A New Kind of Industry-Academic Degree Partnership", "link": "https://dl.acm.org/doi/10.1145/3159450.3159543", "abstract": "Work-integrated learning is a common approach to add practical, real-world work experience to academic settings. Traditional co-op programs in colleges and universities alternate courses with semesters spent as an intern at a relevant workplace. We have designed an academic-industry partnership that takes work-integrated learning further by deliberately aligning workplace experience to the academic curriculum. Our students earn a Bachelor of Computer Science from the university, and are paid employees of the industry partner throughout their degree. While advanced courses and electives are taken on campus as usual, some core computer science classes and practicum courses are delivered with the industry partner so as to integrate them with placements on site. Assessment remains the responsibility of the university. In this report, we describe the partnership from the perspective of the industry partner. We describe our goals, partnership design, and first two iterations of the implementation. We discuss the challenges we have faced with our first cohort, and share suggestions for others looking to create similar programs.", "authors": [{"name": "Gail Carmichael", "affiliation": "Shopify, Ottawa, ON, Canada"}, {"name": "Christine Jordan", "affiliation": "Shopify, Ottawa, ON, Canada"}, {"name": "Andrea Ross", "affiliation": "Shopify, Ottawa, ON, Canada"}, {"name": "Alison Evans Adnani", "affiliation": "Shopify, Ottawa, ON, Canada"}], "tags": ["internships", "apprenticeship", "work-integrated learning", "industry partnership"]}, {"title": "Integrating A Career Preparedness Module into CS2 Curricula Through The Teaching C++ and Java Side-by-Side", "link": "https://dl.acm.org/doi/10.1145/3159450.3159552", "abstract": "A key learning objective of the CS2 curriculum is for a student to obtain the necessary computer science skills to be proficient in the understanding and usage of software objects in an object-oriented programming language. In typical CS programs there are two prevalent object-oriented languages that are used to fulfill this requirement: Java and C++. In most instances, one language is selected as the primarily tool in which to teach these concepts. In other instances, both languages may be used, but not in a side-by-side fashion which can often leave the students confused or with an incomplete understanding of both languages. Each language has its documented trade-offs (benefits and drawbacks) when it comes to adequately preparing students. An aspect that is often overlooked as part of this traditional course structure is the ability to leverage a teaching component that allows the students to analyze trade-offs between languages and the Why/When/How to select a given language based upon their analysis. We provide an outline for how these two languages can be successfully taught in a side-by-side, or simultaneous, fashion that will still satisfy all of the existing expectations and requirements of a course. We describe how this component can be integrated into a career preparation module that will further augment the students' overall learning experience and their academic preparation. Results of this trial demonstrate that student satisfaction, understanding, learning of concepts, and educational preparation can be improved while maintaining the necessary standards set forth as part of the CS2 curriculum.", "authors": [{"name": "Ryan Rybarczyk", "affiliation": "Indiana University-Purdue University, Indianapolis, Indianapolis, IN, USA"}, {"name": "Lingma Acheson", "affiliation": "Indiana University-Purdue University, Indianapolis, Indianapolis, IN, USA"}], "tags": ["cs2", "java", "c++", "career preparation", "curriculum"]}, {"title": "Session details: Paper Session: Diversity #2", "link": "https://dl.acm.org/doi/10.1145/3247849", "abstract": "No abstract available.", "authors": [{"name": "Andrea Lawrence", "affiliation": "Spelman College"}], "tags": []}, {"title": "Informal Mentoring of Adolescents about Computing: Relationships, Roles, Qualities, and Impact", "link": "https://dl.acm.org/doi/10.1145/3159450.3159475", "abstract": "Influencing adolescent interest in computing is key to engaging diverse teens in computer science learning. Prior work suggests that informal mentorship may be a powerful way to trigger and maintain interest in computing, but we still know little about how mentoring relationships form, how mentors trigger and maintain interest, or what qualities adolescents value in informal mentors. In a 3-week career exploration class with 18 teens from underrepresented groups, we had students write extensively about their informal computing mentors. In analyzing their writing, we found that most teens had informal computing mentors, that mentors were typically teachers, friends, and older siblings (and not parents or school counselors), and that what teens desired most were informal mentors that were patient, helpful, inspiring, and knowledgeable. These findings suggest that computing mentors can come in many forms, that they must be patient, helpful, and inspiring, but that they also require content knowledge about computing to be meaningful. Future work might explore what knowledge of computing is sufficient to empower teachers, parents, peers, and family to be effective computing mentors.", "authors": [{"name": "Katie Davis", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Leanne Hwa", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Jason C. Yip", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Andrew J. Ko", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["adolescence", "interest development", "informal mentorship"]}, {"title": "A National Study of Undergraduate Research Experiences in Computing: Implications for Culturally Relevant Pedagogy", "link": "https://dl.acm.org/doi/10.1145/3159450.3159510", "abstract": "In this paper, we describe a large-scale, long-term study of a National Science Foundation undergraduate research program via the Computer and Information Science and Engineering (CISE) Research Experiences for Undergraduates (REU) Evaluation Toolkit project. The overarching research questions are: what attitudinal shifts occur for undergraduate research experience student participants, and do experience perceptions differ based upon student demographics? Results across two cohort years showed statistically significant gains for several key program level outcomes. However, intent to go to graduate school decreased in both cohorts. Gender and ethnicity differences were observed. Women and underrepresented minority group students had significantly higher scores for several factors. These findings are discussed in context of culturally relevant pedagogy for undergraduate research programs. This study is unique in its scale and scope, providing a depiction of student outcomes across multiple cohorts of a national sample including over 58 computing research sites and more than 900 undergraduate students.", "authors": [{"name": "Joseph Allen", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}, {"name": "Huifang Zuo", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Audrey Smith Rorrer", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}], "tags": ["undergraduate research experiences", "computing education", "underrepresented minority", "culturally relevant pedagogy", "gender"]}, {"title": "Diversity Across a Decade: A Case Study on Undergraduate Computing Culture at the University of Illinois", "link": "https://dl.acm.org/doi/10.1145/3159450.3159497", "abstract": "While we celebrate the dramatic increase in women's undergraduate enrollment at computer science programs around the country, to see this surge translate into career-long outcomes, we cannot ignore ongoing gendered and racialized disparities in computing, particularly as they relate to a student's sense of belonging. Even in times of high enrollment, fostering a sense of belonging cannot occur just through ad-hoc methods, the goodwill of a few faculty, or a standalone mentoring program. Policies and structures must be put into place and enacted holistically. We report on a multi-phase, 10-year case study of undergraduate student experiences at the University of Illinois (2007, n=61; 2017, n=339). Our 2017 study explores the policies and structures enacted over a decade and their impact on departmental culture. We report on three areas: i) Inclusive classroom experiences; ii) Quality of mentorship opportunities; iii) Student sense of identity. While there have been significant departmental improvements, there are some cultural, policy, and structural issues to be addressed in order to foster a sense of belonging and success for all students.", "authors": [{"name": "Heather E. Metcalf", "affiliation": "Association for Women in Science, Washington, D.C., USA"}, {"name": "Cinda Heeren", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Tanya L. Crenshaw", "affiliation": "New Relic, Portland, OR, USA"}, {"name": "Erin Wolf Chambers", "affiliation": "Saint Louis University, Saint Louis, MO, USA"}], "tags": ["professional teaching track", "diversity", "mentorship", "case study"]}, {"title": "Session details: Paper Session: Elementary #1", "link": "https://dl.acm.org/doi/10.1145/3247850", "abstract": "No abstract available.", "authors": [{"name": "Cecily Heiner", "affiliation": "Southern Utah University"}], "tags": []}, {"title": "Subgoal Labeled Worked Examples in K-3 Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159494", "abstract": "Worked examples are step-by-step instructions that are used to demonstrate and teach problem-solving processes. Subgoal labels are used to group the steps of worked examples into cohesive units that may help the learner to identify key information about the process. We conducted a study on the applicability of subgoal labeled worked examples with 9 and 10-year-old pupils (n=43) who were learning the principles of programming using LightBot. Using a between groups design, pupils in three classes were working with LightBot. One of the groups had no additional instructional materials for the LightBot environment, one of the groups had a set of worked examples without subgoal labels, and the last group had the same set of worked examples with subgoal labels. We measured pupils' success in terms of how many LightBot levels they completed during the class. In addition, pupils' beliefs and attitudes towards programming were assessed before and after the experiment. Our results indicate that in a programming environment such as LightBot, simple worked examples provide no significant benefit over no examples, but worked examples with subgoal labels can help pupils complete more levels. At the same time, the instructional materials in the study had no significant influence on the pupils' beliefs towards computer use or programming.", "authors": [{"name": "Johanna Joentausta", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["subgoal labeling", "worked examples with subgoal labels", "worked examples", "K-3 education", "programming education", "primary education", "K-12 education", "computational thinking"]}, {"title": "\"I Think We Should...\": Analyzing Elementary Students' Collaborative Processes for Giving and Taking Suggestions", "link": "https://dl.acm.org/doi/10.1145/3159450.3159507", "abstract": "Collaboration plays an essential role in computer science. While there is growing recognition that learners of all ages can benefit from collaborative learning, little is known about how elementary-age children engage in collaborative problem solving in computer science. This paper reports on the analysis of a dataset of elementary students collaborating on a programming project. We found that children tend to make several different types of suggestions. In turn, their partners address those suggestions in different ways such as by implementing them directly in code or by replying through dialogue. We observe that students regularly accept or reject suggestions without explanation or explicit acknowledgement and that it is often unclear whether they understand the substance of the suggestion. These behaviors may inhibit the development of a shared understanding between the partners and limit the value of the collaborative process. These results can inform instructional practice and the development of new adaptive tools that facilitate productive collaborative problem solving in computer science.", "authors": [{"name": "Collin Lynch", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Fernando J. Rodr\u00edguez", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Jennifer Tsan", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["pair programming", "elementary school", "collaboration", "dialogue"]}, {"title": "Bricklayer: Elementary Students Learn Math through Programming and Art", "link": "https://dl.acm.org/doi/10.1145/3159450.3159515", "abstract": "As computer science becomes more prevalent in the K-12 world, elementary schools are increasingly adopting computing curricula. Computer scientists have recognized the connection between math and computer science, but little work has demonstrated how and whether computer science can support improved learning in math. This paper reports on a project in which elementary students in a gifted program used Bricklayer, a functional programming environment that supports artistic and mathematical expression. A pre- and post-test design demonstrates significant learning gains in coordinate graphing and visual-spatial skills.", "authors": [{"name": "Victor Winter", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}, {"name": "Betty Love", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}, {"name": "Deanna Moisset", "affiliation": "Omaha Public Schools, Omaha, NE, USA"}, {"name": "Michael Matthews", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}, {"name": "Michelle Friend", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}, {"name": "Ian Goodwin", "affiliation": "University of Nebraska, Omaha, Omaha, NE, USA"}], "tags": ["visual spatial skills", "mathematics", "functional programming", "elementary school", "coordinate graphing", "art"]}, {"title": "Session details: Paper Session: Errors", "link": "https://dl.acm.org/doi/10.1145/3247851", "abstract": "No abstract available.", "authors": [{"name": "Brian Railing", "affiliation": "Carnegie Mellon University"}], "tags": []}, {"title": "Fix the First, Ignore the Rest: Dealing with Multiple Compiler Error Messages", "link": "https://dl.acm.org/doi/10.1145/3159450.3159453", "abstract": "In order to help students learning to develop computer programs, several computing education researchers have analyzed the compiler error messages generated by novices' attempts to compile their programs. The goal is to help students diagnose the errors they make through the messages generated by the compiler. This paper builds on that previous work by applying a technique based on a heuristic well-known to programmers - fix the first error and ignore the rest - to the analysis of over 21 million compiler error messages from the Blackbox dataset. We find that the ranks and frequencies obtained by considering all error messages are generally consistent with previously published lists, but when we consider first messages only, these ranks and frequencies are different. These differences could have important implications for teaching, and can inform tool design and future research efforts.", "authors": [{"name": "Tianyi Tao", "affiliation": "Fudan University, Shanghai, China"}, {"name": "Cormac Murray", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Changheng Song", "affiliation": "Fudan University, Shangahi, China"}, {"name": "Kate Sanders", "affiliation": "Rhode Island College, Providence, RI, USA"}, {"name": "Robert McCartney", "affiliation": "University of Connecticut, Storrs, CT, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["debugging", "CS1", "cascading error messages", "buried error messages", "compiler error messages", "subsequent error messages", "blackbox", "novice syntax errors", "novice programmers"]}, {"title": "The Effects of Enhanced Compiler Error Messages on a Syntax Error Debugging Test", "link": "https://dl.acm.org/doi/10.1145/3159450.3159461", "abstract": "There is an active strand of research in the literature exploring the effects of Enhanced Compiler Error Messages on student programming behavior, however many results seem conflicting. This is compounded by the fact that directly comparing these results is difficult as these studies utilize different metrics, and what metrics are best suited to measure the effects of enhanced compiler error messages is not known. Common to most studies to-date is that the metrics employed measure how many errors students produce, and/or rectify while writing programs. This study takes a different approach by measuring how many pre-existing syntax errors are rectified by students while debugging programs. Specifically, we measured the effect of enhanced compiler error messages in an empirical control/intervention experiment where students were given the task of removing syntax errors from non-compiling source code they did not write. We find a significant positive effect on the overall number of errors rectified, as well as the number of certain specific error types, but no significant effect on the number of non-compiling submissions or student scores. These results (in different ways) support the findings of several recent studies and suggest that their results may not be as conflicting as they seem. This is evidence that enhanced error messages may be effective, but also that the signal of these effects are relatively weak, indicating that how and what is measured when attempting to observe these effects is important.", "authors": [{"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Kyle Goslin", "affiliation": "CCT College Dublin, Dublin, Ireland"}, {"name": "Graham Glanville", "affiliation": "CCT College Dublin, Dublin, Ireland"}], "tags": ["debugging", "syntax error messages", "CS1", "Java", "compiler error messages", "enhanced compiler error messages", "novice programmers"]}, {"title": "Novice Programmers' Reasoning about Reversing Conditional Statements", "link": "https://dl.acm.org/doi/10.1145/3159450.3159499", "abstract": "We want undergraduate students to develop higher-order thinking skills that enable them to master program behaviour. Nonetheless, many students of both introductory and advanced programming courses appear to struggle with the abstraction required for this purpose. In particular, a recent think-aloud study showed a group of students were able to reason about and reverse the effect of assignments and vector updates, but most of them failed when asked to reverse a seemingly simple conditional statement.\nWe have extended that study by assigning a similar task to two cohorts of novice programmers as part of their final exam paper. Students' answers, including code and short explanations, have been analysed through the lens of the SOLO taxonomy: 28% of the solutions were correct (classified as relational); an additional 23% were partially correct but failed to identify the overlap between the two paths of the conditional statement (classified as multistructural). Furthermore, the concept of reversibility and related \"low-ceiling\" tasks, such as the one discussed in this study, could be useful resources for educators to assess and develop students' understanding of program behaviour.", "authors": [{"name": "Cruz Izu", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Amali Weerasinghe", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Claudio Mirolo", "affiliation": "University of Udine, Udine, Italy"}], "tags": ["program comprehension", "program state", "novice programmers", "reversibility", "solo taxonomy"]}, {"title": "Session details: Paper Session: Peer Mentoring", "link": "https://dl.acm.org/doi/10.1145/3247852", "abstract": "No abstract available.", "authors": [{"name": "Durga Suresh", "affiliation": "Wentworth Institute of Technology"}], "tags": []}, {"title": "Game Development with a Serious Focus", "link": "https://dl.acm.org/doi/10.1145/3159450.3159588", "abstract": "We report our experience teaching elective game development courses at two colleges at a public university. Over the past nine years these courses have been taught in a variety of languages on several platforms. As the courses evolved we introduced serious games with game-based-learning as a focus for the projects and ultimately offered a special topics elective in serious game development. In this paper, we discuss the merits of using serious games as a focus in game programming, including the benefits for students without a strong interest in gaming. We also describe the novel restructuring of one college's Computer Science elective sequence in response to recommendations from students, alumni, and an advisory board of computing professionals. By introducing 200-level electives, students are able to sample advanced topics including game development early in their academic sequence. This has led to involving more students in game-based undergraduate research which can result in increased interest and retention in Computer Science. We discuss our curriculum design and lessons learned including challenges and successes, and data from student surveys indicating student motivation and engagement.", "authors": [{"name": "Devorah Kletenik", "affiliation": "Brooklyn College, City University of New York, Brooklyn, NY, USA"}, {"name": "Deborah Sturm", "affiliation": "College of Staten Island, City University of New York, Staten Island, NY, USA"}], "tags": ["game development", "serious games", "game-based learning", "curriculum design"]}, {"title": "Catch 'em Early: Internship and Assistantship CS Mentoring Programs for Underclassmen", "link": "https://dl.acm.org/doi/10.1145/3159450.3159556", "abstract": "Recruiting and retaining STEM majors has been an ongoing challenge for colleges and universities. This research paper describes two initiatives to recruit and retain Computer Science (CS) majors that were implemented at Siena College starting in the fall of 2014. Both initiatives are directed at rising sophomores who have completed the first year CS sequence as an early strategy to encourage them to declare and complete the CS major. The first initiative is an early internship program directed at providing students an opportunity to apply those technical skills, extend their skill set, and introduce them to meaningful real-world projects between their freshman and sophomore years. The second initiative is a lab/classroom assistant program where sophomore or older students provide mentoring during lecture and lab sessions for the introductory CS courses. The paper provides preliminary findings, lessons learned, and directions for the future.", "authors": [{"name": "Sharon Small", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Meg Fryling", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Scott Vandenberg", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Robin Y. Flatland", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "MaryAnne Egan", "affiliation": "Siena College, Loudonville, NY, USA"}], "tags": ["internships", "outreach", "recruitment", "mentoring", "undergraduate teaching assistants"]}, {"title": "How Near Peer Mentoring Affects Middle School Mentees", "link": "https://dl.acm.org/doi/10.1145/3159450.3159525", "abstract": "In response to the national demand to increase participation in CS, we argue that youth's interest in computer science (CS) can be sparked by providing them with role models who are relatable and who resonate with their identities. To that end, we developed a mentoring model in which we train high schoolers to be near-peer mentors for middle schoolers learning to program in summer camps. In this paper, we present results from a mixed-methods study where we examined the relationship between mentor relatability and middle school campers' self-efficacy and interest in CS. Pre- and post-surveys were used to measure campers' affective outcomes around computing and mentor relatability. In addition, interviews and observations were used to illustrate the mechanisms that led to change in affect. Our findings suggest that mentor relatability is a significant predictor of campers' self-efficacy and interest in CS. Results from the qualitative data further exemplify how mentor relatability was perceived and manifested in the camps.", "authors": [{"name": "Megan Hamilton", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Katarina Pantic", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Frederick Poole", "affiliation": "Utah State University, logan, UT, USA"}, {"name": "Chongning Sun", "affiliation": "Utah State University, logan, UT, USA"}, {"name": "Jody Clarke-Midura", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Vicki Allan", "affiliation": "Utah State University, Logan, UT, USA"}], "tags": ["middle school youth", "app inventor", "near-peer mentors"]}, {"title": "Alternative Paths to Computing Careers and Their Role in Broadening Participation", "link": "https://dl.acm.org/doi/10.1145/3159450.3159624", "abstract": "Declaring a computer science (CS) major at the outset of college and going on to earn a computing degree may be the most direct route to a career in computing, but it is certainly not the only pathway. However, much of the work on pathways to computing careers focuses on those who have taken this traditional route, while less attention has been paid to those who pursue alternative pathways into computing. Understanding alternative pathways into computing may be particularly important to discussions about diversity in the field, as some research has shown that women and underrepresented minority (URM) students who enroll in CS courses are more likely than men and other majority students to be non-computing majors and to take computing courses later in their academic careers. This panel will provide perspectives from individuals with expertise in several alternative pathways into computing, such as through coding boot camps, undecided students, community colleges, and retrained end-user programmers.", "authors": [{"name": "Kathleen J. Lehman", "affiliation": "UCLA, Los Angeles, CA, USA"}, {"name": "Maureen Doyle", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Louise Ann Lyon", "affiliation": "ETR, Scotts Valley, CA, USA"}, {"name": "Kyle Thayer", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["recruitment", "community colleges", "coding boot camps"]}, {"title": "Best Practices in Academia to Remedy Gender Bias in Tech", "link": "https://dl.acm.org/doi/10.1145/3159450.3159618", "abstract": "The New York Times published an op-ed by Anita Hill [3] suggesting that women in tech consider class action to remedy the gender bias that is increasingly being reported in the mass-media. This panel raises the question \"what are we doing in undergraduate programs to reduce the 'Mad Men', 'Brogrammer' culture she describes that is increasingly being reported in the popular press. Part of our mission as educators is to develop professional behavior so that our students entering the workforce not only understand what it means to act professionally, but understand that it is their responsibility to actively push back on the existing bias within the tech culture. As moderator Ursula Wolz brings a depth of insight from 40 years of industrial and academic experience, including a National Science Foundation project to broaden participation in computing [5]. She does not believe this problem can be solved through quantitative data collection on who does well in computer science, but that SIGCSE needs to begin to collect good stories (ala Sally Fincher [2]) on what constitute best practices to support diversity. The panelists present a range of perspectives that have the potential to establish new cultural norms in the single most influential industry in our economy.", "authors": [{"name": "Michelle Trim", "affiliation": "University of Massachusetts, Amherst, Amherst, MA, USA"}, {"name": "Susan Rodger", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Ursula Wolz", "affiliation": "Bennington College, Bennington, VT, USA"}, {"name": "Lina Battestilli", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Bruce Maxwell", "affiliation": "Colby College, Waterville, ME, USA"}], "tags": ["ethics", "gender bias"]}, {"title": "The Role of Researcher-Practitioner Partnerships in CS4All: Lessons from the Field", "link": "https://dl.acm.org/doi/10.1145/3159450.3159626", "abstract": "No abstract available.", "authors": [{"name": "Lucia Dettori", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Helen Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Dennis Brylow", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Don Yanek", "affiliation": "Chicago Public Schools, Chicago, IL, USA"}], "tags": ["teacher professional development", "researcher-practitioner partnerships", "coaching", "exploring computer science", "high school", "equity"]}, {"title": "Preparing, Visualizing, and Using Real-world Data in Introductory Courses", "link": "https://dl.acm.org/doi/10.1145/3159450.3159616", "abstract": "Working with real-world data has increasingly become a popular context for introductory computing courses. As a valuable 21st century skill, preparing students to be able to divine meaning from data can be useful to their long-term careers. Because Data Science aligns so closely with computing, many of the topics and problems it affords as a context can support the core learning objectives in introductory computing classes. In many instances, incorporating a real-world dataset to provide concrete context for an activity or assignment can improve student engagement and understanding of the abstract educational content being presented. However, there are many problems inherent to bringing real-world data into introductory courses. How do instructors, with finite amounts of time and energy, find and prepare suitable datasets for their pedagogical needs? Once the datasets are ready, how can students conveniently interact with and draw meaning from the datasets, especially when they are used in complex projects that are typical of later introductory courses? On the other hand, how does an instructor balance the complexities of using real-world datasets in the classroom, making sure that students appreciate the meaningfulness of course activities and their connection to learning objectives? This panel brings together experts with experience in using real-world data in introductory computing courses. Each panelist provides unique perspectives and skills to the problem of preparing, interacting, visualizing, and using pedagogical datasets. This panel should be of particular interest to instructors who are considering integrating current and real-world data into their assignments and projects, and to educational developers who want to create and manage datasets for pedagogical purposes. The panel will follow a conventional format: 5 minutes of introduction, 10 minutes for each panelist to present, and then 30 minutes for audience Q&A.", "authors": [{"name": "Kalpathi Subramanian", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Austin Cory Bart", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Nadeem Abdul Hamid", "affiliation": "Berry College, Mount Berry, GA, USA"}, {"name": "Ruth E. Anderson", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["real world data", "data science", "visualization"]}, {"title": "Asking \"CS4What?\" as a Basis for CS4All: Workshop Tools to Support Sustainable K-12 CS Implementations", "link": "https://dl.acm.org/doi/10.1145/3159450.3159644", "abstract": "The rapid expansion of the Computer Science for All (CSforAll) movement in the United States has catalyzed promising policies, tools, and pedagogies for K-12 universal CS education. It has also created significant challenges for schools and districts, namely, decision-making around the programs, curricula, and professional development that will best align to their communities' broader visions and goals around equitable computing education for all.", "authors": [{"name": "June Ahn", "affiliation": "New York University, New York City, NY, USA"}, {"name": "Sara Vogel", "affiliation": "Graduate Center of the City University of New York, New York City, NY, USA"}, {"name": "Leigh Ann DeLyser", "affiliation": "CSNYC, New York City, NY, USA"}, {"name": "Rafi Santo", "affiliation": "New York University, New York City, NY, USA"}], "tags": ["coherent instructional systems", "cs for all", "policy implementation", "k12", "computing education purposes", "k-12", "csforall", "professional development"]}, {"title": "Session details: Paper Session: CS1 #3", "link": "https://dl.acm.org/doi/10.1145/3247853", "abstract": "No abstract available.", "authors": [{"name": "Brian Harrington", "affiliation": "University of Toronto"}], "tags": []}, {"title": "Achievement Goals in CS1: Replication and Extension", "link": "https://dl.acm.org/doi/10.1145/3159450.3159452", "abstract": "Replication research is rare in CS education. For this reason, it is often unclear to what extent our findings generalize beyond the context of their generation. The present paper is a replication and extension of Achievement Goal Theory research on CS1 students. Achievement goals are cognitive representations of desired competence (e.g., topic mastery, outperforming peers) in achievement settings, and can predict outcomes such as grades and interest. We study achievement goals and their effects on CS1 students at six institutions in four countries. Broad patterns are maintained --- mastery goals are beneficial while appearance goals are not --- but our data additionally admits fine-grained analyses that nuance these findings. In particular, students' motivations for goal pursuit can clarify relationships between performance goals and outcomes.", "authors": [{"name": "Diana Cukierman", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}, {"name": "Neena Thota", "affiliation": "University of Massachusetts, Amherst, Amherst, MI, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Belfield, Ireland"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Yingjun Cao", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Dastyni Loksa", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Phill Conrad", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["novice programming", "achievement goals", "cs1", "interest", "motivation"]}, {"title": "Formal Research Experiences for First Year Students: A Key to Greater Diversity in Computing?", "link": "https://dl.acm.org/doi/10.1145/3159450.3159472", "abstract": "Underrepresented students in computing (women and non-White/non-Asian men) are known to feel a weaker sense of belonging than majority students (Asian/White men). This difference is important because a low sense of belonging can lead to disengagement and attrition in education settings. In the current study, we assessed whether and how early formal research experience might narrow this gap in sense of belonging. The sample for this study derives from a longitudinal study on undergraduate students affiliated with computing departments across the United States. We used propensity scores to generate an appropriate sub-sample of students to compare against formal research participants (n = 110 formal research students; n = 110 students with no formal research experience). We found formal research experience during students/ first year was associated with a strong sense of mentor support during their second year. Perceived mentor support predicted a strong sense of belonging for underrepresented students, but not majority students. Importantly, the typical gap in sense of belonging among underrepresented and majority students disappeared among students with high mentor support. Our work suggests that formal research, when introduced early, might promote greater diversity in computing in the long term. We present a model for early undergraduate research, and resources for readers who wish to adopt the model.", "authors": [{"name": "Jane G. Stout", "affiliation": "Computing Research Association, Washington , DC, USA"}, {"name": "N. Bur\u00e7in Tamer", "affiliation": "Computing Research Association, Washington, DC, USA"}, {"name": "Christine J. Alvarado", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["undergraduate research", "mentorship", "sense of belonging", "underrepresented students"]}, {"title": "Models for Early Identification of Struggling Novice Programmers", "link": "https://dl.acm.org/doi/10.1145/3159450.3159476", "abstract": "There is much interest in predicting student performance in computer programming courses early in the semester to identify weak students who might benefit from targeted support. To this end, we analyzed detailed keystroke transcripts and outputs of compilation attempts during programming activities, both in and out of class. In linear regression models predicting grades, we identified multiple behavioral indicators and performance indicators that explained a significant portion of the variation in final grades using only the data collected within the first three weeks. Because the indicators identify specific behaviors and are generated automatically, they may be used as the basis for interventions instructors may use when counseling weaker students concerning their performance early in the course before they fall too far behind. Furthermore, in contrast with some other automated struggling-student detection models, our predictors are based on generic behaviors and generic performance metrics that can be extended to a wide range of introductory programming contexts. Our models also predict performance on a continuous scale rather than a binary \"weak\"/\"not weak\" classification, which would allow instructors to offer interventions to marginal students who want to improve, or to promising students who want to excel.", "authors": [{"name": "Jonathan P. Munson", "affiliation": "Manhattanville College, Purchase, NY, USA"}, {"name": "Joshua P. Zitovsky", "affiliation": "Manhattanville College, Purchase, NY, USA"}], "tags": ["automated detection of struggling students", "novice programmers", "modeling student outcomes"]}, {"title": "Session details: Paper Session: Diversity #3", "link": "https://dl.acm.org/doi/10.1145/3247854", "abstract": "No abstract available.", "authors": [{"name": "Jeff Forbes", "affiliation": "Duke University"}], "tags": []}, {"title": "Upward Mobility for Underrepresented Students: A Model for a Cohort-Based Bachelor's Degree in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159551", "abstract": "CSin3 is a cohort-based, three-year computer science bachelor's degree program that has increased graduation rates of traditionally underrepresented computer science students. A collaborative effort between a community college and a public university, CSin3 provides a clear pathway for upward socio-economic mobility into the high-paying technology industry. CSin3 students are 90% from traditionally underrepresented groups, 80% first-generation, 32% female, and have a three-year graduation rate of 71%, compared to a 22% four-year graduation rate for traditional computer science students. Upon graduation, CSin3 students score similarly on a standardized exam of computer science knowledge as compared to traditional students who graduate in 4 years or more. The first graduates had a job placement rate of 78% within two months of graduation, including positions at large technology companies like Apple, Salesforce, and Uber. By implementing a cohort-based learning community, a pre-defined course pathway, just-in-time academic and administrative support, comprehensive financial aid, and a focus on 21st century skills, the CSin3 program has demonstrated promising results in addressing the capacity, cost, quality, and diversity challenges present in the technology industry.", "authors": [{"name": "Bude Su", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}, {"name": "Zechariah Chawinga", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}, {"name": "Leslie Maxwell", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}, {"name": "Kathryn Cunningham", "affiliation": "California State University, Monterey Bay & Georgia Institute of Technology, Seaside, CA, USA "}, {"name": "Sonia Arteaga", "affiliation": "Hartnell College, Salinas, CA, USA"}, {"name": "William J. Welch", "affiliation": "Hartnell College & Central Texas College, Salinas, CA, USA"}, {"name": "Sathya Narayanan", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}], "tags": ["transfer pathway", "community college", "underrepresented minority students", "cohort-based learning", "graduation rates.", "first-generation college students", "accelerated degree program"]}, {"title": "Reflections of a Diversity, Equity, and Inclusion Working Group based on Data from a National CS Education Program", "link": "https://dl.acm.org/doi/10.1145/3159450.3159594", "abstract": "In the US, many groups of students are underrepresented in computer science (CS) classes at the K-12 level [23,25]. Many of the activities of TEALS (Technology Education and Literacy in Schools), a national computer science education program, have the potential to impact the diversity of students enrolled in computer science classes, student performance on AP exams, and student attitudes towards CS careers. TEALS works with high schools to build and grow sustainable computer science programs through teaching partnerships between classroom teachers and volunteers who work in the tech industry. In 2016, TEALS initiated a Diversity, Equity, and Inclusion Working Group (DEIWG) to holistically address the overall impact of the program on increasing diversity in CS, including TEALS' approach to: selection of schools, student recruitment efforts into CS courses, recruitment and training of TEALS volunteers, curriculum design and resources, and instructional support of volunteers and teachers. The working group compared national, regional, and state-wide outcomes and demographics to those of TEALS partner schools, students, volunteers, and teachers to identify best practices and areas in need of investment. This paper describes these findings and presents strategies for future work.", "authors": [{"name": "Leigh Ann DeLyser", "affiliation": "CSNYC, New York, NY, USA"}, {"name": "Nathaniel Granor", "affiliation": "TEALS, New York, NY, USA"}, {"name": "Lauren Penney", "affiliation": "TEALS, San Francisco, CA, USA"}, {"name": "Rebecca Howsmon", "affiliation": "TEALS, Redmond, WA, USA"}, {"name": "Kevin Wang", "affiliation": "TEALS, Redmond, WA, USA"}, {"name": "Nwannediya Ada Ibe", "affiliation": "TEALS, New York, NY, USA"}], "tags": ["gender and diversity", "CSforAll", "K12 CS education"]}, {"title": "Teaching Inclusive Thinking to Undergraduate Students in Computing Programs", "link": "https://dl.acm.org/doi/10.1145/3159450.3159512", "abstract": "An increasing importance of accessibility awareness and knowledge emanates from a moral imperative and as an employment differentiator. It is important that educational programs have a demonstrated ability to teach these skills. In this paper, we focus on the role that educational courses can play in increasing accessibility awareness for undergraduate students. We review literature indicating that a number of accessibility teaching interventions have been reported; yet the evaluation of their effectiveness has not been conducted in a consistent manner. We report on our 3-semester evaluation of undergraduate students' accessibility awareness and knowledge following a week of accessibility lectures as part of courses on Human-Computer Interaction (HCI), where a subset of students also interact with stakeholders with disabilities during the conduct of the course projects. Gains in awareness and knowledge occur when accessibility lectures were part of the course. These gains are compared across the teams who interacted with a person with a disability and teams with no such interaction. In addition, we provide the test battery developed to measure these skills, to enable other researchers to conduct evaluations of the effectiveness of interventions for teaching inclusive thinking in undergraduate computing at their own institutions.", "authors": [{"name": "Nidhi Rajendra Palan", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Paula Garcia", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Matt Huenerfauth", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Vicki Hanson", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Stephanie Ludi", "affiliation": "University of North Texas, Denton, TX, USA"}], "tags": ["ethics", "computer science education", "accessibility"]}, {"title": "Session details: Paper Session: Elementary #2", "link": "https://dl.acm.org/doi/10.1145/3247855", "abstract": "No abstract available.", "authors": [{"name": "Ashok Basawapatna", "affiliation": "SUNY College at Old Westbury"}], "tags": []}, {"title": "Priming the Pump: Reflections on Training K-5 Teachers in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159560", "abstract": "Much well-deserved attention in K-12 Computer Science (CS) education has focused recently on the successful launch of the College Board's new AP CS Principles course, which is breaking participation records and broadening CS participation. To further leverage the national investment in a successful high school CS program, however, it is important to create, sustain and study a continuous CS pipeline that begins early and spans all grade levels. This experience report articulates the characteristics of Code.org's K-5 CS Fundamentals (CSF) program and summarizes the experiences of adopting the CSF curriculum to support large-scale, university-driven K-5 Professional Development (PD) programs across two states in different geographical regions of the USA. An overview of Code.org's CSF curriculum and PD survey data is provided, followed by a summary of each state's experience. A set of lessons learned offers recommendations for those considering implementation of statewide PD programs in K-5 CS; future plans are discussed to investigate observations from this experience report within a formal research setting.", "authors": [{"name": "Michele Roberts", "affiliation": "Indiana University, Bloomington, IN, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Kiki Prottsman", "affiliation": "Code.org, Seattle, WA, USA"}], "tags": ["k-5 computer science", "professional development", "curriculum and instruction"]}, {"title": "A Robotics Experience for All the Students in an Elementary School", "link": "https://dl.acm.org/doi/10.1145/3159450.3159567", "abstract": "Robotics can be a meaningful and motivating application of computer science that helps make abstract concepts concrete and visible, but most elementary school robotics thus far has focused on design and after school extra-curricular activities with small groups of select students rather than in-school, school-wide robotics for all the students within a school. This paper describes our experience designing, implementing, and trying to evaluate a robotics curriculum and program for all the students within an elementary school; the primary focus of this paper is scale. We describe challenges and opportunities we experienced as part of this project and reflect on the degree to which they are unique to our relatively small, isolated rural town and the timing of our project. We present data points suggesting that robotics can be effectively and economically implemented in the elementary school curriculum.", "authors": [{"name": "Cecily Heiner", "affiliation": "Southern Utah University, Cedar City, UT, USA"}], "tags": ["elementary", "robotics", "k5"]}, {"title": "Demonstrating the Ability of Elementary School Students to Reason About Programs", "link": "https://dl.acm.org/doi/10.1145/3159450.3159488", "abstract": "Over the last decade, CS Education researchers have developed different curricula, resources, and strategies to foster computer science learning in K-12 education. However, there is a lack of research about how elementary school students develop the ability to reason about programs. Reasoning about programs consists of a student's ability to read, write, debug, trace, and predict program behavior. This paper presents results from a think-aloud study of fourth and fifth grade students learning to program in Kodu. The goal of this study was to track students' understanding of how Kodu interprets and executes rules of a program. To understand students' reasoning of program execution, we explicitly taught them the Laws of Kodu computation which govern the decision making and execution process of Kodu rules. We collected students' responses on pre- and post-assessments, and we conducted think-aloud interviews with students where students explained their answers to assessment questions. We found that explicitly teaching students how Kodu rules are interpreted significantly improved their ability to understand the execution of programs and to explain program behavior. The results of this study provide insight into how elementary school students reason about simple programs, and how this ability can be scaffolded.", "authors": [{"name": "David S. Touretzky", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Ashish Aggarwal", "affiliation": "University of Florida, Gainsville, FL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainsville, FL, USA"}], "tags": ["mental simulation", "reasoning ability", "K-12 CS education", "curriculum", "computational thinking"]}, {"title": "Session details: Paper Session: K thru 12", "link": "https://dl.acm.org/doi/10.1145/3247856", "abstract": "No abstract available.", "authors": [{"name": "Shuchi Grover", "affiliation": "ACTNext & Associate Editor, ACM TOCE"}], "tags": []}, {"title": "Effects of Teacher Training in a Computer Science Principles Curriculum on Teacher and Student Skills, Confidence, and Beliefs", "link": "https://dl.acm.org/doi/10.1145/3159450.3159496", "abstract": "Common barriers to broad-based adoption of Computer Science in secondary schools include 1) insufficient numbers of trained teachers who are capable of teaching CS courses in K-12 schools, and 2) a narrow base of students interested in taking CS courses which does not include a large number of females or students from traditionally underrepresented racial groups. In an effort to overcome these obstacles, we developed and employed a teacher professional development program to develop both content and pedagogical strategies to teach Computer Science Principles while also broadening and expanding participation in CS. Teachers were selected for this program in an effort to understand the impact of the intervention with teachers of diverse backgrounds, who teach in a variety of types of schools and with diverse student populations, and with a range of previous Computer Science content knowledge and teaching experience. Teacher content mastery, confidence and attitudes, as well as student content mastery and confidence were assessed at multiple times. Key goals of the program were to develop ability and confidence in programming skills among teachers and students, and to train and encourage teachers to use peer instruction, allowing for a great deal of interaction among students and engagement with the content facilitating the development of expertise among students. Significant findings showed that teachers improved in both knowledge and confidence after taking the workshop, and the gains were evident for their students as well. Their students also demonstrated improvement in both skills and confidence after taking CS Principles, regardless of gender, race, or ethnicity.", "authors": [{"name": "Debbie K. Jackson", "affiliation": "Cleveland State University, Cleveland, OH, USA"}, {"name": "Karla Hamlen", "affiliation": "Cleveland State University, Cleveland, OH, USA"}, {"name": "Nigamanth Sridhar", "affiliation": "Cleveland State University, Cleveland, OH, USA"}, {"name": "Anil Lalwani", "affiliation": "Cleveland State University, Cleveland, OH, USA"}, {"name": "Lisa Bievenue", "affiliation": "University of Illinois, Urbana-Champaign, IL, USA"}], "tags": ["attitudes", "CS ed research", "confidence", "teamwork", "peer instruction"]}, {"title": "Exploring Instructional Support Design in an Educational Game for K-12 Computing Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159519", "abstract": "Instructional supports (Supports) help students learn more effectively in intelligent tutoring systems and gamified educational environments. However, the implementation and success of Supports vary by environment. We explored Support design in an educational programming game, BOTS, implementing three different strategies: instructional text (Text), worked examples (Examples) and buggy code (Bugs). These strategies are adapted from promising Supports in other domains and motivated by established educational theory. We evaluated our Supports through a pilot study with middle school students. Our results suggest Bugs may be a promising strategy, as demonstrated by the lower completion time and solution code length in assessment puzzles. We end reflecting on our design decisions providing recommendations for future iterations. Our motivations, design process, and study's results provide insight into the design of Supports for programming games.", "authors": [{"name": "Nicholas Lytle", "affiliation": "North Carolina State Univeristy, Raleigh, NC, USA"}, {"name": "Thomas W. Price", "affiliation": "North Carolina State Univeristy, Raleigh, NC, USA"}, {"name": "Rui Zhi", "affiliation": "North Carolina State Univeristy, Raleigh, NC, USA"}], "tags": ["debugging", "worked examples", "cognitive load theory", "instructional support", "programming game"]}, {"title": "A Middle-School Module for Introducing Data-Mining, Big-Data, Ethics and Privacy Using RapidMiner and a Hollywood Theme", "link": "https://dl.acm.org/doi/10.1145/3159450.3159553", "abstract": "Today's organizations, including online businesses, use the art of data-driven decision-making i.e. business-intelligence (BI) to benefit from all the data out in the open. Given the current market demand for BI skill-sets, including the knowledge of different sources and tools for data-collection plus processing, today's youth need a basic understanding of data-driven intelligence, and an awareness of big-data related ethics and privacy. However, there has been limited research and development work towards designing an effective educational module in this regard at the K-12 level. We intend to address this particular limitation by presenting a uniquely engaging middle-school learning module based upon a combination of useful topics, like data-mining, predictive-analytics, data-visualization, big-data, ethics and privacy, using the free RapidMiner software-tool. The novelty of our module lies in the use of a GUI-based visual hands-on platform (RapidMiner), a Hollywood movie-theme based educational activity, as well as an added focus on big-data ethics and privacy, and its conceptual mapping to the NSA-GenCyber security-first principles. We discuss and analyze the survey data obtained from over hundred participants through several offerings of our module as an educational workshop through our Google-IgniteCS and NSA-GenCyber programs. The collected learning-analytics data indicate that our module can become a simple yet effective means for introducing data-mining, big-data, ethical and privacy issues, and GenCyber security-first principles at the middle-school level. Our results show prospects of motivating middle-school participants towards further learning of topics in data-science, data-ethics and data-security, which is necessary today in a variety of professions.", "authors": [{"name": "Ankur Chattopadhyay", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}, {"name": "Amber Dryer", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}, {"name": "Nicole Walia", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}], "tags": ["middle-school", "data-driven intelligence", "privacy", "NSA-gencyber", "data-driven decision-making", "hollywood movie", "Google-ignitecs", "big-data", "data-mining", "ethics", "GUI", "security-first principles", "rapidminer", "K-12 learning module", "BI"]}, {"title": "Session details: Paper Session: Pair Programming", "link": "https://dl.acm.org/doi/10.1145/3247857", "abstract": "No abstract available.", "authors": [{"name": "Swapneel Sheth", "affiliation": "University of Pennsylvania"}], "tags": []}, {"title": "A Study of Pair Programming Enjoyment and Attendance using Study Motivation and Strategy Metrics", "link": "https://dl.acm.org/doi/10.1145/3159450.3159493", "abstract": "We explore educational pair programming in a university context with high student autonomy and individual responsibility. The data comes from two separate introductory programming courses with optional pair programming assignments. We analyze lab attendance and course outcomes to determine whether students' previous programming experience or gender influence attendance. We further compare these statistics to self-reported data on study motivation, study strategies, and student enjoyment of pair programming. The influence of grading systems on pair programming behavior and course outcomes is also examined. Our results suggest that gender and previous programming experience correlate with participation in pair programming labs. At the same time, there are no significant differences in self-reported enjoyment of pair programming between any of the groups, and the results from commonly used study motivation and strategy questionnaires provide little insight into students/ actual behavior.", "authors": [{"name": "Onni Aarne", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Petrus Peltola", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["enjoyment", "CS1", "motivated strategies for learning questionnaire", "pair programming", "attendance"]}, {"title": "The Importance of Producing Shared Code Through Pair Programming", "link": "https://dl.acm.org/doi/10.1145/3159450.3159506", "abstract": "Collaborative learning frameworks such as pair programming have been shown to be highly effective for computer science learning. Skeptics of this approach often refer to the risk of one student relying on a stronger partner to solve the problem. Lending weight to this skepticism, many theories emphasize the importance of learner autonomy. Therefore, it is reasonable to hypothesize that a hybrid pair programming paradigm-one in which partners work together side-by-side at two separate computers and produce their own versions of the code-may be even more effective than traditional pair programming. To investigate this hypothesis, we conducted a study in which 200 introductory programming students were paired and then placed in either a pair-programming condition (two students at one computer) or a hybrid condition (two students at two computers). The results show that traditional pair programming fostered comparable learning gains as measured on an individual post-test, and significantly higher student satisfaction, than the hybrid approach. These findings highlight the importance of not just collaborating, but working together on shared code, for novice computer science learners.", "authors": [{"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Mehmet Celepkolu", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["pair programming", "collaborative problem solving"]}, {"title": "Thematic Analysis of Students' Reflections on Pair Programming in CS1", "link": "https://dl.acm.org/doi/10.1145/3159450.3159516", "abstract": "Pair programming is a successful approach for improving student performance, retention, and motivation toward computer science. However, not all students benefit equally from this approach. An open challenge for researchers is to develop a deep understanding of the student experience in pair programming, particularly for novices. This paper reports on a study of the cognitive, affective, and social experiences of students in an introductory programming course in which pair programming was utilized throughout the term. Students reported their experience through reflection essays written at the end of the semester. We analyzed 137 student reflection papers in a mixed-methods study. The quantitative results show that overall, students have a positive attitude toward pair programming. Looking more deeply at the reflection essays, thematic analysis revealed themes centered around cognitive, affective, and social dimensions. In the cognitive dimension, students expressed the importance of exposure to different ideas and developing deeper understanding. Affectively, students reported that working with a partner reduced their frustration and increased their confidence. Students also pointed out the social benefits of forming friendships and helpful connections. These results highlight the powerful benefits of pair programming and point to ways in which this collaborative approach could be adapted to better meet student needs.", "authors": [{"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Mehmet Celepkolu", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["pair programming", "computer science education", "CS1"]}, {"title": "Session details: Paper Session: Professional Development", "link": "https://dl.acm.org/doi/10.1145/3247858", "abstract": "No abstract available.", "authors": [{"name": "Hubert Johnson", "affiliation": "Montclair State University"}], "tags": []}, {"title": "DIVAS: Outreach to the Natural Sciences through Image Processing", "link": "https://dl.acm.org/doi/10.1145/3159450.3159537", "abstract": "The DIVAS (Digital Imaging and Vision Applications in Science) project addresses workforce challenges in science, technology, engineering, and mathematics by creating a pedagogical and programmatic \"on-ramp\" that empowers natural science majors to engage in authentic computational problems as members of skilled, professional teams. We are developing and testing institutional practices and curricular innovations that engage and train STEM undergraduate students to use Python programming, and image processing in particular, in their undergraduate research projects. Students are recruited into the DIVAS program in the first semester of their first year. DIVAS scholars and other participating students can experience a variety of interventions including: 1) a one-credit DIVAS seminar exploring several imaging and computing topics; 2) image capture and analysis modules in introductory- or upper-level biology and chemistry courses; 3) a week-long, intensive coding bootcamp that introduces bash, git, Python programming, and the OpenCV image processing library; 4) pair programming exercises to solve genuine morphometric and colorimetric problems; 5) an extended summer research project involving image processing; and 6) weekly code reviews to check on progress and provide guidance. The DIVAS projects measures the impact of these interventions on students' self-reported efficacy in using computation to solve problems, their attitudes towards computation, and their computational thinking skills, using both established and newly developed instruments. Our first year results show that multiple interventions have had significant positive impact on students' self-efficacy and interest in using computing in their future careers, and certain computational thinking skills.", "authors": [{"name": "Timothy Frey", "affiliation": "Doane University, Crete, NE, USA"}, {"name": "Erin Doyle", "affiliation": "Doane University, Crete, NE, USA"}, {"name": "Tessa Durham Brooks", "affiliation": "Doane University, Crete, NE, USA"}, {"name": "Raychelle Burks", "affiliation": "St. Edward's University, Austin, TX, USA"}, {"name": "Mark Meysenburg", "affiliation": "Doane University, Crete, NE, USA"}], "tags": ["outreach", "assessment", "undergraduate instruction"]}, {"title": "Diversity-focused Online Professional Development for Community College Computing Faculty: Participant Motivations and Perceptions", "link": "https://dl.acm.org/doi/10.1145/3159450.3159505", "abstract": "Although computing occupations increasingly dominate the workforce, the computing discipline does not attract sufficient and diverse students to meet societal workforce needs. LIGHTHOUSE FOR CS is a collection of professional development efforts seeking to increase computing diversity through faculty education. LIGHTHOUSE CC provides an open online course extending a decade of successful face-to-face TAPESTRY workshops. LIGHTHOUSE CC targets community college computing faculty, building off of research suggesting that online professional development can be as effective as in-person professional development. We believe it is one of the first attempts to validate that finding for community college computing faculty. The paper examines participant motivations and perceptions of online and face-to-face diversity-focused professional development for community college computing educators. To meet the needs of the community college computing faculty, we began with a needs assessment survey. Its feedback and prior face-to-face workshop experiences were integrated with several instructional design principles and theories to engage community college faculty, notably the ARCS motivational design model (Keller, 1987) and the Community of Practice model (Wenger, 1998). Project analyses involved both surveys and focus group interviews. The paper also provides directions for future improvements and suggestions for others who are considering online or diversity-focused professional development.", "authors": [{"name": "Luther Tychonievich", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Leslie Cintron", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Yunjeong Chang", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "James P. Cohoon", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["community college", "in-service training", "online course", "perceptions", "professional development", "motivation", "diversity"]}, {"title": "Broadening Participation in Computing via Professional Development for Community College CS/IT Faculty", "link": "https://dl.acm.org/doi/10.1145/3159450.3159546", "abstract": "This paper describes the creation of a virtual, interactive professional development course to build the capacity of community college faculty to recruit and retain women and underrepresented minorities in computing programs. The project was designed in response to community college faculty reporting need for practical methods to broaden participation in their programs and their feelings of isolation from like-minded faculty. The 12-session prototype has been piloted with eight community college faculty. The finalized PD will be available as free, standalone web-based modules. The course includes instruction on research-based practices for recruiting and retaining women and underrepresented minorities in computing. Evaluation mechanisms are developed to assess the impacts of the PD on faculty attitudes and teaching practices, and the effect of changed practices on introductory computing students' engagement and persistence. Here we report preliminary findings from interviews. The project outputs will include polished online content modules, validated student survey instruments, a classroom observation protocol, and student and faculty interview instruments.", "authors": [{"name": "Beth A. Quinn", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Wendy M. DuBow", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Jamie Huber Ward", "affiliation": "University of Colorado, Boulder, CO, USA"}], "tags": ["community college", "longitudinal research", "faculty professional development", "broadening participation in computing", "gender"]}, {"title": "Session details: Paper Session: Software Engineering", "link": "https://dl.acm.org/doi/10.1145/3247859", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}], "tags": []}, {"title": "Developing Software Engineering Skills using Real Tools for Automated Grading", "link": "https://dl.acm.org/doi/10.1145/3159450.3159595", "abstract": "Situated learning theory supports engaging students with materials and resources that reflect professional standards and best practices. Starting with our introductory courses, we incorporate situated learning to support student engagement in software engineering practices and processes through the use of industrial strength open-source tools in several classes throughout the undergraduate computer science curriculum at NC State University. Additionally, these tools support several logistical and educational needs in computer science classrooms, including assignment submission systems and automated grading. In this tools paper, we present our Canary Framework for supporting software engineering practices through the use of Eclipse for development; GitHub for submission and collaboration; and Jenkins for continuous integration and automated grading. These tools are used in five of ten core courses by more than 3000 students over ten semesters. While the use of these tools in education is not unique, we want to share our model of using professional tools in a classroom setting and our experiences on how this framework can support multiple courses throughout the curriculum and at scale.", "authors": [{"name": "Jason King", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["software engineering best practice", "automated grading", "version control", "continuous integration"]}, {"title": "Specification-Based Testing in Software Engineering Courses", "link": "https://dl.acm.org/doi/10.1145/3159450.3159575", "abstract": "In 2016 we introduced a tool called \"Spest// for the automated generation of software tests from formal specifications. That introductory presentation of Spest described its basic functionality and our initial results of using Spest in software engineering courses. Here we describe further experience of using Spest in classes, including qualitative and quantitative analyses of its effectiveness. The analysis consists of a qualitative survey of students/ experience, a quantitative study of the readability of Spest-generated tests, and a quantitative analysis that compares the coverage quality of hand-written student tests with Spest-generated tests. The results of the analyses are mixed. The experience survey finds that a majority of students did not enjoy using Spest nor fully understand how to use it effectively. The results of the readability study show that Spest-generated tests are not as readable for students as tests written by human experts, however the differences in readability are not extreme. Finally, the results of the coverage comparison are good, showing that Spest-generated tests achieve better code coverage than students/ hand-written tests. Given the mixed results, we discuss how we are moving forward to make Spest a more usable and effective tool.", "authors": [{"name": "Corrigan Johnson", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Gene Fisher", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["automated test generation"]}, {"title": "Integrating Project Based Learning and Project Management for Software Engineering Teaching: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3159450.3159599", "abstract": "Software Engineering (SE) is an important topic to be taught in Computer Science courses. However, teaching of theoretical concepts with no link to their practical applications or no examples in the student's context may discourage learning, justifying why teaching and learning are great challenges of education in universities. In attempt to bridge such gap, several approaches have been proposed and applied to improve teaching and learning SE such as project based learning (PBL), a well-known approach already applied to teach SE. Nevertheless, there's a lack of understanding about how to better apply PBL and how to take advantage of this approach, for future use. There is also a lack of experience report describing how to use, its challenges and difficulties, what could be hampering to widely adopt it. We present our experience applying a PBL approach combined with project management to create an environment considering aspects such as dealing with managers and real stakeholders. The goal is to bring students closer to the reality of developing a software project in the business context. Our experience indicates positive results on the adoption of a PBL approach. In general, students were enthusiastic and positive about the use of this approach, the presence of a manager and the importance of using real-world problems with real stakeholders.", "authors": [{"name": "Bruno Sena", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Ana P. Allian", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Elisa Y. Nakagawa", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Simone R.S. Souza", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Maria Lydia Fioravanti", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Seiji Isotani", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "La\u00edza R. Silva", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Ellen F. Barbosa", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}, {"name": "Leo Natan Paschoal", "affiliation": "Institute of Mathematics and Computer Science - University of S\u00e3o Paulo, S\u00e3o Carlos, Brazil "}], "tags": ["se education", "pbl", "software project"]}, {"title": "AP Computer Science: Two Complementary Courses", "link": "https://dl.acm.org/doi/10.1145/3159450.3159623", "abstract": "With the launch of the new AP Computer Science Principles course many high school and higher education institutions are curious how these two courses will work together and what credit each course should be awarded. In this session, participants will be presented with a comparison of these two courses, an overview of existing credit and placement policies, and hear from two high school teachers who have successfully implemented both of these courses at their schools. Higher Ed faculty will have an opportunity to share how their individual schools are awarding credit or placement for these courses.", "authors": [{"name": "Crystal Furman", "affiliation": "The College Board, Duluth, GA, USA"}, {"name": "Richard Kick", "affiliation": "Newbury Park High School, Newbury Park, CA, USA"}, {"name": "Timothy Gallagher", "affiliation": "Winter Springs High School, Winter Springs, FL, USA"}], "tags": ["advanced placement", "computer science principles", "computer science a"]}, {"title": "Leveraging the Raspberry Pi for CS Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159611", "abstract": "The Raspberry Pi (R-Pi) is a single board computer priced at 35 USD -- less than the cost of many textbooks. The current model (3B) includes a quad-core ARM 64-bit CPU, 1GB of RAM, a GPU, and numerous communication ports, including USB, HDMI, Ethernet, WiFi and Bluetooth. This combination of low cost and high functionality creates many new pedagogical possibilities for CS educators, ranging from using the R-Pi to teach assembly language to using it as a multiprocessor. Relatedly, mathematics educators have produced an extensive literature on the use of pedagogical tools known as \"manipulatives\" that have been shown to be effective at starting students through a \"concrete, representational, abstract\" progression of understanding of an abstract topic. We believe that by using the R-Pi as a manipulative, this same \"concrete, representational, abstract\" progression can be used to help CS students master many topics that are often taught as abstractions. By providing a \"concrete\" foundation on which to build, a single board computer like the R-Pi can provide the first step in helping students build mental models of such abstractions, and thus enhance student learning. Experience also indicates that many students find the R-Pi to be a fun and enjoyable way to learn about these abstractions. In this panel session, four CS educators will share their experiences using the R-Pi in their courses, followed by a Q&A conversation between the audience and the panelists.", "authors": [{"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Jalal Kawash", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, MI, USA"}, {"name": "Richard A. Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, MN, USA"}], "tags": ["raspberry pi", "manipulative", "pedagogy", "cs", "teaching", "parallel"]}, {"title": "The Authentic Inclusion and Role of Community Colleges in National Efforts to Broaden Participation in Computing", "link": "https://dl.acm.org/doi/10.1145/3159450.3159627", "abstract": "No abstract available.", "authors": [{"name": "Louise Ann Lyon", "affiliation": "Education, Training, and Research, Scotts Valley, CA, USA"}, {"name": "Deborah Boisvert", "affiliation": "University of Massachusetts, Boston, MA, USA"}, {"name": "Cheryl Calhoun", "affiliation": "Santa Fe College, Gainsville, FL, USA"}, {"name": "Melanie Williamson", "affiliation": "Bluegrass Community and technical College, Lexington, KY, USA"}, {"name": "Amardeep Kahlon", "affiliation": "Austin Community College, Austin, TX, USA"}], "tags": ["under represented minorities", "minorities", "community college", "computing education", "degree pathways", "women", "broadening the participation", "retention", "recruitment", "diversity", "success"]}, {"title": "Connecting Evaluation and Computing Education Research: Why is it so Important?", "link": "https://dl.acm.org/doi/10.1145/3159450.3159642", "abstract": "With the growth of computing education research in the last decade, we have found a call for a strengthening of empiricism within the computing education research community. Computer science education researchers are being asked to focus not only the innovation that the research creates or the question it answers, but also on validating the claims we made about the work. In this session, we will explore the relationship between evaluation and computing education research and why it is so vital to the success of the many computing education initiatives underway. It will also help computing faculty engaged in computer science education research understand why it is essential to integrate evaluation and validation from the very first conceptual stages of their intervention programs.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Eric Snow", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Jason Ravitz", "affiliation": "Google, Inc., San Francisco, CA, USA"}, {"name": "Rebecca Zarch", "affiliation": "SageFox Consulting Group, Amherst, MA, USA"}, {"name": "Adrienne Decker", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["computer science education research", "assessment", "evaluation", "validation", "empiricism in computer science education research"]}, {"title": "Special Session: Exploring and Discovering Concepts via POGIL", "link": "https://dl.acm.org/doi/10.1145/3159450.3159637", "abstract": "As a form of active learning, POGIL (Process Oriented Guided Inquiry Learning) engages students by grouping them in teams to work collaboratively through activities and construct their own understanding of computer science content. POGIL activities are carefully designed to foster student learning by guiding students through a learning cycle of exploration, concept invention and application. Computer science assignments typically emphasize application questions and problems, where students are expected to apply the new concept to different applications (e.g., writing multiple programs involving while-loops). In contrast, POGIL activities require students to first explore a model, possibly by asking critical thinking questions about some code and its output, before leading students to recognize patterns in the model, thereby helping them to form a better understanding of the new CS concept. Only after students have explored and developed an understanding of the concept, do the POGIL activities proceed to more traditional application questions. Studies of POGIL's effectiveness in STEM classrooms have generally found that (1) attrition is lower for POGIL than for traditional courses; (2) content mastery is greater than for traditional instruction; (3) students prefer POGIL over traditional methods; (4) students have more positive attitudes about the course and the instructors; and (5) learning skills appear to improve during the course. These advantages have drawn many Computer Science instructors to adopt POGIL in their classrooms, but very few instructors are developing POGIL activities for Python, even though Python lends itself well to learning cycle questions as an interpreted language. All CS instructors, but especially Python instructors, can benefit from adding exploration and concept invention questions to assignments before asking application questions.The growing popularity of Jupyter Notebooks makes it even easier for instructors to embed learning cycle questions in Python (or any other Jupyter supported programming language). This special session will provide SIGCSE attendees the opportunity to experience a CS POGIL activity for themselves, before introducing attendees to the learning cycle. Attendees will be view several examples of exploration and concept invention questions, which should be helpful to anyone creating CS assignments, not just POGIL instructors. The presenters will provide a short tour of two collections of POGIL activities in Python before the question and answer period.", "authors": [{"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Lisa M. Olivieri", "affiliation": "Chestnut Hill College, Philadelphia, PA, USA"}, {"name": "Clifton Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}], "tags": ["active learning", "learning cycle", "POGIL", "CS1"]}, {"title": "Session details: Paper Session: Active Learning #1", "link": "https://dl.acm.org/doi/10.1145/3247860", "abstract": "No abstract available.", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University"}], "tags": []}, {"title": "An Active and Collaborative Approach to Teaching Discrete Structures", "link": "https://dl.acm.org/doi/10.1145/3159450.3159582", "abstract": "It has been long established that discrete structures is an important and foundational component of the computer science curriculum. However, the topics covered in this course tend to be more abstract than those covered in most other introductory computer science courses. This leads to additional challenges for instructors and students. To deal with these challenges, we introduce a new pedagogy for teaching this course. Our approach is based on a variant of the flipped classroom paradigm and is comprised of four main components: before class preparatory work, in-class mini lecture, in-class team based problem solving activities, and weekly individual assignments. In this paper, we discuss these components in detail. Our approach is informed by several cutting-edge teaching methodologies including active learning, light weight teams, and gamification. We conclude the paper by discussing the results of a survey taken by the students and a summary of the grades attained in the class. These show that our approach was well received by the students and has led to good learning outcomes.", "authors": [{"name": "Lijuan Cao", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Audrey Rorrer", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}], "tags": ["active learning", "discrete structures", "flipped classroom", "gamification", "collaborative learning"]}, {"title": "Active Learning in a Discrete Mathematics Class", "link": "https://dl.acm.org/doi/10.1145/3159450.3159604", "abstract": "In this paper, we describe the active learning and collaborative learning activities implemented in an introductory mid-size discrete mathematics course for Informatics majors. Active learning and collaborative learning have been used to increase student engagement, but incorporating them in smaller classes is a completely different experience from doing so in larger classes. We offer some tips and suggestions on how to incorporate these activities in larger classes including the utilization of undergraduate teaching assistants during lectures, and allowing students to work together on worksheets during lectures with the help of the teaching staff. Course questionnaires collected from five different sections that ran in the spring, summer, and fall of 2016 with around 60 to 70 students suggest that this approach has been well-received. Furthermore, the DFW rate (the proportion of students that received a D, F, or withdrew from the class) of these sections was lower than the DFW rate of other sections that shared the same evaluations (exams, homework assignments, and quizzes) and grading scheme to determine the final letter grade.", "authors": [{"name": "Sa\u00fal A. Blanco", "affiliation": "Indiana University, Bloomington, Bloomington, IN, USA"}], "tags": ["team-based learning", "active learning", "discrete mathematics", "collaborative learning", "dfw rate", "computing curriculum"]}, {"title": "Active Learning through Game Play in a Data Structures Course", "link": "https://dl.acm.org/doi/10.1145/3159450.3159605", "abstract": "Data Structures is a fundamental Computer Science discipline, challenging students/ abstract thinking, problem solving and programming skills. In this paper, we present an educational game intended to explicate several features hindering students/ understanding of the data structure Stack on conceptual and practical level. The game targets all three aspects of teaching data structures: conceptualization, application and implementation. These aspects are embodied as three parts of the game tied together through a meaningful storyline. The application part targets the use of stacks to solve problems, such as converting arithmetic expressions from infix to postfix notation and evaluating postfix and infix expressions. The implementation part involves solving Parson/s problems and writing Java code for implementing the methods of the Stack class. The results of the conducted evaluation of the game show statistically significant learning gains for the students and a strong positive attitude towards this type of active learning.", "authors": [{"name": "Austin Hodge", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Darina Dicheva", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}], "tags": ["active learning", "data structures", "educational games", "stacks"]}, {"title": "Session details: Paper Session: CS Education Around the Globe", "link": "https://dl.acm.org/doi/10.1145/3247861", "abstract": "No abstract available.", "authors": [{"name": "Patricia Ord\u00f3\u00f1ez", "affiliation": "University of Puerto Rico"}], "tags": []}, {"title": "Bringing Computer Science Education to Secondary School: A Teacher First Approach", "link": "https://dl.acm.org/doi/10.1145/3159450.3159568", "abstract": "The Progra-MEER professional development workshop is a one year program organized collaboratively by the computer science departments of three Flemish universities. It aims to improve the computer science knowledge of in service teachers in a physical computing context. Since Flemish schools are starting to implement STEM in their schools, the program links computer science to STEM and project based learning. This paper gives a description of the design and implementation of the program while providing an analysis of its strengths and weaknesses. We show that the program leads to the successful implementation of different physical computing projects. However, it needs to further support the practical project implementations while spending more attention on assessment and context definition. Additionally, the program has to invest more effort in creating a sustainable community of practice so knowledge and experiences can still be shared even after the program has finished.", "authors": [{"name": "Francis Wyffels", "affiliation": "Ghent University - imec, Ghent, Belgium"}, {"name": "Tom Neutens", "affiliation": "Ghent University - imec, Ghent, Belgium"}], "tags": ["teacher professional development", "stem education", "computer science education", "physical computing"]}, {"title": "An Agile Conversion Masters Degree Programme in Software Development", "link": "https://dl.acm.org/doi/10.1145/3159450.3159540", "abstract": "The Information and Communications Technology (ICT) industry in New Zealand is growing rapidly. The traditional university courses are preparing an insufficient number of graduates to sustain the growth. Many of the traditional graduate students lack key soft skills that are important in team based software development. This paper reports on the development of a conversion Master of Software Development degree. The students are all graduates with little or no computer science degrees, are taught key programming skills, with a focus on agile development. The programme begins by focusing on individual programming skills through solving problems. Later industrial partners are engaged by providing industrial problems to agile teams of students. The industrial partners are active partners in the agile teams as product owners. By solving the problems, the students develop both technical and non-technical skills while utilizing the skills obtained from previous studies. The results from the first year of the programme are encouraging. A key result is that a high number of students found work in paid IT positions before graduating. The main issue of the first year was introducing too many topics at the same time, over-assessment, not enough communication and contact time, little opportunity for the students to make their own experiences, and learning by making mistakes. The programme has been changed for the next year/s cohort to introduce less topics at once, provide time and space for learning, and a redesign of scheduling assessments.", "authors": [{"name": "Craig Anslow", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Kris Bubendorfer", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Michael Homer", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Dale Carnegie", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Karsten Lundqvist", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}], "tags": ["internships", "agile software development", "soft skills", "programming", "masters degree", "individual and group work", "graduate studies"]}, {"title": "Language Choice in Introductory Programming Courses at Australasian and UK Universities", "link": "https://dl.acm.org/doi/10.1145/3159450.3159547", "abstract": "Parallel surveys of introductory programming courses were conducted in Australasia and the UK, with a view to examining the programming languages being used, the preferred integrated development environments (if any), and the reasons for these choices, alongside a number of other key aspects of these courses. This paper summarises some of the similarities and differences between the findings of the two surveys. In the UK, Java is clearly the dominant programming language in introductory programming courses, with Eclipse as the dominant environment. Java was also the dominant language in Australasia six years ago, but now shares the lead with Python; we speculate on the reasons for this. Other differences between the two surveys are equally interesting. Overall, however, there appears to be a reasonable similarity in the way these undergraduate courses are conducted in the UK and in Australasia. While the degree structures differ markedly between and within these regions -- a possible explanation for some of the differences -- some of the similarities are noteworthy and have the potential to provide insight into approaches in other regions and countries.", "authors": [{"name": "James H. Davenport", "affiliation": "University of Bath, Bath, United Kingdom"}, {"name": "Tom Crick", "affiliation": "Cardiff Metropolitan University, Cardiff, United Kingdom"}, {"name": "Raina Mason", "affiliation": "Southern Cross University, Bilinga, Australia"}, {"name": "Ellen Murphy", "affiliation": "University of Bath, Bath, United Kingdom"}, {"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}], "tags": ["programming environments", "CS1", "computing education", "computing curricula", "programming pedagogy", "introductory programming"]}, {"title": "Session details: Paper Session: Data Structures", "link": "https://dl.acm.org/doi/10.1145/3247862", "abstract": "No abstract available.", "authors": [{"name": "Tracy Lewis-Williams", "affiliation": "Radford University"}], "tags": []}, {"title": "Developing Course-Level Learning Goals for Basic Data Structures in CS2", "link": "https://dl.acm.org/doi/10.1145/3159450.3159457", "abstract": "Establishing learning goals for a course allows instructors to design course content to address those goals, helps students to focus their learning appropriately, and enables researchers to assess learning of those goals. In this work, we propose six learning goals for a topic prevalent in CS2 courses: Basic Data Structures. These learning goals arise from reviewing several CS2 courses at a variety of institutions, surveying faculty experts who commonly teach CS2, and meeting and working closely with these experts. We outline our process for creating learning goals, identify important topics underlying these goals, and provide examples of how the goals developed on the path to consensus. We also document that the term \"CS2\" does not have a unified interpretation within the CS education community and describe how this hurdle influenced our decision to focus on Basic Data Structures.", "authors": [{"name": "Daniel Zingaro", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}, {"name": "Michael Clancy", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Cynthia Taylor", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, Canada"}, {"name": "Kevin C. Webb", "affiliation": "Swarthmore College, Philadelphia, PA, USA"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["cs2", "data structures", "learning goals"]}, {"title": "Visualization, Assessment and Analytics in Data Structures Learning Modules", "link": "https://dl.acm.org/doi/10.1145/3159450.3159460", "abstract": "In recent years, interactive textbooks have gained prominence in an effort to overcome student reluctance to routinely read textbooks, complete assigned homeworks, and to better engage students to keep up with lecture content. Interactive textbooks are more structured, contain smaller amounts of textual material, and integrate media and assessment content. While these are an arguable improvement over traditional methods of teaching, issues of academic integrity and engagement remain. In this work we demonstrate preliminary work on building interactive teaching modules for data structures and algorithms courses with the following characteristics, (1) the modules are highly visual and interactive, (2) training and assessment are tightly integrated within the same module, with sufficient variability in the exercises to make it next to impossible to violate academic integrity, (3) a data logging and analytic system that provides instantaneous student feedback and assessment, and (4) an interactive visual analytic system for the instructor to see students/ performance at the individual, sub-group or class level, allowing timely intervention and support for selected students. Our modules are designed to work within the infrastructure of the OpenDSA system, which will promote rapid dissemination to an existing user base of CS educators. We demonstrate a prototype system using an example dataset.", "authors": [{"name": "Kalpathi Subramanian", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Jamie Payton", "affiliation": "Temple University, Philadelphia, PA, USA"}, {"name": "David Burlinson", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Erik Saule", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Matthew Mcquaigue", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["interactive textbook", "learning analytics", "data structures", "visualization", "student engagement", "algorithms"]}, {"title": "A Domain Analysis of Data Structure and Algorithm Explanations in the Wild", "link": "https://dl.acm.org/doi/10.1145/3159450.3159477", "abstract": "Explanations of data structures and algorithms are complex interactions of several notations, including natural language, mathematics, pseudocode, and diagrams. Currently, such explanations are created ad hoc using a variety of tools and the resulting artifacts are static, reducing explanatory value. We envision a domain-specific language for developing rich, interactive explanations of data structures and algorithms. In this paper, we analyze this domain to sketch requirements for our language. We perform a grounded theory analysis to generate a qualitative coding system for explanation artifacts collected online. This coding system implies a common structure among explanations of algorithms and data structures. We believe this structure can be reused as the semantic basis of a domain-specific language for creating interactive explanation artifacts. This work is part of our effort to develop the paradigm of explanation-oriented programming, which shifts the focus of programming from computing results to producing rich explanations of how those results were computed.", "authors": [{"name": "Eric Walkingshaw", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Jeffrey Young", "affiliation": "Oregon State University, Corvallis, OR, USA"}], "tags": ["domain specific language", "grounded theory", "explanation-oriented programming"]}, {"title": "Session details: Paper Session: High School #1", "link": "https://dl.acm.org/doi/10.1145/3247863", "abstract": "No abstract available.", "authors": [{"name": "Manuel Perez-Quinones", "affiliation": "University of North Carolina, Charlotte"}], "tags": []}, {"title": "The Persistent Effect of Pre-College Computing Experience on College CS Course Grades", "link": "https://dl.acm.org/doi/10.1145/3159450.3159508", "abstract": "Many college computer science majors have little or no pre-college computing experience. Previous work has shown that inexperienced students under-perform their experienced peers when placed in the same introductory courses, and are more likely to drop out of the CS program. However, not much is known about what, if any, differences may persist beyond the introductory sequence for students who remain in the program. We conducted a study across all levels of a CS program at a large public university in the United States to determine whether grade differences exist between students with and without pre-college experience, and if so, for what types of experiences. We find significant grade differences in courses at all levels of the program. We further find that students who took AP Computer Science receive significantly higher average grades---by up to a half grade---in nearly all courses we studied. Pre-college experience appears to have a weaker relationship with retention and with low-stakes assessment grades. We discuss the limitations of these findings and implications for high school and college level CS courses and programs.", "authors": [{"name": "Christine Alvarado", "affiliation": "UC San Diego, La Jolla, CA, USA"}, {"name": "Mia Minnes", "affiliation": "UC San Diego, La Jolla, CA, USA"}, {"name": "Gustavo Umbelino", "affiliation": "UC San Diego, La Jolla, CA, USA"}], "tags": ["higher education", "performance", "computing experience", "AP computer science"]}, {"title": "Using Online Practice Spaces to Investigate Challenges in Enacting Principles of Equitable Computer Science Teaching", "link": "https://dl.acm.org/doi/10.1145/3159450.3159503", "abstract": "Equity is a core component of many computer science teacher preparation programs. One promising approach is addressing unconscious bias in teachers, which may impact teacher expectations and interactions with students. Since early intervention literature indicates that asking individuals to suppress biases is counterproductive, our work uses online interactive case studies as practice spaces to focus on teaching decisions that may be impacted by unconscious bias. Our initial findings indicate that when embedded within teacher preparation programs, practice spaces produce rich learning opportunities, and our analysis yields insights into how beliefs or biases may interfere with principles of equity like disrupting preparatory privilege.", "authors": [{"name": "Keyarash Jahanian", "affiliation": "MIT Teaching Systems Lab, Cambridge, MA, USA"}, {"name": "Justin Reich", "affiliation": "MIT Teaching Systems Lab, Cambridge, MA, USA"}, {"name": "Kevin Robinson", "affiliation": "MIT Teaching Systems Lab, Cambridge, MA, USA"}], "tags": ["teacher education", "practice spaces", "unconscious bias", "equity", "diversity", "cultural competency"]}, {"title": "Applying the Mathematical Work of Teaching Framework to Develop a Computer Science Pedagogical Content Knowledge Assessment", "link": "https://dl.acm.org/doi/10.1145/3159450.3159521", "abstract": "Pedagogical content knowledge (PCK) is specialized knowledge necessary to teach a subject. PCK integrates subject-matter content knowledge with knowledge of students and of teaching strategies so that teachers can perform the daily tasks of teaching. Studies in mathematics education have found correlations between measures of PCK and student learning. Finding robust, scalable ways for developing and measuring computer science (CS) teachers' PCK is particularly important in CS education in the United States, given the lack of formal CS teacher preparation programs and certifications. However, measuring pedagogical content knowledge is a challenge for all subject areas. It can be difficult to write assessment items that elicit the different aspects of PCK and there are often multiple appropriate pedagogical choices in any given teaching scenario. In this paper, we describe a framework and pilot data from a questionnaire intended to elicit PCK from teachers of high school introductory CS courses and we propose future directions for this work.", "authors": [{"name": "Aleata Hubbard", "affiliation": "WestEd, Redwood City, CA, USA"}, {"name": "Katie D'Silva", "affiliation": "WestEd, Redwood City, CA, USA"}, {"name": "Yvonne Kao", "affiliation": "WestEd, Redwood City, CA, USA"}, {"name": "Joseph Green", "affiliation": "WestEd, Redwood City, CA, USA"}, {"name": "Kimkinyona Cully", "affiliation": "WestEd, Redwood City, CA, USA"}], "tags": ["high school", "assessment", "pedagogical content knowledge", "teacher preparation"]}, {"title": "Session details: Paper Session: K thru 8 #1", "link": "https://dl.acm.org/doi/10.1145/3247864", "abstract": "No abstract available.", "authors": [{"name": "Abby Funabiki", "affiliation": "BootUp"}], "tags": []}, {"title": "Scratch Microworlds: Designing Project-Based Introductions to Coding", "link": "https://dl.acm.org/doi/10.1145/3159450.3159559", "abstract": "In this paper, we present our experience developing introductory coding environments called Scratch Microworlds. These interactive environments enable learners to get started with coding by creating projects, rather than solving puzzles. The primary educational goal of these microworlds is to engage learners (ages 8 to 14) who otherwise may not be drawn to coding. The microworlds are simplified versions of the Scratch coding environment that contain a small set of blocks and are designed to encourage exploration and experimentation. They are also interest-based, so learners can choose to work on a topic that is motivating to them (such as dance, music, or soccer). We present three main design principles and related challenges that we addressed through the iterative process of developing Scratch Microworlds: (1) how to simplify initial experiences while still supporting creativity, (2) how to provide scaffolding while maintaining learners' agency, and (3) how to provide starting points that spark rather than limit the imagination. We share observations and feedback from workshops with children and educators, which informed our iterative design process. We conclude by considering next steps for providing more entry points into coding that support children as creative thinkers.", "authors": [{"name": "Moran Tsur", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}, {"name": "Natalie Rusk", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}], "tags": ["scratch", "cs for all", "microworlds", "coding", "children", "project-based learning", "broadening participation"]}, {"title": "A Cross-Case Analysis of Instructional Strategies to Support Participation of K-8 Students with Disabilities in CS for All", "link": "https://dl.acm.org/doi/10.1145/3159450.3159482", "abstract": "Despite the proliferation of K-12 computer science (CS) programs and implementation of \"CS for All\" initiatives in U.S. schools, little research has been conducted on effective pedagogical approaches in K-12 CS. Even less research has focused on meeting the needs of students with disabilities. This paper presents findings from a qualitative case study examining the experiences of teachers who taught CS classes that included students with disabilities. The goal of this study was to identify pedagogical approaches that the teachers used to meet the needs of all students. Results indicated that teachers implemented three primary instructional strategies to address the needs of students with disabilities including facilitating student collaboration, using the Universal Design for Learning (UDL) framework, and using explicit instruction to teach CS concepts.", "authors": [{"name": "Chung eun Lee", "affiliation": "University of Illinois, Urbana-Champaign, Champaign, IL, USA"}, {"name": "Meg J. Ray", "affiliation": "Cornell Tech, New York City, NY, USA"}, {"name": "Virginie Do", "affiliation": "Ecole Polytechnique, Palaiseau, France"}, {"name": "Maya Israel", "affiliation": "University of Illinois, Urbana-Champaign, Champaign, IL, USA"}], "tags": ["K-12 education", "CS for all", "students with disabilities"]}, {"title": "Introducing the Computer Science Concept of Variables in Middle School Science Classrooms", "link": "https://dl.acm.org/doi/10.1145/3159450.3159545", "abstract": "The K-12 Computer Science Framework has established that students should be learning about the computer science concept of variables as early as middle school, although the field has not yet determined how this and other related concepts should be introduced. Secondary school computer science curricula such as Exploring CS and AP CS Principles often teach the concept of variables in the context of algebra, which most students have already encountered in their mathematics courses. However, when strategizing how to introduce the concept at the middle school level, we confront the reality that many middle schoolers have not yet learned algebra. With that challenge in mind, this position paper makes a case for introducing the concept of variables in the context of middle school science. In addition to an analysis of existing curricula, the paper includes discussion of a day-long pilot study and the consequent teacher feedback that further supports the approach. The CS For All initiative has increased interest in bringing computer science to middle school classrooms; this paper makes an argument for doing so in a way that can benefit students' learning of both computer science and core science content.", "authors": [{"name": "Philip Sheridan Buffum", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kimberly Michelle Ying", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "David C. Blackburn", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Bradford W. Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Xiaoxi Zheng", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Eric N. Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James C. Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["computational thinking", "science classrooms", "middle school"]}, {"title": "Session details: Paper Session: Nifty Session", "link": "https://dl.acm.org/doi/10.1145/3247865", "abstract": "No abstract available.", "authors": [{"name": "Julie Zelenski", "affiliation": "Stanford University"}], "tags": []}, {"title": "Nifty Assignments", "link": "https://dl.acm.org/doi/10.1145/3159450.3170601", "abstract": "I suspect that students learn more from our programming assignments than from our much worried-over lectures, with their slide transitions and attempts at live coding in lecture. A great assignment is deliberate about where the student hours go, concentrating the student's attention on material that is interesting and useful. The best assignments solve a problem that is topical and entertaining, providing motivation for the whole stack of work. Unfortunately, creating great programming assignments is both time consuming and error prone. The Nifty Assignments special session is all about promoting and sharing the ideas and ready-to-use materials of successful assignments.", "authors": [{"name": "Ali Malik", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Nick Parlante", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "David Reed", "affiliation": "Creighton University, Omaha, NE, USA"}, {"name": "Julie Zelenski", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Josh Hug", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Phil Ventura", "affiliation": "University of South Florida, Tampa, FL, USA"}, {"name": "Ben Stephenson", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "Michael Guerzhoy", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["repository", "assignments", "nifty", "pedagogy", "homeworks", "education", "library", "examples"]}, {"title": "Maryland Computing Education Expansion: From Grassroots to the MCCE", "link": "https://dl.acm.org/doi/10.1145/3159450.3159621", "abstract": "No abstract available.", "authors": [{"name": "Jan. Plane", "affiliation": "University of Maryland, College Park, College Park, MD, USA"}, {"name": "Scott Nichols", "affiliation": "Maryland State Department of Education, Baltimore, MD, USA"}, {"name": "Marie desJardins", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Pat Yongpradit", "affiliation": "code.org, Seattle, WA, USA"}, {"name": "Dianne O'Grady-Cunniff", "affiliation": "Charles County Public Schools, La Plata, MD, USA"}, {"name": "Rebecca Zarch", "affiliation": "SageFox Consulting Group, Amherst, MA, USA"}], "tags": ["broadening participation in computing education}", "keywords{elementary schools", "universities", "public policy", "secondary schools"]}, {"title": "The CECE Report: Creating a Map of Informatics in European Schools", "link": "https://dl.acm.org/doi/10.1145/3159450.3159633", "abstract": "Recent years have seen an increase in activities geared towards making Computer Science courses available to all K-12 students. However, due to administrative regulations, such activities and their implementation often need to be localized on a national or even local context; these constraints, often paired with subtle but important terminology differences, hinder those wanting to compare the status quo across the boundaries of administrative units and to draw on experiences made elsewhere.", "authors": [{"name": "Enrico Nardelli", "affiliation": "University of Rome \"Tor Vergata\", Rome, Italy"}, {"name": "Judith Gal-Ezer", "affiliation": "Open University of Israel, Rehovot, Israel"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}, {"name": "Michael E. Caspersen", "affiliation": "It-vest -- networking universities, Aarhus, Denmark"}, {"name": "Mirko Westermeier", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}], "tags": ["informatics", "digital literacy", "computer science", "k-12 education", "teacher training"]}, {"title": "Special Session: Joint Task Force on Cybersecurity Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159635", "abstract": "In this special session, members of the Joint Task Force (JTF) on Cybersecurity Education will provide an overview of the CSEC2017 curricular guidelines (finalized in December 2017) and engage session participants in a discussion of the curricular framework and body of knowledge. The session will conclude with an interactive panel discussion on implementing the curricular guidance.", "authors": [{"name": "David S. Gibson", "affiliation": "United States Air Force Academy, Colorado Springs, CO, USA"}, {"name": "Allen Parrish", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}, {"name": "Scott Buck", "affiliation": "Intel Corporation, Chandler, AZ, USA"}, {"name": "Diana Burley", "affiliation": "George Washington University, Washington, D.C., DC, USA"}, {"name": "Matt Bishop", "affiliation": "University of California, Davis, Davis, CA, USA"}, {"name": "Herb Mattord", "affiliation": "Kennesaw State University, Kennesaw, GA, USA"}, {"name": "Siddharth Kaza", "affiliation": "Towson University, Towson, MD, USA"}], "tags": ["security education", "curriculum", "cybersecurity education", "cyber sciences"]}, {"title": "Repositories You Shouldn't Be Living Without", "link": "https://dl.acm.org/doi/10.1145/3159450.3159643", "abstract": "Over the last few years, a number of repositories of information relevant to the computing education community have come online, each with different content and purpose. In this special session, we present an overview of these repositories and the content that each provides. Demonstrations of the functionality of the repositories will be shown and attendees are encouraged to come with their questions and suggestions for improvement if they are currently users of the repositories.", "authors": [{"name": "Beth Quinn", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Miles Berry", "affiliation": "University of Roehampton, London, England UK"}, {"name": "Tom McKlin", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Adrienne Decker", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Kathy Haynie", "affiliation": "Haynie Research and Evaluation, Skillman, NJ, USA"}, {"name": "Leigh Ann DeLyser", "affiliation": "CSforAll Consortium, New York, NY, USA"}], "tags": ["K-12 computing", "repositories", "broadening participation"]}, {"title": "Session details: Paper Session: Active Learning #2", "link": "https://dl.acm.org/doi/10.1145/3247866", "abstract": "No abstract available.", "authors": [{"name": "Chris Mayfield", "affiliation": "James Madison University"}], "tags": []}, {"title": "Exploring Active Learning Approaches to Computer Science Classes", "link": "https://dl.acm.org/doi/10.1145/3159450.3159585", "abstract": "We present our experience in a Computer Science (CS) introductory course, where three teaching practices were implemented and compared: lectured-based learning, problem-based learning, and peer instruction. We chose Information Systems, a first-term undergraduate course, for this study. It overviews a variety of topics in CS, such as algorithms, data structures and programming logic. We initially conducted interviews with previous instructors, who assisted in the collection of data, requirements, and needs pertaining to both students and instructors. We also carried out a survey among students enrolled in the program, in order to identify suggestions on how the classes could become more dynamic and motivating. In sequence, the experiment was designed to format and evaluate classes in the chosen paradigms. We focused on assessing and analyzing how the students' motivation and learning process were affected, as well as how difficult it was for instructors to prepare classes and how much time they expended in doing so. Results indicate that a paradigm shift from traditional teaching is not only expected by students and instructor; it is well received, and had a positive influence on the students' learning and motivation. We also found, however, that the proposed changes brought on an unwelcome overhead for the instructors, as additional time and effort are required to implement such practices.", "authors": [{"name": "Guilherme Gama", "affiliation": "State University of Campinas, Campinas, Brazil"}, {"name": "Ricardo Caceffo", "affiliation": "State University of Campinas, Campinas, Brazil"}, {"name": "Rodolfo Azevedo", "affiliation": "State University of Campinas, Campinas, Brazil"}], "tags": ["active learning", "CS1", "lecture-based", "computer science", "CS0", "problem-based learning", "peer instruction", "experience report"]}, {"title": "Scrumage: A Method for Incorporating Multiple, Simultaneous Pedagogical Styles in the Classroom", "link": "https://dl.acm.org/doi/10.1145/3159450.3159596", "abstract": "Pedagogical approaches abound in computer science. Common approaches include flipped classrooms, active learning, gamification, and the traditional lecture-based approach. There are also a wide variety of computer science learning materials including videos, interactive tutorials, and textbooks (whether presented online or on paper). Instructor choices of approach and materials present a series of trade-offs and may favor some groups of students over others. We propose a method, Scrumage, (SCRUM for AGile Education) in an attempt to overcome the necessity of making trade-offs. We allow each student in a course to select among several pedagogical approaches and sets of materials to fit each individual student's learning needs and desires. Scrumage adapts concepts from the Scrum project management technique. In Scrum, project teams are developing a product for a client. In Scrumage, student teams are developing knowledge with support from the instructor. We define and motivate Scrumage and discuss the implementation and outcomes of the technique in a class at our undergraduate institution.", "authors": [{"name": "Shannon Duvall", "affiliation": "Elon University, Elon, NC, USA"}, {"name": "Robert C. Duvall", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Dugald Ralph Hutchings", "affiliation": "Elon University, Elon, NC, USA"}], "tags": ["pedagogy", "scrum in education", "scrumage", "computer science education", "team based learning"]}, {"title": "Effects of Active Learning Environments and Instructional Methods in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3159450.3159451", "abstract": "This research investigated the impacts of active learning environments and instructional methods adapted to such environments on the academic performance of computer science students. Two consecutive studies involving a total of 267 novice students in the same course were conducted across two different semesters. The course was taught by the same instructor and set up with two different sections. One section was taught in a conventional lecture hall, while the other was taught in an active-learning classroom with adapted instructional methods. Active learning environments and the adapted instructional methods were found to have significantly positive effects on students' learning outcomes. Fine-grained results grouped by major were discussed. The findings of this study demonstrate positive effects of active learning environments in computer science education, thereby adding to the literature on both computer science education and learning environments.", "authors": [{"name": "Eunjung Kim", "affiliation": "Pusan National University, Pusan, South Korea"}, {"name": "Ewan Wright", "affiliation": "University of Hong Kong, Hong Kong, Hong Kong"}, {"name": "Qiang Hao", "affiliation": "Western Washington University, Bellingham, WA, USA"}, {"name": "Bradley Barnes", "affiliation": "University of Georgia, Athens, GA, USA"}], "tags": ["learning outcomes", "active learning classrooms", "computer science education", "active learning environments"]}, {"title": "Session details: Paper Session: Ethics", "link": "https://dl.acm.org/doi/10.1145/3247867", "abstract": "No abstract available.", "authors": [{"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "Ethics Education in Context: A Case Study of Novel Ethics Activities for the CS Classroom", "link": "https://dl.acm.org/doi/10.1145/3159450.3159573", "abstract": "Our paper offers several novel activities for teaching ethics in the context of a computer science (CS) class. Rather than approaches that teach ethics as an isolated course, we outline and discuss multiple ethics education interventions meant to work in the context of an existing technical course. We piloted these activities in an Human Centered Computing course and found strong engagement and interest from our students in ethics topics without sacrificing core course material. Using a pre/post survey and examples from student assignments, we evaluate the impact of these interventions and discuss their relevance to other CS courses. We further make suggestions for embedding ethics in other CS education contexts.", "authors": [{"name": "Casey Fiesler", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Tom Yeh", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Srinjita Bhaduri", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Nathan Beard", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Michael Skirpan", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["active learning", "ethics", "pedagogy", "curriculum", "critical reflection"]}, {"title": "Quantified Self: An Interdisciplinary Immersive Theater Project Supporting a Collaborative Learning Environment for CS Ethics", "link": "https://dl.acm.org/doi/10.1145/3159450.3159574", "abstract": "This paper presents Quantified Self: Immersive Data and Theater Experience (QSelf) as a case study in collaborative and interdisciplinary learning and toward a project-based education model that promotes technical art projects. 22 students from several departments engaged in a semester-long effort to produce an immersive theater show centered on ethical uses of personal data, a show that drew more than 240 people over 6 performances. The project was housed out of the computer science department and involved multiple computer science undergraduate and graduate students who had the chance to work with students from the department of theater and dance. By analyzing the technical artifacts students created and post-interviews, we found this project created a novel and productive space for computer science students to gain applied experience and learn about the social impacts of their work while the arts students gained a fluency and understanding around the technical issues presented.", "authors": [{"name": "Tom Yeh", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Jacqueline Cameron", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Michael Skirpan", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["interdisciplinary education", "performance", "ethics", "pedagogy", "collaborative learning", "curriculum", "theater"]}, {"title": "Key Concepts for a Data Science Ethics Curriculum", "link": "https://dl.acm.org/doi/10.1145/3159450.3159483", "abstract": "Data science is a new field that integrates aspects of computer science, statistics and information management. As a new field, ethical issues a data scientist may encounter have received little attention to date, and ethics training within a data science curriculum has received even less attention. To address this gap, this article explores the different codes of conduct and ethics frameworks related to data science. We compare this analysis with the results of a systematic literature review focusing on ethics in data science. Our analysis identified twelve key ethics areas that should be included within a data science ethics curriculum. Our research notes that none of the existing codes or frameworks covers all of the identified themes. Data science educators and program coordinators can use our results as a way to identify key ethical concepts that can be introduced within a data science program.", "authors": [{"name": "Jeffrey S. Saltz", "affiliation": "Syracuse University, Syracuse, NY, USA"}, {"name": "Robert Heckman", "affiliation": "Syracuse University, Syracuse, NY, USA"}, {"name": "Neil I. Dewar", "affiliation": "Syracuse University, Syracuse, NY, USA"}], "tags": ["data science", "big data", "ethics", "computing education"]}, {"title": "Session details: Paper Session: High School #2", "link": "https://dl.acm.org/doi/10.1145/3247868", "abstract": "No abstract available.", "authors": [{"name": "Howard Francis", "affiliation": "University of Pikeville"}], "tags": []}, {"title": "Connecting Colleges/Universities and Local High Schools: A New Model for High School CS Teacher Development", "link": "https://dl.acm.org/doi/10.1145/3159450.3159570", "abstract": "In this paper, we describe our experiences with a new model for in-service computer science (CS) professional development that embeds college/university faculty into local high school classrooms partnered with a high school teacher. The high schools we have worked with had not previously offered any rigorous CS courses, and the teachers had little or no CS background. Our goal is to provide the development necessary for the high school teachers to be able to independently teach an engaging and rigorous college level CS course. We have leveraged the local nature of our program to ensure an on-going partnership between the high schools and the college/university lasting beyond the structured professional development program. Here we describe our program, the teachers and schools we have worked with, our community building efforts, and our next steps. We also present outcomes and data from our initial evaluations.", "authors": [{"name": "Robin Flatland", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "MaryAnne L. Egan", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Sharon Small", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Meg Fryling", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Ira Goldstein", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Scott Vandenberg", "affiliation": "Siena College, Loudonville, NY, USA"}], "tags": ["learning community", "professional development", "dual enrollment", "high school teacher development"]}, {"title": "Improving Research and Experience Reports of Pre-College Computing Activities: A Gap Analysis", "link": "https://dl.acm.org/doi/10.1145/3159450.3159481", "abstract": "This paper provides a detailed examination of pre-college computing activities as reported in three Association of Computing Machinery (ACM) venues (2012-2016). Ninety-two articles describing informal learning activities were reviewed for 24 program elements (i.e., activity components, and student/instructor demographics). These 24 program elements were defined and shaped by a virtual focus group study and the articles themselves. Results indicate that the majority of authors adequately report age/grade levels of participants, number of participants, the type of activity, when the activity was offered, the tools/languages used in the activity, and whether the activity was required or elective. However, there is a deficiency in reporting many other important and foundational program elements, including contact hours of activity participants, clear learning objectives, the prior experience of participants (students and instructors), and many more. In conjunction with previous work, this paper provides recommendations to reduce these deficiencies. The Recommendations for Reporting Pre-College Computing Activities (Version 1.0) are presented to help researchers improve the quality of papers, set a standard of necessary data needed to replicate studies, and provide a basis for comparing activities and activity outcomes across multiple studies and experiences.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Zachary Abbott", "affiliation": "Bradley University, Peoria, IL, USA"}, {"name": "Adrienne Decker", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["research quality", "summer camps", "workshops", "outreach", "pre-college activity", "K-12 education", "informal education", "after-school"]}, {"title": "Examining the State of CS Education in Virginia's High Schools", "link": "https://dl.acm.org/doi/10.1145/3159450.3159492", "abstract": "Virginia House Bill 831 (2016) put the state on a path toward K-12 Standards of Learning that include computer science (CS) at all levels. Accompanying the initiative is an effort to define the \"State of the State['s]\" current CS offerings. The author examined course offerings at 251 of the state's 320 high schools to determine how accessible on-site CS courses were across the state. The results indicate a significant disparity between school systems located in rural communities and small townships when compared with suburban/city locales. Perhaps more striking was the emerging connection between the region where one lives in the state and that individual's access to (or lack thereof) in-person CS instruction. The results also suggest fewer than half the schools in Virginia are running a CS class as of spring 2017 when the study was conducted.", "authors": [{"name": "Chris Rhoton", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["rural education", "Virginia", "perceptions", "high school", "K-12 education", "CS for all"]}, {"title": "Session details: Paper Session: Interdisciplinary Perspectives", "link": "https://dl.acm.org/doi/10.1145/3247869", "abstract": "No abstract available.", "authors": [{"name": "Anya Tafliovich", "affiliation": "University of Toronto"}], "tags": []}, {"title": "Using Music to Engage Students in an Introductory Undergraduate Programming Course for Non-Majors", "link": "https://dl.acm.org/doi/10.1145/3159450.3159468", "abstract": "EarSketch is a curriculum and learning environment designed to engage diverse student populations in introductory computing courses through an approach that connects coding and computational thinking with the composition, production, and remixing of popular music. Prior studies at the high school level have shown significant impacts on student engagement and intention to persist in computing, especially for female students. This paper describes an adaptation of EarSketch for use in an introductory undergraduate-level programming course for non-majors at an open-access four-year college. The paper describes a quasi-experimental study comparing student engagement, content knowledge, and intention to persist between course sections using EarSketch and non-EarSketch flavors of the curriculum, along with a path analysis exploring factors related to student engagement and intention to persist. The findings suggest that STEAM learning interventions such as EarSketch can significantly impact gains in student content knowledge, engagement, and intention to persist across diverse undergraduate student populations.", "authors": [{"name": "Sebastien Siva", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Tom McKlin", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Tacksoo Im", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Jason Freeman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Brian Magerko", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["music", "computer science education", "steam", "creativity"]}, {"title": "Sound Design for Video Games: An Interdisciplinary Course for Computer Science and Art Students", "link": "https://dl.acm.org/doi/10.1145/3159450.3159577", "abstract": "This paper describes our experience and observations in creating an experimental interdisciplinary course focusing on sound design and its implementation in computer games. This paper provides a model for others that may want to develop similar courses that focus on interdisciplinary collaboration in this genre. The course was targeted to motivated computer science and sound design / art students, and was not designed as an introduction to computer science. Rather, it was designed as a project course where students can apply topics in sound design by creating a video game within a diverse team, enabling a collaborative learning opportunity. Students applied both creative sound design principles and technical implementation using industry-standard tools such as QLab, Wwise, and Unity.", "authors": [{"name": "Richert Wang", "affiliation": "University of California, Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Vincent Olivieri", "affiliation": "University of California, Irvine, Irvine, CA, USA"}], "tags": ["video games", "sound design", "interdisciplinary course", "collaborative learning"]}, {"title": "Authenticity and Personal Creativity: How EarSketch Affects Student Persistence", "link": "https://dl.acm.org/doi/10.1145/3159450.3159523", "abstract": "STEAM education is an approach to engage students in STEM topics by prioritizing personal expression, creativity, and aesthetics. EarSketch, a collaborative and authentic learning tool, introduces students to programming through music remixing, has previously been shown to increase student engagement, and increases learner's intentions to persist in computing. The goal of EarSketch is to broaden participation in computing through a thickly authentic learning environment that has personal and real world relevance in both computational and music domains. This article reports a quasi-experimental study suggesting that an authentic learning environment predicts increased intentions to persist via identity/belongingness and creativity. We ran a path analysis that exposed the creativity subscales, and this analysis reveals that \"sharing\" is the one creativity sub-construct that predicts increased intention to persist. This work makes a significant contribution to computer science education by revealing how an authentic STEAM curriculum affects student attitudes and knowledge, by presenting scales to measure authenticity and personal creativity, and by discussing how identity/belongingness may affect student success.", "authors": [{"name": "Taneisha Lee", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Tom McKlin", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Jason Freeman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Doug Edwards", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Dana Wanzer", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Brian Magerko", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["creativity", "computer science education", "steam", "music", "broadening participation"]}, {"title": "Session details: Paper Session: K thru 8 #2", "link": "https://dl.acm.org/doi/10.1145/3247870", "abstract": "No abstract available.", "authors": [{"name": "James Heliotis", "affiliation": "Rochester Institute of Technology"}], "tags": []}, {"title": "Coding or Hacking?: Exploring Inaccurate Views on Computing and Computer Scientists among K-6 Learners in Chile", "link": "https://dl.acm.org/doi/10.1145/3159450.3159598", "abstract": "Advancing computational thinking in elementary education has been rapidly gaining attention due to the prospective of developing 21st century skills. However, interventions in this domain risk failure if they do not explicitly address the particular socio-cultural traits of the deployment scenario. This is the case in most countries of Latin America, where computing has not reached a sustainable penetration in K-12 education. In order to bridge this gap, we designed a one-week workshop for advancing computational thinking targeted to 10-12 years old Chilean students with no prior experience in programming. This paper describes our intervention and presents the results of a qualitative study analyzing positive and negative aspects of the experience. Although most participants effectively acquired basic programming skills by the end of the intervention, we also identified several inaccurate views on computing and computer scientists. For instance, computing was mostly perceived as a set of informal experiences rather than a way for enabling creation, automation, and work. The word \"hacking\" appears to be used as a metaphor for more technical terms, such as \"programming\" or \"algorithm\". Finally, negative stereotypical views of computer scientists resulting from the intervention were not as frequent as initial perceptions. These results provide fresh evidence on how to design, adapt, and evaluate computational thinking interventions targeted to K-6 students in Latin America.", "authors": [{"name": "Francisco J. Gutierrez", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Jocelyn Simmonds", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Nancy Hitschfeld", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Cecilia Sotomayor", "affiliation": "University of Chile, Santiago, Chile"}, {"name": "Cecilia Casanova", "affiliation": "University of Chile, Santiago, Chile"}], "tags": ["k-6 education", "computational thinking", "latin america"]}, {"title": "What We Can Learn About Student Learning From Open-Ended Programming Projects in Middle School Computer Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159522", "abstract": "Block-based programming environments such as Scratch, App Inventor, and Alice are a key part of introductory K-12 computer science (CS) experiences. Free-choice, open-ended projects are encouraged to promote learner agency and leverage the affordances of these novice-programming environments that also support creative engagement in CS. This mixed methods research examines what we can learn about student learning from such programming artifacts. Using an extensive rubric created to evaluate these projects along several dimensions, we coded a sample of ~80 Scratch and App Inventor projects randomly selected from 20 middle school classrooms in a diverse urban school district in the US. We present key elements of our rubric, and report on noteworthy trends including the types of artifacts created and which key programming constructs are or are not commonly used. We also report on how factors such as students' gender, grade, and teachers' teaching experience influenced students' projects. We discuss differences between programming environments in terms of artifacts created, use of computing constructs, complexity of projects, and use of features of the environment for creativity, interactivity, and engagement. Our findings will help educators of introductory computing be more cognizant of how best to leverage the programming environments they are using, and what aspects they need to focus on as they attempt to address the learning needs of all in \"CS For All.\"", "authors": [{"name": "Satabdi Basu", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Patricia Schank", "affiliation": "Digital Promise, Redwood City, CA, USA"}, {"name": "Shuchi Grover", "affiliation": "ACT, Iowa City, IA, USA"}], "tags": ["scratch", "rubric", "middle school", "open-ended programming projects", "app inventor", "introductory programming", "computational thinking", "k-12 cs education"]}, {"title": "An Analysis of a Media-Based Approach to Teach Programming to Middle School Students", "link": "https://dl.acm.org/doi/10.1145/3159450.3159526", "abstract": "Previous studies have presented approaches to teach programming based on contexts close to students, such as games, robotics, and media. Those contexts may turn learning easier and more motivating. Media manipulation is one of such contexts relevant to teenage students, for their thorough use of image applications and social networks. In this work, we design and evaluate a spiral approach to teach programming to ninth-grade students of a middle school in Brazil's countryside. The approach is contextualized by media, i.e., image creation and manipulation, and we use the Python language with turtle graphics and JES tools to support it. Results point out to the influence of context and tools on learning, significant changes of perception about computing, high motivation to learn how to code, as well as a positive correlation between learning and motivation.", "authors": [{"name": "Roberto A. Bittencourt", "affiliation": "UEFS - State University of Feira de Santana, Feira de Santana, Brazil"}, {"name": "David M.B. Santos", "affiliation": "UEFS - State University of Feira de Santana, Feira de Santana, Brazil"}, {"name": "Luis Gustavo J. Araujo", "affiliation": "UEFS - State University of Feira de Santana, Feira de Santana, Brazil"}], "tags": ["media computation", "python", "K-12"]}, {"title": "Session details: Paper Session: Recursion", "link": "https://dl.acm.org/doi/10.1145/3247871", "abstract": "No abstract available.", "authors": [{"name": "Maria Jump", "affiliation": "King's College"}], "tags": []}, {"title": "Recursion or Iteration: Does it Matter What Students Choose?", "link": "https://dl.acm.org/doi/10.1145/3159450.3159455", "abstract": "Recursion and iteration are two key topics taught in introductory Computer Science. This is especially so for CS2 students, as CS2 is the course where recursion is typically taught and where control-flow concepts are solidified. When asked to solve a problem that could feasibly be solved with recursion or iteration, what do CS2 students choose to do? And how does this choice relate to the correctness of their code? This paper provides one answer to these questions through an analysis of student exam responses to a problem on finding deepest common ancestors in trees.\nWe find that 19% of students choose to use iteration, 51% choose recursion, and 16% choose to combine both iteration and recursion. In terms of correctness, we find that students who choose iteration perform better than those who choose recursion and the combination of both. Additionally, we find concern in the number of students who seemingly do not understand what the question is asking. We end the paper with some comments on helping students choose an appropriate control-flow strategy and a discussion of this type of question on a final exam.", "authors": [{"name": "Mohamed Mohamed", "affiliation": "University of Toronto, Mississauga, Mississauga, Canada"}, {"name": "Mohammed Khan", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Larry Yueli Zhang", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Ramy Esteero", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}], "tags": ["cs2", "novice programming", "iteration", "recursion"]}, {"title": "GUI-Based vs. Text-Based Assignments in CS1", "link": "https://dl.acm.org/doi/10.1145/3159450.3159463", "abstract": "Teaching CS1 can be daunting. The first courses in the CS curriculum help determine which students will ultimately matriculate into the program. There have been various studies on how to improve motivation and reduce attrition by using visual-based environments and assignments. We performed a year-long study in which we addressed two research questions: 1) How is student performance affected by drag-and-drop GUI assignments when compared to traditional text-based assignments? 2) If given the choice, would students select GUI-based or text-based assignments? For the first question, there was no statistical significance, indicating that student performance is not affected by this visual component. For the second question, we discovered more students selected the text-based assignments over the GUI-assignments. Separating the students into groups based on what they chose revealed that the students that selected the GUI-assignments scored on average one letter grade higher, enjoyed the assignments more and spent less time on the assignments. We recorded the reported motivations behind why students chose to do the GUI-based assignments versus the text-based assignments: Overall, the GUI Group's responses trended toward self-improvement (e.g. more like the real world, improve skills, more challenging) while the Text Group's responses trended toward ease (e.g. easier/simpler, save time). Lastly, at the end of each course we asked the students if, given the hypothetical case in which they were not pressed for time, they would create the Java application with or without a GUI? 93% of the students responded that they would create a GUI Java application.", "authors": [{"name": "Brian Rague", "affiliation": "Weber State University, Ogden, UT, USA"}, {"name": "Linda DuHadway", "affiliation": "Weber State University, Ogden, UT, USA"}, {"name": "Robert Ball", "affiliation": "Weber State University, Ogden, UT, USA"}, {"name": "Spencer Hilton", "affiliation": "Weber State University, Ogden, UT, USA"}], "tags": ["CS1", "Java", "assessment", "graphics", "motivation", "graphical user interface"]}, {"title": "Evaluating the Tracing of Recursion in the Substitution Notional Machine", "link": "https://dl.acm.org/doi/10.1145/3159450.3159479", "abstract": "We evaluate a notional machine for recursion based on algebraic substitution. To do this, we decompose recursion into a progression of function call patterns, parameter name reuse, and data structure complexity. At each stage, we test students' ability to trace programs using substitution. We evaluate the correctness of their traces along multiple dimensions, finding that students generally do well, and also observe shortcuts and identify misconceptions. For comparison, we also have students trace two problems using a traditional, imperative notional machine. Even though the substitution model is unwieldy to use with compound data, students still perform better with it than with the traditional notional machine.", "authors": [{"name": "Preston Tunnell Wilson", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Shriram Krishnamurthi", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Kathi Fisler", "affiliation": "Brown University, Providence, RI, USA"}], "tags": ["tracing", "recursion", "substitution", "pedagogy"]}, {"title": "Session details: Paper Session: Undergrad Education: Data Science and Gaming", "link": "https://dl.acm.org/doi/10.1145/3247872", "abstract": "No abstract available.", "authors": [{"name": "Brett Becker", "affiliation": "University College Dublin"}], "tags": []}, {"title": "Reconciling the Promise and Pragmatics of Enhancing Computing Pedagogy with Data Science", "link": "https://dl.acm.org/doi/10.1145/3159450.3159465", "abstract": "Data science keeps growing in popularity as an introductory computing experience, in which students answer real-world questions by processing data. Armed with carefully prepared pedagogical datasets, computing educators can contextualize assignments and projects in societally meaningful ways, thereby benefiting students' long-term professional careers. However, integrating data science into introductory computing courses requires that the datasets be sufficiently complex, follow appropriate organizational structure, and possess ample documentation. Moreover, the impact of a data science context on students' motivation remains poorly understood. To address these issues, we have created an open-sourced manual for developing pedagogical datasets (freely available at https://think.cs.vt.edu/pragmatics). Structured as a collection of patterns, this manual shares the expertise that we have gained over the last several years, collecting and curating a large collection of real-world datasets, used in a dozen of universities worldwide. We also present new evidence confirming the efficacy of integrating data science in an introductory computing course. As a significant extension of our ongoing work, this study not only validates existing positive assessment, but also provides fine-grained nuance to the potential of data science as a motivational educational element.", "authors": [{"name": "Eli Tilevich", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Austin Cory Bart", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Dennis Kafura", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["computational thinking", "data science", "datasets", "corgis"]}, {"title": "A Functional Approach to Data Science in CS1", "link": "https://dl.acm.org/doi/10.1145/3159450.3159550", "abstract": "As part of the development of a new interdisciplinary initiative in data science that draws from statistics, mathematics, computer science, and the social sciences, we have developed a new introductory CS course that emphasizes data science and that we refer to as DataCSCi. Unlike other introductory data science courses, such as Berkeley's Data 8, our course retains the broad array of concepts necessary not only to introduce programming principles related to data science, but also to prepare students for the second course in our standard introductory computer science sequence. In particular, the course includes coverage of recursion (numeric and structural), unit testing, linked data structures, and other concepts we rely upon in subsequent courses in computer science. At the same time, we introduce students to a wide variety of techniques and approaches that support them in their subsequent work in data science, including techniques for wrangling, cleaning, and visualizing data. We achieve this combination of breadth and depth through two core approaches: We focus on a spiral \"use then implement\" approach and we focus on a functional model of programming using Scheme/Racket. While Python and R are the most commonly used languages for data science, we find that Scheme works particularly well to introduce students to concepts both complex, like map-reduce, and simple, like list filtering. In this paper, we report on the design of the curriculum, particularly the capstone project and the ways in which we incorporate the burgeoning subfield of data science for social good.", "authors": [{"name": "Titus H. Klinge", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Sarah Dahlby Albright", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["racket", "CS1", "functional programming", "scheme", "data science", "cross-disciplinary courses", "map-reduce"]}, {"title": "CS4NC Summit 2017: Lessons Learned in Developing a Coordinated Statewide CS For All Initiative", "link": "https://dl.acm.org/doi/10.1145/3159450.3159630", "abstract": "Broadening participation in computing education for K-12 students requires all levels of the education system to collaborate on five critical needs: 1) creating diverse student opportunities and access to CS activities; 2) empowering highly qualified, highly skilled CS teachers; 3) developing relevant and accessible CS courses and curricula; 4) establishing CS policy and leadership at the local and state levels; and 5) engaging communities and industry partners in broadening participation in CS.", "authors": [{"name": "Deborah Seehorn", "affiliation": "Computer Science Teachers Association, Cary, NC, USA"}, {"name": "David Frye", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Sam Morris", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Mary Lou Maher", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}], "tags": ["cross-sector.", "schools", "faculty", "partnerships", "community college", "industry", "k-12 teachers", "state policy", "statewide", "students"]}, {"title": "Technology We Can't Live Without!, revisited", "link": "https://dl.acm.org/doi/10.1145/3159450.3159629", "abstract": "The pace of technology for use in computing education is staggering. In recent years, the following technologies have completely transformed our teaching: Piazza, GradeScope, YouTube, Google Docs, Doodle and whenisgood.net, Skype and Google Hangout, and Khan Academy among others. Hardware has also played a part. We love our Zoom digital voice recorder (for recording CD-quality lecture audio), Blue Yeti USB mike (for audio/videoconferences), and iClickers (for engaging students in class). This panel is an outgrowth of a Technology that Educators of Computing Hail (TECH) Birds of a Feather session that we've held at SIGCSE for seven years, and the panel from SIGCSE 2015 [1] that served as a springboard for a regular column in ACM Inroads [2]. It will provide a chance for seasoned high school and university educators to show you the technologies that have \"bubbled to the top\" for them, and what key problems they solve. Like concert musicians, they will give live demonstrations and reveal the configuration options required to make their technology \"sing\". We hope this forum will allow the presenters to dive deeply into the common use cases of these technologies, highlight why they are invaluable, share any \"gotchas\" they've uncovered, and explain how others can adopt them at their institutions. The highlight of the panel is when the audience, inspired by the presentations, is invited to share their favorite \"can't live without\" technologies as well.", "authors": [{"name": "John Dougherty", "affiliation": "Haverford College, Haverford, PA, USA"}, {"name": "Joe Hummel", "affiliation": "University of Illinois, Chicago, Chicago, IL, USA"}, {"name": "Michael Ball", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Ria Galanos", "affiliation": "Thomas Jefferson High School for Science and Technology, Alexandria, VA, USA"}], "tags": ["computer science education", "technology and teaching"]}, {"title": "IT2017 Report: Implementing A Competency-Based Information Technology Program", "link": "https://dl.acm.org/doi/10.1145/3159450.3159636", "abstract": "ACM and IEEE have developed a computing curriculum report titled Information Technology Curricular 2017: Curriculum Guidelines for Undergraduate Degree Programs in Information Technology, also known as IT2017 [4]. The development of this report has received content contributions from industry and academia through surveys as well as many international conferences and workshops. Open online publication of the report became available in fall of 2017. In this special session, five members of the IT2017 executive committee will present a digest of the content of the report, describe the proposed IT curricular framework, and facilitate open and vigorous discussion of the report/s guidelines for developing new information technology programs or enhancing existing ones. The novelty of the report is its focus on industry-informed competencies that IT graduates should have to meet the growing demands of a changing technological world in the next decade. The experience should provide a better understanding of IT in a modern age.", "authors": [{"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Hala Alrumaih", "affiliation": "Al Imam Mohammad Ibn Saud Islamic University, Riyadh, Saudi Arabia"}, {"name": "Mihaela Sabin", "affiliation": "University of New Hampshire, Manchester, NH, USA"}, {"name": "John Impagliazzo", "affiliation": "Hofstra University, Hepstead, NY, USA"}, {"name": "Ming Zhang", "affiliation": "Peking University, Beijing, China"}], "tags": ["it curricular guidelines", "information technology curricula it2017", "it framework"]}, {"title": "Draft Report of the SIGCSE Committee on Computing Education in the Liberal Arts", "link": "https://dl.acm.org/doi/10.1145/3159450.3159639", "abstract": "The SIGCSE Committee on Computing Education in the Liberal Arts seeks to identify distinctive needs of liberal arts computing educators, and to suggest ways of addressing those needs. This session will be the initial presentation of the Committee's findings and recommendations, and a chance for the community to comment on the results prior to our final written report. The Committee found considerable variety among liberal arts computing programs, but enough common features to consider \"liberal arts computing program\" to be a distinct category with needs that arise from its shared features. The liberal arts computing community expressed a very strong desire for a permanent organization to support its members and represent its interests to the rest of the world. Conversely, we see evidence that the computing education community as a whole values liberal arts computing perspectives and would benefit from a well-defined source for those perspectives. The Committee's main recommendation is therefore to establish a permanent liberal arts computing organization that can serve both to support computing education in the liberal arts and to represent that community in larger conversations.", "authors": [{"name": "Douglas Baldwin", "affiliation": "SUNY Geneseo, Geneseo, NY, USA"}], "tags": ["liberal arts", "SIGCSE committee on computing education in the liberal arts", "committee report"]}, {"title": "Session details: Closing Keynote", "link": "https://dl.acm.org/doi/10.1145/3247873", "abstract": "No abstract available.", "authors": [{"name": "Dan Garcia", "affiliation": "UC Berkeley"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "CSforALL: Nodes and Networks for National Impact", "link": "https://dl.acm.org/doi/10.1145/3159450.3166088", "abstract": "Over the last few years, efforts to reinvigorate K-12 computer science (CS) education have emerged from the inner circles of education and become a global movement. CS is now seen as a competitive advantage in the global economy and a way up the economic ladder for countries of all sizes. Nations including the UK, South Korea, New Zealand, Israel and Estonia have taken the lead in establishing CS as a core subject. Using the US-based Computer Science for All (CSforALL) initiative as a case study, Ruthe Farmer, Chief Evangelist at CSforALL and former Senior Policy Advisor for Tech Inclusion under President Obama, will share lessons learned and challenges faced in the work to bring CS to all US students such as education policy transformation, weathering changes in political leadership, and leveraging the \"long tail\" of the CS stakeholder community to achieve sustainable change through collective impact and local engagement. This talk will offer examples and opportunities for all SIGCSE attendees to contribute to the CSforALL movement and become nodes in the distributed national network of organizations and initiatives, both big and small, that will make CSforAll a reality.", "authors": [{"name": "Ruthe Farmer", "affiliation": "CSforAll Consortium, Denver, CO, USA"}], "tags": ["computer science for all", "computing education"]}, {"title": "Programming for the Humanities: A Whirlwind Tour of Assignments (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162351", "abstract": "CS instructors are sometimes tasked with modifying CS1 courses to teach introductory programming for the Digital Humanities. Training computer science students in DH programming methods may also have some additional benefits, such as bringing more women into computing, and helping in the recruitment and retention of CS students overall. DH projects may also provide Service-Learning opportunities that will give students experiential learning opportunities not provided in industry. The presenters have developed six assignments in Python that are oriented towards DH topics while still providing CS students solid experiences in core programming concepts. This workshop introduces the participants to five of the assignments and gives them immersive abbreviated experiences in each. The topics include Computing Change over Time (calculating burials in a historic cemetery), Visualization of Change over Time (visualizing the burials in the historic cemetery), Textual Analysis (finding word frequencies and \"stop words\" in public domain texts), Stylometrics (comparing measured features of graphic images), and Social Network Analysis (analyzing extended relationships in historic social circles). A balance of direct coding experience and discussion of gotchas and best practices in classroom management will give workshop participants confidence in offering and managing these assignments in their own classrooms. Participants should bring a laptop/keying-friendly mobile device that has a Python 3.x IDE already installed, and some familiarity with the Python language.", "authors": [{"name": "Brian Kokensparger", "affiliation": "Creighton University, Omaha, NE, USA"}, {"name": "Wade Peyou", "affiliation": "Creighton University, Omaha, NE, USA"}], "tags": ["python programming", "humanities programming", "digital humanities", "CS1"]}, {"title": "Programming Web Services on the Cloud with Node.js: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162367", "abstract": "Node.js is one of the hottest open source web platforms currently available. It's used by companies like PayPal, DowJones, Walmart, Netflix, and Yahoo. Node.js allows you to use JavaScript to write all kinds of network servers in just a few lines of code, definitely easier than using other platforms based on languages such as C++, C# or Java. If you know how to use JavaScript on the front end (i.e., the browser), it's a breeze to use it on the back end (i.e., the server). This workshop is aimed at CS instructors that wish to teach students how to use and write RESTful web services (a.k.a. web APIs) using Node.js on a cloud platform. The only thing you need is a computer with a modern web browser and a Wi-Fi connection. Participants will use the free service provided by the Cloud9 platform (https://c9.io/) to learn how to write scalable web services using Node.js, the Express web framework, MySQL, and Ajax via jQuery. Web services allows us to build powerful web based applications using data from multiple online sources. And, by using a cloud platform, we have all our tools readily available through a web browser, thus eliminating the hassle related to installing a complete and fully functional web development environment. Participants are expected to have a working knowledge of JavaScript, SQL and HTML. Additional information available at http://node.arielortiz.info/ Laptop required.", "authors": [{"name": "Ariel Ortiz", "affiliation": "Tecnologico de Monterrey, Campus Estado de M\u00e9xico, Atizap\u00e1n de Zaragoza, Edo Mex, Mexico "}], "tags": ["web services", "javascript", "node.js", "web development"]}, {"title": "Introducing Secure Coding in Undergraduate (CS0, CS1, and CS2) and High School (AP Computer Science A) Programming Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162366", "abstract": "The ACM CS 2013 curriculum includes Information Assurance and Security as a pervasive knowledge area, the ACM Community College curricular guidelines, CSTransfer2017, places great emphasis on cybersecurity as well. However, introducing security in introductory programming courses is challenging because of lack of appropriate teaching resources and training. This workshop will provide a well-tested strategy for introducing secure coding concepts in CS0, CS1, CS2, and AP CS A classes. We will introduce attendees to secure coding through hands-on exercises, and provide self-contained, lab-based modules designed to be injected into CS0-CS2 with minimal impact on the course (www.towson.edu/securityinjections). Participants will be encouraged to bring in their own syllabus and labs to modify to include learning objectives focused on cybersecurity based on ACM and CAE guidelines. Laptop recommended.", "authors": [{"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Siddharth Kaza", "affiliation": "Towson University, Towson, MD, USA"}], "tags": ["CS1", "security injections", "high school", "secure coding", "cybersecurity"]}, {"title": "Successfully Engaging Early Undergraduates in CS Research: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162365", "abstract": "Engaging undergraduates in research has been shown to improve retention, increase students' sense of science identity, and increase the chances that they will continue to graduate school. Yet many undergraduates don't participate in research until very late in their undergraduate program, while most undergraduates don't participate in research at all. On the other hand, many faculty are eager and willing to do research with undergraduates, but are unsure how to mentor and supervise them, particularly early undergraduates who may have very little specific technical knowledge and skills. This workshop will provide participants with concrete skills and techniques for engaging early undergraduates (first and second-year students) in real research projects, and, if desired, for developing or growing a department-wide early undergraduate research program. Participants will engage in hands-on activities where they will learn how to develop appropriately scoped research projects, manage and mentor early undergraduates successfully, and teach core research skills like reading research papers and writing research proposals. The workshop will also cover how to mitigate specific challenges faced by students from groups underrepresented in computer science. The materials presented in this workshop are based on the successful NSF-funded Early Research Scholars Program at UC San Diego (ersp.ucsd.edu), which is in its fourth year, and engages 40 second-year students per year--the majority of whom are women and/or students from underrepresented racial or ethnic groups--in academic-year research apprenticeships.", "authors": [{"name": "Christine Alvarado", "affiliation": "UC San Diego, La Jolla, CA, USA"}, {"name": "Neil Spring", "affiliation": "University of Maryland, College Park, MD, USA"}], "tags": ["early undergraduates", "reus", "undergraduate research", "diversity", "retention"]}, {"title": "Learning Discrete Structures Interactively With Alloy: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162349", "abstract": "This workshop presents a novel approach to teaching the mathematical foundations of computing commonly known as Discrete Structures. Following the common model of the programming lab, we provide interactive learning experiences in relational algebra, predicate logic, and graph theory that are both human- and computer-mediated. Students use the Alloy language and analyzer to express constraints in formal mathematical notation and search for models that satisfy the constraints. Alloy is an industrial-strength tool, but with careful scaffolding even students in introductory discrete structures can benefit from highly interactive and visual guided explorations mediated through Alloy code. We design exercises carefully to take students from observers of Alloy program behavior to tweakers of established code and later to builders of their own code. We find that the feedback provided by the Alloy Analyzer eliminates common misconceptions among students. Compared to a traditional approach where students simply submit written answers to homework problems, students working on Alloy problems get immediate critique of the well-formedness and satisfiability of their responses. The interactive nature of Alloy allows them to explore, discover new concepts, and challenge their assumptions with unexpected corner cases. After an introduction to Alloy, teams of workshop participants will engage in learning activities in discrete structures, using the Alloy tool for exploration and application of concepts. Teams will reflect on their experiences and comment on the applicability of this socio-technical learning approach in their own teaching contexts. A laptop is recommended for participation in the workshop.", "authors": [{"name": "Charles Wallace", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["discrete mathematics", "relational algebra", "logic", "alloy", "sat solver", "computer science education"]}, {"title": "Designing Empirical Education Research Studies (DEERS): Creating an Answerable Research Question (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162350", "abstract": "One of the most important, and difficult, aspects of starting an education research project is identifying an interesting, answerable, repeatable, measurable, and appropriately scoped research question. The lack of a valid research question reduces the potential impact of the work and could result in wasted effort. The goal of this workshop is to help educational researchers get off on the right foot by defining such a research question. This workshop is part of the larger Designing Empirical Education Research Studies (DEERS) project, which consists of an ongoing series of workshops in which researcher cohorts work with experienced empirical researchers to design, implement, evaluate, and publish empirical work in computer science education. In addition to instruction on the various aspects of good research questions, DEERS alumni will join us to mentor attendees in development of their own research questions in small group breakout sessions. At the end of the workshop, attendees will leave with a valid research question that can then be the start for designing a research study. Attendees will also receive information on how to apply to attend the full summer workshop, where they can fully flesh out the empirical study design, and join a DEERS research cohort. More information about DEERS can be found at http://empiricalcsed.org.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Jeffrey C. Carver", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["scholarship of teaching and learning", "professional development", "empirical education research"]}, {"title": "Coding Tutorials for any Programming Language or Interactive Tutorials for C and Arduino: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162381", "abstract": "Any CS educator has to explain sooner or later a portion of code or a structured text to learners. The Codecast tool http://www.codecast.info has been specially designed by CS educators and developed initially for MOOCs to replace non-interactive screencasts. This workshop is a hands-on lab to Codecast: an open-source innovative tool to create in-browser interactive coding tutorials. Codecast supports syntax highlighting for over 110 languages and as of 2017 can compile/interpret and execute a subset of the C and Arduino languages. In this workshop, participants will explore how, using our Codecast tool, a CS educator can explain the creation of a computer program while their audio as well as their interactions with the code editor and interpreter are being recorded for interactive playback. Workshop participants will furthermore experience how different aspects of the coding process like testing, running, debugging and optimizing can be illustrated with the help of several data, memory and algorithm visualization modules. Participants will create recordings and experience (like learners) how they can be played back interactively by taking control over and modify the coding process at any time. Codecast enables the learner to interact directly with the code and experiment with different ideas while listening to the instructor's explanation. The learner can make changes to the code, test it with different inputs, run the code step-by-step to better understand its behavior and visualize other parts of the algorithm or the data. Workshop participants will also integrate their creations in their online curricula.", "authors": [{"name": "Ella Hamonic", "affiliation": "IMT, Paris, France"}, {"name": "Mathias Hiron", "affiliation": "France IOI, Paris, France"}, {"name": "Michael Goudzwaard", "affiliation": "Dartmouth College, Hanover, NH, USA"}, {"name": "Remi Sharrock", "affiliation": "Telecom ParisTech, LTCI, IMT, Paris, France"}, {"name": "Baptiste Gaultier", "affiliation": "IMT Atlantique, Rennes, France"}, {"name": "Petra Taylor", "affiliation": "Dartmouth College, Hanover, NH, USA"}], "tags": ["mooc", "programming editor", "integrated development environment", "c programming language", "online courses", "coding tutorials", "computer science education", "interactive tutorials", "code editor"]}, {"title": "Nand to Tetris: Building a Modern Computer System from First Principles (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162353", "abstract": "We present a full semester course in which students build a complete computer system - hardware and software - from the ground up. Also known as \"Nand to Tetris\", the course is presently taught at 100+ universities, and is listed in Coursera's top-rated courses. The course synthesizes many abstractions, algorithms, and data structures learned in CS courses, and makes them concrete by building a complete computer system from first principles. The methodology is based on guiding students through a set of 12 homework assignments that gradually construct and unit-test a simple hardware platform and a modern software hierarchy, yielding a surprisingly powerful computer system. We'll start the workshop by demonstrating some interactive computer games running on this platform. The hardware projects are done in a simple hardware description language and a hardware simulator supplied by us. The software projects (assembler, VM, compiler and OS) can be done in any language, using API's and test programs supplied by us. The result is a general-purpose computer system, simulated on the student's PC. The course is completely self-contained, requiring only programming as a pre-requisite. Also, it is highly modular, and can be viewed as a set of 12 exciting, stand-along homework assignments. The course and the workshop assume no specific knowledge of, or bent for, computer organization/architecture, and are aimed at any instructor who wishes to strengthen his or her courses with engaging programming projects and with an integrated and hands-on understanding of how modern computer systems work, and how they are built.", "authors": [{"name": "Shimon Schocken", "affiliation": "IDC Herzliya, Herzliya, CA, Israel"}], "tags": ["compilers / programming languages", "active learning", "software engineering", "computer organization / architecture", "operating systems"]}, {"title": "LEGO-based Active Learning Exercises for Teaching Software Development: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162357", "abstract": "LEGO is a construction toy familiar to many students. Creating software, regardless of scale, is often similar to building with tangible objects, such as houses or bridges--an analogy that is often used in the classroom. In this workshop, we will show how to use LEGO bricks as a surrogate representing the lines of code, software objects, or other artifacts in the process of constructing software systems. LEGO-based analogies and case studies enacted as hands-on exercises for student teams help develop a better understanding of the underlying concepts, while keeping students deeply engaged in the course material. This workshop is intended for faculty teaching undergraduate and graduate courses focusing on software development, software engineering, and related concepts. This workshop will also benefit other educators looking for ways to supplement their courses with engaging and playful hands-on activities aimed to strengthen the teamwork, oral communication, problem solving, and design skills of students. We will practice several hands-on LEGO-based activities during the workshop. Specific topics of these activities will include change management and object-oriented interfaces, as well as activities specific to the phases of software development. Workshop participants will learn about other LEGO-based activities that focus on a broad range of topics including requirements engineering, architectural design, and software dependability. A laptop is not required for this workshop. This work is supported in part by the National Science Foundation Awards 1611905, 1709244 and a 2015 ACM SIGCSE Special Project grant. For more information visit http://www.cs.ccsu.edu/~stan/sigcse2018/", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}, {"name": "Stephanie Ludi", "affiliation": "University of North Texas, Denton, TX, USA"}], "tags": ["active learning", "software development", "LEGO"]}, {"title": "Playing to Learn: Using Hands-on Activities to Boost Learning in Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162373", "abstract": "Active learning techniques are widely reported to enhance student learning and increase student engagement. They provide a powerful tool to reinforce course concepts and allow students with diverse backgrounds and learning styles to master essential concepts efficiently. In addition, many students and faculty find hands-on activities to be fun and memorable. Workshop attendees will participate in five hands-on activities covering concepts that are commonly taught in introductory programming courses including variable declaration, object instantiation, parameter passing, memory management, and the software development process. Workshop participants will be challenged to create additional activities to be included in an online repository. Instructors of introductory programming courses at the undergraduate and K-12 level who are interested in creating memorable learning experiences using free and low-cost props will find this participatory workshop to be relevant to their teaching. Come ready to play!", "authors": [{"name": "Karen Anewalt", "affiliation": "University of Mary Washington, Fredericksburg, VA, USA"}, {"name": "Jennifer Polack", "affiliation": "University of Mary Washington, Fredericksburg, VA, USA"}], "tags": ["introductory courses", "active learning", "kinesthetic learning", "K-12 education"]}, {"title": "Geographic Information Systems (GIS): Opportunities of Spatial Data Processing for Computer Science Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162374", "abstract": "No abstract available.", "authors": [{"name": "John Barr", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Ali Erkan", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["GIS", "spatial data processing", "underrepresented groups", "interdisciplinarity", "geographic information systems"]}, {"title": "Teaching Parallel and Distributed Computing with MPI on Raspberry Pi Clusters: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162369", "abstract": "CS2013 brings parallel and distributed computing (PDC) into the CS curricular mainstream. The Message Passing Interface (MPI) is a platform independent, industry-standard library for parallel and distributed computing. The MPI standard includes support for C, C++, and Fortran; third parties have created implementations for Python and Java. This hands-on workshop introduces MPI basics and applications in C/C++ using Raspberry Pi single-board computers, as an inexpensive and engaging hardware platform for studying PDC. The workshop includes: (i) personal experience with the Raspberry Pi (units provided) accessed via participant laptops (Windows, Mac, or Linux); (ii) assembly of Beowulf clusters of Raspberry Pis quickly in the classroom; (iii) self-paced hands-on experimentation with the working MPI programs; and (iv) a discussion of how such clusters can be used to engage students in and out of the classroom. Participants will experience how to teach distributed computing essentials with MPI by means of reusable, effective \"parallel programming patterns,\" including single program multiple data (SPMD) execution, send-receive message passing, the master-worker, parallel loop, and other common patterns. Participants will then explore more in-depth \"exemplar\" applications, such as drug design and epidemiology. All materials including the Raspberry Pi software system setup from this workshop will be freely available from CSinParallel.org. No prior experience with MPI, PDC, or the Raspberry Pi is required. Windows, Mac, or Linux laptop required.", "authors": [{"name": "Richard Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Joel Adams", "affiliation": "Calvin College, Grand Rapids, NY, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, MN, USA"}, {"name": "Suzanne Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}], "tags": ["exemplars", "MPI", "parallel design patterns", "distributed computing", "message passing", "parallel and distributed computing", "csinparallel"]}, {"title": "Chrome Home: Six Fun Activities Introducing Basic Web Programming Techniques (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162362", "abstract": "This workshop will provide participants with several small, fun classroom activities culminating in a useful web-based application that allows individuals to fully customize the page resulting from opening a new tab in Google Chrome. Attendees will participate in, and receive Canvas lessons introducing popular web-based techniques including HTML, JSON, Cascading Style Sheets, JavaScript and Google Chrome extension creation and distribution. The workshop proceeds in six short lessons in which we will: (1) download and install all software required, (2) introduce basic concepts in HTML, (3) create and link cascading style sheets, (4) construct a JavaScript file implementing some basic, and fun logic constructs into our web page, (5) create a JSON manifest file that allows our application to run as a Google Chrome extension, and (6) make our extension available to the public in the chrome web store. With these lessons, participants will be able to create a universal \"New Tab\" page for their school with Google Chrome. This page can be re-customized and re-distributed by anyone taking these six lessons. Online lessons will be provided. A laptop is recommended.", "authors": [{"name": "Douglas Hawley", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}, {"name": "Denise Case", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}], "tags": ["chrome browser", "web applications", "canvas lessons", "javascript", "css", "programming", "json", "html"]}, {"title": "Introducing Bioinformatics Algorithms in Computer Science Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162380", "abstract": "The workshop is intended for CS educators who would like to get an overview of some of the major techniques used in bioinformatics and a hands-on experience with some of its most popular algorithms. Attendees will be exposed to topics, examples, and problems that can be added to their repertoire of projects for CS1/CS2, data structures and algorithms, and other CS courses, including bioinformatics. No prior knowledge of biology is needed. Whether in an elective bioinformatics course, or in introductory or data structures and algorithm classes, the attendees will be able to incorporate the topics presented in the workshop. We consider interdisciplinary problems drawn from the field of biology. After formulating them as computational problems, we use traditional algorithmic techniques to solve them. The workshop may also be appropriate for high school teachers who want to use bioinformatics as a domain for their programming assignments. All material, including lecture notes, sample programs, hands-on exercises, and links to visualization packages, will be available to the attendees, before the workshop, through our university/s web page. The hands-on exercises using online publicly available tools will enhance the understanding of the common bioinformatics tasks.", "authors": [{"name": "Sami Khuri", "affiliation": "San Jos\u00e9 State University, San Jose, CA, USA"}], "tags": ["cs2", "algorithms", "bioinformatics", "cs1"]}, {"title": "Code Crafters Curriculum: A Textile Crafts Approach To Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162360", "abstract": "Broadening participation in computing invites a diverse constituency into a traditional computing culture. This workshop provides a novel perspective: skills that are often labeled 'women's work' are the foundational principles of computer science developed from textile crafts. The 'Code Crafters' curriculum, which expands Andrea Mayer's Snap-based TurtleStitch embroidery programming project, is being successfully taught in 3 ways: as a full semester undergraduate course, as a weeklong summer workshop for middle and high school students, and as a half day event. The SIGCSE workshop will introduce participants to potential adaptations of this curriculum, report on its use as both a CS 0, and CS 1 course, and give participants hands-on experience in designing and rendering a machine embroidery pattern in TurtleStitch and Processing Stitch (Java). Key concepts from the full semester curriculum will be demonstrated: (1) crocheting is a vehicle for learning about primitive operations instruction codes for process control, and reading and writing patterns (algorithms); (2) programing machine embroidery provides exposure to agile design; (3) contrasting embroidery with quilting provides experience in abstraction and reuse; (4) weaving and tapestry provide concrete illustrations of manipulating two dimensional data structures; (5) studying embroidery machine file formats demonstrates how language translation takes place; (6) sharing a limited resource (a $500 programmable, single thread embroidery machine) provides concrete experience in scheduling, and product testing; (7) collaborative crochet and quilted projects provide experience in team dynamics. Participants should bring a laptop, and will be invited to join an online community of mutual support.", "authors": [{"name": "Gwen Charles", "affiliation": "Textile Study Group of New York, Montclair, NJ, USA"}, {"name": "Ursula Wolz", "affiliation": "Bennington College, Bennington, VT, USA"}, {"name": "Elanor Nicolson", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Laura Feire", "affiliation": "RiverSound Solutions, Montclair, NJ, USA"}], "tags": ["code crafting", "CS1", "crocheting", "textile coding", "machine embroidery", "computational thinking"]}, {"title": "Deep Learning in the Classroom: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162370", "abstract": "This workshop is a hands-on exploration of Deep Learning techniques and topics for use in the classrooms of Computer Science and related fields. Deep Learning denotes the latest in a series of advances in neural network training algorithms and hardware that allow Artificial Neural Networks (ANNs) to learn quickly and effectively, even with many, stacked layers. These types of networks can be applied to almost any learning problem, such as driving a car, describing images, controlling a robot, or understanding language. This workshop will start with the mathematical and algorithmic foundations of Deep Learning, and introduce an accessible Python-based library, called \"conx,\" which is based on the Keras library and was developed by the workshop instructors. The workshop will demonstrate ideas through animation and visualizations, examine the path to advanced topics, and explore ideas for incorporating Deep Learning topics into the classroom. The workshop is designed to allow participants to gain a foothold with these complex topics, and to help them develop their own materials for teaching. Workshop materials will be made freely available before the workshop as Jupyter notebooks.", "authors": [{"name": "Lisa Meeden", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}, {"name": "Douglas Blank", "affiliation": "Bryn Mawr College, Bryn Mawr, PA, USA"}, {"name": "Jim Marshall", "affiliation": "Sarah Lawrence College, Bronxville, NY, USA"}], "tags": ["python", "artificial intelligence", "deep learning", "artificial neural networks"]}, {"title": "Organizing a High School Programming Contest: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162378", "abstract": "This workshop will show participants how to host a successful programming competition aimed at high school students, and will also be broadly applicable to collegiate level competitions. These contests encourage high school students to major in computer science and can have a positive effect on the recruitment for the host institution. In addition, our anecdotal evidence has shown a high participation rate from under-represented groups at such contests. Running a successful contest, however, is a challenging endeavor. With potentially hundreds of people attending -- both students and coaches -- there are many logistical issues to address. Beyond that, generating an appropriate problem set and ensuring the contest submission system that runs smoothly are critical to a successful event. A poorly run contest can do more harm than good, as the participants will leave with a negative view of the contest, the institution, and possibly even the field. The workshop will cover problem generation and submission system usage, as well as provide discussions and handouts covering all the logistical aspects for hosting such a high school contest. Documentation covering all aspects of the contest will be provided to participants. The workshop organizers include a faculty advisor, a high school coach, and a former student who both participated in -- and later ran -- the contest. At least one organizer has been in every one of the roles in this type of contest. We have successfully run seven such contests, with the last four having 200 high school contestants.", "authors": [{"name": "Andrew Norton", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Aaron Bloomfield", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Blythe Samuels", "affiliation": "Powhatan High School, Powhatan, VA, USA"}], "tags": ["high school", "programming contest"]}, {"title": "Guiding Students to Discover CS Concepts & Develop Process Skills Using POGIL: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162364", "abstract": "his workshop introduces Process-Oriented Guided Inquiry Learning (POGIL) to anyone who teaches CS or related subjects. In a POGIL classroom, teams of 3-4 learners work on activities with a particular structure based on learning cycles. Through scripted inquiry and investigation, learners discover concepts and construct their own knowledge. Using assigned team roles and other scaffolding, learners develop process skills and individual responsibility. The teacher is not a lecturer, but an active facilitator who helps all students to be engaged and achieve the learning objectives. POGIL is an evidence-based approach, and has been shown to significantly improve student performance. Workshop participants will work through POGIL activities as students, and work through POGIL meta-activities that are designed to help teachers learn core POGIL concepts, practices, and benefits. We will share POGIL materials for a variety of CS courses and concepts. For more information (including activities for CS1, CS2, and other courses), see http://IntroCSpogil.org and http://pogil.org. Laptops optional.", "authors": [{"name": "Chris Mayfield", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Clifton Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}], "tags": ["collaborative learning", "active learning", "POGIL", "guided inquiry"]}, {"title": "Integrating Social Justice Topics into CS1: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162363", "abstract": "Meaningful and engaging assignments are important to retention in CS. An interesting problem context may be able to make routine practice of programming basics more interesting for students. Problem contexts also provide the opportunity to bring in content related to social justice topics, which are important for providing students a well-rounded education. With funding from the NSF (#1339404), we have developed eight homework assignments that integrate social justice topics as the problem context for CS1 assignments. Workshop attendees will work in small groups to revise or adapt existing assignments, translate existing assignments into the language of their course, or develop a new assignment. Attendees will be encouraged to submit their work to Nifty Assignments for 2019 and NCWIT's peer-reviewed curriculum repository, Engage CS Edu (engage-csedu.org). All assignments will be posted on CSTeachingTips.org to be shared with the community.", "authors": [{"name": "Saber Khan", "affiliation": "The Browning School, New York, NY, USA"}, {"name": "Saturnino Garcia", "affiliation": "University of San Diego, San Diego, CA, USA"}, {"name": "Emily Cao", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Eleanor Rackoff", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["CS1", "social justice", "inclusion", "equity", "curriculum development"]}, {"title": "Building a Virtual Challenge-Based Learning Environment: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162368", "abstract": "Challenge-Based Learning (CBL) is an active learning approach using just-in-time instruction where students are introduced to instructional material in the context of solving a particular challenge. The CBL approach has proven very effective as an introductory instructional strategy, especially when working with K-12 outreach. For example, in Cybersecurity, many universities are reaching out to high school and community college students using the Capture the Flag contests with learning materials built in for each challenge. In this workshop, we will explore building just such a virtual, challenge-based, contest environment. Workshhop participants will walk through the process of setting up the Mellivora contest environment, be given the opportunity to create challenges on their own, and be provided with a tutorial on the administrative tools available. Similarly, participants will be provided an introduction to the installation and management of a virtual environment that will provide virtual machines of various platforms (Windows, Linux, etc.) for the challenges. Participants will also be provided a brief overview of the creation of short, high-impact instructional materials to accompany challenges. Finally, participants will compete in a short Capture the Flag contest to demonstrate the efficacy of the CBL approach.", "authors": [{"name": "Prem Uppuluri", "affiliation": "Radford University, Radford, VA, USA"}, {"name": "J.D. Chase", "affiliation": "Radford University, Radford, VA, USA"}], "tags": ["active learning", "just-in-time learning", "outreach", "k-12 instruction", "challenge-based learning", "cybersecurity"]}, {"title": "Playing to Your Strengths: Appreciative Inquiry as a Scholarly Tool for Your Computing Education Practice and Professional Development (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162358", "abstract": "In this workshop, we as a group use Appreciative Inquiry (AI) techniques to explore and develop our strengths as CS educators. As a participant, you will gain appreciation for your strengths as an educator, with concrete plans for building on these strengths. You will also learn about AI as a qualitative research methodology that is complementary to more common CS research methodologies, and that you can apply to evaluate and improve your own educational practice. Appreciative Inquiry drives change by building on what's already working well in an organization. Similarly to other qualitative methods, AI generates rich, deep feedback that is grounded in stakeholders' experiences, but in contrast to other methods its focus on strengths and positives surfaces unique, strength-based findings and make it an energizing and fulfilling approach to professional development and the scholarship of teaching and learning. AI is commonly used in education and organizational research and is an effective and community-building way to drive organizational or program change and positively impact participants' morale. We will share our materials and key tips to enable you to apply Appreciative Inquiry in your own work. You may wish to run Appreciative Inquiry workshops with students as an evaluation method, or run them with colleagues for professional development or for promoting positive change in your unit or program, or take smaller steps integrating the appreciative mindset into your teaching or other professional work.", "authors": [{"name": "Steven A. Wolfman", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Meghan Allen", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Anasazi Valair", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["qualitative methodology", "professional development", "evaluation", "scholarship of teaching and learning", "appreciative inquiry"]}, {"title": "CSforALL School District Implementation Facilitators Workshop: Just Follow the SCRIPT! (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162372", "abstract": "The SCRIPT, the School CSforALL Resource & Implementation Planning Tool, is a new tool created by the CSforALL Consortium that will serve as a framework and platform to guide CSforALL advocates and district staff in the creation of CSforALL implementation plans that adhere to CSforALL values and reflect the unique needs and goals of any school district. The SCRIPT engages school districts in self reflection, review of examples, and goal setting for 6 areas designed from the literature supporting curriculum adoption and organizational change. These areas include: (1) Leadership, (2) Technology Infrastructure, (3) Teacher Capacity, (4) Curriculum and Materials Selection and Refinement, (5) Partners, and (6) Community. The goal of this workshop is to train any CSforALL advocate to be able to lead a school district in an implementation planning session to create a K-12 district wide computer science education plan, by following the SCRIPT. Based on an extensive needs assessment conducted by the CSforALL Consortium (publication under review), districts require professional development and resources to (1) understand the goals of the CSforALL movement and how it can benefit their students, (2) identify ways to create meaningful K-12 pathways for students, and (3) navigate available resources in order to identify appropriate partners and resources to support the implementation of CS education. The SCRIPT was created to address these needs in a replicable way that could be used at scale by any CSforALL advocate.", "authors": [{"name": "Jumee Song", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Leigh Ann DeLyser", "affiliation": "CSforALL, New York, NY, USA"}], "tags": ["school district resources", "K12 CS education"]}, {"title": "Customizing a Field Experience for CS Undergrads in Teaching Computer Science for Your School Context: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162356", "abstract": "This workshop's goal is to help faculty who want to establish a course (or alternate vehicle) for mentoring undergraduates with some CS background to participate in K-12 teaching CS in local schools with engaging pedagogy. The workshop leverages the experiences and lessons learned from ten semesters of the organizers leading a course that meets once a week on campus for mentoring to support the undergraduates' field experience in local schools and libraries. The workshop will dive deep into logistics including how to establish and maintain strong teacher partnerships, establishing student-teacher matches and weekly field experience schedules, weekly in-class activities and assignments to support the field experience, weekly student reflective journal prompts, and surveys for formative evaluation. Participants will actively reflect on their own contexts with potential opportunities and challenges, and organizers will facilitate small group discussions of how to address the challenges, different models for different contexts, and how to get started. Participants should leave with a plan for next steps toward offering a mentored undergraduate field experience in teaching computer science and access to a community of faculty who are working to help to broaden participation in computer science in K-12 while providing opportunities for undergraduates to hone their communication and leadership skills, increase their self confidence, and participate in giving back to the community using their technical skills. The activities do not require a laptop, only pens and handouts provided by the organizers.", "authors": [{"name": "Lori Pollock", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Chrystalla Mouza", "affiliation": "University of Delaware, Newak, DE, USA"}, {"name": "Terry Harvey", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "James Atlas", "affiliation": "University of Delaware, Newark, DE, USA"}], "tags": ["k-12 cs teacher support", "in-class activities for field experience", "undergraduate service learning course"]}, {"title": "Designing Classroom Activities to Improve Student Engagement and Learning: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162361", "abstract": "Many approaches to active learning rely on a set of tasks that help students engage cognitively with the material. Studies have shown that this approach can significantly improve student learning. However, for best results it is not enough simply to have students solve problems: the activities must be carefully designed to produce the desired learning outcomes. In many cases, it is helpful to define a sequence of activities that lead students though a developmental progression toward a desired learning goal. This kind of approach is sometimes described in educational research as a \"learning trajectory.\" In this workshop, we will help you get started on the path to developing your own active learning classroom activities. We'll begin by looking at examples that have been used successfully in a variety of different courses, and discussing some of the principles involved. Participants will be encouraged to bring examples of topics they have found challenging to teach. We'll work together with you to help develop possible approaches and get started on the design of active learning activities to address those topics.", "authors": [{"name": "Alexander Chizhik", "affiliation": "San Diego State University, San Diego, CA, USA"}, {"name": "Leland Beck", "affiliation": "San Diego State University, San Diego, CA, USA"}, {"name": "Patty Kraft", "affiliation": "San Diego State University, San Diego, CA, USA"}, {"name": "Alan Riggins", "affiliation": "San Diego State University, San Diego, CA, USA"}], "tags": ["cooperative learning", "classroom management", "active learning"]}, {"title": "CReST-Security Knitting Kit: Readily Available Teaching Resources to Integrate Security Topics into Traditional CS Courses (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162355", "abstract": "Since security education is not required in CS curriculum, many CS undergraduates can successfully achieve their degree without being exposed to any security courses during their course of study and enter the digital workforce with no knowledge or basic understanding of information security -- one of the essential skill sets for the 21st century. To address this concern, Information Assurance and Security (IAS) has been designated as a new knowledge area in the new ACM/IEEE-CS Curricula 2013. This workshop empowers CS faculty to access and use freely available resources to integrate security in to their CS curriculum will help institutions to meet ACM/IEEE-CS guideline. With support from NSF (Award# DUE-1140864, #1438861), at the CyberSecurity Education, Research and Outreach Center at Tennessee Tech, we have developed a set of readily available resources called SecKnitKit (Security Knitting Kit, www.secknitkit.org), which offers a suite of instructional material for non-security faculty (faculty whose primary teaching/research focus is not security) to integrate security in upper division CS courses such as operating systems, software engineering, computer networks and databases. Resources include lecture slides with notes, assessment questions and homework/classroom assignments with all details and technical support. The participants will receive access to all SecKnitKit materials (instructional and assessment) of interest and demonstrated use of the active learning exercises. There are six participant slots for each of the four courses mentioned above and participants will have an option to select their courses of choice at registration time.", "authors": [{"name": "Ambareen Siraj", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}, {"name": "Sheikh Ghafoor", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}], "tags": ["security education", "information assurance", "ACM/IEEE-CS curricula 2013"]}, {"title": "From Spreadsheets to Programs: Data Science and CS1 in Pyret (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162371", "abstract": "Data Science is at the center of many current curricular efforts. It is emerging as an integrated field that has far-reaching and important applications, from news media to policy making to business. While these applications can provide compelling uses of computer science techniques, an introduction to one is not an introduction to the other. How do topics like data structures and program design emerge from data science applications? How do we transition from data science applications to computer science topics? How can data science be integrated into other contexts with little overhead? This workshop presents assignments and curricula designed to answer these questions, and tools that support them.", "authors": [{"name": "Benjamin S. Lerner", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Joe Gibbs Politz", "affiliation": "University of California San Diego, San Diego, CA, USA"}, {"name": "Shriram Krishnamurthi", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Kathi Fisler", "affiliation": "Brown University, Providence, RI, USA"}], "tags": ["pyret", "data science", "CS1"]}, {"title": "Playing with and Creating Practice Spaces for Equitable Teaching: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162376", "abstract": "Equity is a core component of many computer science teacher preparation programs. One promising approach is addressing unconscious bias in teachers related to the race, ethnicity or gender of students. These biases may impact teacher expectations and interactions with students in a variety of classroom scenarios. Early literature on interventions targeting unconscious bias suggests that asking individuals to suppress biases is counterproductive. Our work uses the affordances of interactive online practice spaces to instead focus on specific teaching decisions that may be impacted by unconscious bias. We developed practice spaces and embedded them within CS teacher preparation programs. Our early findings indicate that practice spaces produce rich learning opportunities and analysis yields insight into what biases or beliefs may be interfering with teachers enacting principles of equity like disrupting preparatory privilege. In this workshop, we'll use online practice spaces to examine how we approach different classroom situations related to equity, and practice how we respond. We'll try two different variations on these practice spaces, and create space for participants to try a variety of other iterations on their own. We'll close by inviting folks to share their own stories of important classroom moments that problematized how they approached equitable teaching, and prototype creating practice spaces from those experiences. Participants will leave with links to practice spaces, and related curriculum materials they can use in CS teacher preparation courses, in teacher-led PLC groups, online CS teacher groups, or with local CSTA chapters.", "authors": [{"name": "Justin Reich", "affiliation": "MIT Teaching Systems Lab, Cambridge, MA, USA"}, {"name": "Kevin Robinson", "affiliation": "MIT Teaching Systems Lab, Cambridge, MA, USA"}], "tags": ["teacher education", "practice spaces", "practice-based teacher education", "unconscious bias", "equity", "diversity", "cultural competency"]}, {"title": "AP CS Principles and The Beauty and Joy of Computing Curriculum: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162375", "abstract": "The Beauty and Joy of Computing (BJC) is a CS Principles (CSP) course developed at UC Berkeley, intended for high school juniors through university non-majors. It was twice chosen as a CSP pilot, and both the College Board and code.org have endorsed it. Since 2011, we have offered professional development to over 400 high school teachers. BJC covers the big ideas and computational thinking practices required in the AP CSP curriculum framework, using an easy-to-learn blocks-based programming language called Snap! (based on Scratch). During this workshop, we will provide an overview of the BJC curriculum, share our experiences as instructors of the course at the university and high school levels, and share details of potential summer professional development opportunities. Attendees should be prepared to program a BJC project in the Snap! environment. Please bring laptops with the Chrome browser installed.", "authors": [{"name": "Alexandra Milliken", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Lauren Mock", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Michael Ball", "affiliation": "UC Berkeley, Berkeley, CA, USA"}], "tags": ["professional development", "computer science principles", "HS course", "approved AP computer science principles curriculum"]}, {"title": "Micro:bit Magic: Engaging K-12, CS1/2, and Non-majors with IoT & Embedded (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162354", "abstract": "Are you interested in a fun way to introduce a variety of students to significant contemporary CS topics, like wireless networking, robotics, and the Internet of Things (IoT)? Do you want to do so using a platform that is cheap, has a low barrier to entry, but where learning can translate to the real world and where advanced students can pursue advanced topics? If so, you need a micro:bit! The micro:bit is a platform developed by the British Broadcasting Corporation (BBC) to encourage children to pursue computing and electronics. Although designed for children, its capabilities are sufficient for a variety of postsecondary applications. It includes a 32-bit processor, lights, buttons, an accelerometer, digital I/O, and wireless communication, making it ideal for wearables and robotics. It also leverages some of the latest trends in introductory computing, like support for block-based languages (\u00e0la Scratch), while also being sophisticated enough for complex topics in Operating Systems and Networking. This workshop will introduce the micro:bit and focus on engaging, lightweight coverage of complex topics, including robotics, mesh networks, and IoT. Participants will work through classroom-ready exercises suitable for K-12 workshops, student recruiting events, CS1/2, or as bootstrap topics in IoT courses. The workshop will include some subjects not commonly covered in existing micro:bit material, like integration with mobile apps and IoT applications. Participants will be provided with hardware but will need a laptop with internet access and a mobile device (any OSes).", "authors": [{"name": "Bill Siever", "affiliation": "Washington University in St. Louis, St. Louis, MO, USA"}, {"name": "Michael P. Rogers", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}], "tags": ["CS outreach", "micro:bit", "stem outreach"]}, {"title": "Understanding the Essence of Successful Computing Education Projects through Analyzing NSF Proposals: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162359", "abstract": "You develop the prototype for a new learning strategy, and want to test it in class or across institutions. You identify an NSF program that supports proposals for the idea, and then what? What goes through the minds of reviewers once a proposal is submitted? What prompts one proposal to be recommended for funding while another is declined? Close examination of the panel review process can inform proposal writing and ensure that reviewers will understand a PI's idea, identify its merit, and value a PI's vision of how the work will broaden participation in STEM education. This workshop steps through the NSF proposal review process from submission of proposal to award or decline, touching on elements of a good review, NSF intellectual merit and broader impact criteria, elements of a good proposal, assessment and evaluation, and volunteering to review proposals. Participants gain insight into writing a good review and improving one's own proposal writing. The interactive workshop leads participants through each topic by introducing related issues, engaging participants in group exercises designed to explore and share their understanding of the issues, and providing \"expert\" opinion on these issues. Examples include funded and non-funded projects and a Top Ten List of Do's and Don'ts. For further information see: https://people.cs.clemson.edu/~etkraem/UPCSEd/", "authors": [{"name": "Mark Pauley", "affiliation": "National Science Foundation, Alexandria, VA, USA"}, {"name": "S. Megan Che", "affiliation": "Clemson University, Clemson, NC, USA"}, {"name": "Murali Sitaraman", "affiliation": "Clemson University, Clemson, NC, USA"}, {"name": "Eileen T. Kraemer", "affiliation": "Clemson University, Clemson, NC, USA"}, {"name": "Stephanie E. August", "affiliation": "National Science Foundation, Alexandria, VA, USA"}], "tags": ["tool use for education", "CS1/2", "research design", "learning environment", "undergraduate instruction", "education research proposals", "illustrative projects", "cs education"]}, {"title": "Mobile Web App Development for All!: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162379", "abstract": "With the increasing breadth and sophistication of open-source languages, libraries, frameworks, standards, tools and resources, Mobile Web App development is possible for a broad audience. The barriers to participation in app development have been reduced; learners can quickly begin creating simple apps and can use online resources to expand their knowledge and skill.\nIn this workshop, participants will learn how to build simple (and not-so-simple) data-driven, mobile apps using the Mobile Web App model, and they'll learn how to scaffold projects to focus students' efforts on specific lesson, unit or assignment goals. The workshop is intended for post-secondary, secondary and even middle school educators who want to increase student engagement by including app projects in their courses. The material may also be of interest to those who provide CS education in other, less-structured environments.\nParticipants will create several apps and will leave with sample projects. All languages, libraries, frameworks, standards, tools and resources are open-source and run in the browser. Because participants will be developing apps during the workshop, they will need a laptop or will need to work with a colleague.", "authors": [{"name": "David Hayes", "affiliation": "Lane Tech College Prep High School & University of Illinois-Chicago, Chicago, IL, USA "}], "tags": ["apps", "mobile web apps", "web development"]}, {"title": "Improv for Computer Scientists: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162352", "abstract": "Improvisation is viewed by many people as jazz musicians jamming in the early morning hours or comedians ad-libbing to create a funny skit, but it is so much more. Improv is about listening and moving a conversation (or music) forward in a positive and supportive manner. Above all, it is about supporting all members of the team. These precepts can be found in the Agile, UX (user experience), and the AI worlds and companies are using improv methods as a way of creating more innovative and collaborative teams and which are so necessary for success in today's work environment. Dick Costolo, the former CEO of Twitter and a computer scientist, is an accomplished improviser and credits these techniques in advancing his professional life. The skills learned through using improv are as important as the technical skills for all computer scientists and they can help one to become better a learner, listener, and communicator. This workshop will cover some of the basics of improvisation and its rules as well as ideas on how it can be used in a classroom or a place of employment. Come and learn about improv and why organizations such as IDEO, Marriott, and NASA have embraced improv to create more than just teams, but ensembles of highly functioning creative and caring individuals. This workshop is interactive and attendees will have fun learning and practicing the skills within a safe and accepting environment.", "authors": [{"name": "Russell McMahon", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}], "tags": ["innovation", "creative problem solving", "improvisation"]}, {"title": "Computational Creativity Exercises for Improving Student Learning and Performance: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162348", "abstract": "In this workshop, we will introduce you to a suite of Computational Creativity Exercises (CCEs) that have been shown to significantly improve student learning and achievement in introductory and advanced CS courses. CCEs address core aspects of computational thinking while exposing students to creative thinking skills, and can be adapted for use in your own courses. Activities such as writing a story in separate chapters and then merging the chapters to form a coherent whole, creating quilt-like patterns with written descriptions, or designing testing strategies for an alien health machine require students to apply computational thinking to unorthodox contexts and situations promoting creative application of CS knowledge and skills. CCEs are group-based, promote active learning, and are designed to foster collaborative problem solving necessary in today's workplace. They require no programming experience making them accessible to students including those with limited CS background and those with interests in non-CS disciplines, which can encourage more diverse participation in computing. Engage in a hands-on demo of a CCE and learn how to adapt CCEs for use in your classes, including technical support from the IC2Think Project team. Learn about the rigorous research studies behind the development, design and administration of these CCEs, including the instruments we used to evaluate the CCEs. Workshop session will include \"how-to\" presentations, panel-based Q&A, breakout group discussions, and hands-on activities. Let's compute, create, and collaborate!", "authors": [{"name": "Elizabeth Ingraham", "affiliation": "University of Nebraska, Lincoln, NE, USA"}, {"name": "Leen-Kiat Soh", "affiliation": "University of Nebraska, Lincoln, NE, USA"}, {"name": "Duane F. Shell", "affiliation": "University of Nebraska, Lincoln, NE, USA"}], "tags": ["creative thinking", "computational thinking", "active learning"]}, {"title": "Beyond the Flipped Classroom: Implementing Multiple, Simultaneous Pedagogical Styles Using Scrumage (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162377", "abstract": "While the \"flipped classroom\" style has some educational benefits, there are also known benefits to other pedagogical approaches such as lectures, educational games, class discussions, and case studies. In addition to a wide variety of pedagogical approaches, there are a wide variety of computer science learning materials, including videos, interactive tutorials, e-textbooks and traditional textbooks. The choices of approach and materials present a series of trade-offs and may favor some groups of students over others. In this workshop, we present a methodology called Scrumage, (SCRUM for AGile Education) which allows each student in a course to adopt the pedagogical approach and materials that best fit each student's individual learning needs. Scrumage adapts concepts from the Scrum project management technique to manage student teams where the project is learning. Each team learns with the style they prefer, so that multiple pedagogical styles and materials are in use in the course simultaneously. Participants in this workshop will be introduced to the methodology, benefits, and tools of this approach and will work through guided steps to implementing it in the course of their choice.", "authors": [{"name": "Robert Duvall", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Shannon Duvall", "affiliation": "Elon University, Elon, NC, USA"}, {"name": "Dugald Ralph Hutchings", "affiliation": "Elon University, Elon, NC, USA"}], "tags": ["team-based learning", "computer science education", "scrum", "pedagogy"]}, {"title": "Access to Computing Education for Students with Disabilities: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162166", "abstract": "Approximately 10% of computer science and engineering majors have a disability. Students with disabilities are more likely to drop out of the major than those without disabilities. At the K-12 level, many tools used to teach computing have limited accessibility to students with disabilities. This BOF will bring together individuals who are interested in increasing the representation of students with disabilities in computing and improving their success. Participants will share strategies to help each other do a better job of including these students in our classes and research projects. Resources, including those produced by AccessComputing and AccessCSforAll, will be shared.", "authors": [{"name": "Brianna Blaser", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Daniela Marghitu", "affiliation": "Auburn University, Auburn, AL, USA"}], "tags": ["disability", "universal design", "accessibility", "broadening participation"]}, {"title": "Challenges and Approaches for Data Collection to Understand Student Retention: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162169", "abstract": "For many years, computing faculty have devoted substantial time and energy to the retention of diverse populations. But how are we doing really? The ACM Retention Committee has identified at least 5 populations of interest in tracking student retention: * Students who start college expecting to major in computing. * Students who enter college with some interest in computing, but also with other interests. * Students who enter college with interests outside computing, but who take computing early as part of a broad education. * Students who enter college with little or no interest in computing, but need a computing course to satisfy a general education requirement or a prerequisite in another discipline. * Students who transfer into a four-year university from a two-year college, partway into a computer science program. In practice, each group has different characteristics, and retention rates may vary dramatically. On some campuses, gathering data for the first group may be manageable--particularly if students declare majors as they enter college. Data collection and tracking for others is difficult, since these populations may not be known in early years. This BoF will identify approaches for tracking students and for exploring retention rates. Further, this BoF will encourage sharing and brainstorming for further mechanisms to help data collection. As we better identify retention rates among various populations, the ACM Retention Committee hopes we can better understand obstacles and opportunities related to retention. Session Agenda: Context/Introduction, Data most relevant locally, What data are currently tracked, Thoughts about a common data gathering instrument", "authors": [{"name": "Christine Alvarado", "affiliation": "UC San Diego, La Jolla, CA, USA"}, {"name": "Henry M. Walker", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["data collection", "student retention"]}, {"title": "Active Learning Strategies for Integrating the ACM Code of Ethics into CS Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162178", "abstract": "The ACM Code of Ethics provides a framework for ethical conduct within the computing industry. The Code describes ethical conduct for individuals and organizations, as well as the basic moral principles underlying these prescriptions. Principles defined in the Code include: Avoid harm; be fair and take action not to discriminate; respect privacy; ensure the public good is the central concern during all professional computing work. While these principles are intuitive in many situations, students, faculty, and industry professionals often struggle to apply these concepts to computing. It is not obvious how to apply the concepts of harm, privacy, or the public good in courses on Operating Systems or Programming Languages, so discussion of the Code is often restricted to specialized Ethical Issues in Computing or Software Engineering courses. We believe this approach misses an educational opportunity to build on moral sensitivity--the ability to detect a potential moral problem within a particular context--as a foundation. Integrating the Code throughout the CS curriculum provides an opportunity to increase students' exposure to subtle moral dilemmas and improve their moral sensitivity. In this birds-of-a-feather (BoF) session, we will discuss: Which topics can be used to introduce ethical discussions into core Computer Science courses? How do you write and facilitate case study discussions? What other active learning techniques can be used to examine ethical issues? What concerns would faculty have in introducing ethical discussions into technical courses? What portions of the Code might be difficult for students and future practitioners to uphold?", "authors": [{"name": "Michael S. Kirkpatrick", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Dee Weikle", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["ACM code of professional ethics", "active learning", "ethics"]}, {"title": "Bringing Up Cybersecurity Degree Programs: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162192", "abstract": "Due to the ongoing demand for cybersecurity professionals, universities have begun to step up to the challenge of providing degrees in cybersecurity or related disciplines. However, growth in academic programs has been unfocused, in part because there is no standard definition of what a cybersecurity undergraduate program should contain and no cohesive community of practice with which those programs are aligned. This session is intended to establish dialog intended to lead to a community of practice for undergraduate cybersecurity education. The presenters will briefly review prior efforts in defining cybersecurity at the collegiate level, including the Centers for Academic Excellence (CAE), National Initiative for Cybersecurity Education (NICE), Cyber Education Project, CSEC2017 curricular guidelines and ABET cybersecurity accreditation. Session participants will examine current efforts, explore the development of a cybersecurity community of practice, and get clarity about where their own efforts fit into overall computing education.", "authors": [{"name": "Rajendra K. Raj", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Allen Parrish", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}], "tags": ["cybersecurity education", "degree program development", "program accreditation", "computing education"]}, {"title": "CS Education Infrastructure for All: Interoperability for Tools and Data Analytics (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162177", "abstract": "CS Education makes heavy use of online educational tools like IDEs, Learning Management Systems, eTextbooks, interactive programming environments, and other smart content. Instructors and students would benefit from greater interoperability between tools. CS Ed researchers increasingly make use of the large collections of data generated by click streams coming from them. However, we all face barriers that slow progress: (1) Educational tools do not integrate well. (2) Information about CS learning process and outcome data generated by one system is not compatible with that from other systems. (3) CS problem solving and learning (e.g., coding solutions) is different from the type of data (discrete answers to questions or verbal responses) that current educational data mining focuses on. This BOF will discuss ways that we might support and better coordinate efforts to build community and capacity among CS Ed researchers, data scientists, and learning scientists toward reducing these barriers. CS Ed infrastructure should support broader re-use of innovative learning content that is instrumented for rich data collection, formats and tools for analysis of learner data, and best practices to make large collections of learner data available to researchers. Achieving these goals requires engaging a large community of researchers to define, develop, and use critical elements of this infrastructure to address specific data-intensive research questions.", "authors": [{"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Kenneth R. Koedinger", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Peter Brusilovsky", "affiliation": "University of Pittsburgh, Pittsburgh, PA, USA"}], "tags": ["computer science education research", "LTI", "student analytics", "smart content", "interoperability", "infrastructure"]}, {"title": "CSTA: Connecting Colleges and K-12 CS Teachers (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162187", "abstract": "The Computer Science Teachers Association (CSTA) is an ACM-affiliated member organization of more than 26,000 educators and supporters of K-12 computer science. CSTA supports local communities of educators and partners through more than 70 local chapters, made up of educators, administrators, college faculty, and industry supporters, which meet regularly for networking and professional development. In addition, CSTA provides valuable resources to teachers and CS advocates, such as the newly revised K-12 CS Standards, research reports, a member listserv, a bimonthly newsletter, and recorded sessions from the annual conference. This session will provide a brief overview of CSTA, its chapters, and available resources for teachers. College faculty who are interested in connecting with local K-12 teachers will be encouraged to network and explore mutually beneficial partnerships. An open forum will follow for discussing CSTA's mission, possible initiatives, and benefits to K-12 and college educators. The major goals of this Birds-of-a-Feather session are:\nTo inform K-12 teachers and college faculty of the current initiatives underway at CSTA, as well as possible initiatives that are under development.\nTo allow K-12 teachers and college faculty with common interests to connect and potentially partner in supporting computer science in K-12.\nTo provide a forum for discussing the needs and desires of K-12 educators, which will then inform future CSTA initiatives and college partnerships.\nTo receive feedback from the community on current and possible initiatives.", "authors": [{"name": "David Reed", "affiliation": "Creighton University, Omaha, NE, USA"}, {"name": "Deborah Seehorn", "affiliation": "Computer Science Teachers Association (CSTA), Albany, NY, USA"}, {"name": "Fred Martin", "affiliation": "University of Massachusetts, Lowell & CSTA, Lowell, MA, USA"}, {"name": "Chinma Uche", "affiliation": "Greater Hartford Academy of Mathematics and Science & CSTA, Hartford, CT, USA"}], "tags": ["csta", "computer science teachers association", "k-12 cs education"]}, {"title": "Designing an Introductory Course in Data Science: Topics and Pedagogy (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162170", "abstract": "Participants in this Birds-of-Feather session will share thoughts and experiences in offering an introductory course in this exploding field. It will be the third consecutive year that these facilitators will conduct a SIGCSE session on a first course in Data Science. The interest in the field has increased greatly over the years, and attendees of varying backgrounds, points of view and experience are welcome. Whether the course will serve as an outreach vehicle to students of all majors, including non-technical ones, or as a first course in a formal program of some sort, we will be exchanging points of view regarding both topic coverage and pedagogical approaches. Regarding topics, we'll raise questions on the relative emphases of statistics, programming (should R be the vehicle? how about Python? other languages?), machine learning (which algorithms?), other tools, and appropriate data sets. Participants who have taught such a course will be invited to describe some of their approaches, especially if they've used such active learning methods as flipped classrooms. The facilitators, PI's on an NSF IUSE grant now winding down, bring experience from two institutions and three departments, including one interdisciplinary course. They hope to expand the community begun through the grant and these sessions, hosted at http://computingportal.org/DataScienceCommunity.", "authors": [{"name": "Michael A. Posner", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Lillian Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Darina Dicheva", "affiliation": "Winston Salem State University, Winston Salem, NC, USA"}, {"name": "Don Goelman", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Christo Dichev", "affiliation": "Winston Salem State University, Winston Salem, NC, USA"}], "tags": ["flipped classroom", "general education", "data science"]}, {"title": "Examining the Role of Informal Education in K-12 Computing Pathways & CS Education Reform Efforts: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162172", "abstract": "Afterschool and summer learning programs are an essential tool to support and expand K-12 computer science education. When used strategically, they can fill out a pathway of CS opportunities across the grade-span, spark interest, deepen engagement, and connect in- and out-of-school learning. Because African-American and Hispanic youth, and youth from low-income households, participate in afterschool programs in higher numbers (America After 3pm, 2014), and because more schools offer informal CS than offer formal coding classes (Google/Gallup, 2016), these programs provide access to \"preparatory privilege\"--the additional exposures that prime well-resourced students' confidence with computing (Margolis, 2008).", "authors": [{"name": "Sarah T. Dunton", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}, {"name": "Stephanie Rodriguez", "affiliation": "Afterschool Alliance, Washington, DC, USA"}], "tags": ["collaboration", "outreach", "k-12", "out-of-school time", "learning ecosystem", "summer learning", "equity", "informal education", "afterschool program", "education policy"]}, {"title": "How to Build a Student-Centered Research Culture for the Benefit of Undergraduate Students: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162179", "abstract": "There has been a dramatic increase in computer science undergraduate research activity at colleges and universities in recent years. However, developing a research culture that is explicitly designed to empower undergraduates (student-centered research) requires different models and objectives than those traditionally employed at more research-oriented universities. The goal of this BOF is to explore what effective techniques are employed by other primarily undergraduate institutions to build a culture of research that benefits undergraduate students. Some of the key issues covered in this BOF will be: defining student-centered research and its impact (How does student-centered research differ from traditional research? What secondary effects in the classroom and community might undergraduate research have?), redefining success metrics in student-centered research (How can we capture impact beyond publications and grants? How can we define measures that align with student impact?), exploring issues of accessibility and participation (How might student-centered research change models of student selection? How might it change faculty's scope and focus of research?), and structural mechanisms to empower student-centered research (Given constraints on time and/or resources, how can faculty enable undergraduate research?). Through this BOF, we also plan to build a sustainable community of interested academics leaders (using private Google+ or Facebook group) interested to share and collaborate on future undergraduate research efforts.", "authors": [{"name": "Perry Fizzano", "affiliation": "Western Washington University, Bellingham, WA, USA"}, {"name": "Evan M. Peck", "affiliation": "Bucknell University, Lewisburg, PA, USA"}, {"name": "Stu Thompson", "affiliation": "Bucknell University, Lewisburg, PA, USA"}, {"name": "Farzana Rahman", "affiliation": "Florida International University, Miami, FL, USA"}, {"name": "Shameem Ahmed", "affiliation": "Western Washington University, Bellingham, WA, USA"}], "tags": ["CS education", "PUI", "undergraduate research", "student-centered research", "research culture"]}, {"title": "Peer Instruction: Tips, Techniques and Resources (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162181", "abstract": "Peer Instruction (PI) is an active learning technique with over 25 years of research supporting its efficacy. Documented benefits in CS include lower WDF rates, higher exam scores, and improved retention in the CS major. One key difference between PI and traditional lecture is the use of \"clicker questions\" in class to challenge students' conceptual understanding. Students discuss and answer these questions in small groups before the instructor goes over the question with the entire class. This BoF is for both those using PI and those interested in starting. Attendees will meet other PI practitioners, discuss tips and tricks, and exchange materials. We will provide pointers to PI materials for a variety of courses, including CS1 & CS2, Machine Organization, Programming Languages, OS and more.", "authors": [{"name": "Jaime Spacco", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "David Bunde", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Cynthia Taylor", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Joe Hummel", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "David Hovemeyer", "affiliation": "York College of Pennsylvania, York, PA, USA"}], "tags": ["peer instruction", "active learning", "research-supported pedagogy"]}, {"title": "Pros and Cons of Using Data Analytics for Predicting Academic Performance in Computer Science Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162194", "abstract": "In the last decade, data analytics has been successfully applied in the field of education to predict student performance. There exists an obvious opportunity for this educational data to make a positive impact on computer science instruction. Machine learning models can use historical data containing behavioral and education-related attributes, such as previous course work, grades and time spent in class discussions, to make predictions about academic performance for prospective students. Even with proven predictive success, many questions related to the application of performance prediction remain unanswered, particularly in the context of larger debates about risk identification, grouping, and bias. This BoF will provide a platform for exploring the following questions: (a) How should computer science instructors use prediction data? Could results be used to group students by predicted academic performance levels? Could predictions help in the identification of students with low performance predictions for additional mentoring? (b) Should predictions be shared with students/instructors? (c) If so, how could instructor bias resulting from these predictions be minimized to ensure fair evaluation of students' actual performance? (d) Do computer science instructors attending this BoF currently implement any predictive tools or risk grouping? Would they consider doing either? (e) How much importance would instructors place on the results of performance predictions? To what degree would the accuracy of a model affect adoption?", "authors": [{"name": "Ashwin Satyanarayana", "affiliation": "New York City College of Technology, Brooklyn, NY, USA"}, {"name": "Jennifer Bivens", "affiliation": "City University of New York, New York, NY, USA"}, {"name": "Jan Way Chen", "affiliation": "New York City College of Technology, Brooklyn, NY, USA"}], "tags": ["risk grouping", "student performance", "data analytics", "instructor bias", "predictive tools"]}, {"title": "Small Department Initiative: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162188", "abstract": "Faculty members in a small department (5 FTE or less) face special challenges and strengths because of their size. This BOF is a time for faculty to meet and discuss ways to meet the shared challenges and take advantage of their strengths. The actual topics covered will be based on those attending. Topics include: sharing classes, increasing enrollment, general education, and specialized courses.", "authors": [{"name": "Catherine Bareiss", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}], "tags": ["faculty development", "small department"]}, {"title": "Teaching Track Faculty in Computer Science: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162176", "abstract": "Many computer science departments have chosen to hire faculty to teach in a teaching-track position that parallels the standard tenure-track position, providing the possibility of promotion, longer-term contracts, and higher pay for excellence in teaching and service. This birds-of-a-feather is designed to gather educators who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Chris Gregg", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["advising", "lecturers", "teaching track faculty"]}, {"title": "The Authentic Inclusion and Role of Community Colleges in National Efforts to Broaden Participation in Computing: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3165281", "abstract": "Over half of community college (CC) students are non-white, and more than half of all Hispanic and Black undergraduates start at community college. Given that community colleges (CCs) enroll minorities and women in larger numbers than four-year institutions, it is imperative for both, CCs and four-year institutions, to engage in collaborative efforts to broaden the participation of diverse peoples into computing and facilitate unobstructed pathways from the two-year to four-year educations. While CCs are rich in diversity, their students face an inordinate number of obstacles transferring to a bachelor's degree particularly in computer science (CS). The complexities of the CC landscape require that experts from various backgrounds come together to share knowledge and experiences to contribute to a better understanding of the role CCs can play with four-year institutions in broadening the participation efforts in CS and information technology (IT).", "authors": [{"name": "Wendy DuBow", "affiliation": "National Center for Women & Information Technology, Boulder, CO, USA"}, {"name": "Jill Denner", "affiliation": "Education, Training, and Research, Scotts Valley, USA"}, {"name": "Melanie Williamson", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}, {"name": "Cheryl Calhoun", "affiliation": "Santa Fe College, Gainsville, FL, USA"}, {"name": "Louis Ann (\"Lou Ann\") Lyon", "affiliation": "Education, Training, and Research, Scotts Valley, CA, USA"}, {"name": "Deborah Boisvert", "affiliation": "University of Massachusetts, Boston, Boston, MA, USA"}, {"name": "Amardeep Kahlon", "affiliation": "Austin Community College, Austin, TX, USA"}], "tags": ["community college", "degree pathways", "transfer pathways", "broadening the participation", "diversity"]}, {"title": "Using Subgoals to Improve Student Performance in CS1: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162185", "abstract": "Subgoal labels are function-based instructional explanations that describe the problem-solving steps to the learner, highlighting the solution process. There is strong evidence that the use of subgoal labels within worked examples improves student learning in other STEM fields. Initial research shows that using subgoal labels within computer science improves student learning, but this has only been tested using a single programming concept (indefinite loops) with text-based programming languages. The proposers are currently expanding subgoal labels to the main programming concepts taught in an introductory programming course using an imperative programming language. In this BOF we seek to uncover tacit knowledge that programming instructors have in order to develop instructional materials that bridge the gap between students, who are CS novices, and instructors, who are CS experts, to improve learning for students who are under-prepared for or struggle in CS1. We will be seeking feedback on the selection of programming topics to be covered, the defined subgoals for those topics and the worked examples created for instructional purposes.", "authors": [{"name": "Briana B. Morrison", "affiliation": "University of Nebraska Omaha, Omaha, NE, USA"}, {"name": "Adrienne Decker", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["subgoal labels", "introductory programming"]}, {"title": "What to do about Comp Org?: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162173", "abstract": "There is no doubt that Computer Organization (Comp Org) is not as central a topic as it once was. In the ACM's curricular guidelines, the number of hours devoted to Computer Architecture and Organization has fallen from 36 core hours in 2001 and 2008 to 16 tier 2 hours in 2013, and, incredibly, students are not always as enthralled with the subject as their instructor. Therefore, we are compelled to ask? what to do about Comp Org? How might we revamp it to make it more relevant and appealing? Should we concentrate on one ISA? Use CISC, RISC, or both? Do we need to use real, contemporary hardware, or stick with simulators? More radically, can micro-controllers, used for Internet of Things (IoT) platforms, be used to broaden the course, to weave together both traditional Comp Org topics and IoT?", "authors": [{"name": "Bill Siever", "affiliation": "Washington University in St. Louis, St. Louis, MO, USA"}, {"name": "Michael P. Rogers", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}], "tags": ["computer organization", "curriculum"]}, {"title": "Working Together to Provide Equitable CS K-12 Educator Professional Development at Scale: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162193", "abstract": "The demand for CS teacher professional development (PD) is increasing rapidly, but not all education stakeholders are equipped to identify CS PD needs, evaluate CS PD options, and track teacher and student outcomes. In this BOF, representatives of Google's CS educator PD grant program (formerly CS4HS) will share conclusions from the 2016 PD grant cycle and a recent literature review. Participants will discuss how the CS education community can disseminate knowledge about CS PD to the communities that need it most. At SIGCSE 2017, Google discussed CS PD best practices and common successes and challenges in creating sustainable PD programs. This year, we will discuss how to equitably scale these best practices so that education stakeholders are equipped to implement quality CS education, ensuring all students have quality CS learning experiences. This session is intended to be highly interactive and solution-oriented. Discussion themes and outcomes will be documented and shared with attendees.", "authors": [{"name": "Olga Garcia", "affiliation": "Google, Mountain View, CA, USA"}, {"name": "Sloan Davis", "affiliation": "Google, Mountain View, CA, USA"}, {"name": "Chris Stephenson", "affiliation": "Google, Mountain View, CA, USA"}], "tags": ["teachers", "educators", "computer science", "K-12", "professional development", "education", "industry research", "Google"]}, {"title": "Designing CS Courses using Universal Design Concepts: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162167", "abstract": "Increasingly we teach a diverse population of students, many with learning differences such as ADHD and Autism Spectrum Disorder. An educational framework called universal design for learning guides the development of flexible learning environments that can accommodate individual learning differences. This BOF will look at employing universal design to CS courses in order to accommodate the diverse learning styles of today's students.", "authors": [{"name": "John P. Russo", "affiliation": "Landmark College, Putney, VT, USA"}], "tags": ["learning differences", "barriers to learning", "universal design", "course design", "autism spectrum disorder", "ADHD"]}, {"title": "A Town Meeting: SIGCSE Committee on Expanding the Women-in-Computing Community (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162184", "abstract": "In January 2004, we organized the second SIGCSE Committee (\"Expanding the Women-in-Computing Community\"). The SIGCSE Board approved the charter, because the underrepresentation of women in computing is an international problem and an embarrassment for our profession. A BOF provides SIGCSE program advertising that will create a large audience for dissemination of information concerning successful gender issues projects and can provide time for discussion and brainstorming. We select projects to highlight through listserv communication and through our connections with ACM-W, NCWIT, ABI, CDC, CRA-W, etc. The forum provides an important annual meeting for a large group of people, who work to increase the representation of women in computing in their separate organization and who do not customarily have an opportunity to share ideas face-to-face.", "authors": [{"name": "Wendy Powley", "affiliation": "Queen's University, Kingston, ON, Canada"}, {"name": "Paula Gabbert", "affiliation": "Furman University, Greenville, SC, USA"}, {"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["gender issues"]}, {"title": "Active Learning in Systems Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162180", "abstract": "Research shows the benefit of using active learning in computer science education; however, only limited resources (such as, prior publications) exist for systems courses (including architecture, networking, operating systems). This BoF brings together practitioners of various levels of experience to discuss ways to augment or replace traditional lecturing. We will discuss different techniques, possible materials available, and results measured. This BoF should benefit both instructors considering adopting techniques and instructors looking to discuss issues with their usage.", "authors": [{"name": "Saturnino Garcia", "affiliation": "Univ. of San Diego, San Diego, CA, USA"}, {"name": "Brian P. Railing", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Cynthia Taylor", "affiliation": "Univ. of Illinois, Chicago, Chicago, IL, USA"}], "tags": ["active learning", "computer systems", "computer science education"]}, {"title": "Building and Nurturing Communities of Practice among K-12 CS Teachers: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162190", "abstract": "The need for K-12 students to engage in Computer Science has been acknowledged in the White House call for \"Computer Science for All\" and supported through a variety of institutions. Implicit in many initiatives, and explicit in Google's CS4HS initiative, is the notion of a \"Community of Practice\" involving K-12 teachers. Communities of Practice are mutually supportive groups to assist newcomers as they find their way in a new endeavor. Teachers can support one another at multiple levels: technical, pedagogical, political, and emotional. Maintaining a Community of Practice for CS teachers, however, can be challenging. Demands on teacher time, lack of institutional buy-in, physical isolation, and lack of appropriate peer institutions are some confounding factors. A true community of practice requires maintenance: ways to identify newcomers or other participants in need, and ways to identify and share the resources that can help others. In this BoF, educators who are working to expand CS within K-12 education will discuss the challenges in the Community of Practice approach and share proven ways of addressing them.", "authors": [{"name": "Leo C. Ureel", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Charles Wallace", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Linda Ott", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["K-12 education", "CS for all", "professional development", "community of practice"]}, {"title": "Building Community in Large or Virtual Classrooms: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162196", "abstract": "Booming interest in computer science and innovations in the way we teach it have allowed us to teach a larger, more demographically and geographically diverse group of students. One of the new challenges facing us now is that it can be harder for instructors to get to know many of their students, and for students to connect with their peers. Building community in our physical and virtual classrooms is difficult, but important for the success and learning experience of our students. Community is especially important for \"non-traditional\" CS students, who are more likely to struggle with imposter syndrome, or to feel like they don't belong in a CS classroom. Building Community in Large or Virtual Classrooms In this BoF session, we'll discuss the strategies, activities, and interventions we've tried and found successful or unsuccessful in building course community, and helping students believe they belong in CS.", "authors": [{"name": "Diane Horton", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Jacqueline Smith", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["large classroom", "community", "online learning", "non-traditional students"]}, {"title": "Computing and Values: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162165", "abstract": "Computing is not neutral. The way that we collect and manipulate data, the decisions that are programmed into autonomous devices, even the ways that we use each other's code reflects someone's values. Because technology has more and more influence in society, consideration of these values should be a part of a Computer Science student's education. The ACM/IEEE 2013 Curricula Guidelines for Computer Science programs reflects this imperative. The writers of the document suggest that between 11 and 16 of the core hours be devoted to Social Issues and Professional Practice. Where and how should we include the essential discussions of values, ethical considerations, social issues, and professional practice in the curricula? Should a whole course be devoted to the topic? If so, when in the program should it appear? Should we instead incorporate values topics related to the subject matter in each computing course? If so how? Perhaps we should leave the discussion to the philosophers or ethicists on campus. Will our students then be able to make the connection between computing and general ethics/values frameworks? Which aspects of values judgments should be addressed? Can we generalize in a way that will still apply to future advances in our fields? We'd like to hear from you.", "authors": [{"name": "Lori Carter", "affiliation": "Point Loma Nazarene University, San Diego, CA, USA"}, {"name": "Derek Schuurman", "affiliation": "Calvin College, Grand Rapids, MI, USA"}], "tags": ["social issues in computing", "values in computing curricula", "ethics in computing"]}, {"title": "Data Modeling for Undergraduate Data Science: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162183", "abstract": "Widespread interest in developing and enhancing undergraduate data science education is evidenced by the interim report Envisioning the Data Science Discipline: The Undergraduate Perspective recently released by the National Academies of Science/Engineering/Medicine. The report identifies data modeling as one of the key concepts for developing and applying data acumen (making good decisions and judgements with data). We define data modeling as a process for documenting how data is connected, processed, and stored; a particular data model may address one or more of these aspects. This BoF session is proposed to focus specifically on data modeling skills for data science study. Traditional data models taught in computing curriculum include Entity-Relationship, UML, and relational models; these topics can be covered at various points in the curriculum, but are typically included in database courses. The proliferation of advanced data models and systems (for example, but not limited to, document stores, graph databases, column stores, key-value stores, and relational + map reduce) provides an opportunity for developing/enhancing database curriculum at the undergraduate level to support programs in data science. A goal of this BoF is to identify faculty who wish to develop and share best practices for teaching data modeling for data science, including course learning objectives and outcomes, techniques, and materials.", "authors": [{"name": "Brandeis Marshall", "affiliation": "Spelman College, Atlanta, GA, USA"}, {"name": "Karen C. Davis", "affiliation": "Miami University, Oxford, OH, USA"}, {"name": "Lancie Affonso", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["data modeling", "data science", "database"]}, {"title": "Effective POGIL Implementation Approaches in Computer Science Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162191", "abstract": "The use of Process-Oriented Guided Inquiry Learning model (POGIL) in introductory computer science courses has shown to be very useful in active learning delivery of fundamentals of computer science. Moreover, the aspect of organized teamwork in POGIL helps students develop professional skills to be ready to participate in team-based upper division CS courses such as software engineering or capstone courses. POGIL introduces a structured, yet flexible model for group activities. It also resolves the issue of member participations in activities since everyone needs to take a role and switch them in different activities. Time-management is also enhanced with POGIL. Though POGIL is a promising pedagogy, it also presents some unique challenge such as how to adopt the current activities to specific model of the classrooms. The implementation of courses can follow various approaches depending on factors like: class size, institutional culture, background of the students, the nature of facilities, and instructor preferences. In particular, faculty might need to invest significant amount of time to develop and/or work on modifying existing materials for specific courses. Therefore, instructors who choose to be POGIL facilitators has various decision choices. Detailed discussion about all these challenges, choices, options, and approaches are provided which can benefit faculty who are using and/or interested in adopting POGIL in CS courses. The discussions could be helpful to those who are only interested in group-based active learning teaching of CS courses.", "authors": [{"name": "Farzana Rahman", "affiliation": "Florida International University, Miami, FL, USA"}, {"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}], "tags": ["CS-POGIL", "POGIL"]}, {"title": "Combating the Wide Web of Plagiarism: the Discussion Continues (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162197", "abstract": "Plagiarism is of great concern to faculty in all fields, including computer science as it leads to one certain outcome -- a compromise not just in student learning but also in the entire academic process. Faculty have tried to find ways to deal with this epidemic such as writing new course materials each semester, putting a larger or entire grade focus on exams, or even asking individual students to explain their assignments. However, plagiarism remains a source of frustration for both faculty and administrators. This BOF will bring interested faculty together to discuss the various and surprising ways in which students plagiarize, the methods of countering plagiarism, and the currently available tools for detecting plagiarism. Questions we will be discussing include: Do students understand plagiarism in the context of writing software? How can we develop an atmosphere that discourages plagiarism? Does such a thing as a \"plagiarism-proof\" assignment exist? If programmers go to online repositories, modify the code, and use it in professional programs then is it fair to expect the students to do just the opposite?", "authors": [{"name": "Bonnie MacKellar", "affiliation": "St. John's University, Queens, NY, USA"}, {"name": "Amardeep Kahlon", "affiliation": "Austin Community College, Austin, TX, USA"}, {"name": "Anastasia Kurdia", "affiliation": "Tulane University, New Orleans, LA, USA"}], "tags": ["ethics", "plagiarism", "assessment", "code", "education", "github"]}, {"title": "Global Awareness for Computing Educators and Scholars: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162174", "abstract": "SIGCSE members are part of a worldwide community of computing educators and professionals. This discussion provides participants an opportunity to share global differences in vocabulary and interpretation of idioms and assumptions that pervade teachers and researchers. Lack of cultural knowledge can hinder understanding meaning of terms; communication among colleagues can be confusing. Lack of understanding also inhibits the leveraging of scholarly work and cooperation among colleagues from different cultures. E.g., information technology in Australia means the field of computing, and the baccalaureate degree \"Computer Science and Technology\" in China is equivalent to a degree in computer engineering. Terminology that Americans use such as AP for Advance Placement or K-12 for pre-undergraduate education is meaningless in many parts of the world. This discussion is an outgrowth of an ad hoc subcommittee formed by the ACM Education Council on global issues. Serving as a reference for the discussion is the seminal article by Clear, A. et al. \"What's in a Name?: International Interpretations of Computing Education Terminology,\" in The Proceedings of the 2015 ITiCSE on Working Group Reports. Attending this BOF should heighten awareness of what changes might lead to a truly global computing education community. In addition to Owens, Alison Clear from New Zealand, Ming Zhang from China, and John Impagliazzo from the USA have agreed to help lead the discussion.", "authors": [{"name": "Mirella Moro", "affiliation": "Universidade Federal de Minas Gerais,, Pampulha, Belo Horizonte , Brazil"}, {"name": "Barbara Boucher Owens", "affiliation": "Southwestern University, Georgetown, TX, USA"}, {"name": "John Impagliazzo", "affiliation": "Hofstra University, Hempstead, NY, USA"}, {"name": "Ming Zhang", "affiliation": "Peking University, Beijing, China"}, {"name": "Alison Clear", "affiliation": "Eastern Institute of Technology, New Zealand"}], "tags": ["terminology", "nomenclature", "international"]}, {"title": "How Do We Provide Effective Student Advising and Mentoring During Record Growth?: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162175", "abstract": "In their \"Generation: CS\" report this past year, The Computing Research Association detailed the explosive growth of computer science majors across both large and small institutions calling it \"larger today than any time previously\". Using data from The Taulbee Survey they show a 500% increase in the number of majors in computer science, but only a 50% increase in full-time faculty. Unfortunately, this growth has major consequences outside the classroom setting. The ability for faculty to engage in meaningful advising relationships with students has been severely impacted by this record growth. One solution could be to hire staff to assist students in course selection and degree requirements, but meaningful mentorship is much more than checking boxes and exemptions. Can we be effective advisors when advising loads have skyrocketed? In 2004, The CRA, lists effective mentoring as one of the challenges faced by broadening participation in computer science. In particular, they advocate for better training for mentors. Now faced with extreme ratios the need for creative mentoring practices is paramount. This BOF will provide a platform to discuss and share solutions from a variety of institutions. Questions such as: \"How can we identify students who would like to do research and continue to graduate school?\", \"How do we expose students to independent learning in large classes?\", \"Can we leverage peer mentoring?\" \"How can we make advising better?\" \"What processes can be automated?\".", "authors": [{"name": "Christopher Gregg", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Benjamin Hescott", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["enrollment growth", "advising", "mentorship", "undergraduate studies"]}, {"title": "Integrating Hands-on Cybersecurity Exercises into the Curriculum in 2018: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162195", "abstract": "We need to greatly expand the community of faculty teaching cybersecurity using hands-on exercises. The number of security-focused competitions and exercises has increased in recent years so that faculty need to choose those that can best be integrated into their courses. As a community, we can contribute to each other/s projects. We would like to bring together both new and experienced faculty to build community. Our Facebook group (https://www.facebook.com/groups/TeachingCyber/) allows us to work together outside of SIGCSE events, and we are developing a critical mass of users. In the BoF, participants can sign up for the closed group. Participants will discuss answers to specific questions on teaching security. One goal of our BoF is to provide support for new members to learn about resources and get help. These resources include exercises, webinars, and slides. We will share experiences, practices and ongoing efforts, including our own (e.g. Security Injections, the Security Knitting Kit project, and EDURange). The BoF also benefits experienced members, helping them to disseminate their work and reach other faculty with similar interests. As a community we have begun to share exercises and discuss what works and what problems students and instructors have encountered. We will discuss ways to integrate security-related exercises into existing courses. The questions we will ask are, What materials and exercises have you tried? What are your experiences? How do we expand and improve cybersecurity education?", "authors": [{"name": "Jens Mache", "affiliation": "Lewis and Clark College, Portland, OR, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Cookeville Olypmia, WA, USA"}, {"name": "Michael E. Locasto", "affiliation": "SRI International, New York, WI, USA"}, {"name": "Siddharth Kaza", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Ankur Chattopadhyay", "affiliation": "University of Wisconsin at Green Bay, Green Bay, WI, USA"}, {"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Ambareen Siraj", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}], "tags": ["security education", "hacker curriculum", "laboratory exercises", "computer security", "secure coding", "security", "cybersecurity"]}, {"title": "K-12 CS Teacher Certification: What Should New CS Teachers Know and Be Able to Do? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162171", "abstract": "Currently, 27 states and the District of Columbia have some form of teacher certification in computer science. This includes a variety of pathways such as endorsement, certification, licensure or other authorization that explicitly names CS. Many of these states, as well as those that have no CS teacher certification, are in the process of reviewing certification standards and pathways with the goal of increasing the number and quality of K-12 CS instructors and thus, access to high quality CS coursework in K-12. The Praxis exam is one of the few nationally recognized measures of CS teacher content knowledge but the current exam is out of date. A group of state leaders have been working with ETS to update the competencies measured by the Praxis. The objective of this BOF is to bring together stakeholders interested in contributing to the conversation around what a beginning CS teacher should know and be able to do to in CS, provide an overview of what has happened thus far to address these questions, share the recently revised Praxis draft framework, and give individuals an opportunity to provide input on the development of a national consensus related to new K-12 CS teacher competencies.", "authors": [{"name": "John Owen", "affiliation": "University of Texas at Austin, Montgomery, TX, USA"}, {"name": "Pat Yongpradit", "affiliation": "Code.org, Seattle, WA, USA"}, {"name": "David Benedetto", "affiliation": "New Hampshire Dept of Education, Concord, NH, USA"}, {"name": "Carol Fletcher", "affiliation": "University of Texas at Austin, Austin, TX, USA"}], "tags": ["praxis", "endorsement", "standards", "licensure", "certification"]}, {"title": "Open Source Student Clubs: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162186", "abstract": "Free and Open Source Software (FOSS) is interesting to many students and provides an excellent opportunity to observe and practice many aspects of software product development and management. There is an active community of faculty fostering student participation in open source within computing curricula (see http://teachingopensource.org). However, the opportunity to add coverage of FOSS varies considerably from institution to institution, and there are always limits to what can be done with existing computing curricula. One approach to solving this limitation is for students to learn about and participate in FOSS projects as an extra-curricular activity. This BoF will provide a forum for faculty members to discuss open source student clubs. The Mozilla Foundation has been developing a program to support open source clubs. The initial clubs were primarily located in Asia, but Mozilla started an effort to expand the clubs to the U.S. during the current academic year. The BoF will include discussion of this effort and materials developed by Mozilla. (See https://opensource.mozilla.community/)", "authors": [{"name": "Darci Burdge", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Joanna Klukowska", "affiliation": "New York University, New York, NY, USA"}, {"name": "Gregory W. Hislop", "affiliation": "Drexel University, Philadelphia, PA, USA"}], "tags": ["computing education", "open source software", "extracurricular computing clubs"]}, {"title": "Teach Access: Teaching the Design and Development of Inclusive Technologies for All (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162182", "abstract": "What is needed to help CS professors teach their students about the fundamental concepts of accessible design? How can every CS student become competent in the development of mainstream technologies that meet the needs of people with disabilities? Society is demanding such capabilities and companies such as Microsoft, Facebook, Oath (Yahoo), Adobe, and Google are today working with major universities to assure that new hires graduate college with this essential skillset. The Teach Access project is actively addressing the barriers, incentives and mechanisms through curriculum change, influencing accreditation, faculty bootcamps, industry guest lectures, online tutorials, and student engagement programs. What works for you and how can more university and faculty champions be engaged?", "authors": [{"name": "Larry Goldberg", "affiliation": "Oath, Boston, MA, USA"}, {"name": "Paul Ruvolo", "affiliation": "Olin College, Needham, MA, USA"}, {"name": "Jeff Dusek", "affiliation": "Olin College, Needham, MA, USA"}], "tags": ["academic/industry partnerships", "universal design", "accessibility"]}, {"title": "Using Gamification Strategies to Motivate and Engage Students in Computer Science Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162168", "abstract": "The low performance and drop-outs in Computer Science classes are frequently attributed to lack of engagement and motivation. Meanwhile, gamification - the application of game design principles and game mechanics to a non-game context -- increasingly attracts the interest of educators due to its potential to foster motivation and behavioral changes in learning contexts. Course gamification is about using game elements, such as instant feedback, freedom to fail, freedom of choice, achievements, leveling, progress mechanics, badges, and leaderboards, as interventions in the learning process. This BOF will provide a platform for a discussion of when and how course gamification strategies can be beneficial for improving student motivation, engagement and achievements in Computer Science classes. Questions to be discussed include: What game elements could be useful in gamifying a computer science course? How can an instructor incorporate game elements in the design of their courses? What support the instructor may need for gamifying their courses? Could some game elements have potential drawbacks on student motivation and performance? The discussion leaders and attendees with experience in applying gamification in their courses will share examples of successes or failures, challenges, problems, tips, and techniques for gamifying learning with each other and those new to the use of gamification. Two NSF sponsored projects related to the use of gamification in STEM courses will seed the discussion. As an outcome of the discussion, we hope to collectively identify some lessons learned and challenges to be overcome for a successful application of gamification in Computer Science education.", "authors": [{"name": "Darina Dicheva", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Christo Dichev", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Lillian N. Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Peter J. Clarke", "affiliation": "Florida International University, Miami, FL, USA"}, {"name": "Elva J. Jones", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}], "tags": ["course gamification strategies", "gamification in education", "student motivation and engagement"]}, {"title": "We're All in This Together: CS Students, the Tech Industry, and Mental Health (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162189", "abstract": "Long hours, pressure to meet deadlines, and fear of failure are just some of the stressors that affect CS students and professionals alike, leading to burnout, anxiety, depression, and other mental illnesses. A quarter of the world's population lives with some form of mental illness, and a 2015 UC-Berkeley study reported that nearly 50% of STEM graduate students live with depression. Furthermore, recent research suggests that 50% of those working in the tech community have been diagnosed with a mental illness, a statistic that may actually underestimate the problem because of stigmas in certain cultures and communities around seeking mental health services. These numbers all suggest a significant need for awareness and support in the tech industry. This BOF will provide attendees an opportunity to discuss the mental illnesses that affect CS students, including how to recognize symptoms, what resources are available, and how to create a culture of understanding and support within their communities. More importantly, we hope to create a space in which those living with mental illness can share their stories so that other participants can get a first-hand appreciation of the challenges they face.", "authors": [{"name": "Christian Murphy", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Jennifer Akullian", "affiliation": "Growth Coaching Institute, San Francisco, CA, USA"}], "tags": ["mental illness", "mental health", "well-being", "wellness"]}, {"title": "The Ongoing Development of a Collaboration between a Software Project Management Course and an Introduction to Software Development Course: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162244", "abstract": "The ability to manage software development teams is an important skill in the computing professions. The Software Engineering Body of Knowledge devotes a separate knowledge area to this skill. It is difficult, however, to effectively teach software project management (SPM) in a traditional undergraduate setting, because it is logistically challenging to find software development teams that students can manage over a sufficiently long period of time. Thus, students often cannot apply in practice the SPM theory they learn in class and, in particular, the soft-skill aspects of SPM. To enhance student learning and experience of SPM, we have established a collaboration between a senior-level SPM course and a sophomore-level introduction to software development (ISD) course. In this collaboration, SPM students serve as managers of teams of ISD students during a semester-long project. We designed a methodology to evaluate the collaboration in terms of student learning and experience. This methodology is based on student surveys, reflections, meetings with students, and analysis of student artifacts (e.g., meeting minutes). We are in the third year of a longitudinal study in which we evaluate the collaboration after each semester it runs and evolve that collaboration based on the collected evidence. This poster describes the collaboration, the evaluation methodology, the continuous improvement process for evolving the collaboration, lessons learned on the educational benefits of the collaboration, and issues, such as the amount of managers/ authority, nature of managers/ tasks, logistics, and scheduling.", "authors": [{"name": "Mark E. Hoffman", "affiliation": "Quinnipiac University, Hamden, CT, USA"}, {"name": "Stefan C. Christov", "affiliation": "Quinnipiac University, Hamden, CT, USA"}], "tags": ["software engineering", "collaborative teaching", "software project management"]}, {"title": "Charles Babbage, Ada Lovelace, and the Dawn of Computing: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162246", "abstract": "This poster summarizes the product of the author/s 2016 ACM SIGCSE Special Projects grant. The author created a Reacting to the Past (RTTP) historical role-playing game entitled \"Charles Babbage, Ada Lovelace, and the Dawn of Computing.\" According to the RTTP Web site, RTTP \"...consists of elaborate games, set in the past, in which students are assigned roles informed by classic texts in the history of ideas. Class sessions are run entirely by students; instructors advise and guide students and grade their oral and written work. It seeks to draw students into the past, promote engagement with big ideas, and improve intellectual and academic skills.\" In the Babbage game, students take on the personae of the key figures in early Victorian science and engineering, and debate whether or not the British government should provide funding for the development of Babbage/s Difference and Analytical Engines. Game sessions take place at Babbage/s home, the London Mechanic/s Institute, and the Royal Society. The game can be played in six, seven, or eight class sessions, and includes three optional labs. There are 28 playable characters in the game. The game can be used in history of science or history of computing courses, and also in general-audience first-year seminar courses, to encourage students to study computing. The poster covers the background of RTTP games in general; some of the specifics of the Babbage game in particular; and includes pictures and insights from the first playtesting of the game during the author's fall 2017 first-year seminar course.", "authors": [{"name": "Mark M. Meysenburg", "affiliation": "Doane University, Crete, NE, USA"}], "tags": ["history of computing", "charles babbage", "ada lovelace"]}, {"title": "New Teaching Strategies for New Concepts -- What is Different with Block-based Programming?: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162254", "abstract": "Since the emergence of block-based visual programming languages as a new take on programming environments, they have served as a successful entry point into programming for novice learners. Over time, they have been developed and improved to become increasingly accessible, intuitive, and easy to use. In the course of this evolution, both uncommon and entirely new language concepts have been introduced, such as the cloning of objects, or nesting of sprites. However, the question of how to teach them has yet to be answered: the mostly visual representation of program flow, output and code, and the way a user interacts with these aspects can make traditional teaching practices inadequate. Instead, block-based languages require new practices, methods, and strategies, which will be developed in this research project. To this end, new concepts must be evaluated with regards to their strengths, weaknesses, and applications. Following this step, strategies with which to teach these concepts can be developed. Therefore, this poster presents the initial findings of a research project concerned with the theory of teaching block-based programming. In this preliminary study, we have identified new concepts found in Scratch, Snap! and GP, members of the most common block-based language family. In the next phase of the project, strategies for teaching these new concepts will be developed and assessed.", "authors": [{"name": "Sven Jatzlau", "affiliation": "Friedrich-Alexander Universit\u00e4t, Erlangen-N\u00fcrnberg, Germany"}, {"name": "Ralf Romeike", "affiliation": "Friedrich-Alexander Universit\u00e4t, Erlangen-N\u00fcrnberg, Germany"}], "tags": ["visual programming languages", "scratch", "block-based languages", "gp", "language concepts", "snap"]}, {"title": "Developing Interdisciplinary Programs: Challenges and Opportunities (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162256", "abstract": "We present our experience developing and managing new interdisciplinary programs in computer forensics and digital media informatics -- the results of successful collaboration with social science faculty. The computer forensics minor is an interdisciplinary program that integrates criminal justice and computer science and combines both theoretical concepts and practical skills to prepare students for a career in the area of information security and digital forensics. The digital media informatics major is an interdisciplinary program run jointly by the computer science and communication studies departments. The program provides both broad and targeted perspectives on the field of informatics and helps students develop unique skills that can be adapted to the rapidly changing computer and media environment through four specialized concentrations: (1) audio-visual, (2) graphics, mobile, & web development, (3) gaming & artificial intelligence, and (4) digital writing. We describe the various stages in developing the interdisciplinary programs including an analysis of competitive academic programs, evaluation of current resources, qualifications and faculty considerations, the process of developing the program objectives and learning outcomes, and assessment strategies. We focus on common issues that arose during the development process such as the challenge of designing balanced curricula for interdisciplinary programs, the need for designing new courses and renovating existing courses. We also discuss the anticipated costs of the programs, required resources, recruitment strategies, and the administrative approval mechanism.", "authors": [{"name": "Yana Kortsarts", "affiliation": "Widener University, Chester, PA, USA"}, {"name": "Adam Fischbach", "affiliation": "Widener University, Chester, PA, USA"}, {"name": "Suk-Chung Yoon", "affiliation": "Widener University, Chester, PA, USA"}], "tags": ["computer forensics", "interdisciplinary programs", "digital media informatics"]}, {"title": "POGIL Activities for Computer Organization and Architecture: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162262", "abstract": "Research shows that active learning can increase student performance and engagement, but access to materials is a notable barrier to using research-based instruction strategies in CS and Engineering. We present results of a project-in-progress that aims to create, pilot, revise, and disseminate POGIL activities for Computer Organization and Architecture. POGIL is a research-based instruction strategy that comprises self-managed teams, guided inquiry (or, exploration), and development of process skills, such as critical thinking and assessment. The strategy has been shown to improve student performance and engagement in courses in scientific disciplines and, more recently, CS. This poster presents how we have applied the methodology for POGIL activities to Computer Organization and Architecture and highlights one activity in depth. From 2 pilots with 36 and 70 students we produced revisions and timings for 6 activities. We also discuss lessons learned in a) facilitation, such as the importance of roles and the tradeoffs of class-level synchrony and b) authorship, such as the appropriate choice of model (or, subject of inquiry) and level of guidance in the exploration phase of an activity. The intended outcome of this project is to make these activities publicly available on cspogil.org.", "authors": [{"name": "Brandon Myers", "affiliation": "University of Iowa, Iowa City, IA, USA"}], "tags": ["computer architecture", "dissemination", "instructional materials", "inquiry-based learning", "computer organization"]}, {"title": "Conceptualizing Student Engagement in Virtual Hands-on Lab: Preliminary Findings from a Computer Network Security Course (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162264", "abstract": "Engaged students are more likely to spend longer time on study, and obtain a better academic performance. Previous studies investigated the role of student engagement in virtual learning environments (e.g., online course, online discussion forum, and intelligent tutoring systems). However, it is still challenging to engage students on a virtual hands-on lab system. Comparing to other virtual learning environment, students have a unique learning model -- learning by doing in virtual hands-on lab. To successfully engage students in a large hands-on lab in cybersecurity education, instructors need to understand how students engage in a lab session, and how their engagement affect lab learning outcome in this specific educational setting. In this paper, we developed a conceptual model, especially for virtual hands-on lab education, to describe student engagement during learning processes in working on virtual hands-on lab tasks. This model adopts two existing educational models on engagement behavior. Preliminary data was collected from 109 students' lab project in a computer network security course at Arizona State University in 2016 Fall semester. Pearson correlation coefficient analysis results reveal two statistically significant preliminary results: the longer time a student spends on reading lab instructional material, the more likely the student works longer time on lab tasks (p < 0.01); the longer time a student works on lab tasks, a better learning performance the student archives (p < 0.01).", "authors": [{"name": "Chun-Jen Chung", "affiliation": "Arizona State University, Tempe, AZ, USA"}, {"name": "Yuli Deng", "affiliation": "Arizona State University, Tempe, AZ, USA"}, {"name": "Sharon Hsiao", "affiliation": "Arizona State University, Tempe, AZ, USA"}, {"name": "Zhen Zeng", "affiliation": "Arizona State University, Tempe, AZ, USA"}, {"name": "Dijiang Huang", "affiliation": "Arizona State University, Tempe, AZ, USA"}], "tags": ["computer science education", "hands-on lab", "cybersecurity education", "student engagement"]}, {"title": "Coding and Programming: What Do Italian Primary School Teachers Think? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162268", "abstract": "The term \"coding\" is more and more used to talk about the diffusion of computer science in school. While computer scientists, computing professionals, and educators consider this term very close or even equivalent to \"programming\", media tend to use it to describe something new and different from the \"old boring CS\". We provide here the main results of a large-scale investigation among primary school teachers (N=972) exploring their viewpoint on coding and its relation to programming. We asked to describe what coding is for them: only 40% of the relevant answers used terms explicitly mentioning programming. An additional 19%, while not directly mentioning programming, made reference to an information processing agent executing instructions. An additional small subset of teachers, while considering coding different from programming, described such difference using \"tolerable\" characterizations. We also analyzed the (sometime conflicting) misconceptions of teachers trying to explain why coding and programming are different.", "authors": [{"name": "Isabella Corradini", "affiliation": "Themis Research Centre, Roma, Italy"}, {"name": "Enrico Nardelli", "affiliation": "University of Roma \"Tor Vergata\", Roma, Italy"}, {"name": "Michael Lodi", "affiliation": "University of Bologna & INRIA, Bologna, Italy"}], "tags": ["informatics education", "primary school teachers", "coding and programming"]}, {"title": "How to Foster Creativity?: Curriculum of Creativity Development Program for Computer Science Students (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162269", "abstract": "The importance of problem solving skills in addition to computational skills for computer science graduates is increasing. The authors present a curriculum of a creativity development program for undergraduate computer science students that aims at exposing them to problem solving and software development through a series of three courses spanning a period of six months. The focus of this initiative is to teach problem solving skills and software development skills as an integrated skill-set and take advantage of the combined effect to address the challenge for students to connect computer science knowledge to real-world problems, an issue apparent in our current curriculum. The curriculum starts with the first course on creativity development in which students propose solutions to a real-world problem through field-work and information gathering/analysis spanning five days. The second course introduces project management and software development through another five-day software development team project. In the final course, student teams work on a software development request from customers during a period of 4 months. All three courses use the same problem. The program is in its first year of offering with a relatively small group of students. The presentation will display our findings from program assessment including student scores on individual performance tests and student perception. Details of the project can be found at: https://www.u-aizu.ac.jp/enpit/", "authors": [{"name": "Tastuki Kawaguchi", "affiliation": "University of Aizu, Aizu-Wakamatsu, Japan"}, {"name": "Rentaro Yoshioka", "affiliation": "University of Aizu, Aizu-Wakamatsu, Japan"}], "tags": ["cross-cultural communication", "software development", "problem solving skills", "undergraduate curriculum", "creativity development"]}, {"title": "Teamwork Training for Programming Contests: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162276", "abstract": "The ACM International Collegiate Programming Contest (ICPC) is the most popular programming competition for universities worldwide. This contest examines the comprehensive ability of teams to program to solve problems. Teamwork is important besides team members' personal skills and capabilities. There have been literature on computer algorithms, personal training for programming contests, and team strategies during the contests. However, few articles involve team building and teamwork training for programming contests. This poster hopes to provide guidance and reference for coaches and contestants in teamwork training for programming contests, so that a team can benefit most from limited time of training to make as great progress as possible. This poster shares the authors' experience in team training for ICPC. Knowledge, skills, and attitudes (KSAs) of teamwork for programming contests are concluded and presented in details. The authors represent various teamwork methods graphically, so that it is visually helpful for study and discussion. These teamwork methods are pure teamwork, no-teamwork, some paired methods, and the method preferred by the authors. A team training form is then proposed to record the team behaviors in team training. By examining the training record, the coach and the team themselves can discover the team's strengths and weaknesses in various aspects, and evaluate the teamwork quality in the ways of communication, coordination, balance of member contributions and mutual support. Handouts will be available showing various teamwork methods in a graphical representation and some real training record forms.", "authors": [{"name": "Yongqiang Chen", "affiliation": "Tsinghua University, Beijing, China"}, {"name": "Xiaojun Wu", "affiliation": "Tsinghua University, Beijing, China"}], "tags": ["team training", "teamwork", "programming contests"]}, {"title": "Computer Science Living-Learning Community for Women at Rutgers: Initial Experiences and Outcomes (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162277", "abstract": "We have developed the Douglass-SAS-DIMACS Computer Science Living-Learning Community (LLC) for first-year women at Rutgers, now in its second year. Each year, around 20 first-year women undergraduates at Rutgers who intend to major in computer science are selected for the LLC. LLC participants live in a common dorm and are provided with an educational, mentoring, and community-building program that supports their progress as Rutgers students and as computer science majors. To our knowledge, this is the first undergraduate living-learning community for women in computer science at any university. A focus group conducted with women from the inaugural cohort revealed that faculty support contributed to feelings of belonging, both in the program and in the CS department, among the participants; participants valued the academic support they received as part of the program and felt communication structures within the program were effective; and participants expressed a desire for advanced undergraduate peer mentors. A quasi-experimental study of this cohort indicated that LLC participants showed a decrease in satisfaction with the CS department at Rutgers; a decrease in computing-related self-efficacy; and an increase in the belief that computing ability is inborn. Follow up interviews suggested that the efficacy of the LLC might be dependent on two factors: participants' commitment to a CS major coming into the program and participants' level of involvement with the LLC group. In response to these results, we have made some changes to the program and continue to carefully study the program in order to maximize its effectiveness.", "authors": [{"name": "Jane Stout", "affiliation": "Computing Research Association, Washington, DC, USA"}, {"name": "Thu Nguyen", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Rebecca N. Wright", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Geraldine Cochran", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Cynthia Sanchez Gomez", "affiliation": "Rutgers University, New Brunswick, NJ, USA"}], "tags": ["living-learning communities", "retention", "women in computing"]}, {"title": "Role of Prior Experience on Student Performance in the Introductory Undergraduate CS Course: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162279", "abstract": "Student success rates in introductory computer science courses at colleges and universities across worldwide are scandalously low - 30% to 50% of students fail a first-semester course. At our university, over the past ten semesters, 40.6% of our students failed our first-semester computer science course. A survey (204 computer science students) was administered at the beginning of Fall 2016 to measure two hypothesized constructs: one on prior engagement in activities (such as summer camp, jobs) related to computer science, and another on prior experience in computer science topics. The prior experience bank consisted of several yes/no questions asking about familiarity with specific topics found in a first-year computer science course (e.g. globals, arrays, conditionals). The survey data was matched with the final course grades. Results revealed that the prior experience variables could be construed as a construct, but this was not the case with the prior engagement variables. We discovered a statistically significant relation between prior experience and course grade, with more experience predicting higher grades. Except ethnicity, other variables such as gender and transfer status were not found to be significant. This study emphasizes the need to consider the prior knowledge of students in building introductory computer science curricula, such as creating multiple tracks with students self-selecting into higher or lower prior-experience cohorts.", "authors": [{"name": "Subhajit Chakrabarty", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "Fred Martin", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}], "tags": ["prior experience", "grades", "student success"]}, {"title": "Machine Learning Online Education Experience for Non-technical People: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162281", "abstract": "With the increasing demand for understanding the theory of machine learning, professional people without technical background need to work with machine learning to solve the problem and to facilitate fostering work. The poster describes machine learning online education experience for professional industry people without technical background and machine learning knowledge. Firstly, the poster lists machine learning application requirements of professional people from various of industry area. Secondly, the poster analyzes the demand and typical characteristics of professional people. Based on above analysis, the poster proposes course framework including assignment, small projects and reading materials to assist professional people to understand the theory of machine learning and utilize Python machine learning open source framework to solve the problem in the industry and facilitate industry development. From the perspective of the application, the poster presents classical machine learning algorithms to help professionals to resolve collaborative filtering, classification, clustering, and optimization problem. Also, the poster introduces the instruction process of deep learning by using TensorFlow and teaches the student to understand complicated conception along with philosophy thinking. To broaden students/ horizons, a general-purpose reasoning system, Non-Axiomatic Reasoning System which is different from conventional reasoning systems is introduced. To help the student understand mathematics related conception, the author describes the instruction techniques including the graphical representation of knowledge, teaching with dialogue, to guide students to think deeply and to attract attention. To evaluate the objective of the course, the author summarizes the development progress, feedback from students and future improvement teaching action.", "authors": [{"name": "Xiaochun Yang", "affiliation": "Shanghai AchieveFun Info Tech Co.,LTD, Shanghai, China"}, {"name": "Jiawei Liang", "affiliation": "GE Healthcare, Beijing, China"}], "tags": ["machine learning", "online experience", "education for non-technical people", "interactive instruction approach"]}, {"title": "Students' Perceptions of Pair Programming in CS1: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162284", "abstract": "Pair programming in CS1 courses has been shown to have many benefits (both to students and instructors), and it is widely employed. Other than assignment by instructors, how do students select their partners, and what are their perceptions of working with a partner? In our study, students in a CS1 course for non-majors were required to complete a brief, anonymized survey after each homework assignment; we analyzed their survey responses over the course of the semester and compared the results of students who worked with a partner and students who worked alone. Pairs and individuals judged assignments to be about the same difficulty, but pairs spent less time on assignments. Individuals generally worked alone out of preference, but a minority of them reported interest in working with partners but could not find one on their own. Through our analysis we model relationships between survey constructs, student success, and student satisfaction.", "authors": [{"name": "Matthew Berland", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Laura Hobbes LeGault", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}], "tags": ["diversity", "pair programming", "education", "equity"]}, {"title": "EcoMOD: Integrating Computational Thinking into Ecosystems Science Education via Modeling in Immersive Virtual Worlds (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162285", "abstract": "In recent years, the field of education has challenged researchers and practitioners to incorporate computing as an essential focus of K12 STEM education. Widely recognized as a \"basic skill\" necessary for economic opportunity and social mobility, integrating computing within K12 STEM supports learners of all ages in applying computational thinking within established and accessible contexts while co-developing practices essential to mathematical and scientific expertise. The EcoMOD project is an example of such an integration. In EcoMOD, immersive virtual environments are blended with interactive computational modeling tools designed specifically for younger children in an attempt to support ecological knowledge, complex causal reasoning and computational creation in third grade students. Our curricular design is grounded in the Science-as-Practice perspective and literature on young children's computing. In this proposal, we present outcomes from early pilot work with 35 third graders across the greater Boston area. This work has implications for designers of educational technologies by illuminating aspects of children's understanding that researchers and designers can leverage to support deeper and earlier understandings of ecological dynamics and computational practices.", "authors": [{"name": "Joe Reilly", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Chris Dede", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Karen Brennan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Tina Grotzer", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Shari Metcalf", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Amy Kamarainen", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Amanda Dickes", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["computational literacy", "modeling", "science education", "programming", "computational thinking"]}, {"title": "Performance Impact of Computer Science Course Load and Transfer Status: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162287", "abstract": "A recent 2017 study from HigherEd.com, shows that roughly 35% of students transfer colleges during their academic career. While much research has focused on the impact of undergraduate student success factors such as flipped classrooms, hybrid learning, and technology usage, we found no studies comparing transfer students versus non-transfer (native). In our research, we measure impact based on CS course load per semester related to pass/fail rates and contrast student status of transfer versus non-transfer (native). We show that transfer students tend to enroll in more CS courses per semester, beyond the department's recommended two. We also show that their performance is consistently different than that of native students, namely higher CS course fail rates and lower CS GPA scores. The detrimental effects and realization in this study is reason for further investigation. More features will be gathered to be used in our continued analysis and we see the need to examine the difficulty of CS courses taken to indicate why one cohort performs poorly and one does not. We conjecture that most transfer students tend to complete their core classes and are left with only CS courses to complete upon transfer. This results in the transfer students taking a heavier CS load and thus impacting their performance negatively, as compared to native students. Considering that many transfer students start their path way in 2-year institutions, it is imperative that better advising strategies are developed to enable the students to succeed upon their transition.", "authors": [{"name": "William Gregory Johnson", "affiliation": "Georgia State University, Atlanta, GA, USA"}, {"name": "Raj Sunderraman", "affiliation": "Georgia State University, Atlanta, GA, USA"}, {"name": "Anu G. Bourgeois", "affiliation": "Georgia State University, Atlanta, GA, USA"}], "tags": ["CS education", "transfer versus native", "education data mining"]}, {"title": "Online Technical Education in Advanced Technical Education Funded Programs: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162288", "abstract": "With an expanding need for a diverse STEM workforce, community colleges play an instrumental role in filling the need with qualified technicians. This research project will identify and synthesize the experiences of developing and implementing online course components in technical education programs, including information technology and cybersecurity, with an emphasis on projects supported by the National Science Foundation's Advanced Technological Education program (ATE). This study presents findings from a multiple case study of seventeen community colleges programs. The research questions guiding this study include 1) how online education is being used in technical courses and programs and 2) how challenges and benefits are perceived from implementing online education. Two participants from each project (PI and Faculty) were interviewed and program artifacts were collected. The interviews were thematically coded and data were analyzed to determine how hands-on work occurs in online technical courses including key challenges and benefits. The findings include descriptions of synchronous vs asynchronous models, use of didactic and lab based curriculum, fidelity of experience and teaching strategies. Benefits and challenges experienced by both faculty and students are discussed. Findings from this study contribute knowledge about how colleges are implementing online technical education including broader changes that occur concerning structure and philosophy. This project is important to the CSforALL initiative in that it evaluates online implementations of Cybersecurity and Information Technology programs and it provides an insight into best practices for implementing online, hybrid and flipped classroom models.", "authors": [{"name": "Cheryl Calhoun", "affiliation": "Santa Fe College, Gainesville, FL, USA"}], "tags": ["online education", "advanced technical education", "community college"]}, {"title": "Lessons Learned From an Interactive Educational Computer Game About Concurrent Programming: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162289", "abstract": "In parallel programming, there is a shift away from the single execution path of sequential programming to situations where non-deterministic operation force consideration of multiple paths of execution. Compared to the substantial computer science education literature on helping students to learn sequential programming, there are fewer studies of the cognitive difficulties that students follow when learning parallel programming. To address this, we created a computer game, Parallel involving concurrent situations. The game is an abstract representation of concurrency problems where players are asked to solve a progression of puzzles involving arrows moving concurrently on tracks. Play does not require coding. The goals of our research were to 1) explore how students acquire skills in the design of solutions with parallelism, and 2) explore how interactive games can substitute or compliment conventional parallel programming courses. Through two user studies of the game (n=7) where students played the game and used a talk-aloud protocol alongside a researcher, three major themes emerged, that of non-determinism where students were able to make the connection of non-deterministic behavior in parallel programming to the game, self-efficacy where students were stating they felt their knowledge of parallel programming increased after playing the game, and expertise where researchers learned that expertise was important to successful connection of the game to parallel programming concepts These findings show that students are beginning to see the connection between the game/s presentation of concurrency to programming concepts such as non-determinism.", "authors": [{"name": "Santiago Onta\u00f1\u00f3n", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Jessica Nebolsky", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Brian K. Smith", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Bruce Char", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Jichen Zhu", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Anushay Furqan", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Katelyn Bright Alderfer", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Evan Freed", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Justin Patterson", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Josep Valls-Vargas", "affiliation": "Drexel University, Philadelphia, PA, USA"}], "tags": ["concurrent programming", "user study", "computer science education", "game design", "parallel programming"]}, {"title": "Reflections are Good!: Analysis of Combination of Grades and Students' Reflections using Learning Analytics (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162295", "abstract": "Reflection is a way to get quick opinions from users, clients, etc. Analysis of reflection often involves subjective review and interpretations. On the other hand, data analytics provides guidelines to collect and measure as well as analyze and reflect on data. In our case, learning analytics of students' reflections reveals information about learners, their learning experience, and all their related contexts. Eventually, learning analytics aim is to understand and optimize learning and the corresponding environments (in which learning occurs). It plays a critical role in evaluating students performance and making decisions on how to improve students' success and overall retention. In our study, we focus on applying learning analytics to a heterogeneous data set collected in the introductory programming course. This data set integrated self-assessment reflections along with the existing active learning group activities. By integrating self-assessment reflections, large amounts of valuable data can be gathered to facilitate continuous assessment of students' learning. Using activity-based active learning and peer-instruction, the effectiveness of the content interventions targeting students to understand the fundamental concepts of computer programming is also evaluated. For analysis purposes, we applied a time-based learning analytics model called sequence analysis to learn about the pattern of our at-risk students and use the learned model to predict at-risk students based on their reflections as well as performance in the course.", "authors": [{"name": "Devansh Desai", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}, {"name": "Mohammad J. Mahzoon", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}, {"name": "Aileen Bendict", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}, {"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina, Charlotte, Charlotte, NC, USA"}], "tags": ["reflection", "learning analytics", "cs1"]}, {"title": "Language, Thinking, Code: Interactive Essays with Twine (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162296", "abstract": "Bard College introduces all incoming students to computing through a coding module in its long established writing-intensive program, Language and Thinking (L&T). The L&T program is a mandatory three-week experience for first-year students that has taken place every year at the college since 1981. We present a new version of the computing module that focuses on introducing all first-year students to computer programming through the lens of literature and creative writing. We designed and implemented an interactive text-based game that taught the basics of computer programming using Twine. After playing the game, students attended an undergraduate-led workshop where they transformed paper-based writing pieces into interactive essays in Twine that execute code. We discuss the outcomes of the module and also evaluate the design of a coding experience designed to meet the needs of a writing-intensive course.", "authors": [{"name": "Alexander Hamme", "affiliation": "Bard College, Annandale-on-Hudson, NY, USA"}, {"name": "Sven Anderson", "affiliation": "Bard College, Annandale-on-Hudson, NY, USA"}, {"name": "Darren Tirto", "affiliation": "Bard College, Annandale-on-Hudson, NY, USA"}, {"name": "Keith J. O'Hara", "affiliation": "Bard College, Annandale-on-Hudosn, NY, USA"}], "tags": ["arts", "computing for all", "interdisciplinary courses", "humanities computing"]}, {"title": "Alternatives to Simple Multiple-Choice Questions: Computer Scorable Questions that Reveal and Challenge Student Thinking (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162301", "abstract": "When creating assessments, computer science educators and researchers must balance items? cognitive complexity and authenticity against scoring efficiency. In this poster, the author reports results from an end-of-course assessment administered to over 500 high school students in an introductory block-based programming course. The poster focuses on three atypical multiple-choice items, in which students had to select all the correct responses. The items were designed to be more cognitively complex than simple multiple choice questions while remaining easy to score. Results show that this type of item was challenging for students but was predictive of their overall performance.", "authors": [{"name": "Yvonne S. Kao", "affiliation": "WestEd, Redwood City, CA, USA"}], "tags": ["high school", "assessment", "computer science education", "block-based programming"]}, {"title": "Analysis of the Difference in Designs between CS 1 and CS 2 Students: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162302", "abstract": "This study examines the results of establishing a rubric for design in freshmen computer science courses. The rubric consists of six categories (Understanding the Problem, Relationship Among Parts, Logic, Diagrams, Code Present, Testing) on a binary scale indicating if the category was included or not. The analysis examines four terms of data, one course per term, where students are required to submit a program design a week before they submit their assignment code. The terms differ in population (traditional and non-traditional), content (CS 1 and CS 2) and the level of design guidance (increased guidance/details in the syllabus). Each qualitative design was evaluated using the same rubric to facilitate comparisons between different courses, correlation to assignment grades and overall course grades, there were notable differences between what the populations included in their designs and how frequently the populations included the various categories of the rubric over time. In particular, non-traditional students tend to include more diagrams, logic and relationship among parts than traditional students, and in a CS 1 class without object oriented programming (OOP) versus a CS 2 class with OOP, CS 2 students tend to provide a more global picture of the program than specific details outlined in CS 1 designs, which lacked a big-picture perspective. These insights allow us to better understand how students from varying populations and different course content approach problem solving and design in computer science differently.", "authors": [{"name": "Jennifer Parham-Mocello", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Shannon Ernst", "affiliation": "Oregon State University, Corvallis, OR, USA"}], "tags": ["CS 1", "computational thinking", "CS 2", "designs"]}, {"title": "Coding the Coders: Creating a Qualitative Codebook for Students? Commenting Patterns (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162304", "abstract": "Learning to program is a complex task and is a documented persistent challenge. We are intermingling Writing-to-Learn (WTL) strategies in support of learning to program. Initial efforts examined existing writing in the form of guided source code comments. This poster displays the results for the following three research questions: RQ1) What do source code comments tell us about novice programmers' thinking processes while coding? RQ2) What do source code comments tell us about how students visually organize their source code? RQ3) What differences exists for students receiving traditional instruction versus WTL instruction? To answer these questions, we analyzed students' programming assignments from an introductory programming course with and without WTL instruction. The analysis generated a qualitative codebook that can be used to classify source code comments with respect to thinking processes and organizational patterns. The resultant qualitative codebook is displayed and audience members can use the codebook to classify comments. We are soliciting feedback regarding the reliability, validity, and completeness of the codebook, and future project plans. This material is based upon work supported by the National Science Foundation under Grant No. DUE-1612132. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.", "authors": [{"name": "Phyllis J. Beck", "affiliation": "Mississippi State Univ., Mississippi State, MS, USA"}, {"name": "Donna Reese", "affiliation": "Mississippi State Univ., Mississippi State, MS, USA"}, {"name": "Mahnas Jean Mohammadi-Aragh", "affiliation": "Mississippi State Univ., Mississippi State , MS, USA"}, {"name": "Monika Jankun-Kelly", "affiliation": "Mississippi State Univ., Mississippi State, MS, USA"}, {"name": "Amy Barton", "affiliation": "Mississippi State Univ., Mississippi State, MS, USA"}, {"name": "Bryan A. Jones", "affiliation": "Mississippi State Univ., Mississippi State, MS, USA"}], "tags": ["CS1", "pedagogy", "writing-to-learn", "qualitative", "novice programmers"]}, {"title": "Computer Science at the Interdisciplinary/Interprofessional Education Crossroad: Informatics at Texas Woman's University (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162311", "abstract": "It is projected that over 51% of all STEM jobs will be in CS-related fields by 2018 (Georgetown University Center on Education and the Workforce Report). CS4All is the initiative to \"empower a generation of American students with the computer science skills they need to thrive in a digital economy\" (Computer Science for All, 2016). While embracing this initiative enthusiastically, the undergraduate computer science education community faces many challenges including the curriculum and program development to meet the non-CS major's background and retain their interests in computer science skills in their own degree program. One starting implementation point in the CS4All initiative is to broaden the awareness of computer science in other disciplines. Efforts such as CS+X focus on the joint majors/degree plans between CS and other humanities disciplines (Joint Majors: CS+X). At Texas Woman's University, the Mathematics and Computer Science department developed several new Informatics degree programs that were crafted to be interprofessional and interdisciplinary with a core of traditional computer science courses. In this poster, the authors describe the holistic design and development of those programs, the obstacles and challenges during the degree program approval process, the competency based education practice, and corresponding challenges observed on the traditional undergraduate CS program in the department.", "authors": [{"name": "Mari Tietze", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Don Edwards", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Jian Zhang", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Marie-Anne Demuynck", "affiliation": "Texas Woman's University, Denton, USA"}], "tags": ["informatics", "degree program development", "interprofessional education"]}, {"title": "Pedagogical Agent as a Teaching Assistant for Programming Assignments: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162318", "abstract": "Pedagogical agents have received a large amount of interest in the recent years. Equipped with the ability to express emotions, these agents can influence the user attitudes, perceptions and behaviour. In our study, we are leveraging these emotionally-intelligent pedagogical agents to deliver effective and efficient feedback to students about their programming assignments and also act as a teaching assistant for any general programming related queries. We have integrated the pedagogical agent as part of Web-CAT - an automated online grading tool for students' programs. One of our main objectives is to communicate clearly the feedback about student programs while motivating them to perform better. Displaying the feedback and motivational messages to students all the time can quickly become noise and students tend to ignore them. Our study is to strategically have the pedagogical agent communicate with the student to provide them growth mindset feedback and also provide motivation to improve upon their work. The feedback would be based upon few indicators which would be triggered based on the student's program and the agent would guide the students to the correct solution by providing appropriate suggestions. The students can also voluntarily ask the agent for feedback and areas of improvement in their work. In addition, the agent can also help the students with any programming related queries or ways to fix a specific error encountered in the student's program. We will conduct a user study to gather feedback from students about the influence of the agent in helping them achieve their goal", "authors": [{"name": "Nischel Kandru", "affiliation": "VirginiaTech, Blacksburg, VA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "VirginiaTech, Blakcsburg, VA, USA"}, {"name": "Mukund B.M. Manniam Rajagopal", "affiliation": "VirginiaTech, Blacksburg, VA, USA"}], "tags": ["teaching assistant", "programming assignment", "feedback", "intelligent", "web-cat", "motivation", "emotions", "automatic grading", "pedagogical agent"]}, {"title": "A Multi-Institution Exploration of Peer Instruction in Practice: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162319", "abstract": "Peer Instruction is an active learning pedagogy that has been shown to improve student outcomes in computing, including lower failure rates, higher exam scores, and better retention in the CS major. A key classroom mechanism for Peer Instruction is the \"clicker question\": a formative multiple-choice question on which students vote, then discuss, then vote again. While research indicates that clicker questions lead to learning gains for students, relatively little is known about the questions themselves and how faculty employ them. Additionally, much of the work has examined clicker data collected by CS Education researchers operating in a quasi-experimental setting. In this project, we examine clicker data collected incidentally by multiple instructors using clickers as a pedagogical technique in their classroom. This work represents a first effort to systematically evaluate how instructors use clicker questions, including how many clicker questions are used in a course, how difficult the questions used are, and whether instructors add or modify questions over time.", "authors": [{"name": "David P. Bunde", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Soohyun Nam Liao", "affiliation": "University of California at San Diego, San Diego, CA, USA"}, {"name": "Jaime Spacco", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Cynthia Taylor", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto at Mississauga, Mississauga, ON, Canada"}, {"name": "Leo Porter", "affiliation": "University of California at San Diego, San Diego, CA, USA"}], "tags": ["peer instruction", "active learning", "cs education", "clicker questions"]}, {"title": "The Craft of Code: Exposing Elementary Students to Computing Through Tangible Crafts (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162321", "abstract": "Quick. Think of an outreach activity in computer science and a target audience. If you're like most people, you think of the target audience as middle-school students or high-school students and you think of activities like robotics, app development, or games. As a computer science educator, you might also note that these outreach activities should not just be designed to bring more people to CS, they should be designed to bring more people underrepresented in computing to CS-female students, domestic students of color, and lower-socio-economic-status students. But at the College level, what topics have shown the most efficacy in diversifying the discipline? It's not necessarily robotics, app development, or games. For example, the Media Computing project, led by Mark Guzdial, has shown the power of computing for the arts as a motivating factor for college-age female students. Can such an approach work for younger students? In this project, we developed and presented a week-long \"craft of code\" camp for elementary school students in which they used block-based languages to explore three kinds of creative computing, two of which had tangible output: programmable embroidery using TurtleStitch, programmable 3D models using BeetleBlocks, and programmable storytelling using Scratch. In this poster, we describe the curriculum for the camp, explore design issues, present results, and suggest approaches for others interested in developing similar camps. Our curriculum and materials are available at https://codecamp.sites.grinnell.edu/craftofcode/.", "authors": [{"name": "Beatriz Herce-Hagiwara", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Halle Remash", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Jonah Zimmerman", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Sarah Dahlby Albright", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Anh Thu Pham", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Caelin Bryant", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Jonathan Gilmour", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Marli Remash", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["code camp", "outreach", "block languages", "elementary school", "turtlestitch", "3d models", "beetleblocks", "embroidery"]}, {"title": "Understanding How Computer Science Undergraduate Students are Developing their Professional Identities: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162322", "abstract": "Understanding the development of professional identity in Computer Science (CS) undergraduate students can help better evaluate CS degree program's effectiveness in preparing students for their career goals. This poster presents findings from a study where we surveyed 105 CS undergraduate students about their self-perceptions of technical competencies in their chosen CS professions, the mechanisms to develop their competencies, as well as their motivations behind attaining these skill sets. Preliminary analysis of this data indicates that most CS students (93.3%), identified themselves into 7 different computing professions including Software Engineering (81.0%), Web Development (37.1%), User Experience (19.0%), and Computer Security (12.4%). They indicated using multiple mechanisms to develop their technical competencies including coursework, internship/professional experience, and research. Motivations behind their learning included self-interest as well as industry demands. We analyzed the relationships between students' skill proficiencies, motivations, and mechanisms for learning and found differences between novice, intermediate, and advanced learners. We found that students who self-assessed their proficiencies as novices in their chosen professional identity had a single mechanism for learning, most commonly coursework preparation. On the other hand, students who rated themselves as intermediate or advanced learners had multiple mechanisms and motivational factors behind attaining their skill set. These findings are important for better understanding students' learning needs and career aspirations. CS departments can use this information for better aligning their degree programs to student goals and creating pathways that ensure the development of CS students professional identity.", "authors": [{"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Amanpreet Kapoor", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["computing profession", "professional identity", "identity development", "computer science education"]}, {"title": "On the Role of Paper in Agile and Active Requirements Engineering Education: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162234", "abstract": "To be successful in their program and in their subsequent professional commitments, the students of Requirements Engineering, in general, and Agile Requirements Engineering, in particular, need to acquire a certain set of cognitive, behavioral, social, and technical skills. These skills can be instilled through practice. The students also need to have a \"toolbox\" with a diverse collection of tools which complement each other. This poster aims to show that paper remains one of those tools which can help towards developing aforementioned skills within the framework of an active learning classroom environment. In that regard, the authors' approach is described, preliminary results of the authors' experience with the graduate students over the period of two semesters are presented, and recommendations for educators who may be interested in putting the approach into practice are given.", "authors": [{"name": "Samia Hilal", "affiliation": "Concordia University, Montreal, PQ, Canada"}, {"name": "Pankaj Kamthan", "affiliation": "Concordia University, Montreal, PQ, Canada"}], "tags": ["skill", "persona", "reciprocal peer review", "handwriting", "ideation", "artifact"]}, {"title": "Building Out Data Science at Small Colleges: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162240", "abstract": "Abstract: Data science is on the rise, being a high-demand skill for a number of employers, both in the tech field and in various scientific disciplines. Since it is a new field, only a handful of schools offer a data science program, most of those being large research institutions. This presents a unique opportunity for smaller schools to combine an exciting and highly relevant topic with the personalized education, small class sizes, and individual attention they are known for. On the flip side, building out data science at small schools also presents numerous challenges, including finding sufficient faculty time and expertise, attracting a sufficient number of students, forging interdepartmental connections, and convincing the administration to approve the new courses and program. In this poster, we present lessons learned from data science efforts at three small institutions, including one which recently successfully developed a data science certificate (containing four new data science courses).", "authors": [{"name": "Peter Drake", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Travis Mandel", "affiliation": "University of Hawaii at Hilo, Hilo, HI, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}], "tags": ["program development", "small colleges", "computer science education", "data science", "curriculum design", "interdisciplinary"]}, {"title": "Developing a Unique Android App-driven Nifty Middle-School Educational Module on Mobile Security for Driving Basic Information Security Awareness and Generating Interests in Cybersecurity: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162243", "abstract": "With the growing demand for cybersecurity workforce, as we look to prepare our youth in cybersecurity, a lack of basic awareness about mobile device security and limited practical knowledge in securing mobile devices may expose our young generation to data hacks and cyber-attacks. The current IEEE/ACM CS2013 curricular recommendations and the latest CSEC2017 cybersecurity curriculum guidelines clearly point to a need for inclusion of mobile security related topics within the present CS knowledge areas. However, even though there are limited mobile security-based curriculum development initiatives at the K-12 level, none of them focus on the theme of mobile app related permissions, vulnerabilities and exploits. Therefore, in order to address this gap in mobile security based K-12 experiential learning, we have designed and developed a unique Android app-driven information security-based learning module for educating middle-school (fifth to ninth grade) learners about relevant cybersecurity topics, like good password practices, ethics, Android app permissions, vulnerabilities, exploit-based hacking, using an Android device. This poster will describe our creative mobile security theme-driven middle-school educational module, including our original unique Android app, which has been successfully used to conduct several hands-on workshop sessions for middle-school students as part of our Google IgniteCS outreach program and the NSA GenCyber camp program. Our poster will also present the survey data collected from middle-school participants in an effort to evaluate mobile security-based experiential learning model as a potential cybersecurity educational interface for engaging K-12 students.", "authors": [{"name": "Ankur Chattopadhyay", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}, {"name": "Vincent Cefalu", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}, {"name": "Matthew Neis", "affiliation": "University of Wisconsin - Green Bay, Green Bay, WI, USA"}], "tags": ["android permissions", "mobile security", "middle-school", "android app", "password", "k-12", "ethics", "nifty", "nsa gencyber", "educational module", "exploit hacking", "information security", "google ignitecs", "cybersecurity"]}, {"title": "A Year of Living Actively: Hybrid PBL in a Community College CS Curriculum (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162245", "abstract": "In 2015, it became apparent that the traditional lecture/lab courses were not working for the Computer Science/Software Engineering students at our community college. The students wanted more out of the class, and the lecture model was, frankly, boring for all of us. This began a four-year long project to convert the three major programming courses from standard lecture to a variation on project based learning. In each course, the project would be slowly introduced and appropriately scaffolded, with each new skill tied to the text and lectures. At the end of the term, students presented their work, as a written and oral report, to faculty and staff they did not know. While this project started out as a grand experiment, students were overwhelmingly positive about not only the project, but how much they learned that wasn/t in the text or lectures, and just as important, how much they learned about themselves. The growth in student confidence was clear. The poster will display information about two current projects, typical student artifacts, and an assortment of student comments from their final presentations. We will also discuss how the project idea was scaffolded to balance formal and informal student learning in the classroom.", "authors": [{"name": "Rebecca Grasser", "affiliation": "Lakeland Community College, Kirtland, OH, USA"}], "tags": ["active learning", "community college", "cs1", "soft skills", "project based learning (pbl)"]}, {"title": "A Holistic and Case-Analysis Approach for Cybersecurity Education: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162249", "abstract": "There is a growing acceptance that a holistic cybersecurity approach incorporating technical, human, and business factors is needed to address the myriad cyber threats nowadays. This paper introduces a new holistic and case-analysis (HCA) teaching approach for cybersecurity education by dissecting recent high-profile cybersecurity breaches. The traditional way of teaching cybersecurity usually introduces a list of technical security topics in an isolated context with little or no effort to link these topics together. It is also not easy to find a good place to teach human and business factors in cybersecurity. The proposed HCA model starts with selected real-world cyber breaches including the Target Corporation breach, the Anthem Inc. breach, and selected Distributed Denial of Service (DDoS) attacks. Students look into the details of these attacks and learn how these attacks took place from the beginning to the end. During the process of case analysis, a list of security topics reflecting different aspects of these breaches is introduced. Student learning will be reinforced through in-class discussion, selected readings materials, and hands-on labs. Compared with traditional methods, the proposed HCA model has a few advantages. First, it can draw students' attention and increase their interest with real-world cases. Second, it can improve student analytical skills by helping them obtain a whole picture of cybersecurity systems in an enterprise environment. Third, it can help the student gain a holistic view of cybersecurity by incorporating complicated socio-technical factors.", "authors": [{"name": "Yu Cai", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["security education", "holistic", "case study", "cybersecurity"]}, {"title": "What Vulnerability Assessment and Management Cybersecurity Professionals Think Their Future Colleagues Need to Know: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162250", "abstract": "There is a growing need for cybersecurity professionals with the knowledge, skills, and abilities (KSAs) necessary for risk and vulnerability analysis. Cybersecurity curricula should emphasize KSAs most important in cyber work. To determine which KSAs should be prioritized in curricula, we interviewed 38 cyber professionals with a specialty in vulnerability assessment and management. Interviews took place at the premier hacking conferences Black Hat and DEF CON in 2016 and 2017. Participants rated the importance of 31 KSAs taken from the National Initiative for Cybersecurity Education's Cybersecurity Workforce Framework. Of the 31 KSAs, 12 were rated as being significantly important to vulnerability assessment and management work. Half of these KSAs dealt with system and application vulnerabilities (e.g., Skills in conducting vulnerability scans and recognizing vulnerabilities). The other 6 most important KSAs concerned attacks (e.g., Knowledge of different classes of attacks), penetration testing (e.g., Skill in the use of penetration testing tools and techniques), and network protocols (e.g., Knowledge of network protocols). Overall, results suggest that vulnerability assessment students should graduate with: 1) knowledge of and skills in identifying vulnerabilities and robustness of systems and applications; 2) conceptual familiarity with classes of attacks and attack stages; 3) knowledge of and skills in penetration testing principles and tools, and 4) knowledge of network traffic and network protocols. Handouts will be provided.", "authors": [{"name": "Keith S. Jones", "affiliation": "Texas Tech University, Lubbock, TX, USA"}, {"name": "Miriam E. Armstrong", "affiliation": "Texas Tech University, Lubbock, TX, USA"}, {"name": "Akbar Siami Namin", "affiliation": "Texas Tech University, Lubbock, TX, USA"}, {"name": "David C. Newton", "affiliation": "Texas Tech University, Lubbock, TX, USA"}], "tags": ["and abilities", "penetration testing", "skills", "knowledge", "cybersecurity education", "curriculum development", "vulnerability assessment and management"]}, {"title": "Development and Analysis of a Spiral Theory-based Cybersecurity Curriculum: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162251", "abstract": "The current emphasis on cybersecurity worldwide, demonstrates the importance of this topic. This poster describes a unique NSF funded project that aims to create cybersecurity education opportunities at Virginia Tech (VT). It is a collaborative effort among faculty and graduate students in the Engineering Education, Computer Science (CS), Electrical and Computer Engineering (includes two majors, Electrical Engineering (EE) and Computer Engineering (CPE)) Departments, and the Hume Center in the College of Engineering at VT. The goal is to integrate cybersecurity modules into eight required CS and CPE courses, from freshman to junior levels, utilizing Jeremy Bruner's spiral-theory-based1,2 curriculum model. A spiraling theme of \"handling threats to software for securing information\" is chosen that will be returned to repeatedly as learners advance in their knowledge and intellectual capacity. Cybersecurity goals of the Confidentiality, Integrity, Availability, Authenticity, Anonymity, Assurance (CIA/AAA) triad, as appropriate for various academic levels, are adopted to develop the cybersecurity modules. Each module engages students in an authentic activity that reinforces the cybersecurity concepts. The project includes an engineering education research component, which is focused on evaluating the effectiveness of the curriculum in enhancing students' knowledge, skills, and motivation in cybersecurity concepts. The first year of the project has been completed by introducing cybersecurity modules into four courses (CS: Introduction to Software Design, and Software Design and Data Structures, and CPE: Engineering Problem Solving with C++, and Data Structures and Algorithms) impacting ~1600 students. The details of curriculum development, implementation and, preliminary findings of the research will be presented.", "authors": [{"name": "Paul E. Plassmann", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "William M. Naciri", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Godmar Back", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "David McPherson", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "N. Dwight Barnette", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Calvin J. Ribbens", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Margaret Ellis", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Debarati Basu", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Kira R. Gantt", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Vinod K. Lohani", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["spiral theory", "education research", "cybersecurity education", "curriculum design"]}, {"title": "Does Participation in a Programming Boot Camp Impact Retention of Women in Computing?: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162252", "abstract": "While many efforts exist to recruit underrepresented minorities in computing, retention of those that choose the field, still remains a challenge. To retain more women in computing at an open access, baccalaureate degree granting institution, the authors have been hosting a programming boot camp (PBC) for women IT and MIS majors at the institution since May 2014. PBC is a holistic program that focuses on academic preparation, professional development and mentoring. Freshman and sophomore women are invited to participate in this annual PBC each year. While some candidates accept the invitation to participate in the boot camp, some elect not to. The goal of this study is to investigate if participants progress and persist at a different rate than the invited candidates (non-participants) in their chosen field of study. This study compares the academic progression and retention data of candidates vs. participants over a period of three years (2014-2016). The authors look at measures such as current academic status, graduation rates, current (or graduation) major, and completion rates of programming sequence. Preliminary findings indicate that recruitment is a challenge without any incentives for participation. While participation in PBC alone cannot impact retention, this study investigates if students' participation or non-participation can be an indicator of their persistence in their chosen program. This information can be further used to create targeted initiatives meeting students' needs.", "authors": [{"name": "Sonal Dekhane", "affiliation": "Georgia Gwinnett College, Lawrenceville, USA"}, {"name": "Nannette Napier", "affiliation": "Georgia Gwinnett College, Lawrenceville, USA"}], "tags": ["retention", "women in computing", "programming boot camp", "persistence"]}, {"title": "Do I Need an IRB?: Computer Science Education Research and Institutional Review Board (IRB) (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162253", "abstract": "The importance of rigorous standards in computer science education research to include a description of hypotheses, research questions, methodologies, and results has been recognized in the computer science education community. The driving force for computer science education research is to understand the learning needs of our students who are human subjects. Therefore, some computer science education researchers may need to answer a critical question before they start their planned research: Do I need Institutional Review Board (IRB) approval to conduct this research using my students as research subjects? The key goal of the IRB is to protect human subjects from physical or psychological harm (\"Code of Federal Regulations, Title 45, Public Welfare, Part 46, Protection of Human Subjects\"). Although commonly used in the fields of health and social sciences, the role and purpose of IRB, the different categories of IRB reviews, the timeline from planning and submission of an IRB application, and the general rules for citing IRB in publications and grant proposals are not widely understood in the computer science education research community. In this poster, the authors describe the history, the purpose, review categories, and guidelines for reporting on the IRB. The authors will tailor the discussions on the different IRB review categories to computer science educators interested in conducting computer science education research with their students.", "authors": [{"name": "Kimberly Huett", "affiliation": "University of West Georgia, Carrollton, GA, USA"}, {"name": "Jonathan Gratch", "affiliation": "University of West Georgia, Carrollton, GA, USA"}, {"name": "Jian Zhang", "affiliation": "Texas Woman's University, Denton, TX, USA"}], "tags": ["institutional review board", "human subjects", "computer science education research"]}, {"title": "Building a Community of First Year Students Improves Student Retention and Performance in Computing Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162255", "abstract": "First-year, college-level computing courses are gateway courses with low passing rates, resulting in student attrition and transfers out of computer science degrees. Learning Communities (LC) are a group of students who enroll in two or more courses, generally in different disciplines that are linked together by a common theme, in an academic semester. LCs capture and combine two important parts of college life: education and student cooperation. At our institution we have implemented a LC linking three first-year courses (Introduction to Computer Systems, CS0; Problem Solving with Computer Programming, CS1; and English Composition I) for over five years. In this study, we empirically show the pedagogical impact of LCs on student academic retention and performance outcomes in first-year computing courses (CS0 and CS1). We compared performance, attendance and study habits of students taking the computer courses as part of a LC (LC group) with students taking the same courses outside the LC (nLC group). Our results show that when first-year students take computing courses as part of the LC, retention rates increase and students perform significantly better. For example, student performance in three basic programming skills (sequence, selection and repetition) increases significantly from 66% (nLC; n = 146) to 82% (LC; n = 112) when students take the CS1 course as part of a LC. We also found that LCs promote class attendance and that the nature of students' relationships with classmates may play a critical role in the improvement of student performance observed in LC students.", "authors": [{"name": "Candido Cabo", "affiliation": "New York City College of Technology, Brooklyn, NY, USA"}, {"name": "Ashwin Satyanarayana", "affiliation": "New York City College of Technology, Brooklyn, NY, USA"}], "tags": ["student performance", "learning community", "improving retention", "student peer relationships", "study habits"]}, {"title": "On Integrating Students in the Development and Review of IT Undergraduate Curriculum: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162258", "abstract": "In an ever changing and globalizing work environment, Educational institutions in the field of Information Technology (IT) face a constant challenge in developing relevant and competitive courses and curricula that stay up to date with changes in technology. Developing curriculum should go beyond the supply-centered educational approach where institutions and faculty alone are responsible for the design of curricula and instead, should be from end-to-end a collaborative effort from all stakeholders. However, the current collaborative efforts in developing curricula only involve industry and academia. Even though students are the raison d'\u00eatre of the curriculum, they are still perceived as merely consumers of knowledge. Students are kept out of the curriculum development process and their expectations, perceptions, and opinions often are not taken into consideration. In this poster, the author proposes a distributed and collaborative curricula design framework that promotes a closer integration of all stakeholders namely academia, industry, and students. Similar to the PIECE (Partnering Industry and Education for Curricular Enhancement) model, the proposed framework prescribes a multi-stage curriculum design process from initial analysis to final assessment. In addition, the author plans to conduct an anonymous survey of CS/IT major students at WNEU and explores the benefits of integrating students in the curriculum development process. Preliminary investigation suggests that the integration of students in the curriculum development process would improve students' engagement in classes, and create an atmosphere of trust and a sense of ownership for students. Ultimately, this would enable institutions to create consumer-friendly curriculum and programs.", "authors": [{"name": "Paul-Marie Moulema", "affiliation": "Western New England University, Springfield, MA, USA"}], "tags": ["piece", "review", "industry", "curricula", "students", "curriculum", "development", "enhancement", "academia"]}, {"title": "An Interactive Tutorial for Learning to Manipulate References: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162259", "abstract": "Understanding basic manipulation of object references is a conceptual prerequisite to understanding many data structures, beginning with linked lists and trees. Unfortunately, there is often a gap between introductory programming courses that introduce reference variables and creation of objects, and second-semester programming courses that immediately skip to introducing linked lists. As a consequence, students begin using references extensively during Data Structures and Algorithms courses without enough knowledge about how references work. To fill this gap, we created a tutorial about basic use of references and the manipulation of objects using references. The tutorial, implemented as part of the OpenDSA eTextbook system, focuses on learning through visualizations and interactive exercises. Students work a series of small code-writing exercises, inspired by the JhavePOP system. These exercises use simple program visualization to let students see the result of running their program. Manipulative exercises test student proficiency at reading and understanding small sections of code that use references to link objects. All exercises are automatically assessed, providing immediate feedback. Our evaluation of the tutorial's effectiveness will focus on identifying and correcting student misconceptions. Optional sections of the tutorial introduce the program stack and the dynamic memory heap.", "authors": [{"name": "Mostafa Mohammed", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Sushma Mandava", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Margaret Ellis", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Jieun Chon", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["references", "pointers", "dynamic memory allocation", "program visualization", "objects"]}, {"title": "Correcting Novice Programmers' Misconceptions Through Personalized Quizzes: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162266", "abstract": "Introductory programming students unable to grasp and apply abstract concepts are known to become disengaged and drop out of the course. The large class sizes, increasing diversity and inadequate teaching support have exacerbated the problems leading to failure rates as high as 50% in exams. To address this issue, we employed a novel learning analytics technique named Personalized Prescriptive Quiz (PPQ). Our approach combined the rich metadata captured for each question including topic, cognitive level, difficulty index, and the underlying concepts(s) with individual student performance in the past to arrive at personalized learning pathways designed to correct the root-causes for their misunderstandings. Over 90% of surveyed students agreed that the PPQ has been effective in clarifying their misconceptions before the final exam. Following our experiments, the exam pass rate has gone up by over 40%.", "authors": [{"name": "Reza Soltanpoor", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Charles Thevathayan", "affiliation": "RMIT University, Melbourne, Australia"}], "tags": ["active learning", "learning analytics", "personalized learning", "prescriptive analytics", "formative assessment"]}, {"title": "Teaching Variability in a Core Systems Course: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162275", "abstract": "Computer systems form the backbone of computing from very small, mobile devices to the huge datacenters that power the digital economy. These systems often exhibit large degrees of variability in their performance that is little understood, but such variability threatens to severely diminish the effectiveness of critical systems upon which society relies. Funded by a large NSF grant, the VarSys project at Virginia Tech researches the sources of variability in computer systems and develops methods to overcome it. We believe it is crucial to raise awareness of the phenomena surrounding variability in computer systems at the undergraduate level. Towards this end, we are connecting the research techniques developed as part of this NSF award to ongoing classroom projects in a core systems course. Our key insight is to expose students to the phenomenon as it occurs in the systems software modules (e.g. a memory allocator, a fork-join thread pool) they are themselves developing in the course. We have implemented a web-based system that allows students to submit their own systems-level code to a specialized cluster which then benchmarks it while systematically varying a number of ordinal and categorical variables. These variables reflect environmental factors that can influence the performance of complex systems. Students are then presented with a visual statistical analysis of the results and asked to interpret those results. We have successfully deployed this system in 2 semesters to over 250 students and collected student data about their experience with this system and are documenting our progress towards these important learning objectives.", "authors": [{"name": "Bo Li", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Godmar Back", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Ali Butt", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Pratik Anand", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Kirk Cameron", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Thomas Lux", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Lance Chao", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["operating systems", "computer systems", "variability", "computer systems education"]}, {"title": "Proposed Cybersecurity Merit Badge for the Boy Scouts of America: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162280", "abstract": "Cybersecurity is a significant challenge facing our society, and the industry is in desperate need of more talent. With a projected worker shortage of 1.8 million by 2022, it is imperative to recruit more young people to study and work in this critical field. One time-tested method of engaging young people to explore prospective careers is through Scouting's advancement program. The Girl Scouts of the USA has recognized this need, and recently announced that they will be introducing a series of cybersecurity badges for their programs. This poster outlines a proposal for a Cybersecurity merit badge for the Boy Scouts of America (BSA). A background on the merit badge program is presented, including research supporting the idea that badges can be an effective method at engaging young people in experiential learning. A set of draft recommended requirements is presented. The authors have drafted a proposal for consideration by the BSA, and this poster reports the status of that proposal and the authors' efforts at engaging the BSA.", "authors": [{"name": "Ray Trygstad", "affiliation": "Illinois Institute of Technology, Chicago, IL, USA"}, {"name": "Laurence D. Merkle", "affiliation": "Air Force Institute of Technology, Wright-Patterson AFB, OH, USA"}, {"name": "Michael H. Dunn", "affiliation": "Air Force Institute of Technology, Wright-Patterson AFB, OH, USA"}, {"name": "Robert J. Caruso", "affiliation": "West Monroe Partners, Columbus, OH, USA"}], "tags": ["merit badges", "extracurricular activity", "scouting", "Boy Scouts of America", "experiential education", "informal education", "cybersecurity"]}, {"title": "Affective Peer Tutoring: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162282", "abstract": "Increasing women's representation in computer science (CS) has become a national priority. One of the many reasons female students nationwide choose not to finish their study in CS is that they do not feel a deep sense of belonging in the major. To foster the sense of belonging among female CS students, the affective learning outcomes, which are adapted from Bloom's Taxonomy on human learning, are integrated into the context of peer tutoring as five successive stages. Through the five stages of affective peer tutoring, students gradually deepen their sense of belonging in CS by: (1) being aware of the tutoring services; (2) proactively seeking answers to their programming questions; (3) recognizing the value of self-efficacy; (4) discussing learning issues in a supportive environment; and (5) contributing to a peer-led learning program to help others. Our data indicate that affective peer tutoring has resulted in an increased level of peer-to-peer interaction outside of the classrooms, significantly better grade performance in introductory programming courses, and improved retention rate among female CS students. Therefore, this poster may be of interest to any CS educator who wishes to improve the interaction, performance, and retention among female CS students while sustaining a peer-led learning program at their institution.", "authors": [{"name": "N. Rich Nguyen", "affiliation": "UNC Charlotte, Charlotte, NC, USA"}], "tags": ["affective peer tutoring", "peer-led learning", "sense of belonging", "women in computing", "self-efficacy"]}, {"title": "Qualitative Analysis of Open-ended Comments in Introductory CS Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162290", "abstract": "End-of-course evaluations and other student surveys typically include the opportunity for students to provide free-form comments. These are rich sources of data but are often only subjectively taken into account to further improve course delivery or analyze the effectiveness of assignments. We designed several puzzle-based assignments for typical CS1/2 topics and surveyed students as part of our efforts to analyze the assignments' efficacy and improve them over time. The surveys included traditional measures such as demographic data, Likert-scaled questions about assignment perceptions, and open-ended comments. With thousands of survey responses, we wanted to see if the open-ended comments yield additional, statistically significant, insights on either the assignments or students' learning. We developed a coding scheme for the comments using grounded theory analysis to represent patterns among the data. After refining the coding scheme we statistically analyzed the comments and found some interesting relationships, not apparent from the Likert-scaled questions, among certain codes. We also conducted extensive semi-structured interviews with instructors and student teaching assistants, also using grounded theory analysis to develop a set of codes for these different perspectives. The coding processes themselves allowed for a deeper understanding of the concerns about and appreciation for the assignments from both groups of participants. This poster reports on how the statistical results and the coding schemes, including the overlap and dissonance between the two coding schemes, inform our continued efforts to improve both assignment development and future research on the teaching and learning of CS concepts.", "authors": [{"name": "Kimberly Fluet", "affiliation": "University of Rochester, Rochester, NY, USA"}, {"name": "Ivona Bezakova", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Zack Butler", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["puzzles", "computational thinking", "qualitative analysis", "CS 1/2"]}, {"title": "1 Grant + 2 Institutions + 3 Course Variations = Data Science 4 All: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162298", "abstract": "Data Science, often described at the intersection of computer science, statistical thinking and analysis, and subject matter expertise, has seen an exponential growth in the past few years. Courses (and entire programs) have been appearing at such a fast rate at most institutions of higher education, as well as some high schools, that comparisons between curricular and delivery models and rigorous discipline-based education research are often overlooked in order to gain competitive advantages. This study attempts to rectify that absence by evaluating, comparing, and discussing four different courses offered at two different institutions of higher education. Funded by NSF via a collaborative grant (DUE-1432438), faculty from Computer Science and Statistics departments collaborated on the development and evaluation of introductory courses in Data Science for all students, using a discipline-based education research approach. Data on students were gathered including demographics, curriculum, statistical knowledge, and attitudes towards Data Science. Post-course growth was measured, when available, and compared through formal statistical inference. End-of-course evaluations, with supplemental questions about student learning, were reviewed and will be summarized. Finally, reflections on successes, challenges, and lessons learned will be shared.", "authors": [{"name": "Darina Dicheva", "affiliation": "Winston Salem State University, Winston-Salem, NC, USA"}, {"name": "Michael A. Posner", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Christo Dichev", "affiliation": "Winston Salem State University, Winston-Salem, NC, USA"}, {"name": "Don Goelman", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Lillian (Boots) Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["data science", "discipline-based education research"]}, {"title": "Infusing Visual Programming and Interactive Learning to Teach an Introductory Programming Course with Positive Learning Outcomes: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162303", "abstract": "A core challenge in introductory programming courses during the freshmen year is getting students to understand how a static textual representation (source code) maps to a highly dynamic process (program execution). Most students nowadays are visual learners who learn programming concept better through web-based visual and interactive learning instead of learning from traditional black board lecturing styles. This presentation will report our experience with positive learning outcomes in teaching an introductory programming course in Python by using a dynamic visual programming development environment based on flow-charts (RAPTOR) and active learning with an interactive eBook (zyBook). In this study, eleven sections of COSC 111 were included over three semesters as control and experimental groups. Analysis showed a marginally significant difference (F (1,5) = 5.87; p = 0.060) between sections taught via the traditional method and sections taught with the proposed pedagogical innovation. We also found that there are statistically significant positive correlations in between uses of the interactive book (eBook) and performances of students in tests. To add to our understanding of what students were experiencing, we also administered a survey to students at the end of the course. Regarding learning styles and tools, survey result showed that the eBook was helpful in understanding programming concepts (71.5%), that the instant feedback that the online book provided was helpful (82.9%), that the class discussion and interaction were helpful (85.7%). Overall, it seems that the proposed pedagogical approaches have made a positive difference by increasing student motivation and engagement, and reducing failure rates.", "authors": [{"name": "Md Mahmudur Rahman", "affiliation": "Morgan State University, Baltimore, MD, USA"}], "tags": ["visual programming", "introductory programming", "computational thinking", "ebook", "interactive learning"]}, {"title": "Bridging the Research to Practice Gap with Project TACTICal Briefs: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162305", "abstract": "Now more than ever, students with disabilities are participating in computer science (CS) education. As CS increasingly becomes a part of the general curriculum in grades K-8, ensuring that these learning experiences are equitable and accessible for a wide range of learners may help broaden the diversity of individuals who choose to engage in computing experiences throughout their schooling and into their professional lives (Qualls & Sherrell, 2010). Therefore, it is essential to identify pedagogical approaches that lower barriers for students with disabilities and give teachers new tools to help those students succeed. Initial findings will be presented from a National Science Foundation STEM+C project derived from a series of qualitative case studies about challenges faced by K-8 students with disabilities in CS education. These findings have been converted to practitioner-oriented pedagogy briefs, written in the form of vignettes, and grounded in our own research findings as well as special education best practice. These pedagogy briefs are disseminated to practitioners and used for professional development and intervention work. Current topics include: Universal Design for Learning, project planning, co-teaching, working with paraeducators, and promoting student collaboration. Pedagogy briefs will be available and can be found on the Creative Technology Research Lab (CTRL) website: http://ctrl.illinois.education.edu", "authors": [{"name": "Maya Israel", "affiliation": "University of Illinois, Urbana-Champaign, Champaign, IL, USA"}, {"name": "Todd Lash", "affiliation": "University of Illinois, Urbana-Champaign, Champaign, IL, USA"}], "tags": ["disability", "middle-school", "elementary", "collaboration", "UDL", "research to practice", "equity", "diversity"]}, {"title": "Analysis of Container Based vs. Jailed Sandbox Autograding Systems: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162307", "abstract": "Traditionally, automated testing and grading of student programming assignments has been done in either a jailed sandbox environment or within a virtual machine (VM). For a VM, each submission is given its own instantiation of a guest operating system (OS) running atop the host OS, with no ability for a given submission to affect anything outside the VM. However, using a VM is expensive in terms of system resource usages, especially for RAM and memory, making it less than ideal for solutions without unlimited resources. Jailed sandboxes on the other hand allow student submissions to run directly on the server. Sufficient security measures must be implemented to ensure that students cannot access each other's submissions or the server at large, and must prevent runaway programs, over-utilization of system resources. Jailed sandboxes have a larger attack vector than VMs. Within the past several years, container systems have been gaining popularity and usage within the computer science industry, primarily through solutions such as Docker. These containers give similar security protections as a VM, but with better performance due to being able to utilize of resources installed within the host OS and other containers. However, containers do not have the full isolation of a VM, and thus implementing Docker for autograding ends up facing its own set of security concerns, as well as with the increased system resource usage. In this poster, we will analyze how well containers work, measuring system resources and throughput of submissions of containers against the traditional jailed environment.", "authors": [{"name": "Barbara Cutler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Evan Maicus", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Matthew Peveler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Buster Holzbauer", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}], "tags": ["autograding", "docker", "containers", "assignments evaluation", "jailed sandbox"]}, {"title": "Curriculum Design for a Multidisciplinary Embedded Artificial Intelligence Course: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162309", "abstract": "Artificial intelligence (AI) and machine learning are rapidly developing fields, garnering increased attention from the public, as well as academia and industry. Recent advances allow us to use our smart devices at home to control TVs, speakers, and lights. A smart speaker that is plugged into the wall can handle powerful processing that can service complex user requests. However, as we rely more and more on AI conveniences, we expect them to be at our disposal when we are moving around. In this poster, we present preliminary work on the development of a new upper-level undergraduate course open to all computer science, electrical engineering, and applied mathematics students at Wentworth Institute of Technology (WIT). The new course, titled Embedded AI (EAI), introduces topics from embedded systems, artificial intelligence, digital signal processing, linear algebra, and probability and statistics. The proposed course includes lectures introducing the theory behind each topic and laboratory assignments that provide the students with the hands-on experience. At the end of the semester, students develop an embedded AI project of their own. An interdisciplinary academic team of computer scientists and electrical and computer engineers has been working on a curriculum and researching different platforms, datasets and sensors that will ultimately enable students at WIT to develop an embedded device that can support AI tasks as well as give the students the practical skills that employers seek. Handouts will be prepared with sample curriculum and breakdown of topics.", "authors": [{"name": "Bryon Kucharski", "affiliation": "Wentworth Institute of Technology, Boston, MA, USA"}, {"name": "Aaron Carpenter", "affiliation": "Wentworth Institute of Technology, Boston, MA, USA"}, {"name": "Mehmet Ergezer", "affiliation": "Wentworth Institute of Technology, Boston, MA, USA"}], "tags": ["curricular design", "artificial intelligence", "machine learning", "embedded systems", "multidisciplinary course development"]}, {"title": "Early Detection on Students' Failing Open-Source based Course Projects using Machine Learning Approaches: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162312", "abstract": "Open-source course projects offer students a glimpse of real-world projects and opportunities to learn about architectural design and coding style. While students often have more difficulties with these projects than with traditional \"toy\" projects, instructors are also spending excessive time on grading miscellaneous projects. There is an improvising need for means to help students and instructors with their difficulties. This poster presents our work on predicting which course projects are likely to fail at an early stage with machine learning approaches. We collected metadata from 247 course projects in a graduate-level Object-Oriented Design and Development course over the past 5 years, built models to fit the course projects and use the classifier to help instructors to identify potential failing projects, thus to help students to salvage their works. By assuming that the project acceptances are related to the working patterns of project teams, we made innovations of adding temporal-based patterns into the training data, and achieved 86.36% classification accuracy with the addition of those features. We also proved several observations, such as most of the rejected projects are those begun relatively late during the project period, and the projects which modified more files/code does not result in better possibility of being accepted. By contrast, accepted projects tend to deliver a volume of code that is neither very small nor very large, compared to rejected ones. Our results also suggest that setting milestone checkpoints at roughly a week before the submission deadlines would enable more students to succeed in their OSS projects.", "authors": [{"name": "Edward F. Gehringer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Yang Song", "affiliation": "University of North Carolina Willmington, Willmington, NC, USA"}, {"name": "Yifan Guo", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["temporal pattern", "open source software", "multivariate regression", "machine learning", "early detection"]}, {"title": "A Middle-School Code Camp Experience Emphasizing Data Science for Social Good: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162313", "abstract": "The underrepresentation of women, students of color, and people from lower-SES (socio-economic-status) backgrounds within computer science remains a national issue. Recent studies demonstrate one reason: persistent stereotypes about \"who does computer science\" can cause minority groups to preclude interest in the field. Unfortunately, these stereotypes are not the only threat to diversifying the discipline. Engaging a diverse group of individuals in computer science is unlikely so long as computing curriculum is perceived as \"irrelevant\" and \"asocial/\". Confronting the stigma of triviality applied to computer science, much like approaching student perceptions about who can do computer science, is a necessary step for increasing the perceived applicability of the discipline.\nAs a step in combating the perception that programming curriculum is irrelevant, we developed and ran a week-long summer coding camp for local middle school students that camp applied principles of computing for social good with data science approaches to encourage campers to consider how computing could help them explore societal issues. Throughout the week, campers learned how to extract meaning from their work and gained experience collaborating in pairs to solve problems.\nIn this poster, we discuss the camp curriculum and its emphasis on the applications of computing. We consider the effects of the camp on the self-efficacy of campers and their perceptions of computer science. We then present some recommendations for those intending to conduct similar camps.", "authors": [{"name": "Beatriz Herce-Hagiwara", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Halle Remash", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Jonah Zimmerman", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Sarah Dahlby Albright", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Anh Thu Pham", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Caelin Bryant", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Jonathan Gilmour", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Marli Remash", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["code camp", "bbc micro:bits", "ds4sg", "csg-ed", "data science", "outreach (middle school)"]}, {"title": "AutoQuiz: A Personalized, Adaptive, Test Practice System (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162317", "abstract": "No abstract available.", "authors": [{"name": "Zachary Pardos", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Siqi Li", "affiliation": "University of California, Berkeley, Berkeley, USA"}, {"name": "Zhiping Xiao", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["zoom of proximal development", "session-based recommendations", "sequence recommendation", "recommender systems", "adaptive learning"]}, {"title": "CS for All Academic Identities: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162320", "abstract": "\"CS for All\" has set computer science on an unusual journey. Literacies are skills asked of us all: thus, \"CS for All\" identifies computing skills as a full-fledged human literacy. Yet, Computer Science departments are not uniformly ready to build a computing literacy for all students. This project has investigated on how different institutions are coping with this challenge.\nWe share the results of a 50-institution curricular survey, tracking CS course offerings for a variety of cohorts outside the CS major. We add additional detail to this big-picture snapshot with data from a ten-year experiment offering a biology-and-computing introductory course. The downstream outcomes are heartening in both computing skills (no difference at all in subsequent performance relative to a peer control-group) and in spurring overlapping interest. We also share several new paths, termed \"bridges\" and \"injections,\" to help computing contribute to the academic identities of students in other disciplines.\nJust as cogent writing, critical reading, and compelling speaking are today/s hallmarks of literacy, the future may ask us to make computing part of our common goals and expectations. Through local and national data, this project is exploring new curricular paths with the goal that CS in many forms -- as a discipline, as an academic department, and as an identity of its own -- can fully support the challenge of \"CS for All.\"", "authors": [{"name": "Miles President", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Zachary Dodds", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Hanna Hoffman", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Forest Kobayashi", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Maddie Zug", "affiliation": "Pomona College, Claremont, CA, USA"}], "tags": ["cs for nonmajors", "cs for all", "computing as a literacy"]}, {"title": "Designing Adaptive Learning Objects for Enhanced Student Engagement in Data Structures and Algorithms: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162323", "abstract": "How to actively engage students using a more personalized approach in both online and face-to-face classes is an important topic in Computer Science discipline. Studies showed that adaptive learning approach can be used to redesign a course to achieve a better and more effective learning experience for the students. As a result, the Data Structures and Algorithms course at CSUEB has been redesigned using Smart Sparrow platform, with engaging adaptive learning objects embedded in the Blackboard LMS. Other tools like Open Educational Resources and ZyBook, as well as project-based group assignments were also utilized to transform the classes and student learning at the same time. The author reports on some preliminary results of a collaborative NSF grant that promotes the STEM education to a more diverse student body. Comparative results for control courses and the redesigned course demonstrate our findings and confirm the effectiveness of adaptive learning.", "authors": [{"name": "Fay Zhong", "affiliation": "California State University East Bay, Hayward, CA, USA"}], "tags": ["adaptive learning", "student engagement", "smart sparrow"]}, {"title": "Correlation of a Flexible Late Day Policy with Student Stress and Programming Assignment Plagiarism: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162236", "abstract": "A flexible late submission policy can be used to help address breaches of academic integrity and student stress as they relate to programming assignments. To this end, we examine the use of late days -- earned, penalty free deadline extensions -- during our large format, two-semester introductory programming sequence. In particular, we examine correlations between patterns of student assignment submission and student plagiarism. Lexical-analysis-based techniques are used to identify probable cases of plagiarism across student submissions. Furthermore, we present metrics for estimating student stress at submission time. Our metric utilizes the automated grading score of the student\"s current and previous submission attempts, the imminence of the assignment\"s deadline, and the availability of late days. We corroborate these patterns with self-reported student surveys conducted at the end of the academic year.", "authors": [{"name": "Barbara Cutler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Samuel Breese", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Matthew Peveler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Evan Maicus", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}], "tags": ["autograding", "student stress", "plagiarism", "late submission policy", "education"]}, {"title": "Goals, Topics and Tools of Computer Science for All University or College Courses: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162237", "abstract": "As the importance of Computer Science for all grows, questions about the foundation of CS related skills and knowledge everyone should be familiar with arise. Different education institutions or initiatives offer courses or other materials to provide CS knowledge and skills necessary to participate in future life, or any profession. Among these institutions are numerous universities and colleges which started to offer Computer Science courses explicitly aimed at non-CS majors. These course materials form an extensive data pool for determining crucial CS knowledge for non-majors. While the courses differ with regards to intention and topics, reflect a personal perception of the designer, or address specific local demands, they may still contain a foundation of CS for everyone. By examining multiple university and college courses, one can determine this foundation. In this preliminary study, we analyzed an initial sample of thirty different international Computer Science for all courses offered at colleges and universities between 2010 and 2017. The materials - syllabi and schedules of these different courses - were examined using a qualitative content analysis as proposed by Mayring. Based on coding results from the content analysis we identified the types of learning objectives those courses aim at. We also list inductively derived topic categories (e.g., representation of data, security, and social implications) and present different programming languages or tools used within those courses. Afterwards, the frequencies of topics in proportion to the number of courses were reported and associated with the previously identified learning objectives.", "authors": [{"name": "Ralf Romeike", "affiliation": "Friedrich-Alexander-Universit\u00e4t, Erlangen-N\u00fcrnberg, Germany"}, {"name": "Stefan Seegerer", "affiliation": "Friedrich-Alexander-Universit\u00e4t, Erlangen-N\u00fcrnberg, Germany"}], "tags": ["content analysis", "university and college courses", "cs for all", "postsecondary education"]}, {"title": "Program Analysis Tools in Automated Grading of Homework Assignments: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162238", "abstract": "With surging enrollment in Computer Science courses at both the introductory and advanced level, it is critical to leverage automated testing and grading to ensure consistent assessment of student learning. Program analysis tools allow us to streamline the grading process so instructors and TAs can spend more time teaching, one-on-one tutoring, and mentoring students. We present complex use cases of automated assignment testing and grading within the open-source homework submission system, Submitty. Students receive immediate and detailed feedback from the automated grader, and can resubmit to correct errors. Submitty uses custom-built grading tools, including difference checking of plaintext program output, instructor authored assignment-specific custom graders, and static analysis tools that reason about program structure. In addition, it employs a variety of external tools, including version control (Git and SVN), unit testing frameworks (JUnit), memory debugging tools (Valgrind and DrMemory), and code coverage tools (Emma). In this poster we describe our experience with memory debugging and code coverage tools, and outline plans to include immutability inference and verification.", "authors": [{"name": "Evan Maicus", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Samuel Breese", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Matthew Peveler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Barbara Cutler", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Buster Holzbauer", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Ana Milanova", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}, {"name": "Elizabeth Dinella", "affiliation": "Rensselaer Polytechnic Institute, Troy, NY, USA"}], "tags": ["unit testing frameworks", "version control", "autograding", "program analysis tools", "code coverage tools"]}, {"title": "Design of Practical Experiences to Improve Student Understanding of Efficiency and Scalability Issues in High Performance Computing: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162239", "abstract": "With the increasing demand of big data technology, there has been a growing interest of introducing high performance computing in computer science curriculum. One challenge in helping students understand the nature of efficiency and scalability issues in high performance computing is the lack of opportunities for them to be engaged in large-scale applications that run on supercomputer system architecture. This poster presents a collection of example projects that have been used in a parallel computing course in multiple universities in China, including National University of Defense Technology, Sun Yat-sen University and Hunan University. These projects were adopted from a wide range of scientific computing applications such as CFD, text mining of biomedical literature and so on. The large-scale computing resource for courses is supported by two National Supercomputing Centers, one in Guangzhou and the other in Changsha. The poster describes the background, objective, structure, task, practice process and outcome for each project. It also discusses the impact on student understanding all kinds of key topics and major challenges related to computational efficiency and scalability. Such projects build a positive practical environment to make students indulge in doing all kinds of interesting and helpful trials to validate their assumptions, especially when they have different perspectives or results for one problem. The poster presents our design evaluation rubric to reflect the effectiveness of our practice, as well as the statistics about the students\" achievements for the last three semesters.", "authors": [{"name": "Chunyuan Zhang", "affiliation": "National University of Defense Technology, Changsha, China"}, {"name": "Juan Chen", "affiliation": "National University of Defense Technology, Changsha, China"}, {"name": "Li Shen", "affiliation": "National University of Defense Technology, Changsha, China"}, {"name": "Jianping Yin", "affiliation": "National University of Defense Technology, Changsha, China"}], "tags": ["parallel programming", "hpc and project practice"]}, {"title": "ZyForce: An FPGA-based Cloud Platform for Experimental Curriculum of Computer System in University of Chinese Academy of Sciences (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162241", "abstract": "To cultivate students\" capability of computer system thinking and software/hardware programming, experimental curriculum of computer system is regarded as one of the most effective methods. Some universities have set up hardware labs equipped with several or dozens of FPGA (Field Programmable Gate Array) boards for these courses. However, these lab kits are always in a relatively low utilization rate and how the students\" capability is improved by these assets is not easy to be evaluated. Inspired by the merits of FPGA public cloud (e.g. Amazon AWS F1 instance), an in-house-designed FPGA-based online cloud platform (named ZyForce) is proposed to deploy in UCAS. This platform is equipped with 40 custom designed boards using Xilinx Zynq UltraScale+ MPSoC FPGAs and the utilization rate of these education resources is boosted by means of advanced cloud computing technology. With ZyForce, students remotely carry out lab assignments (e.g. MIPS, RISC-V or domain-specific architecture processor design with cache/memory, DMA, accelerator and performance counter) as using local FPGA boards; instructors can analyze the downloaded operation log file for each student and know how these kits are being used. It\"s believed that this kind of online hardware lab appliances provides a novel pay-as-you-go service model for those universities in remote regions who cannot afford to set up their own hardware laboratories, and also facilitates our students, the future scientists and engineers, with this promising cloud development approach.", "authors": [{"name": "Mingyu Chen", "affiliation": "Institute of Computing Technology of Chinese Academy of Sciences (ICT of CAS) & University of Chinese Academy of Sciences (UCAS), Beijing, China "}, {"name": "Ke Zhang", "affiliation": "Institute of Computing Technology of Chinese Academy of Sciences (ICT of CAS) & University of Chinese Academy of Sciences (UCAS), Beijing, China "}, {"name": "Yungang Bao", "affiliation": "Institute of Computing Technology of Chinese Academy of Sciences (ICT of CAS) & University of Chinese Academy of Sciences (UCAS), Beijing, China "}], "tags": ["fpga cloud", "experimental curriculum", "hardware platform", "virtual lab", "online learning"]}, {"title": "Compiler Practice System Integrated with Real Open Source Compiler: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162242", "abstract": "The rapidly growing scale of modern computer systems has been increasing the skill gaps between graduating students and industry expectations. The Compiler Course, as one of the core CS courses, is not only a course introducing the theory and practice of programming language translation, but also a comprehensive course cultivating students/ multidimensional competencies, such as programming, language design, software engineering, communication and collaboration, etc. Writing a compiler for a toy language is a common assignment in many compiler courses. Yet our compiler practice system differs from most of its peers in several aspects: integrated with real open source LLVM compiler, practice of some modern compilation mechanisms, process control and version management (using git), team work, etc. We designed two kinds of projects to integrate the LLVM compiler, one is coding class, e.g. developing an LLVM IR generator and a JIT-compiler on LLVM IR; the other is source code understanding class, e.g. providing guidance and issues for understanding the mechanisms of Clang parser or static analyzer. We also designed some team projects to let students investigate some modern language features and their implementation mechanisms, to discuss within and among teams, and finally to give team presentation. The poster describes the components of our compiler practice system, related practice support package and guidance. Some tradeoffs among difficulty, complexity, time and knowledge points are discussed. So far we have been practiced and improved the practice system for 4 years, and lessons as well as experiences are shared on the poster as well.", "authors": [{"name": "Yu Zhang", "affiliation": "University of Science and Technology of China, Hefei, China"}], "tags": ["llvm", "compiler projects", "open source", "computer science education"]}, {"title": "Developing Soft Skills with a Classroom Behavior Management Game: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162247", "abstract": "Soft skills such as collaboration, communication and time management are essential to the success of computer science students both in school and after they enter the IT profession. While employers value these skills highly, there are so many technical skills to cover in computer science programs that these soft skills are not typically primary learning objectives for CS classes. As such, it is difficult to find time and space to address them directly. In this study, we investigate whether Classcraft, a game-based classroom behavior management platform designed for K-12 students, can motivate undergraduate students to develop their soft skills in large computing classes. To this end, we utilized Classcraft with 234 students across two face-to-face sections and one online section of an undergraduate \"Introduction to Operating Systems and Networking\" course to determine whether gamifying the engagement component of the course would motivate students to participate in co-curricular activities, enhance student collaboration and improve communication and time management. There were no in-game activities - the students in each section of the class earned experience points in Classcraft as a reward for completing class activities ahead of time, collaborative learning and teamwork, and asking or answering questions in class or via discussion forums in our learning management system. In this poster, we report our preliminary results of the impact of such a platform on student engagement in soft skills.", "authors": [{"name": "Stacey Watson", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Julio C\u00e9sar Baham\u00f3n", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Heather Richter Lipford", "affiliation": "University of North Carolina at Charlotte, Charlotte, USA"}, {"name": "Harini Ramaprasad", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["gamification", "collaboration", "engagement"]}, {"title": "Getting Unstuck: New Resources for Teaching Debugging Strategies in Scratch (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162248", "abstract": "Debugging is an essential practice in programming. Yet for many novice programmers, the process of finding and fixing errors in code can be frustrating. Debugging is rarely explicitly taught in introductory programming courses, perhaps because best practices of teaching debugging are largely undefined. In K-12, teachers new to teaching CS may also experience trepidation about supporting student-directed work in languages and environments unfamiliar to them. In this poster, we build on previous research that documented the individual and social debugging strategies employed by young novice programmers, from studying projects to asking for help (Brennan, 2013). With a focus on classroom settings, we have designed a set of debugging activities for young people working in Scratch--the Getting Unstuck activities. Through these interactive activities, students and teachers explore creative and collaborative strategies for debugging Scratch projects. In July 2017, the authors piloted these strategies with 17 novice programmers, ages 14 to 18. This poster describes this new resource, reports on findings from the pilot testing, and offers recommendations for the design of K-12 programming activities.", "authors": [{"name": "Paulina Haduong", "affiliation": "Harvard Graduate School of Education, Cambridge, USA"}, {"name": "Karen Brennan", "affiliation": "Harvard Graduate School of Education, Cambridge, USA"}], "tags": ["scratch", "debugging", "teachers", "programming", "education"]}, {"title": "The New Computing Curriculum in English Schools: A Statistical Analysis of Student Participation (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162257", "abstract": "In 2014 English schools undertook a shift from a mainly ICT based curriculum to one that focuses on computer science. Qualifications in computing have been introduced and ICT was subsequently phased out. The question now arises as to whether the students who would have previously taken ICT qualifications are now taking the new computer science courses. Using student data for all English examinations taken by 16 and 18 year olds, we have profiled the student cohorts taking ICT and computing, as well as the schools offering them. We have analyzed the differences between these two cohorts in terms of prior attainment, course outcomes, gender, socio-economic groupings, ethnicity, and geographic spread. We find that there are large differences between the two groups: computing has far fewer female, working class and particular minority ethnic students. Computing students tend to have achieved better in mathematics than their ICT peers, and there is some evidence that academic selection criteria are being used to restrict entry. We conclude that it is unlikely that all, or even most, students who would have previously sat ICT qualifications will now sit qualifications in computer science. The shift in curriculum and examinations may have produced a less inclusive subject.", "authors": [{"name": "Billy Wong", "affiliation": "University of Reading, Reading, United Kingdom"}, {"name": "Miles G. Berry", "affiliation": "University of Roehampton, London, United Kingdom"}, {"name": "Peter E.J. Kemp", "affiliation": "University of Roehampton, London, United Kingdom"}], "tags": ["examination entries", "it education", "computing in schools", "gender and computing", "computer science education", "diversity"]}, {"title": "Engaging Programming Assignments to Recruit and Retain CS0 Students: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162260", "abstract": "Many universities offer an optional CS0 course taken prior to traditional CS1 and CS2 courses. Students enrolling in CS0 represent a variety of programming experience levels and majors. To more successfully recruit students to CS0 and retain students as CS majors, it is important to engage students in the course materials early on and frequently. There are several types of course materials (e.g. lesson notes, in class activities) and approaches to design engaging material (e.g. team-based learning, POGIL). In this poster, we focus on programming assignments that incorporate engagement practices put forth by the National Center for Women in Information Technology (NCWIT). NCWIT sponsors a program called EngageCSEdu, which is a collection of peer-reviewed introductory CS materials that are contributed by faculty. All materials in the database have demonstrated evidence of NCWIT\"s engagement practices. In this poster, we present seven of our programming assignments that have been accepted into the EngageCSEdu database, two of which have won Engagement Excellence awards. The assignments cover the topics in a Python-based CS0 course at Washington State University. The poster presents the assignments, their learning outcomes, and their engagement practices. We include student commentary and examples of student submissions that demonstrate students\" interest and creativity. Lastly, we present advertising materials we deployed that showcase the CS0 programming assignments to recruit more students to take the course. The assignments, student examples, and advertising efforts we present offer insights for educators about recruiting, engaging, and retaining students of all majors in introductory CS courses.", "authors": [{"name": "Andy O'Fallon", "affiliation": "Washington State University, Pullman, WA, USA"}, {"name": "Gina Sprint", "affiliation": "Gonzaga University, Spokane, WA, USA"}], "tags": ["python", "CS1", "CS0", "NCWIT EngageCSEdu", "programming assignments"]}, {"title": "Attracting Secondary School Students to Computer Science through Training Teachers to Establish Computer Clubs: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162261", "abstract": "The poster describes an innovative approach to help secondary school teachers enhance their computer science (CS) knowledge through the Google funded CS4HS (Computer Science for High School) program. Through a 4-day professional training workshop teachers learn different computational thinking skills, CS concepts and related tools in an attempt to promote CS education by establishing a computer club and eventually teaching CS courses in their schools. The training includes units from the Exploring Computer Science curriculum and brainstorming sessions on starting clubs, club activities, and strategies for recruiting more girls and minorities in clubs. Participating teachers are invited back during the school year to participate in events including a CS conference and a competition and showcase for their students to continue the momentum started by the workshop. Teachers share the barriers to establishing clubs and success stories of being the first teachers to introduce computer science into their schools. More than 150 teachers from more than 50 secondary schools have participated in the CS4HS workshops since the program\"s inception. The result is that many of the participating teachers now have established computer clubs; many teach CS courses and many bring their club students to participate in the annual CS4HS Showcase and Competition event at Buffalo State College; all contributing to the goals of CS4HS which is to promote CS education in every secondary schools of Western New York. This will create a pipeline of aspiring CS students and help to alleviate the current and predicted shortage of CS professionals.", "authors": [{"name": "Sarbani Banerjee", "affiliation": "SUNY Buffalo State College, Buffalo, NY, USA"}, {"name": "Joseph Zawicki", "affiliation": "SUNY Buffalo State College, Buffalo, NY, USA"}, {"name": "Neal Mazur", "affiliation": "SUNY Buffalo State College, Buffalo, NY, USA"}], "tags": ["computer club", "K-12 teacher professional development", "CS4HS (computer science for high schools)"]}, {"title": "Pair Programming Interactions in Middle School: Collaborative, Constructive, Dismissive, or Disengaged? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162263", "abstract": "Pair programming is considered a best practice since it has been shown to reduce the gender gap and increases confidence for university students in introductory computer programming courses. However, little is known about what it looks like in middle school. This study was designed to provide detailed descriptions of what pair programming looks like, how it varies across demographic groups, and how it changes over time. The data presented in this poster is from a subset of a larger study (81 middle school students) which consists of 66 (28 girls; 38 boys) students (55% Latino/a; 23% White) who worked in 33 same-gender pairs (42% female) to design and program their own video game. Data include video and audio recordings, screen capture files and logging files. The findings suggest that students are spending log periods of time not interacting, and those with more experience have a third person present more often while programming. When pairs are interacting specifically about their game the girls spend more time engaging constructively around ideas and solutions in comparison to boys. The results will be used to inform strategies to support effective pair programming in middle school, and to inform future studies.", "authors": [{"name": "Emily Green", "affiliation": "ETR (Education Training Research), Scotts Valley, CA, USA"}, {"name": "Shannon Campe", "affiliation": "ETR (Education Training Research), Scotts Valley, CA, USA"}, {"name": "Jill Denner", "affiliation": "ETR (Education Training Research), Scotts Valley, CA, USA"}, {"name": "Linda Werner", "affiliation": "UC Santa Cruz, Santa Cruz, CA, USA"}], "tags": ["collaborative learning", "pair programming", "computer science education", "middle school"]}, {"title": "The Math Gap in an Inclusive CS1 Course: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162265", "abstract": "This poster investigated the data from the past year of CS1 and found overwhelming evidence that students who have taken calculus are significantly more likely to succeed and less likely to fail that those who do not. On a Fall 2016 CS1 final exam, students who had not earned credit for a first course in college-level calculus were 2.8 times more likely to fail it than those who had (p=<0.0001,N=844). The mean final score for students with calculus was an 84, and those without was 61 (p=<0.0001). The result surprised the instructor, course staff, and faculty familiar with the course because the course itself does not emphasize mathematical or scientific computing. The course was Java-based, objects-early, and introduces both object-oriented and imperative programming fundamentals. The effect was evident across a range of problems, none seemingly requiring beyond basic algebra. In the Spring of 2017, the instructor and course staff set forth to explore these questions and close the math gap discovered in the Fall of 2016. This poster further proposes to develop interventions to aid those with a lower math maturity level through introducing a specialized CS1 to better accommodate those with a lower math maturity level by reducing the pace and installing prerequisites for the established CS1. Prospective Computer Science students at liberal arts colleges and universities enter with a wide range of mathematical backgrounds. Failing to acknowledge these disparities is demoralizing to students during their first course in CS and is counter-productive to inclusivity.", "authors": [{"name": "Kris Jordan", "affiliation": "University of North Carolina at Chapel Hill, Chapel Hill, NC, USA"}, {"name": "Gabi Stein", "affiliation": "University of North Carolina at Chapel Hill, Chapel Hill, NC, USA"}], "tags": ["object-oriented programming", "CS1", "math background", "imperative programming", "math programming"]}, {"title": "Tangibles for Graph Algorithmic Thinking: Experience with Children (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162267", "abstract": "Smart interactive tangible objects (briefly, tangibles) can help teachers in the scaffolding of algorithmic thinking of 10-13 years old children. In this work, tangibles deal with graph algorithmic thinking. By following an action-research design approach, tangibles were rapidly developed and used in studies with children and teachers (Bonani et al., 2017, 2018). This poster shows their evolution and the most recent experience: a field study with 8 middle school children, and 5 primary school children, using tangibles for graph algorithmic thinking. Data collected by researchers were mixed (qualitative and quantitative), concerning engagement and learning (e.g., Gennari et al., 2017). Results suggest that tangibles engage pupils and help them understand simple and connected graphs. Future work will seek their adaptation to classes (e.g., Di Mascio et al., 2012).", "authors": [{"name": "Andrea Bonani", "affiliation": "Free University of Bozen-Bolzano, Bolzano, Italy"}, {"name": "Rosella Gennari", "affiliation": "Free University of Bozen-Bolzano, Bolzano, Italy"}, {"name": "Vincenzo Del Fatto", "affiliation": "Free University of Bozen-Bolzano, Bolzano, Italy"}, {"name": "Gabriella Dodero", "affiliation": "Free University of Bozen-Bolzano, Bolzano, Italy"}], "tags": ["algorithmic thinking", "interaction design", "middle school", "IoT", "tangible", "children", "primary school"]}, {"title": "Are Children More Motivated with Plugged or Unplugged Approach to Computational Thinking?: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162270", "abstract": "In recent years, we have seen an increasing interest in bringing programming back to K-12 education. Many educators begin to recognize the necessity of helping children develop computational thinking (CT) as an essential skill to address 21st century challenges. In this poster, we report the preliminary findings from the first year of a 3-year longitudinal study based on a coding curriculum for Grade 4 to Grade 6. This 3-year study aims to gain an understanding of how coding activities helps children at upper primary school ages develop CT for problem solving, and if this problem-solving mindset is transferrable to other contexts, for example, daily life scenario and mathematical field. A part of the research focuses on a comparative study between students' intrinsic motivation of coding (i.e. \"plugged\") activities and \"unplugged\" activities (i.e. learning concepts from computer science through paper-based games without programming), which helps us understand the advantages and disadvantages of different learning approaches to CT. At the end of the first year, around 600 fourth graders\" were assessed with their CT competence and affective tendency through: (1) a pre/post-test on the CT skill and mathematical ability; (2) a questionnaire on intrinsic motivation in plugged and unplugged activities. The preliminary findings indicate that students have gained a good programming-related knowledge and improved problem-solving skills through our curriculum. They were intrinsically motivated to participated in both types of activities. However, students did not show the ability to transfer computational thinking to mathematical context.", "authors": [{"name": "Shan Jiang", "affiliation": "University of Hong Kong, Hong Kong , Hong Kong"}, {"name": "Gary K.W. Wong", "affiliation": "University of Hong Kong, Hong Kong, Hong Kong"}], "tags": ["computational thinking", "intrinsic motivation", "coding education", "cs unplugged"]}, {"title": "Preliminary Results of TACT Integration and Confidence Levels on Seven Big Ideas of CS: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162271", "abstract": "Training Arkansas Computing Teachers (TACT) is an NSF-funded three-year project, designed to rapidly address both a) Arkansas' pressing need for computer science (CS) talent and b) the new law requiring all Arkansas high schools to provide access to CS instruction for their students. The goal is to train high school teachers on computational thinking practices and the seven big ideas from the AP CS Principles curriculum framework and to make them CS-certified teachers. The TACT professional development (PD) consists of a two-week face-to-face hands-on workshop for high school teachers during the summer and offers online support throughout the year. During the first week, TACT hosts the UTeach CS Principles course, a classroom-ready curriculum designed in alignment with the CS Principles framework. During the second week, TACT hosts the TACT CS Boot Camp designed to cover CS topics that are typically covered in licensure exams. Effectiveness of the project is measured through the surveys taken by teachers before and after the PD regarding their integration and confidence levels of topics corresponding to seven big ideas. The poster will display details of the PD, example survey questions and our findings in a tabular format. See https://tact.uark.edu.", "authors": [{"name": "Wen-Juo Lo", "affiliation": "University of Arkansas, Fayetteville, AR, USA"}, {"name": "Himasri Lekkala", "affiliation": "University of Arkansas, Fayetteville, AR, USA"}, {"name": "Dale R. Thompson", "affiliation": "University of Arkansas, Fayetteville, AR, USA"}, {"name": "David Shannon", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Bryan Hill", "affiliation": "University of Arkansas, Fayetteville, AR, USA"}], "tags": ["training high school teachers", "CS10K", "AP CS principles", "professional development", "TACT", "big ideas"]}, {"title": "The Tablet Game: An Embedded Assessment for Measuring Students' Programming Skill in App Inventor (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162272", "abstract": "Assessing students' learning of concepts in programming is an essential part of teaching computer science. We developed the Tablet Game, an embedded assessment that measures students' skill in identifying programming structures used to create various behaviors in MIT App Inventor. The assessment was implemented as an app for Android devices. Students conducted an activity in the app, and identified which code-blocks would create those behaviors. Students' responses were transmitted to our custom data-collection server. In two five-day app development summer camps held with middle school students, students completed the same Tablet Game assessment on day 1 and day 5. Students also completed pre/post surveys which gathered ethnographic data and asked about interest levels in computer science and prior programming experience. Using data from 44 students with pre/post assessments matched to surveys, our results indicated that (1) students with high self-reported prior experience in App Inventor outperformed students with low prior experience on the Tablet Game pre-test, indicating that the assessment measures programming skill and (2) students with low prior experience achieved equivalent results as the high prior experience cohort in the post-test, indicating that the camp was successful in imparting programming skills. Both of these results are statistically significant. Further, (3) there were no statistically significant differences in gender composition of the two experience cohorts, indicating that the camp was equally accessible to girls and boys.", "authors": [{"name": "Chike Abuah", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "Mark Sherman", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}, {"name": "Subhajit Chakrabarty", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "David Nguyen", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "Fred Martin", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "Diane Schilder", "affiliation": "Evaluation Analysis Solutions, Inc., Arlington, MA, USA"}], "tags": ["embedded assessment", "programming", "app inventor"]}, {"title": "Implementation of a District-Level CS for All Policy: What Can We Learn? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162273", "abstract": "In states, school districts, individual schools, and alone in classrooms, educators are providing access to computer science (CS) for more students than ever before. Many are learning as they go. Education leaders and teachers are finding effective tools for hurdles to expanding CS access through their own experiences, formal and informal networks, and partnerships with external organizations. However, much is known in the education policy community which can be applied to CS for All efforts. This poster presents the framework for a doctoral dissertation which examines the implementation of a CS for All policy using a policy implementation lens. The site of the study is a school district that was an early adopter of CS for All; Computational thinking activities were inserted into K-8 classrooms and all high schools introduced accessible and rigorous CS classes. The \"story\" of this district provides both models and cautions for those undertaking CS for All initiatives. Replicating implementation is unrealistic since educational environments are unique and complex. The questions inspiring this work are not about how to implement a CS for All policy, but rather about the conditions under which CS for All policy was implemented in this school district (Honig, 2006). The framework presented is developed from education implementation literature with consideration for the challenges unique to CS for All. Those working in CS education will identify how their experiences fit into the framework and can use it to move their own work ahead.", "authors": [{"name": "Sara-Lynn Gopalkrishna", "affiliation": "George Washington University, Washington, DC, USA"}], "tags": ["CS for all", "implementation", "K12 education", "policy"]}, {"title": "SpatialCS: CS to Support Spatial Reasoning (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162274", "abstract": "Spatial reasoning skills are highly predictive of STEM achievement and self-efficacy, yet they are not often part of computer science curricula. In an effort to support spatial reasoning and STEM development, we have created several activities using SAS\u00ae CodeSnaps, a free coding environment that brings coding to the physical world through 3-dimensional problem solving and tangible coding blocks. In these activities students represent and navigate real-world obstacle courses in order to solve coding challenges. Tangible coding blocks allow students to organize and interact with code in ways that both build upon and use spatial reasoning skills. These blocks are then scanned and executed by a robot -- bringing their code, and any mistakes, off the screen and into the real world. Together these features offer opportunities for developing spatial reasoning while using existing skills in support of CS learning. This approach meets students where they are; thinking, engaging and interacting with the physical world.", "authors": [{"name": "Lucy Kosturko", "affiliation": "SAS Institute, Inc, Cary, NC, USA"}, {"name": "Jennifer Sabourin", "affiliation": "SAS Institute, Inc, Cary, NC, USA"}, {"name": "Scott McQuiggan", "affiliation": "SAS Institute, Inc, Cary, NC, USA"}], "tags": ["K-12 education", "stem self-efficacy", "spatial reasoning"]}, {"title": "Growing the High School CS Teacher Workforce: Predictors of Success in Achieving CS Certification (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162278", "abstract": "With the goal of better understanding how to increase the computer science (CS) teacher workforce, this study examined the factors that predict eventual success in achieving teacher certification in CS. Participants (N = 500) were teachers who were certified in other subject areas and who expressed an interest in becoming certified to teach computer science in Texas. Results showed that teachers were more likely to become certified in CS if they already held a certification in another STEM field or if they had some prior knowledge in CS. The extent to which teachers participated in an online professional development course predicted certification success after controlling for prior CS knowledge and other factors whereas the number of hours spent in face-to-face CS professional development did not. These findings have important implications for policy makers and professional development providers who make investments of time and money to grow CS teacher capacity and increase student access to computer science education at the high school level.", "authors": [{"name": "Lisa S. Garbrecht", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Jayce R. Warner", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Wesley Monroe", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Carol L. Fletcher", "affiliation": "University of Texas at Austin, Austin, TX, USA"}], "tags": ["teacher professional development", "educator certification", "in-service training"]}, {"title": "Effective Models for Integrating Computational Thinking into NYC Elementary Schools: A Proposed Research Agenda (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162283", "abstract": "Initial research shows the promise of instructional and learning benefits for students when computational thinking is effectively integrated across the curriculum. Benefits include building higher-order thinking and problem-solving skills, creating real-world applied contexts, and enabling students to create, produce and interact with information. These are critical levers to wide adoption. To address this challenge, in partnership with the Education Development Center, we have developed a three-year study in which we will work closely with five high-poverty New York City elementary schools that, with the help of an external implementation partner, are trying out distinctly different approaches to integrating CT into elementary instruction, in order to understand how those models work in various contexts, and which models may be particularly effective.Our poster will display the proposed integration model of our first demonstration site as well as the indicators and instruments we are using to understand how this model works.", "authors": [{"name": "Kate Mulloy", "affiliation": "Robin Hood Foundation, New York, NY, USA"}, {"name": "Amber Oliver", "affiliation": "Robin Hood Foundation, New York, NY, USA"}, {"name": "Thea Charles", "affiliation": "Siegel Family Endowment, New York, NY, USA"}], "tags": ["whole-school model", "integrated computational thinking instruction"]}, {"title": "Closing the Gender and Underrepresented Minority Gap in CS: UTeach Computer Science Principles AP Assessment Results (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162286", "abstract": "Gender and racial/ethnic participation gaps in computing is a well-documented problem motivating several interventions aimed at attracting and retaining women and underrepresented students (Black or African American, Latinx, and Native American students) in this high-need area. One such effort is the College Board's Computer Science Principles (CSP) course, a survey course designed to engage students who have traditionally opted-out of computer science in secondary education. UTeach CSP is UTeach's Project-Based Learning (PBL) curriculum designed for the CSP course. Students learning from teachers implementing the UTeach CSP curriculum scored higher on the 2017 College Board AP CSP assessment, when compared with students taught with other curriculum. Scores were significantly higher for girls and Latinx students, even after adjustments were made to standardize the demographic characteristics of the schools where the UTeach CSP curriculum was implemented. This poster presents curriculum design research that suggests explanations for the higher results. The research can also provide CS teachers with ideas for moving beyond traditional lecture-based CS instruction for increased student performance and more diverse engagement. Handouts will be provided with a sample UT CSP project including lesson plan, student handout, video link, pacing guide, assessment, and rubric.", "authors": [{"name": "Carol Ramsey", "affiliation": "The University of Texas, Austin, TX, USA"}, {"name": "Michael DeGraff", "affiliation": "The University of Texas, Austin, TX, USA"}, {"name": "Justin Cannady", "affiliation": "The University of Texas, Austin, TX, USA"}], "tags": ["underrepresented minorities", "computer science principles", "computer science education", "equity", "gender", "computer science pedagogy"]}, {"title": "Using Cultural Responsiveness to Elicit Computational Thinking in Maker Environments: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162291", "abstract": "Work in culturally responsive pedagogy and culturally responsive computing (CRC)(Scott, et al., 2014) holds promise for how to include underrepresented students into making communities as they develop their computational thinking (CT) skills. Cultural responsiveness involves instructors using what they know about students' individual identities to develop learning opportunities; having high expectations; and understanding students' sociopolitical contexts (Ladson-Billings, 1995). By integrating these approaches, students encounter a makerspace without pre-determined cultural norms that encourages questioning assumptions that limit the development of inclusive technology. This poster explores preliminary results from a mixed methods multiple case study. Sixteen high school students participated in a two-week summer making program that focused on CT and physics skills. Students shared elements of their identities, brought in artifacts for \"show and tell\", collected data on how they spend their time, and categorized assets in their communities to then incorporate into their own projects. Researchers analyzed classroom observations, videos, interviews, and student notebooks, as well as students' pre-post tests and attitudinal surveys. Findings reflect the importance of valuing student identity, building community, and highlighting how CT and physics affect students' lives. More information: https://actmaproject.wordpress.com/ Keywords: computational thinking, cultural responsiveness, makerspaces. DOI: https://doi.org/10.1145/3159450.3162291", "authors": [{"name": "Germania Sol\u00f3rzano", "affiliation": "Northeastern Illinois University, Chicago, IL, USA"}, {"name": "Mila Kachovska", "affiliation": "Become, Inc, Chicago, IL, USA"}, {"name": "Kate Thomas", "affiliation": "Northeastern Illinois University, Chicago, IL, USA"}, {"name": "C. Meghan Hausman Jacobson", "affiliation": "Northeastern Illinois University, Chicago, IL, USA"}, {"name": "Roxana Hadad", "affiliation": "Northeastern Illinois University, Chicago, IL, USA"}, {"name": "Yue Yin", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["computational thinking", "cultural responsiveness", "makerspaces"]}, {"title": "Impact of a Pre-College Summer Workshop on Women's Confidence and Interest in Pursuing Undergraduate Computer Science Studies: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162292", "abstract": "While 57% of US undergraduate degrees are awarded to women, women account for only 18% of computer science and related degrees. Studies of recent interventions have shown promise in increasing the number of women who choose to major or minor in computing or related disciplines. Two key findings from this research indicate the promising impact of high school outreach and providing a \"mission driven\" context for computer science for young women. We will present early findings from Summer Guild, a two-week immersive experience for rising freshman women offered in the summer between graduation from high school and the start of their first year of college. During this experiential learning program, students are engage in a compressed digital product development lifecycle including all of the elements of design thinking, prototyping and iteration in the context of a real-world civic or business challenge. In addition, they gain an introduction to Python and work with professional developers to build their digital solutions. We present the results of changes in student's self-reported attitudes, academic plans and acquisition of computing skills based on pre- and post-surveys, a selection and analysis of qualitative data provided by students via daily exit tickets, and the number of students registered for computer science or related classes during their freshman year.", "authors": [{"name": "Judith Spitz", "affiliation": "Cornell Tech, New York, NY, USA"}, {"name": "Diane Levitt", "affiliation": "Cornell Tech, New York, NY, USA"}], "tags": ["women in computer science", "design thinking", "undergraduate computer science education", "higher ed", "diversity in stem", "women in tech"]}, {"title": "Using Needs Assessment to Inform a Rural School District's Efforts to Expand Access to Computer Science Education: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162293", "abstract": "The remoteness of rural K-12 school districts brings unique challenges to school leaders seeking to expand access to computer science education. Limited resources and perceived relevance of computer science education to rural life are but some of the challenges rural school leaders may face. To ensure the success of the current computer science education reform movement, reformers should incorporate needs assessment into their rationale for change. Supported by insights from a needs assessment, school district leaders are equipped to make the case to stakeholders for the need for computer science education. In the current study, two university-based educational researchers in the State of Georgia conducted a qualitative needs assessment single-case study to explore the challenges and opportunities a rural school district faces in broadening access to computer science education. The researchers used a collaborative process to guide the assessment of the school district's resources, educational programming, and outcomes. Data collection and analysis included documents, archival records, school walk-throughs of the district's five schools, and 15 in-depth interviews with administrators and teachers. Findings included the identification and prioritization of needs as well as themes related to challenges faced by the school district in broadening access to computing. Visitors to this poster session will have the opportunity to learn about one rural school district's unique case and what it suggests for expanding rural computer science initiatives.", "authors": [{"name": "Carl Westine", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Kim C. Huett", "affiliation": "University of West Georgia, Carrollton, GA, USA"}], "tags": ["rural education", "needs assessment", "systems change", "diffusion of innovation", "computer science for all", "case study", "computer science education", "broadening participation"]}, {"title": "Creating a Landscape of K-12 CS Curriculum: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162294", "abstract": "The landscape of computer science education curriculum and tools is rapidly expanding. After President Obama made a call to action for Computer Science For All, the National Science Foundation (NSF) has continued to award curriculum writing projects, and recently non-profits and for-profit offerings have expanded. This poster presents a landscape analysis of a subset of the curriculum available for K-12 computer science (CS). The subset is derived from CSforAll Consortium's (www.csforall.org) 208 current members that are classified as content providers, a resource for stakeholders in CS education who are looking to see the breadth of offerings available, or choose a particular curriculum. The landscape presented in this poster is organized by grade band and concept areas as defined by the K-12 CS Education Framework. In this poster, we will describe a methodology for categorizing the content providers, evaluate whether they have available curriculum for review, and provide summary landscape statistics about the alignment between the content reviewed and the K12 CS Framework.[1] This will enable us to demonstrate both the breadth of CS content areas available in curriculum for stakeholders in CS, as well as the areas in which curriculum is not widely available.", "authors": [{"name": "Leigh Ann DeLyser", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Lauren Wright", "affiliation": "CSforALL, New Yor, NY, USA"}], "tags": ["k-12 cs framework", "k-12 curriculum"]}, {"title": "Computer Science Pathways for Latino/a Youth in a Community Technology Center: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162297", "abstract": "Latino/a youth are interested in computer science, but studies show they have less access to computers and role models, and lower confidence to pursue computer science activities than their peers in the US. Little is known about how to create learning environments outside of school that attract and retain Latino/a youth who come with a range of computer science interest, preparation, and resources. This poster will describe how one community technology center in a low income rural community provides opportunities and supports for students to pursue technical education and work experiences, and the role it plays in creating computer science (CS) pathways. Survey data from 97 high school students were used to describe variations in students' motivation to participate at the center, how those motivations change over time, and the factors that contribute to students entering a CS pathway. Interviews with 20 students were used to identify the different ways that students entered a CS pathway, including the influence of natural mentors, relationships with peers, and digital badges, as well as the factors that prevent them from participating in computational activities. The data were used to generate case studies that provide an in-depth look at the factors that promote or undermine CS pathways over time. The findings have implications for designing learning ecologies that support high school students from under resourced communities to enter and stay on computer science pathways.", "authors": [{"name": "Jill Denner", "affiliation": "Education, Training, Research, Scotts Valley, CA, USA"}, {"name": "Shannon Campe", "affiliation": "Education, Training, Research, Scotts Valley, CA, USA"}], "tags": ["latinos", "high school", "community technology center"]}, {"title": "American Indian Storytelling with Alice: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162299", "abstract": "Montana is home to a large American Indian population and a rich history. The Indian Education for All (IEFA) Act, passed in 1999, reinforces the educational goals stated in Montana's 1972 Constitution that \"every Montanan, whether Indian or non-Indian, be encouraged to learn about the distinct and unique heritage of American Indians in a culturally responsive manner.\" IEFA requires that American Indian education be integrated into \"the education of each Montana citizen,\" making Montana the only state to mandate Indian education by law. We propose an integration of CS concepts into existing content standards using the IEFA curricula. To make these concepts approachable, we utilize Alice, a drag-and-drop programming environment. This software allows students to animate stories while learning programming techniques in a user-friendly way. Furthermore, Alice 2 allows customized models; in particular, we can create models specific to American Indian culture. In this poster, we present an overview of the Storytelling project and preliminary results, an example lesson plan, evaluation techniques, and a description of the 3D model creation process. With these lesson plans and customized models, we strive to broaden participation of students from rural and American Indian communities in CS and related fields.", "authors": [{"name": "Samuel Adam Micka", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Allison Shay Theobold", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Jachiike C. Madubuko", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Brittany Terese Fasy", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Stacey A. Hancock", "affiliation": "Montana State University, Bozeman, MT, USA"}], "tags": ["computational thinking", "Indian education for all", "middle school education"]}, {"title": "Couplets: Helping Elementary School Students Recognize Structure in Code (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162300", "abstract": "We believe teaching elementary school students to reason about programs is as important as teaching them to write programs. To facilitate development of this skill in young children one must choose a developmentally appropriate domain. Microsoft's Kodu Game Lab is a pattern-matching rule-based language whose semantics is significantly different than Scratch or Python. We chose Kodu because one can write non-trivial programs in two to four lines, and analyzing these programs is within the abilities of a typical 8 year old. Reasoning about programs requires students to understand the structure of code. The approach we're advocating is analogous to sentence diagramming, where one starts with a sequence of words and develops a representation of their syntactic and semantic relationships. One can similarly analyze Kodu programs by characterizing rules and recognizing relationships between rules. In this poster we describe \"couplets\", an analysis technique that reveals the presence within a program of an important Kodu design pattern called Pursue and Consume. Using this technique leads to accurate predictions about program behavior, and uncovers bugs if the pattern is not fully realized. As part of a study of 40 third graders who were learning Kodu, we provided brief instruction in the couplets technique. We found that they were able to apply couplets to 3-4 line programs and answer prediction questions with a roughly 85% success rate. Our results demonstrate that elementary school children can learn to reason abstractly about programs if given the right mental tools.", "authors": [{"name": "David S. Touretzky", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Laura M. Tomokiyo", "affiliation": "University of Pittsburgh, Pittsburgh, PA, USA"}, {"name": "Joseph Isaac", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["Kodu", "program analysis", "computational thinking", "K-12 curriculum", "design patterns"]}, {"title": "A \"Loopy\" Encounter: Teaching Elementary Students the Concept of Loops (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162306", "abstract": "Loops are a fundamental concept in computing and well known to be difficult for novices. Recent research shows that the open-ended learning approach often used in teaching block-based programming can be insufficient to help young students gain a solid understanding of computing concepts. Misconceptions about loop are very common despite the user-friendly block-based programming syntax. This study aims to contribute to the current understanding of how elementary-aged students can learn the concept of loops through a more structured instructional design. We engage students in structured learning activities consisting of \"tangible\" programming concept demo and progressive problem solving exercises. These activities were used to teach a group of 3-5th graders two types of loops: counting loops that repeat a set number of times without logic conditions, and conditional loops where the loop iteration is controlled by a Boolean condition. The evaluation results indicate that most students are able to understand and use counting loops correctly in their programs after the weeklong class. The understanding of conditional loops, however, remains difficult for elementary-aged students. Our study suggests that computing concepts may be learned more effectively with a structured instruction setting. Nonetheless, teaching young students conditional loops, especially how to apply them in computational problem solving is a very challenging task even in block-based environments.", "authors": [{"name": "Karen H. Jin", "affiliation": "University of New Hampshire, Manchester, NH, USA"}], "tags": ["loops", "K-12", "computing education"]}, {"title": "How Perceptions of Programming Differ in Children with and without Prior Experience: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162308", "abstract": "The computing and STEM industries face challenges in attracting people to fill expanding needs. The literature shows that computing preconceptions shape interest in and impact decisions of whether or not to enter computing disciplines, especially for women and underrepresented minorities. In this study, our research questions focused on how perceptions of programming in elementary and middle school students varied based on prior programming experience. We examined the programming constructs they found challenging. Our study was in the context of a week-long summer camp dedicated to Scratch-based game development. We conducted semi-structured interviews at the beginning, middle, and end of the weeklong program with 28 students who agreed to participate. During the interviews, we asked students about their perceptions of programming in general and which programming constructs they found easy and/or hard. We found that all students perceived programming as a means of creating artifacts, but that students with prior programming experience went deeper by associating programming with process and function. We also characterize the specific Scratch programming constructs that beginning versus experienced children perceive as easy and/or hard. These findings will help experts and educators better understand how children think about programming and how experience changes these perceptions over time. These findings also have implications on the design of curricula and instructional resources to address difficulties children face while learning to program.", "authors": [{"name": "Lisa Anthony", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Jeremiah J. Blanchard", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["child", "scratch", "middle school", "learning programming", "elementary school", "game programming", "computer science education", "programming experience", "summer camp"]}, {"title": "Modeling Student Engagement and Attrition in BJCx, a CS Principles MOOC: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162310", "abstract": "One method of increasing accessibility to computer science education is through massive open online courses (MOOCs). The Beauty and Joy of Computing MOOC (BJCx) on edX is an introductory computer science course aimed to reach a broad audience of learners and designed to fulfill the AP CS Principles curriculum. However, like most MOOCs, BJCx faces high rates of student attrition. Some of this can be attributed to variance in student intentions; there are students who enroll only to browse the material with no plan of completing the course. On the other hand, the attrition of those students who intend to finish but drop out along the way is a point of concern. It could be reduced if course staff could predict it using the students' behavior and intervene. In this project, I explore how patterns of student engagement with course material can predict attrition. Using a recurrent neural network, I model student behavior over time. I am then able to analyze the behavioral patterns which are likely to precede dropping out. Furthermore, I explore which topics in the course curriculum most often immediately precede students dropping out. I visualize the time-series trends overlaid with the curriculum in order to gain insights into correlations between introductory computer science topics and student attrition. This information, along with the predictive student engagement model, can potentially allow teachers to design interventions at MOOC scale, something that is otherwise lacking in comparison to traditional classroom settings where the teacher can directly gauge student behavior.", "authors": [{"name": "Yifat Amir", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["student attrition", "CS principles", "BJC", "MOOCs", "RNN"]}, {"title": "Broadening Participation in Advanced Placement Computer Science Principles: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162314", "abstract": "The Beauty and Joy of Computing (BJC; bjc.edc.org) is curriculum and professional development program developed jointly by EDC and UC Berkeley and endorsed by the College Board for the Advanced Placement (AP) Computer Science Principles (CSP) exam. The purpose of this course is to attract more students, and particularly girls and underrepresented minority students, to the breadth and depth of ideas in modern computer science. BJC is aimed at helping students develop computational habits of mind including abstraction, modularity, algorithms, and modeling. BJC uses Snap!, a visual programming language based on Scratch, to expose students to the beauty and joy of programming using a project-based learning approach (including games, art, mathematics, language, etc.) and addresses social issues of computing (e.g., privacy, copyright, artificial intelligence, networking, and cybersecurity). This poster will share curriculum examples, results of early research on teacher and student use in New York City schools, teacher and student experiences and feedback, implementation challenges and supports, and preliminary results and outcomes including engagement, attitudes, and achievement.", "authors": [{"name": "June Mark", "affiliation": "Education Development Center, Waltham, MA, USA"}], "tags": ["broadening participation", "implementation research", "computer science education", "ap cs principles"]}, {"title": "Teacher in Residence: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162315", "abstract": "As CS for All initiatives expand in K-12 districts across the country, there is a need to create ongoing teacher support and training. Cornell Tech's Teacher in Residence program builds computational agency. Agency is often defined as the power to freely act and make choices. The Teacher in Residence program seeks to build the agency of school administrators, teachers, and students to make choices about CS education and to act on them based on a foundation of content knowledge rather than programs bound to specific tools or individuals. The Teacher in Residence program is grounded in evidence-based practices, but has made unique adaptations in order to support teachers who are new to CS content. The writers will share practices, learnings, and preliminary outcomes from the first year and a half of the program. His data includes qualitative measures of teacher confidence, agency, and accuracy as well as initial data on student engagement and generalization. The Teacher in Residence program includes K-8 teachers who are incorporating CS instruction into their classrooms. In this program, a master teacher is embedded in a school community for a limited amount of time to coach teachers, offer professional development, and consult with the administration about implementation. It focuses on three elements: content proficiency, appropriate pedagogy, and giving equitable access to all students. Handouts will be provided.", "authors": [{"name": "Diane Levitt", "affiliation": "Cornell Tech, New York City, NY, USA"}, {"name": "Meg J. Ray", "affiliation": "Cornell Tech, New York City, NY, USA"}, {"name": "Maya Israel", "affiliation": "University of Illinois, Urbana-Champaign, Champaign, IL, USA"}], "tags": ["k-12 cs education", "cs education", "cs teacher training"]}, {"title": "The Role of Gestures in Learning Computer Sciences: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162316", "abstract": "Computer science teachers want to know what their students are and are not learning and understanding. Gestures, or spontaneous hand movements produced when talking, could help teachers understand what their students are thinking. During communication, gestures often reflect thoughts not expressed when people talk (Goldin-Meadow & Wagner, 2005). Listeners can then extract meaningful information from the gestures they see. When learning computer science, gestures may be an external representation of students' understandings of code. In this research, we conducted a qualitative study observing and interviewing a high school CS class to understand how and when gestures were used. When students trace code, their gestures show how well they understand the code's execution. In another context when students described their code to the teacher or other students, the students' gestures showed how abstracted their knowledge was. Students who understood their code made more general gestures, while struggling students made pointing gestures for each line of their code. These findings suggest that teachers could use students' gestures as a formative assessment to understand how well their students are learning.", "authors": [{"name": "Sarah Li", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Vedant Pradeep", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Amber Solomon", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["gesture", "computer science education"]}, {"title": "Do Social and Emotional Learning Outcomes and Instructional Practices Promote Persistence in Computer Science for Underrepresented Secondary Students of Color?: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162235", "abstract": "In order to inform ongoing efforts to broaden participation in computing, this study examines a CS initiative which provides a three summer sequence of rigorous, culturally relevant, and project based exposure opportunities for underrepresented secondary school students of color. Previous studies demonstrated that the CS initiative increased the rate of majoring in CS in college more than eight fold. This study uses quantitative data from the summer 2017 CS program and subsequent CS academic year data to examine persistence in CS on a more granular scale. In particular, instructional practices, social and emotional learning outcomes, and course taking data are examined to understand the factors which increase student persistence in taking secondary computer science courses. Findings include a significant relationship between social and emotional learning outcomes and persistence in CS for underrepresented students of color and the importance of student participation and relevant assignments to the development of resilience in CS. A handout will also be given to poster audiences in order to stimulate discussion, exchange best practices within the CS education research community, and to contribute to the growing evidence base to broaden participation in CS.", "authors": [{"name": "Alexis Martin", "affiliation": "Kapor Center for Social Impact, Oakland, CA, USA"}, {"name": "Allison Scott", "affiliation": "Kapor Center for Social Impact, Oakland, CA, USA"}, {"name": "Frieda McAlear", "affiliation": "Kapor Center for Social Impact, Oakland, CA, USA"}, {"name": "Sonia Koshy", "affiliation": "Kapor Center for Social Impact, Oakland, CA, USA"}], "tags": ["cs engagement", "cs aspirations", "cs resilience", "underrepresentation", "social and emotional learning", "persistence in cs"]}, {"title": "Session details: Lightning Talk #1", "link": "https://dl.acm.org/doi/10.1145/3247874", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}], "tags": []}, {"title": "Exploring a Student-centered Approach to Innovating Computer Science Education: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162218", "abstract": "This lightning talk will present experiences from using a student-centered approach when implementing educational innovations in computer science programs. The Norwegian Center for Excellent IT education (Excited) is currently researching new ways to organize computer science education and innovative educational structures. By involving students from day one of the research and development process we hope to learn more about what educational and structural changes and innovations are most effective and why. However, we have faced some challenges in this effort. One challenge is the fact that many of the courses in need of innovation has a large student population. This can make it difficult to implement changes without substantial bureaucracy and organizational efforts, as well as the risk of damaging the students' educational progress. Another challenge is that the students do not respond well to the proposed changes. This was somewhat surprising; however, it is a problem that must be solved in order to succeed in creating better computer science education. Therefore, we have proposed using a student-centered approach to the implementation and evaluation of new initiatives. By organizing changes in smaller pilot-groups with students involved the whole time, we can hopefully reduce the bureaucracy and risk attached to changing large and important courses. Additionally, with the students involved every step of the way the resistance to change might decrease. The project has just begun, and this talk will present the initiative in more detail, experiences from the first semester and further plans.", "authors": [{"name": "Trond Aalberg", "affiliation": "Norwegian University of Science and Technology, Trondheim, Norway"}, {"name": "Madeleine Lor\u00e5s", "affiliation": "Norwegian University of Science and Technology, Trondheim, Norway"}], "tags": ["student-centered research", "course organization", "computer science education", "curriculum design"]}, {"title": "Interactive, Language-neutral Flowcharts and Pseudocode for Teaching Core CS0/1 Programming Concepts: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162229", "abstract": "Introductory programming courses often use a full-featured programming language, such as Python, Java, or C++, wherein students concurrently learn programming concepts along with language syntax. However, many instructors believe that learning programming concepts first, then learning a specific language's syntax, may be more effective than learning both concurrently. Thus, some courses first teach programming via flowcharts and pseudocode. Some tools and materials support teaching programming via flowcharts, but we felt much improvement was needed. Therefore, we developed a new flowchart language, named Coral-Charts, specifically intended to teach fundamental programming constructs like assignments, branches, loops, functions, and arrays. We developed a web-based graphical simulator for Coral-Charts; no local tool installation is necessary (unlike the most common existing flowchart tool). The simulator always displays the values of variables, which helps students comprehend the impact of statements. The simulator enforces a layout that intentionally mirrors textual code's top-to-bottom execution and sub-statement indentation, easing the transition to a textual language. Furthermore, we defined a new pseudocode-like language, named Coral (corallanguage.org), that is executable and that matches Coral-Charts. Syntax is ultra-simple and only essential constructs are included. Certain features automatically detect or eliminate many new-learner errors. Students can type Coral code, from which a Coral-Charts flowchart is auto-generated, and students can execute both the code and flowcharts. Coral was carefully designed to naturally lead into languages Python, Java, or C++. Coral and Coral-Charts are used in the textbook Fundamental Programming Concepts (zybooks.com/catalog/fundamental-programming-concepts). We welcome feedback on the approach and potential collaborators in implementing experiments.", "authors": [{"name": "Frank Vahid", "affiliation": "University of California, Riverside & zyBooks, Riverside, CA, USA"}, {"name": "Alex Edgcomb", "affiliation": "zyBooks & University of California, Riverside, Los Gatos, CA, USA"}], "tags": ["pseudocode", "cs1", "flowcharts", "programming concepts", "language-neutral", "interactive", "cs0"]}, {"title": "Designing Active Mediated Learning Tasks: Can Small Failures Enhance Student Learning? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162212", "abstract": "This lighting talk provides a literature review that supports the concept that small failures can have a positive effect on learning compared with more traditional scaffolding techniques that prevent students from failing. From a sociocultural approach to education, scaffolding is provided through mediated dialogue within the students' zone of proximal development (ZDP) to minimize failure. However, productive failure has been found to promote wider exploration and to provide deeper learning experiences by assisting learners to self-identify knowledge gaps. Related to the idea of scaffolding in teaching, is the concept of task difficulty. Selecting problem-solving tasks that are neither too difficult nor too easy is critical in assisting learning as this reduces learner frustration and can foster development of learner self-efficacy. Many issues need to be addressed when exploring the ideal mediated task difficulty including: (1) how to assess learners' ZDP, (2) how to find an adequate balance between challenging tasks that seek to traverse learners' ZPD and the degree and type of failure they can trigger, and (3) how to provide support to learn from experienced failure. Our first goal, in collaboration with interdisciplinary multi-institutional partners, is to design sequenced activities that ask students to attempt a problem-solving task prior to any instruction/scaffolding activities usually provided to guide task completion. This will trigger foreseeable small failures, which can be used as learning opportunities. Note that this approach may not only foster learning, as observed at high school level, but also build resilience.", "authors": [{"name": "Olga Sanchez Castro", "affiliation": "Flinders University, Adelaide, Australia"}, {"name": "Cruz Izu", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["knowledge gap", "learning mechanisms", "productive failure"]}, {"title": "Interest-driven Coding Projects: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162215", "abstract": "This lightning talk describes considerations for designing interest-driven coding projects. I provide examples of what an interest-driven coding class looks like and how projects are designed for a variety of experience levels and interests within a shared space. I discuss some of the research informing this approach, share examples of interest-driven projects, and provide suggestions for creating interest-driven coding projects and resources.", "authors": [{"name": "Jared O'Leary", "affiliation": "BootUp and Arizona State University, Tempe, AZ, USA"}], "tags": ["coding", "project-based learning", "interest-driven", "computer programming"]}, {"title": "IRT in 5 Minutes: Easy Ways to Better Understand an Assessment (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162211", "abstract": "This lightning talk will give a very quick introduction to \"Item Response Theory\", or IRT. IRT evolved from psychometrics as one method for evaluating the Quality of survey questions. In the classroom, IRT is a fantastic way to gain better insights into the quality and efficacy of the assessments we offer. IRT has been used by testing companies to evaluate exams like the GRE, SAT, and AP, but the same ideas can be applied to our classrooms. By applying some ideas from IRT we can start to look at exam scores with just a few simple charts, and we can begin to assess whether assigned questions are effective. We'll start by looking at correlations between individual question scores and overall assessment scores. While this is a simplification of IRT, we'll look at how we can use it to diagnose potential exam errors. The goal is to better understand the exams we give our students, and we can use this as a jumping off point to continue to evaluate our assessments.", "authors": [{"name": "Michael Ball", "affiliation": "UC Berkeley, Berkeley, CA, USA"}], "tags": ["grading", "assessment", "grading analysis", "irt", "item response theory"]}, {"title": "Facilitating Multiple Programming Languages in One Space: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162214", "abstract": "This lightning talk describes considerations for facilitating multiple programming languages in one space. I provide video examples of what it looks like when young coders select from four different programming languages to create projects of interest. Following an overview of what coders created in the classes I designed and facilitated, I discuss considerations for simultaneously facilitating multiple languages. This discussion includes quick suggestions for selecting and creating resources, questioning techniques, peer-to-peer mentoring, room setup, and more.", "authors": [{"name": "Jared O'Leary", "affiliation": "BootUp and Arizona State University, Tempe, AZ, USA"}], "tags": ["peer-to-peer mentoring", "coding", "room setup", "resources", "facilitation", "computer programming", "questioning"]}, {"title": "We Should Give Messy Problems and Make Students Reflect on What They Learn: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162225", "abstract": "We often give students large projects because solving them teaches students so much. If we give them messy problems with a lot of structured ambiguity, we can make it so that they learn even more because they will have to really think about the problems they are solving. This concept is often applied through project/problem-based learning. If only this were true, we could just give our students a lot of poorly defined problems and in so doing create extremely competent graduates. The idea breaks down because we as faculty think about how much students will learn from the process and gain insight through doing, while students tend to focus on their final product/grade and ignore the journey. Students learn a lot but not as much as they could. The problem is not with the projects and their intrinsic messiness but instead with our students' focus. We propose the concept of messy learning, which couples project/problem-based learning with reflection to solve this problem. Messy learning involves giving deliberately ambiguous problems where we want students to focus on learning about how to solve the ambiguous parts of the problem. Reflection is the method that we propose to use to make the messy learning projects effective for our students by using it to focus attention on appropriate parts of the messy problems.", "authors": [{"name": "Paul Dickson", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["reflection", "project based learning", "messy learning", "problem based learning"]}, {"title": "Teaching Students a Systematic Approach to Debugging: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162222", "abstract": "This lightning talk presents new free, online material to provide new programmers with a solid foundation in debugging. Nearly every instructor who teaches programming notices that students have weak debugging skills. Faced with a failing program, many students make random changes and hope things improve. Or they shrug their shoulders, say \"I have no idea what/s wrong\", and ask an instructor for help. Most textbooks and websites provide insufficient coverage or training of debugging. This new material teaches a basic systematic process for debugging: Create a hypothesis, test the hypothesis, repeat. Seems obvious, but it/s not to most students. The material first teaches a general troubleshooting process using everyday systems, like smartphones can cars. With a solid foundation of the basic systematic process, the material then teaches basic debugging using a generic programming language. The material starts from the basics, following that adage that one must walk before they can run. Students typically don/t have the concept of \"Hypothesize / Test\". But after repeated examples that stress those items, they will hopefully have developed a habit of thinking of troubleshooting more systematically. The material is targeted at the fifth week of a CS1 course, when students have some programming experience and are beginning to face harder debugging challenges, but is also beneficial for any programming class beyond CS1, where it could be used in the first week. The material is delivered as free two-chapter online book available with sign in at http://www.zybooks.com/catalog/troubleshooting-basics/.", "authors": [{"name": "Frank Vahid", "affiliation": "University of California, Riverside, Riverside, CA, USA"}, {"name": "Roman Lysecky", "affiliation": "University of Arizona, Tucson, AZ, USA"}], "tags": ["troubleshooting", "debugging", "programming"]}, {"title": "Improving Course Content and Providing Intelligent Support Simultaneously: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162233", "abstract": "This lightning talk describes our current effort to create a system that helps teachers organize the content of their computer science courses while simultaneously providing a basis for intelligent support. This work blends the disciplines of computer science education, artificial intelligence in education, and instructional design to create a holistic system that helps teachers create a unified vision of their course from diverse learning resources and assessment techniques. The vision is created in the form of a concept map with links to external materials and assessments (including traditional materials like textbooks and exams, and more advanced technology like online interactive practice environments). We are creating these concept maps for our computer science curriculum at Ithaca College and we have found clear benefits to organization and content. Beyond these improvements to courses, we seek to use the resulting concept map to offer intelligent support for students and instructors. Students can benefit by seeing their assessment automatically summarized by concept rather than by assignment, and receive suggestions of materials crucial to their understanding. Instructors can benefit from assessment summaries about individuals/ or entire classes/ understanding of specific concepts. The system can also make recommendations for dynamic groups to be formed for short-term in-class collaboration. Currently we have basic prototypes of this functionality and we/re seeking feedback from others who may have engaged (even informally) in similar techniques, as well as any collaborators who are interested in trying this technique in their courses or integrating their materials with our system.", "authors": [{"name": "Toby Dragon", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["authoring course content", "instructional design (id)", "intelligent tutoring systems (its)", "concept maps"]}, {"title": "Recruiting Experts: Toward a Concept Inventory for Computer Science 2 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162210", "abstract": "A concept inventory is a research-based multiple-choice test that measures a student's knowledge of a set of concepts while also capturing conceptions and misconceptions they may have about the topic under consideration. It can aid educators and researchers in a variety of ways. When administered at both the beginning and end of a course, it measures the amount of knowledge that students gain during the course. For a given student, a concept inventory points out the topics that they need to focus on and can give their instructor specific misconceptions to tackle. For a researcher, concept inventories routinely administered at the end of a course show the effects that different teaching methods have on student understanding. Concept inventories for computer science currently exist for many topics but not for a course on basic data structures, commonly refereed to as Computer Science 2 (CS2). To aid in assessing students' understanding of the material of this core course in the computer science curriculum, we are developing a concept inventory for CS2. We are seeking input from instructors and researchers with knowledge and experience of CS2 (experts) to establish the set of important and challenging topics that are fundamental to a CS2 course, using an iterative consensus-reaching methodology (the Delphi method). These topics will be used to create a concept inventory, which will then undergo validity and reliability checking. Interested members of the SIGCSE community are invited to attend the presentation and consider participating as experts.", "authors": [{"name": "Meriel Huggard", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "Lea Wittie", "affiliation": "Bucknell University, Lewisburg, PA, USA"}, {"name": "Anastasia Kurdia", "affiliation": "Tulane University, New Orleans, LA, USA"}], "tags": ["cs2", "delphi method", "concept inventory", "assessment", "data structures"]}, {"title": "OpenCSF: An Online Interactive Textbook for Computer Systems Fundamentals (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162226", "abstract": "The goal of the OpenCSF project is to develop an on- line, interactive textbook focused on the Computer Systems Fundamentals (CSF) Core Tier 1 teaching objectives of the ACM 2013 Computing Curriculum. This area includes material that would traditionally be taught in courses such as Computer Organization, Operating Systems, Computer Networks, and Parallel & Distributed Systems. The CSF Knowledge Area highlights the most vital concepts and themes for these courses, emphasizing that this material should be core for all CS graduates. OpenCSF is built on the OpenDSA framework. This framework includes built-in capabilities for interactive activities designed to assess student reading comprehension. Furthermore, as a web-based resource, the intention of OpenCSF is to use HTML5 features to support interactive illustrations and exercises embedded along with the readings. Additionally, the OpenDSA framework supports integrating these activities with the Canvas Learning Management System to track student reading completion; this feature is not currently enabled in OpenCSF. At the time of this writing, drafts of five chapters have been written: Processes and OS Basics; Concurrency with IPC; Multithreading; Synchronization Primitives; Synchronization Problems. The goals for this lightning talk are to demonstrate these initial chapters, to discuss plans for future interactive components, and to gather feedback from those present. OpenCSF is publicly available at https://opencsf.org/.", "authors": [{"name": "Michael S. Kirkpatrick", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["computer systems fundamentals", "interactive textbook", "opencsf"]}, {"title": "Developing Computer Forensics Minor -- Challenges and Opportunities: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162216", "abstract": "This lightning talk will discuss our experience of developing and managing a new Computer Forensics Minor. The Computer Forensics minor is an interdisciplinary program that integrates criminal justice and computer science and combines both theoretical concepts and practical skills to prepare students for a career in computer forensics-related fields. Students will be prepared for a career in law enforcement or corporate security as a digital investigator and evidence examiner as well as pursue graduate education in the area of information security, digital forensics, or law. The lighting talk will describe the various stages in developing the minor including an analysis of competitive academic programs, evaluation of the current resources, qualifications and faculty considerations, the process of developing the program objectives and learning outcomes, and assessment strategies. The program will be run jointly by Criminal Justice and Computer Science departments, and faculty will communicate regularly to track the number of students in the minor and their progress through the curriculum. Both departments will ensure that the minor provides appropriate course content and learning experiences for graduates seeking employment. In our discussion, we will focus on challenges of designing the balanced curriculum to make it accessible for criminal justice and other non-computer science/computer information systems majors, the need of designing new courses and renovating existing courses to answer growing need to address this new emerging field. Lightning talk will also discuss the anticipated cost of the program, required resources, recruitment strategies, and the administrative approval mechanism.", "authors": [{"name": "Yana Kortsarts", "affiliation": "Widener University, Chester, PA, USA"}, {"name": "Adam Fischbach", "affiliation": "Widener University, Chester, PA, USA"}, {"name": "Suk-Chung Yoon", "affiliation": "Widener University, Chester, PA, USA"}], "tags": ["computer forensics", "interdisciplinary programs"]}, {"title": "Bitcoins, Blockchains and Cybersecurity: Teaching Emerging Technologies in the Classroom (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162213", "abstract": "This lightning talk describes the current effort to distill the essence of the growth of bitcoins, blockchains and their implications to cybersecurity. Crypto currencies are becoming popular with banks, consumers and various industries. There is a need for consumers to understand the basic underlying technology behind these crypto currencies and the underlying security risks and concerns. This talk provides a broad overview of the topic and the benefits/risks involved. This talk also describes how these topics are integrated into a classroom curriculum in a standard business and accounting course found in many universities.", "authors": [{"name": "Debasis Bhattacharya", "affiliation": "University of Hawaii Maui College, Kahului, HI, USA"}], "tags": ["bitcoins", "blockchains", "cybersecurity"]}, {"title": "Session details: Lightning Talk #2", "link": "https://dl.acm.org/doi/10.1145/3247875", "abstract": "No abstract available.", "authors": [{"name": "S. Monisha Pulimood", "affiliation": "The College of New Jersey"}], "tags": []}, {"title": "Using Scapy in Teaching Network Header Formats: Programming Network Headers for Non-Programmers (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162228", "abstract": "ntroductory computer networks courses often include descriptive coverage of the network protocol headers. A straightforward listing of the headers and their meanings can lead to questions like \"Will this be on the test\"? Programming exercises may involve selecting values for some aspects of a protocol but tend to abstract away the details, and depend on prior programming skills. In addition, campuses without dedicated network lab facilities may have limited ability to experiment with protocols on an existing institutional network. The Python-based Scapy package provides explicit, detailed control of the contents of header fields, and includes graphical visualization features that offer easy feedback. Programming ability is helpful but not necessary; the interactive Python environment permits step-by-step and guided exploration of the various protocols. Effective use of scapy requires root (administrator) privileges; a virtual machine environment such as that provided by Oracle VirtualBox allows complete control and access to the operating system. This talk is about scapy-based lab modules that the author is developing, which provide active, hands-on exposure to and manipulation of network headers. So far, a Transport-layer activity and a preliminary Link-layer activity have been written. The current activities will be discussed, along with ideas for additional modules.", "authors": [{"name": "Robert Montante", "affiliation": "Bloomsburg University of Pennsylvania, Bloomsburg, PA, USA"}], "tags": ["scapy", "python", "network protocols"]}, {"title": "Linked-List vs Array in Memory: an Unplugged Active Learning Experience (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162220", "abstract": "Experience for yourself an unplugged active learning experience to understand how arrays are stored in memory differently than linked-lists. You will participate in a short demo just as my students experience this exercise, to gain a fuller understanding of how to apply this in your own classroom. Each student receives a card with a memory address. Inside the card, if it is allocated for a linked list then there is a letter and a next pointer; if it is part of an array there is just the letter. First the students with addresses for the array stand up; acknowledge how they are all contiguous in memory. Next, the student with a head pointer stands up and calls out the address they are pointing to. The student with that address on their card stands up, and calls out the address of their pointer. This continues until a student calls out their pointer is NULL. Now acknowledge how distributed through memory a linked-list can be! Come see how powerful learning can be with this physically engaging exercise! Successfully used in classes up to 200 students.", "authors": [{"name": "Elizabeth Boese", "affiliation": "University of Colorado - Boulder, Boulder, CO, USA"}], "tags": ["active learning", "memory", "arrays", "linked-lists"]}, {"title": "An HTML5 Browser Application for Modeling and Teaching Linked Lists: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162232", "abstract": "It is often difficult to teach dynamic data structures such as linked lists by modeling them on a static medium such as a white board or slides. This lightning talk introduces Dynamic Data Structures-Linked List (DDS-LL), an HTML5 browser application that allows the user to build and manipulate graphical models of linked lists. DDS-LL is not an algorithm visualization tool. Instead the user models their data using only actions that are consistent with a language such as Java. Nodes must be instantiated and linked together. Lists must be traversed to access a node. Reference assignment is modeled by dragging links. DDS-LL removes the old links, keeping the model accurate. With the wrong reference assignment, garbage can be created. Though still under development, DDS-LL has been used in an introductory data structures course to motivate linked lists, trace algorithms, and model scenarios. Its use provided several benefits. Scenarios can be prepared ahead of time. Models can be manipulated without drawing/erasing the white board. Scenarios can be quickly reloaded in response to student questions. Since the original intent of this tool was to assist the instructor with modeling linked lists, no attempt was made at this time to measure the impact on student engagement or learning. After a quick introduction to DDS-LL, this talk discusses the instructor's experience using it in the classroom, and presents some possible enhancements, including features to allow the tool to be used for student assignments. Handouts and links to online resources will be provided at the talk.", "authors": [{"name": "Robert Ravenscroft", "affiliation": "Rhode Island College, Providence, RI, USA"}], "tags": ["data structures", "visualization", "web based.", "algorithms"]}, {"title": "Teaching Deduction Using Athena and Related Tools: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162208", "abstract": "\"Logic for Computer Science\" courses have traditionally emphasized algorithmic approaches: Resolution, Semantic Tableau, and Sequent Systems. The Athena System, described in a new book (\"Fundamental Proof Methods in Computer Science\" by Konstantine Arkoudas and David Musser, MIT Press, 2017), emphasizes Natural Deduction. Natural Deduction has the well-known advantage of matching human intuition. Athena is a language that combines computation and deduction, and is a system to aid the development of natural deduction proofs. The central insight realized in Athena is that the development of a proof is similar to the development of programs using stepwise refinement. Athena is not a theorem prover, but is integrated with theorem provers and SMT solvers. Athena users can make use of these integrated tools without having to learn details of the usage of these tools, as Athena provides seamless integration with these tools, and a convenient interface to these tools for Athena users. While Athena uses these tools to aid the development of natural deduction proofs, I have found that a combined use of Athena with theorem provers, SMT solvers and model builders can help impart to students a more well-rounded introduction to deduction.", "authors": [{"name": "Ramachandra B. Abhyankar", "affiliation": "Indiana State University, Terre Haute, IN, USA"}], "tags": ["deduction", "formal methods"]}, {"title": "Using Discord to Understand and Moderate Collaboration and Teamwork: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162231", "abstract": "This lightning talk describes our current effort to implement and use Discord - a new tool to facilitate group work that an instructor can use to moderate the level of group participation of students. By utilizing Discord's features to their full extent, an instructor can actively moderate the group's interactions, keep track of who is/isn't participating, and even send messages to student groups. Instructors have the ability to create a Discord server, which acts as a virtual classroom, and then use the server to store student accounts, sort students into groups, and enable group chatrooms. Within these chatrooms, the instructor can observe for language, how well teams are keeping on task, and most importantly, level of participation. This tool keeps students accountable for how often they collaborate with the team by using a chat log with timestamps that the instructor can audit. A goal of implementing Discord is to introduce a user-friendly tool that instructors can use to moderate group interactions and hold students accountable for their level of participation within their groups. A second goal of this project is to utilize the ability to programmatically access the communications in an effort to automate content and sentiment analysis to determine team effectiveness.", "authors": [{"name": "Lisa Lacher", "affiliation": "University of Houston - Clear Lake, Houston, TX, USA"}, {"name": "Cydnee Biehl", "affiliation": "University of Houston - Clear Lake, Houston, TX, USA"}], "tags": ["communication", "collaboration", "teams", "computer science", "group work", "collaboration tools", "team work"]}, {"title": "SLASH: Automatically Generating Flash Cards for Reviewing Concepts in Lectures Slides (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162224", "abstract": "We present SLASH, a learning tool currently under development in our graduate program. SLASH aims to help students review concepts in lectures slides using flash cards automatically generated from the slides. Many courses in our program have weekly quizzes and students can get stressed quite easily. So we hope that SLASH can make the process of reviewing lectures more fun and interesting to the students. Extracting concepts from lectures slides is itself an interesting but challenging problem, since the contents of the slides may be fragmented (e.g., point-based, with an incomplete sentence for each point) and noisy (e.g., containing formulas and codes). Past research on text mining has tried to \"glue\" together the points to construct a grammatically correct sentence, which is then used to extract concepts and relationships. In contrast, we focus on discovering popular concepts in the slides and generating flash cards with (just) sufficient contexts to help students recall the concepts. To the best of our knowledge, this is the first work on the automatic generation of concept-based flash cards from lecture slides. In the presentation, we will show our preliminary work, example flash cards, student feedback, and challenges in developing SLASH. We believe that SLASH may benefit all instructors who are using PowerPoint for lecture presentation, and may be used to largely stimulate students' interests in learning the subjects.", "authors": [{"name": "Wensheng Wu", "affiliation": "University of Southern California, Los Angeles, CA, USA"}], "tags": ["knowledge discovery", "lecture slides", "concepts", "flash cards", "natural language processing"]}, {"title": "Computer Programming Training for Under-Served Groups: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162221", "abstract": "This Lightning Talk describes a current effort to create an online learning system to address the unique learning needs of under-served groups. To ensure success in the most challenging scenarios, our first project iteration targets United Sates migrant farm workers and their families. Our goal is to teach migrant farm worker parents and children computer programming. Central to our project is the introduction of a new learning delivery model, the LMS/Support Model. The primary components of the model are: 1) a learning management system, featuring an open source course on the Go Programming Language hosted on a corporate cloud service), 2) live tutoring support provided by bilingual volunteers, and 3) a solar-powered, mobile wi-fi network on school buses. We have created the first course iteration and have made initial contact with a few non-governmental organizations (NGOs). We seek to form an interdisciplinary cadre, with scientists from the following fields: computer science, sociology, psychology and political science. We also seek to interface our educational effort with established social service efforts of universities near a high concentration of migrant farm workers. Our model scales well and can be replicated nationally and internationally. Successful deployment of our model in its initial iteration will significantly impact the lives of tens of thousands of overlooked migrant farm worker families. More importantly, it will lay the foundation for changing the lives of millions of children and adults internationally. In our allotted five minutes, we will discuss project details, assessment instruments and our inspiration for the project.", "authors": [{"name": "Dante Ciolfi", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["learning management system", "mooc", "online education", "personalized learning", "massive open online course", "under-served.", "migrant farm worker", "lms"]}, {"title": "Toward Teaching Strategies for Block-based Languages: Possibilities, Challenges, and Experiences (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162209", "abstract": "Since the emergence of block-based visual programming languages as a new take on programming environments, they have served as a successful entry point into programming for novice learners. Over time, they have been developed and improved to become increasingly accessible, intuitive, and easy to use. In the course of this evolution, both uncommon and entirely new language concepts have been introduced, such as the cloning of objects, or nesting of sprites. However, the question of how to teach them has yet to be answered: the mostly visual representation of program flow, output and code, and the way a user interacts with these aspects can make traditional teaching practices inadequate. Instead, block-based languages require new practices, methods, and strategies, which will be developed in this research project. Therefore, this Lightning Talk presents the initial findings of a research project concerned with the theory of teaching block-based programming. In a preliminary study, we have identified new concepts found in members of the most common block-based language family. In the next phase of the project, strategies for teaching these new concepts will be developed and assessed. This phase will be the focus of this Lightning Talk.", "authors": [{"name": "Sven Jatzlau", "affiliation": "Friedrich-Alexander Universit\u00e4t, Erlangen-N\u00fcrnberg, Germany"}, {"name": "Ralf Romeike", "affiliation": "Friedrich-Alexander Universit\u00e4t, Erlangen-N\u00fcrnberg, Germany"}], "tags": ["visual programming languages", "scratch", "block-based languages", "gp", "language concepts", "snap"]}, {"title": "Evaluating the Impact of the Girls Who Code Summer Immersion Program: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162223", "abstract": "Girls Who Code, a national nonprofit founded in 2012 with the mission to close the gender gap in the computer science (CS) fields, has reached tens of thousands of girls through our CS enrichment programs. To date, our Summer Immersion Program (SIP) has provided nearly 5,000 rising 11th- and 12th-grade girls from across the U.S. with the opportunity to engage in a seven-week introductory CS course. In this lightning talk we will describe our recently established Research Team's efforts to understand the ways SIP is affecting girls, describe challenges and limitations of this work, and offer a glimpse at how we hope to assess the program's longer-term impact on CS persistence and longevity by leveraging our organization's growing alumni network.", "authors": [{"name": "Ryan Clarke", "affiliation": "Girls Who Code, New York, NY, USA"}, {"name": "Sarah Judd", "affiliation": "Girls Who Code, New York, NY, USA"}], "tags": ["computational thinking", "k-12 education", "computer science education"]}, {"title": "Benefits of Exposure Programs to K12 Student Interest in Computer Science: (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162227", "abstract": "This lightning talk describes the benefits of exposing K12 students to Computer Science through short camp programs. The CS@SC Summer Camps (http://summercamps.usc.edu), founded jointly with the Institute for Education, provide girls, minorities, and low-income K12 students with an opportunity to learn about Computer Science through one week camps held during summer. Now in our third year, the camps have given nearly 1500 students the experience of being in college for a week on campus at the University of Southern California, changing classrooms, eating at the dormitory cafeteria, seeing college students in their natural environment, and learning from current Computer Science majors. Students learn about Computer Science through programming platforms, including Scratch Jr. (K-2nd), Scratch (3rd-8th), Java (7th-12th), and Python (7th-12th). The camps are provided for free or reduced cost based on donations from individuals and organizations. Through camp surveys, student interest in STEM fields raises from around 50% of students highly interested to over 80% by the end of the camp. Although the camp is only 32 hours long, early exposure to Computer Science can provide students of all ethnicities (nearly 75% of the attendees are Hispanic or African American) and genders (47% of the attendees are girls) with the foundation needed to prepare them for making an educated decision about STEM careers.", "authors": [{"name": "Jeffrey Miller", "affiliation": "University of Southern California, Los Angeles, CA, USA"}], "tags": ["camp programs", "k12 education", "computer science education", "summer camps"]}, {"title": "Exploring Computer Science Beyond High School: Introducing Career and College Pathways (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162217", "abstract": "There is currently a dire need to improve efforts to integrate a better understanding of career and college pathways in all computing fields into our Computer Science (CS) curricula; versus continuing to label and advertise everything we do as \"computer science\". This effort is essential to improving post-secondary opportunities for students being introduced to computing through the nationwide CS for All commitment. For high school students in Chicago, this effort starts with Exploring Computer Science (ECS), which serves as our foundational CS course at CS4All@CPS, now that CS is a graduation requirement. I am examining the potential long term outcomes and benefits of segmenting each unit of ECS -- Human Computer Interaction, Problem Solving, Web Design, Programming, Big Data, and Robotics -- into different fields of computing and identifying the skillsets gained in these computing fields in order to articulate this to students with these interests. This effort is just underway and those interested in providing students with post graduation opportunities, as well as those personally interested in exploring career and college opportunities in computing fields, are invited to attend this talk, share feedback, and consider collaborating with CS4All.", "authors": [{"name": "Abril Vela", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}], "tags": ["education programs", "computing education", "exploring computer science", "k-12 education", "college pathways", "career pathway"]}, {"title": "Asset Maps: A Simple Tool for Recruiting and Retaining Underrepresented Populations in Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162230", "abstract": "Asset maps serve as a simple, yet impactful tool for helping underrepresented groups connect with important people, programs, and resources that would support their recruitment and retention in computing. At the end of this talk, individuals will walk away with a list of steps that they can use to develop a comprehensive map that could be distributed immediately to current and future computer science majors (including high school seniors). These steps include identifying current assets within an array of existing categories (e.g., tutoring centers, individual faculty mentors, local chapters of computing associations) designed to help mappers think expansively about existing supports. Additional steps involve reviewing contact lists and asking others to assist in the identification of assets, performing internet searches of the school/organization website looking for key words, and reading through the university directory to highlight offices that work on diversity issues or support the individuals targeted. The assets can be plotted directly onto a campus map and supplied to underrepresented groups so they are aware of and can locate the resources and supports available to them. (An enhancement would be an online version that links directly to web pages, contact information, and directions to further increase the accessibility of supports.)", "authors": [{"name": "Adrienne Smith", "affiliation": "Cynosure Consulting, Apex, NC, USA"}, {"name": "Rebecca Zulli", "affiliation": "Cynosure Consulting, Apex, NC, USA"}], "tags": ["asset map", "underrepresented groups", "higher education", "retention", "recruitment"]}, {"title": "The Dual Ladder -- Academic vs. Industrial Experience: What kind of Experience should Computer Science Students Gain during their Undergraduate Studies and How? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/3159450.3162219", "abstract": "In the industry, the Dual Career Ladder allows employees to be promoted along either a supervisory or technical track. Such programs are common in the engineering, scientific and medical industries. In the Lightning Talk, I will borrow the metaphor of Dual Ladder and explore two kinds of experience -- academic and industrial experience -- that undergraduate computer science students can be offered to equip them with the needed tools for the future job market. Specifically, I will address the questions: What kind of real world experience should undergraduate students in computer science get and how? How should answers to this question be expressed in the computer science undergraduate programs? My talk will focus on the case of Israel -- the Start Up Nation (Senor and Singer, 2009) -- and the crucial role of computer science graduates in this job market. Data will be presented from the Technion -- Israel Institute of Technology, which is the ranked 1st among the Israeli universities. I will share our findings and data analysis, and propose possible ways to let students get both an academic and industrial experience in a way that prepare them both for academic and industrial careers.", "authors": [{"name": "Orit Hazzan", "affiliation": "Technion -- Israel Institute of Technology, Haifa, Israel"}], "tags": ["academic careers", "industrial careers", "computer science education", "professional skills", "undergraduate cs studies"]}]