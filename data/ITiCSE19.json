[{"title": "Designing for a Connected World", "link": "https://dl.acm.org/doi/10.1145/3304221.3319795", "abstract": "The march of the digital frontline seems to have relentlessly vaporised so much of what is around us and sent it to the cloud. With our heads now so often stuck in those clouds we seem to be losing touch of what is physically around us; including each other. What if we could add a digital soul to everyday objects and design, prototype and manufacture physical products almost as quickly as digital experiences? My work is a journey towards attempting to let some of this happen.", "authors": [{"name": "Kate Stone", "affiliation": "Novalia Ltd., New York, NY, USA"}], "tags": ["conductive ink", "print", "disappearing technology", "capacitive touch", "internet of things", "magical"]}, {"title": "Identity and Belonging for Graduate Apprenticeships in Computing: The experience of first cohort degree apprentices in Scotland", "link": "https://dl.acm.org/doi/10.1145/3304221.3319753", "abstract": "In September 2017, our university's first graduate apprentices began degrees in Software Development, Cybersecurity, and Information Technology Management for Business. This study explores how apprentices experience their association with the university and identities as students, but also employees. In Scotland, Graduate Apprenticeships (GAs) are undergraduate degrees in which the students are in full-time employment, while completing degree modules over four years, as for a traditional full-time degree. The curriculum follows a skills framework designed by employers so that graduates have the professional and technical attributes required by the industry. The degrees parallel Degree Apprenticeships in England, though there are national differences in implementation. Themes of identity and belonging are central to current investigations of the experience of STEM students, especially computing students, as fewer students choose STEM courses, and many transfer out of their subjects or do not complete their degrees. The research hypothesis is that the apprentices' employment will provide a strong IT professional identity supports their progress at university. Semi-structured interviews with apprentices in the first computing cohorts explored their situated perspectives. Responses were identified which concerned the apprentices' identity as students or employees, including themes around belonging. Thematic analysis of these responses revealed that apprentices defined themselves in opposition to traditional student identities and did draw strength from their identity as employees. They experienced belonging specifically within their GA cohort-the first of its kind in the university. A better understanding of identity and belonging can be used by universities to address the challenges of retention.", "authors": [{"name": "Ella Taylor-Smith", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}, {"name": "Sally Smith", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}, {"name": "Colin Smith", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}], "tags": ["work-based learning", "belonging", "graduate apprenticeship", "degree apprenticeship", "identity"]}, {"title": "Understanding CS Undergraduate Students' Professional Identity through the lens of their Professional Development", "link": "https://dl.acm.org/doi/10.1145/3304221.3319764", "abstract": "Academic institutions play a crucial role in the development of students' professional identities. However, we have limited knowledge of how computing professional identity develops. This paper aims to understand how CS undergraduate students develop their professional identity through analyzing students' reflection on their career goals, experiences in CS degree programs, and engagement in professional development. We present findings from qualitative analysis of 14 semi-structured interviews with CS undergraduate students in the United States. We found that CS undergraduates form their computing professional identity typically between Years 2-3 of their degree programs. We identified several reasons students are committed to a computing profession: intrinsic factors (e.g., interest and perception of ability), and discipline-specific factors (e.g. utility and growth). We also found several factors that shape their professional identity: coursework, informal activities like hackathons, and professional development activities including internships and conferences. These findings suggest that the development of computing professional identity is not limited to students' involvement in the academic degree programs but the engagement they have with the broader computing community.", "authors": [{"name": "Amanpreet Kapoor", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["career choices", "professional identity", "professional development", "identity"]}, {"title": "The Impact of Self-Theories to Academic Achievement and Soft Skills in Undergraduate CS Studies: First Findings", "link": "https://dl.acm.org/doi/10.1145/3304221.3319766", "abstract": "There is strong evidence of the impact of self-theories to students' academic achievement and behavior in many domains of education, including CS. However, the research on self-theories in CSE are far from conclusive. In this research, we studied 1st year CS and CE students' self-theories and looked at associations to academic achievement in their first courses, as well as the students' conceptualisations of intelligence. Contradictory to previous research, students with a fixed view on intelligence received the best exam scores. Students' conceptualisations of intelligence were found to lean towards cognitive g-theories of intelligence. These initial findings show a number of crucially important future research directions in relation to self-theories, soft skills development, and academic achievement in CS studies.", "authors": [{"name": "Mikko-Jussi Laakso", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Mikko-Ville Apiola", "affiliation": "University of Turku, Turku, Finland"}], "tags": ["computer science education", "mindset", "implicit theories", "computing education", "educational psychology", "collaboration", "social skills", "technology education", "stem", "self-theories", "soft skills", "motivation"]}, {"title": "Identifying and Validating Java Misconceptions Toward a CS1 Concept Inventory", "link": "https://dl.acm.org/doi/10.1145/3304221.3319771", "abstract": "A misconception is a common misunderstanding that students may have about a specific topic. The identification, documentation, and validation of misconceptions is a long and time-consuming work, usually carried out using iterative cycles of students answering open-ended questionnaires, interviews with instructors and students, exam analysis, and discussion with experts. A comprehensive list of validated misconceptions in some subject can be used to build formal evaluation methods like the Concept Inventory (CI), a multiple-choice questionnaire that is usually performed as pre-post tests in order to assess any change in student understanding. In CS1, validated misconceptions were identified and documented in C and Python programming languages. Although there are studies related to misconceptions in the Java language, these misconceptions lack the formality, comprehensiveness, and robustness of their C and Python counterparts. On this work, we propose a methodology to adapt the validated misconceptions in C and Python to Java. Initially, through the analysis of an initial list of 33 misconceptions in C and 28 in Python, we identified and documented in an antipattern format 31 possible misconceptions in Java. We then developed a final term exam, composed of 7 open-ended questions, in which each question was designed to address some of the misconceptions covered in the course (N=27). Through the analysis of the exams answers (N = 69 students), it was possible to validate 22 of the misconceptions (81%). Also, 6 new misconceptions were identified, leading to a total of 28 valid misconceptions in Java.", "authors": [{"name": "Ricardo Caceffo", "affiliation": "State University of Campinas, Campinas, Brazil"}, {"name": "Pablo Frank-Bolton", "affiliation": "The George Washington University, Washington, DC, USA"}, {"name": "Rodolfo Azevedo", "affiliation": "State University of Campinas, Campinas, Brazil"}, {"name": "Renan Souza", "affiliation": "State University of Campinas, Campinas, Brazil"}], "tags": ["question", "programming", "inventory", "introductory", "choice", "misconception", "course", "cs1", "student", "java", "assessment", "multiple", "concept"]}, {"title": "Explaining Novice Programmer's Struggles, in Two Parts: Revisiting the ITiCSE 2004 working group's study using dual process theory", "link": "https://dl.acm.org/doi/10.1145/3304221.3319775", "abstract": "Identifying the cause of a problem is often much more difficult than identifying the problem. The ITiCSE 2004 working group, led by Raymond Lister, conducted a study following up on the McCracken group's finding that many novices struggled with presumedly easy coding tasks. Rather than a test of coding, Lister et al.'s participants completed multiple-choice questions to ascertain their level conceptual understanding of coding constructs. Lister and team reported that participants understood programming concepts yet lacked the consistent apply that knowledge to trace code. This paper revisits the analysis of two of twelve questions to reinterpret their data using dual process theory to explain novice inconsistencies better. Dual process theory describes cognition as two mechanisms: slow, focused, rational thinking versus quick, automatic, and effortless responses. The results suggest dual process theory changes the epistemological meaning of what is to 'know' how to program. Mature programmers utilize more than just knowledge of concepts, but also require speed and intuition obtained through practice. Dual process theory provides a new lens for assessing novice maturity and pedagogy in programming.", "authors": [{"name": "Tony Lowe", "affiliation": "Purdue University, West Layfayette, IN, USA"}], "tags": ["programming", "fragile knowledge", "tracing", "dual process theory", "education", "computer science"]}, {"title": "Novice Rationales for Sketching and Tracing, and How They Try to Avoid It", "link": "https://dl.acm.org/doi/10.1145/3304221.3319788", "abstract": "Prior research has shown that sketching out a code trace on paper is correlated with higher scores on code reading problems. Why do students sometimes choose not to draw out a code trace, or if they do, choose a different sketching technique than their instructor has demonstrated? In this study, we interviewed 13 CS1 students retrospectively about their decisions to sketch and draw on a recent programming exam. When students do sketch, we find that their sketching choices do not always align with a strict execution of the notional machine. Sketching choices are driven by a search for a program's patterns, an attempt to create organizational structure among intermediate values, and the tracking of prior steps and results. When novices don't sketch, they often report that they've identified the goal that the code achieves. In either case, novices are searching for the functionality of code, rather than merely tracing its behavior.", "authors": [{"name": "Shannon Ke", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Mark Guzdial", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Barbara Ericson", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Kathryn Cunningham", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}], "tags": ["tracing", "program visualization", "cs1", "sketching", "notional machine", "novice programmers", "external cognition"]}, {"title": "Non-restricted Access to Model Solutions: A Good Idea?", "link": "https://dl.acm.org/doi/10.1145/3304221.3319768", "abstract": "In this article, we report an experiment where students in an introductory programming course were given the opportunity to view model solutions to programming assignments whenever they wished, without the need to complete the assignments beforehand or to wait for the deadline to pass. Our experiment was motivated by the observation that some students may spend hours stuck with an assignment, leading to non-productive study time. At the same time, we considered the possibility of students using the sample solutions as worked examples, which could help students to improve the design of their own programs. Our experiment suggests that many of the students use the model solutions sensibly, indicating that they can control their own work. At the same time, a minority of students used the model solutions as a way to proceed in the course, leading to poor exam performance.", "authors": [{"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Henrik Nygren", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["introductory programming", "self-regulation", "sample solutions", "model solutions"]}, {"title": "Visual Portrayals of Data and Results at ITiCSE", "link": "https://dl.acm.org/doi/10.1145/3304221.3319742", "abstract": "We present an analysis of the visual portrayals of data (including results) in the full papers and working group reports of ITiCSE from 2013 to 2018. We find that tables are the most common visual portrayal of data in these publications, but that a number of graphical forms are also widely used. We examine the quality of the data portrayals for tables, graphs, and images using visual quality indicators derived from the literature. Overall, our findings are not positive. We find that many papers present data in such a way that it cannot be readily interpreted. The most common problem is captions that do not adequately describe the table, figure, or image. In tables, the main issues affecting readability of numeric data are poor alignment of numbers within a column, unnecessary notations, and unwarranted precision. In graphs and images, the prevalent problem is text that is too small to be read. We conclude with guidelines for future authors to ITiCSE and other computing education venues, in the hope that we can contribute to an improvement in the quality of computing education publications.", "authors": [{"name": "Kate Sanders", "affiliation": "Rhode Island College (Emerita), Providence, RI, USA"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Simple Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Sally Hamouda", "affiliation": "Rhode Island College, Providence, RI, USA"}, {"name": "Robert McCartney", "affiliation": "University of Connecticut, Storrs, CT, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["diagrams", "tables", "figures", "graphics", "graphs", "data", "results", "visualisation"]}, {"title": "A Survey of Introductory Programming Courses in Ireland", "link": "https://dl.acm.org/doi/10.1145/3304221.3319752", "abstract": "Between January and April of 2018, a comprehensive survey of introductory programming courses was undertaken across all sectors of Irish third-level institutions (universities, institutes of technology, and private colleges). The survey instrument was based on - and nearly identical to - recent surveys in the UK and Australasia. In total we report on 39 introductory programming courses at 25 third-level institutions. This includes 6 of 7 universities and 13 of 14 institutes of technology, representing 90% of all publicly funded institutions. We also report on 4 private colleges representing 80% of colleges in the Irish Higher Education Colleges Association that offer computing degrees.\nIn addition to general course structure and composition, we explore programming language use, the reasons for using them, and their impact on teaching and learning. We also gain first-hand insight from instructors through an analysis of their own course aims, and explore their viewpoints on teaching introductory programming. The results of this survey provide a unique insight into the CS1 courses of a single country that is currently introducing computer science at the K-12 level.", "authors": [{"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["ireland", "teaching languages", "united kingdom", "cs-1", "programming languages", "instructors", "uk", "cs 1", "survey", "cs1", "introductory programming", "australasia", "novice programmers"]}, {"title": "Helping Students Solve Parsons Puzzles Better", "link": "https://dl.acm.org/doi/10.1145/3304221.3319735", "abstract": "In a Parsons puzzle, the student must re-assemble the lines of a program that are provided in scrambled order, and eliminate any distracters included within the scrambled lines of code. We investigated two issues in terms of whether they helped students solve the puzzles better: 1) Would it be better to present distracters and the lines of code of which they are a variant paired together or randomly separated apart? 2) Would telling students that they would not be penalized for any mistakes they make before submitting a complete solution for the first time enable them to get closer to the correct solution when they first submit it? We conducted a controlled study over five semesters and used ANOVA to analyze the data collected from introductory programming students who solved Parsons puzzles on if-else statements. We found that when students were told that their puzzle-solving actions before the first submission would not be penalized, they took significantly more exploratory actions. But, their solution was not significantly closer to being correct. So, trial-and-error exploration was no better for solving Parsons puzzles than deliberate approach. Presenting distracters paired together with the original line of code was found to be beneficial only on the longer puzzle.", "authors": [{"name": "Amruth N. Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["grading schemes", "parsons puzzle", "distracters", "evaluation"]}, {"title": "The Relationship Between Students' Engagement and the Development of Transactive Memory Systems in MUVE: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3304221.3319743", "abstract": "The use of educational Multi-User Virtual Environments that provide synchronous interaction, interactive and social learning experiences have the potential to increase student engagement. Due to increased social and cognitive presence, the use of such environments can result in greater student engagement when compared to traditional asynchronous learning environments. In this work, we hypothesized that students' engagement in collaborative learning activities will increase if Transactive Memory System constructs are present. Thus, we employed the theory of TMS that emphasizes the importance of Specialization, Coordination and Credibility between members in a team. The results show that there is a significant correlation between the development of TMS and students' engagement.", "authors": [{"name": "Louis Nisiotis", "affiliation": "Faculty of Science, Technology and Arts (STA), Sheffield Hallam University, Sheffield, United Kingdom "}, {"name": "Styliani Kleanthous", "affiliation": "Cyprus Center for Algorithmic Transparency, Open University of Cyprus, Nicosia, Cyprus"}], "tags": ["transactive memory systems", "cscl", "engagement", "virtual worlds"]}, {"title": "Are There Differences in Learning Gains When Programming a Tangible Object or a Simulation?", "link": "https://dl.acm.org/doi/10.1145/3304221.3319747", "abstract": "Physical computing is about programming and interacting with a tangible object to learn fundamental concepts of Computer Science (CS). This approach presents several benefits regarding motivation, creativity, and learning gains. Yet, these learning gains hardly are compared with those resulting from the programming of a simulation of a tangible object. In this article we present the results of a comparative study that has been conducted to explore this issue. With this study, we aimed to determine whether the programming of a tangible object or its digital simulation yields significantly different learning gains. In the experiment we conducted, participants (aged 14-17 with little or no prior programming knowledge) were divided into two groups: one programmed a tangible electronic board (the BBC micro:bit) while the other programmed a simulation of it. The results of this experiment suggest that, while each group significantly improved their understandings of fundamental CS concepts (i.e., variables, conditions, and loops), no significant difference was found when comparing the learning gains between the two groups.", "authors": [{"name": "Gr\u00e9goire Fessard", "affiliation": "Institut Sup\u00e9rieur d'\u00c9lectronique de Paris, Paris, France"}, {"name": "Ilaria Renna", "affiliation": "Institut Sup\u00e9rieur d'\u00c9lectronique de Paris, Paris, France"}, {"name": "Patrick Wang", "affiliation": "Institut Sup\u00e9rieur d'\u00c9lectronique de Paris, Paris, France"}], "tags": ["comparative study", "computer science education", "digital computing", "physical computing", "block-based programming"]}, {"title": "New Entrants' Expectations of the First Year Computer Science Experience in the Context of a New National High School Curriculum", "link": "https://dl.acm.org/doi/10.1145/3304221.3319770", "abstract": "Computer science (CS) has the highest first year dropout rate amongst UK undergraduates. In this context, understanding the expectations of new students is a first step to designing a CS curriculum that will improve their first year experience. The aim of this study was to present new entrants' reflections on their school CS, once they have started university and can compare teaching and learning in the different institutions.\nThe study is based on interviews with 84 Scottish-educated students in two cohorts that bridge the introduction of the Curriculum for Excellence (CfE) and new public examinations in Computing Science, intended to bring about significant change in students' attributes and attitudes to learning. The participants vary in level of computing qualifications, reflecting the heterogeneous background of CS entrants.\nWe asked both cohorts if they felt their learning in the senior years of high school had prepared them for university, and whether they felt they were taught or learned for themselves during school. The students were further asked whether they expected that the proportion of teaching to learning would differ at university.\nThe findings indicate that many students speak positively about high school CS, but many criticise the dominance of teacher-led instruction that ill-prepares them for self-regulated learning at university. Despite the intentions of CfE, the findings indicate little difference between the cohorts. However, students provide valuable perspective on the Scottish Computing Science experience and the role of Advanced Higher computing, which should prove interesting to those responsible for retention and curriculum design.", "authors": [{"name": "Jyoti Bhardwaj", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}], "tags": ["first year experience", "self-regulated learning", "computer science education", "computer science curriculum", "non-progression"]}, {"title": "Applying Gamification to Motivate Students to Write High-Quality Code in Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/3304221.3319792", "abstract": "Background: Traditional programming education focuses on training students' ability to write correct code that meets the specifications in programming assignments. In addition to correctness, software engineering studies argue that code quality is important. Problem: Nurturing students' ability to write high-quality code in programming assignments is difficult due to two main reasons. (1) Considering code quality while grading is undesirable because there are no objective and fair measurement metrics. (2) Grading assignments from multiple viewpoints (correctness and quality) is difficult and time-consuming. Approach: We propose applying gamification with code metrics to measure code quality in programming assignments. Our approach can motivate students to write code with good metric scores independent of grading. We implemented our approach and conducted a control experiment in a programming course at a university. Result: Our approach did not interfere with students' submissions but improved metric scores significantly. Hence, our approach can engage students to write high-quality code.", "authors": [{"name": "Yoshiaki Fukazawa", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Remin Kasahara", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Kazunori Sakamoto", "affiliation": "Waseda University, Tokyo, Japan"}, {"name": "Hironori Washizaki", "affiliation": "Waseda University, Tokyo, Japan"}], "tags": ["leaderboard", "gamification", "code quality", "online judge", "code metrics", "programming education"]}, {"title": "Paper or Online?: A Comparison of Exam Grading Techniques", "link": "https://dl.acm.org/doi/10.1145/3304221.3319739", "abstract": "As computer science enrollments continue to surge, exam grading requires significant instructional resources. Online grading platforms have been developed in recent years and have been adopted at a number of institutions; however, their effectiveness compared with traditional grading on paper is not fully known. This study is the first in CS to compare online and paper grading. Comparing overall time to grade, including all factors, online grading doesn't show a consistent advantage compared with paper grading. We observed that online grading is much faster during the actual grading phase, but some of this benefit is offset by the additional overhead prior to grading (e.g., scanning) for online grading. Examining student and grader preferences based on feedback, both groups show a strong preference for the online format, predominately due to the convenience of the online platform. Graders report being able to grade more accurately online with the ability to modify rubrics, but that grading on paper tends to result in more social interactions among graders.", "authors": [{"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Yingjun Cao", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Soohyun Nam Liao", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Rick Ord", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["assessment", "online grading system", "exam grading"]}, {"title": "Measuring Instruction Comprehension by Mining Memory Traces for Early Formative Feedback in Java Courses", "link": "https://dl.acm.org/doi/10.1145/3304221.3325529", "abstract": "To support students in a computer science programme in their first steps with programming in Java, we provide a tool for early formative feedback regarding the comprehension of the instruction types. The tool asks the students to enter memory traces for ordinary Java programs. To increase the effectiveness, we consider how to provide substantial hints to the students, where exactly they have to change their mental model of program execution. This requires the detection of co-occurring problems across multiple Java programs. We present a data mining approach that allows to automatically detect code fragments that cause systematic difficulties in the group of students. First results are promising and the desired effective feedback seems within reach.", "authors": [{"name": "Frank H\u00f6ppner", "affiliation": "Ostfalia University of Applied Sciences, Wolfenb\u00fcttel, Germany"}], "tags": ["formative feedback", "instruction comprehension", "introductory programming", "data mining", "code pattern", "memory trace"]}, {"title": "Quantifying Activity and Collaboration Levels in Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/3304221.3319769", "abstract": "This paper presents an experience report from a third-year undergraduate compiler design course that is taught as part of a four year computer science degree. We analyse data from a study of practical assignments, evaluated in the context of take-home formative assignments and a supervised summative examination. We implement metrics to quantify the degrees of similarity between submissions for programming assignments, as well as measuring the level of activity. We present the results of our study, and discuss the utility of these metrics for our teaching practice.", "authors": [{"name": "John Waldron", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "James F. Power", "affiliation": "Maynooth University, Maynooth, Ireland"}], "tags": ["program similarity", "jaccard index", "programming assignments"]}, {"title": "How Teachers Would Help Students to Improve Their Code", "link": "https://dl.acm.org/doi/10.1145/3304221.3319780", "abstract": "Code quality has been receiving less attention than program correctness in both the practice of and research into programming education. Writing poor quality code might be a sign of carelessness, or not fully understanding programming concepts and language constructs. Teachers play an important role in addressing quality issues, and encouraging students to write better code as early as possible.\nIn this paper we explore to what extent teachers address code quality in their teaching, which code quality issues they observe and how they would help novices to improve their code. We presented student code of low quality to 30 experienced teachers and asked them which hints they would give and how the student should improve the code step by step. We compare these hints to the output of professional code quality tools.\nAlthough most teachers gave similar hints on reducing the algorithmic complexity and removing clutter, they gave varying subsets of hints on other topics. We found a large variety in how they would solve issues in code. We noticed that professional code quality tools do not point out the algorithmic complexity topics that teachers mention. Finally, we give some general guidelines on how to approach code improvement.", "authors": [{"name": "Johan Jeuring", "affiliation": "Utrecht University and Open University of the Netherlands, Utrecht, Netherlands"}, {"name": "Bastiaan Heeren", "affiliation": "Open University of the Netherlands, Heerlen, Netherlands"}, {"name": "Hieke Keuning", "affiliation": "Open University of the Netherlands and Windesheim University of Applied Sciences, Heerlen and Zwolle, Netherlands "}], "tags": ["code quality", "programming education", "refactoring"]}, {"title": "Bridging the Digital Skills Gap: Are computing degree apprenticeships the answer?", "link": "https://dl.acm.org/doi/10.1145/3304221.3319744", "abstract": "This paper describes a study investigating whether apprenticeship computing degrees in Scotland are attracting additional entrants who will become IT professionals and fill a skills need. Government policy reports, from around the world, set out plans to address computing skills shortages by introducing additional education or training programmes [23]. In the UK, this is put forward as a key goal of the new higher level apprenticeships, including Graduate Apprenticeships in Scotland and Degree Apprenticeships in the rest of the UK. These are promoted as bridging the skills gap by involving employers in curriculum design and widening access to people who would not want to study towards a traditional degree, because of the financial burden or time out of employment. New graduate apprentices at three Scottish universities were encouraged to complete a short survey, asking about their route into the degree, including their aspirations, motivations, and previous experience. Most respondents had begun an IT career before they started the apprenticeship and were upskilling and gaining an internationally recognised qualification. A third could be considered new to IT, including those coming straight from school and those moving into IT mid-career. The apprentices' primary motivation was to gain skills. They chose the apprenticeship, rather than a traditional degree, because of the integration of work experience, followed by financial reasons: graduate apprentices earn salaries and can avoid student debt. These apprenticeships create a new route to a computing degree-level qualification. We consider their potential in addressing digital skills shortages.", "authors": [{"name": "Khristin Fabian", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}, {"name": "Tessa Berg", "affiliation": "Heriot-Watt University, Edinburgh, United Kingdom"}, {"name": "Debbie Meharg", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}, {"name": "Ella Taylor-Smith", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}, {"name": "Alison Varey", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}, {"name": "Sally Smith", "affiliation": "Edinburgh Napier University, Edinburgh, United Kingdom"}], "tags": ["work-based learning", "graduate apprenticeship", "digital skills", "degree apprenticeship"]}, {"title": "Programme Integrating Courses Fighting to Get Engineers to Reflect on Non-technical Topics", "link": "https://dl.acm.org/doi/10.1145/3304221.3319754", "abstract": "Programme Integrating Courses (PICs) aim to tie students, teachers and courses in education programmes closer together. In this study, we investigate three PICs, as part of engineering programmes in computer science and media technology. The purpose of this study was to gain a deeper understanding of how students and mentors experience the PICs with a focus on the assessment and the relationship between students, and students and mentors. We used a mixed method approach, interviewed 22 students and 6 mentors, and sent out questionnaires to all 25 mentors and all students from two of the three courses (630+470 students). The results showed that the students and mentors appreciated the social aspects of the courses, getting to know each other and share experiences. However, some were uncomfortable reflecting upon the given non-technical topics. On a general level, the students stated that their mentors assessed their reflections correctly but they were sceptical towards being graded on a scale other than pass/fail.", "authors": [{"name": "Olle B\u00e4lter", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Bj\u00f6rn Hedin", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Emma Riese", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Viggo Kann", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}], "tags": ["reflection", "higher education", "programme integrating course", "assessment", "engineering students"]}, {"title": "Digital Storytelling and Group Work: Integrating the Narrative Approach into a Higher Education Computer Science Course", "link": "https://dl.acm.org/doi/10.1145/3304221.3325528", "abstract": "This study discusses the integration of digital storytelling and the narrative approach into a University level Computer Science course. The pedagogical intervention took place on a project basis. The plan involved student work in groups for the production of digital stories in three phases, including an abstract, a manuscript and a final story. The overall instructional design included workshops and lectures, online tutorials, and group work. The students were assigned to explore the topic of recursion. Face-to-face meetings for the coordination of group work were emphasized during lectures, workshops and project instructions.\nThe study uses qualitative research methods and the findings indicate two main patterns of group work. The first pattern follows from loose coordination and division of tasks among group members at the initial stages of the project. This results in documentary-like and program-based video stories. The second pattern involves tighter collaboration with face-to-face meetings for common task completion, video recording and editing, and manuscript improvement. This mode of work results in short-film style stories where recursion is well-represented. In both patterns, however, the videos present external rather than internal examples of recursion. As a result, the digital stories represent what the code does instead of how it does it.", "authors": [{"name": "Marianna Vivitsou", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Ari Korhonen", "affiliation": "Aalto University, Espoo, Finland"}], "tags": ["narrative", "algorithms", "data structures", "higher education", "critical thinking", "group work", "digital storytelling", "computer science"]}, {"title": "Does Studying CS Automatically Foster a Growth Mindset?", "link": "https://dl.acm.org/doi/10.1145/3304221.3319750", "abstract": "Many arguments are used to advocate for the introduction of Computer Science (CS) / Computational Thinking / \"coding\" in K-12 education. Growth mindset theory (GM) is also becoming very popular among educators and researchers. Some claims stating that studying CS can foster a GM have emerged. However, educational research shows that transfer of competences is hard. Very little research has been conducted on the relationship between GM and CS learning, with conflicting results. We measured some indicators (e.g., mindset, computer science mindset) at the beginning and the end of a high school year in five different classes: three CS oriented, one Chemistry oriented, and one Transportation&Logistics oriented. In one of the CS oriented classes, we did a very brief GM intervention. At the end of the school year, none of the classes showed a statistically significant change in their mindset. Interestingly, non-CS oriented classes showed a significant decrease in their computer science growth mindset. In the intervention class, students suggested, to stimulate a GM, the need for activities that are more creative, engaging, and related to the real world and their interests.", "authors": [{"name": "Michael Lodi", "affiliation": "University of Bologna & INRIA, Bologna, Italy"}], "tags": ["high school", "transfer", "computer science mindset", "growth mindset"]}, {"title": "Understanding How Work Habits influence Student Performance", "link": "https://dl.acm.org/doi/10.1145/3304221.3319757", "abstract": "Understanding the relationship between a student's broader work habits and their performance, particularly on open-ended programming assignments, is key towards being able to guide students towards success. In spite of this, most evidence of student behavior and its relationship to performance is anecdotal. The advent of large-scale courses which use online tools for delivering course content, monitoring the programming environment, and providing automatic feedback as well as grading now makes it possible to dive into the data and develop data-driven methods for understanding how a student's approach to an assignment---from their first exposure to the description of the problem to their final submission of their completed assignment---influences their final performance.\nThis study is a first look at a subset of the data collected from a project-based, online, upper-level course on cloud computing. We examine three raw data streams which include information on the time students spend on reading the project write-up, the timing, grades, and number of submissions they make, and the cloud resources used (both time and cost) in solving the assignment. Using these and several synthetic metrics we were surprised to find that there are few behaviors that are highly correlated to student success. Instead, we find that there is a strong correlation between students who continually apply consistent behaviors over the course of the semester to good final performance in the course. From this we use LASSO to create a predictor (adjusted R2=.48) of final performance based on two kinds of consistency measures across 15 metrics.", "authors": [{"name": "Cameron Dashti", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Seth Copen Goldstein", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Majd Sakr", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Hongyi Zhang", "affiliation": "Peking University, Beijing, China"}, {"name": "Haokang An", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["online education", "student performance", "project-based learning", "work habits", "learning analytics", "educational data mining"]}, {"title": "Making CS Learning Visible: Case Studies on How Visibility of Student Work Supports a Community of Learners in CS Classrooms", "link": "https://dl.acm.org/doi/10.1145/3304221.3319791", "abstract": "Modern learning theories emphasize the critical social aspect of learning. Computer science (CS) classrooms often have \"defensive climates'' that inhibit social learning and prevent the development of a community of learners. We believe that we can improve the social context of computer science learning by expanding CS learning beyond the single student in front of a display screen. Our theory is that the single student and single display inhibits collaboration and collaborative awareness of student work. In this paper, we present two case studies where we explored ways to make student work visible to peers. The first case study involved using a studio model for learning enabled by projection-based Augmented Reality (AR), and the second case study involves using a maker-oriented curriculum to make student work visible. Findings suggest the visibility of student work in CS classrooms helped support a community of learners: students collaborated, used each other as sources of inspiration, and felt more comfortable asking for help.", "authors": [{"name": "Amber Solomon", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Mark Guzdial", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Vanessa Oguamanam", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Betsy DiSalvo", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["learning environments", "design studio", "defensive climates", "community of learners", "visibility"]}, {"title": "Perspectives on the Student Transition into CS1", "link": "https://dl.acm.org/doi/10.1145/3304221.3325540", "abstract": "As students transition into higher education, their experience can be quite new and foreign to them. This experience, while an individual one, consists of many concerns that are shared amongst these transitioning students. Partly as a result of these concerns, retention rates of first year Computer Science students suffer. Members of this panel have been involved in multi-year studies across Scotland [2, 5] as well as an international study [3] looking at the student experience as they transition into undergraduate Computer Science. This panel hopes to discuss the transition into CS1 and implications for Computer Science retention rates from varied international perspectives as well as through the lens of online learning. It further hopes to discuss new ways that we might be able to better support first year CS student retention in light of collected transition data, as well as the current state of any implemented recommendations in previous work (you may want to rephrase this).", "authors": [{"name": "Janet Hughes", "affiliation": "The Open University, Edinburgh, United Kingdom"}, {"name": "Richard Glassey", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Angela A. Siegel", "affiliation": "Dalhousie University, Halifax, NS, Canada"}], "tags": ["concerns", "applicants", "higher education", "cs1", "transition", "retention"]}, {"title": "How Prior Programming Experience Affects Students' Pair Programming Experiences and Outcomes", "link": "https://dl.acm.org/doi/10.1145/3304221.3319781", "abstract": "Pair programming is a collaborative learning approach in computer science in which students (or employees) work closely with a partner on the same programming task. A long-standing question within pair programming is whether certain combinations of students lead to greater learning, effort, and/or performance. Earlier studies have explored the role of prior programming experience, including the discrepancy between partners' experience, as a potentially important factor in shaping these outcomes. However, the previous findings are highly inconsistent, which may result from divergent (and often suboptimal) ways of defining previous experience or skill, problems with self-selection into pairs, and small sample sizes that often yield nonsignificant results. The present study sought to improve on all of these limitations through an examination of 587 undergraduates who each participated in three different randomly assigned pairings. Not surprisingly, students' own programming experience was positively related to understanding concepts from lab, confidence in the finished product, and overall interest in computer science. However, students who worked with a more experienced partner actually had poorer outcomes, including lower effort exerted on the assignment, perceptions that their partner gave more effort than they did, less time in the driving role (i.e., typing out the assignment), lower understanding of concepts from lab, and less interest in computer science overall. The partner's experience is unrelated to other outcomes, including confidence in the finished assignment, feeling productive during lab session, and average grades received during the pairing. These results provide important considerations for the assignment of students to pairs.", "authors": [{"name": "Nicholas A. Bowman", "affiliation": "University of Iowa, Iowa City, IA, USA"}, {"name": "Alberto Maria Segre", "affiliation": "University of Iowa, Iowa City, IA, USA"}, {"name": "K.C. Culver", "affiliation": "University of Iowa, Iowa City, IA, USA"}, {"name": "Lindsay Jarratt", "affiliation": "University of Iowa, Iowa City, IA, USA"}], "tags": ["pair programming", "college students", "programming experience", "randomized controlled trial", "student outcomes", "pair characteristics", "collaborative learning", "university students", "pair incompatibility", "experimental research", "computer science"]}, {"title": "A Large-Scale Experimental Study of Gender and Pair Composition in Pair Programming", "link": "https://dl.acm.org/doi/10.1145/3304221.3319782", "abstract": "The proportion of women in computer science majors is currently lower than in any other STEM major. Various studies have sought to explain---and ultimately find ways to reduce---gender disparities in computer science participation and persistence. Pair programming has been proposed as a practice that may not only promote outcomes overall within college and workplace environments, but also help diminish isolation and boost the confidence of women in computer science. Some promising results have been obtained for women in pair programming, but the findings are not consistent across studies, and the limitations of previous research make it difficult to draw strong conclusions. The present study examined 969 undergraduates in several introductory computer science courses who engaged in three different pairings throughout the semester. All pairings were randomly assigned, so the findings reflect the causal influence of the gender pair characteristics on a variety of student outcomes. Overall, having a female partner led to several positive outcomes relative to having a male partner; these included greater lab section attendance as well as greater confidence in the finished product and confidence in the solution for the pair programming assignment. The advantages of having a female partner were occasionally greater for female students than for male students. Overall, the significant findings were most pronounced in the course intended for computer science majors. These results offer evidence for the educational benefits of pair programming for promoting women's participation in computer science, as well as the need for careful consideration of pair composition.", "authors": [{"name": "Nicholas A. Bowman", "affiliation": "University of Iowa, Iowa City, IA, USA"}, {"name": "Alberto Maria Segre", "affiliation": "University of Iowa, Iowa City, IA, USA"}, {"name": "K.C. Culver", "affiliation": "University of Iowa, Iowa City, IA, USA"}, {"name": "Lindsay Jarratt", "affiliation": "University of Iowa, Iowa City, IA, USA"}], "tags": ["women in computing", "college students", "gender", "pair programming", "randomized controlled trial", "student outcomes", "pair characteristics", "collaborative learning", "university students", "pair incompatibility", "experimental research", "computer science"]}, {"title": "More Effective Contextualization of CS Education Research: A Pair-Programming Example", "link": "https://dl.acm.org/doi/10.1145/3304221.3319790", "abstract": "This position paper discusses the need for greater inclusion of context in papers describing computer science education research. This inspiration arose from our efforts to compare our experiences with pair programming in an introductory computer science course with experiences described in the literature. We quickly observed that the behaviors associated with the term \"pair programming\" and the contexts can differ greatly between universities and yet the phrase pair programming is often used with no further explanation.\nA brief literature survey is used to demonstrate differences in the implementation of pair programming and the context that might impact the results. We identify attributes that are likely appropriate for much CS education research, as well as specifically consider relevant attributes for research involving pair programming. This anchors our paper and demonstrates specific attributes that require consideration beyond the general computer science classroom.\nOur goal is to foster conversations on providing appropriate context in computer science education research. We argue that by providing such context, studies can be more easily replicated or distinguished, a greater understanding of attributes influencing the research can be gained, and other educators can more easily determine the relevance of the research to their classroom environment.", "authors": [{"name": "Briana Bettin", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Leo Ureel", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Linda Ott", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["pair programming", "attributes", "context", "student perception", "computer science education research", "cs1"]}, {"title": "Instructional Framework for CS1 Question Activities", "link": "https://dl.acm.org/doi/10.1145/3304221.3319732", "abstract": "Questioning is a learning activity that can promote the use of critical thinking skills, where thinking processes are required to answer a posed question. In this paper, we map instructional question types to Bloom's Taxonomy--a classification of critical thinking skills required for cognition--to form a framework for educators to construct learning activities through questioning. The preliminary instructional framework is applied to a question activity within a blended CS1 learning environment to support students in better understanding on how to solve a programming assignment. Our results show students meeting the desired Bloom's cognitive level when answering the question activity. Future research opportunities are presented to test the framework for upper-division CS courses and further explore the framework as an intervention for programming assignments.", "authors": [{"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Rebecca Vivian", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Rita Garcia", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["bloom's", "teaching activity", "critical thinking skills", "questions"]}, {"title": "Behaviors of Higher and Lower Performing Students in CS1", "link": "https://dl.acm.org/doi/10.1145/3304221.3319740", "abstract": "Although recent work in computing has discovered multiple techniques to identify low-performing students in a course, it is unclear what factors contribute to those students' difficulties. If we were able to better understand the characteristics of such students, we may be better able to help those students. This work examines the characteristics of low- and high-performing students through interviews with students from an introductory computing class. We identify a number of relevant areas of student behavior including how they approach their exam studies, how they approach completing programming assignments, whether they sought help after identifying misunderstandings, how and from whom they sought help, and how they reflected on assignments after submitting them. Particular behaviors within each area are coded and differences between groups of students are identified.", "authors": [{"name": "William G. Griswold", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Kevin Thai", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Soohyun Nam Liao", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto, Mississauga, Mississauga, ON, Canada"}, {"name": "Sander Valstar", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Christine Alvarado", "affiliation": "University of California, San Diego, San Diego, CA, USA"}], "tags": ["cs1", "student behaviors", "student performance", "student interviews"]}, {"title": "Experience Report: Thinkathon -- Countering an \"I Got It Working\" Mentality with Pencil-and-Paper Exercises", "link": "https://dl.acm.org/doi/10.1145/3304221.3319785", "abstract": "Goal-directed problem-solving labs can lead a student to believe that the most important achievement in a first programming course is to get programs working. This is counter to research indicating that code comprehension is an important developmental step for novice programmers. We observed this in our own CS-0 introductory programming course, and furthermore, that students weren't making the connection between code comprehension in labs and a final examination that required solutions to pencil-and-paper comprehension and writing exercises, where sound understanding of programming concepts is essential. Realising these deficiencies late in our course, we put on three 3-hour optional revision evenings just days before the exam. Based on a mastery learning philosophy, students were expected to work through a bank of around 200 pencil-and-paper exercises. By comparison with a machine-based hackathon, we called this a Thinkathon. Students completed a pre and post questionnaire about their experience of the Thinkathon. While we find that Thinkathon attendance positively influences final grades, we believe our reflection on the overall experience is of greater value. We report that: respected methods for developing code comprehension may not be enough on their own; novices must exercise their developing skills away from machines; and there are social learning outcomes in programming courses, currently implicit, that we should make explicit.", "authors": [{"name": "Quintin Cutts", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Jeremy Singer", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Matthew Barr", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Lovisa Sundin", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Mireilla Bikanga Ada", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Peter Donaldson", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Steve Draper", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Jack Parkinson", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}], "tags": ["introductory programming", "mastery learning", "program comprehension", "goal-directed problem solving"]}, {"title": "A Multi-Level Study of Undergraduate Computer Science Reasoning about Concurrency", "link": "https://dl.acm.org/doi/10.1145/3304221.3319763", "abstract": "In computing, concurrency relates to the situation in which different processes or threads may execute at the same time or in an interleaved manner. Many real-world computing systems utilize concurrency, but concurrency-related concepts have proven difficult for students. With an informed understanding of student reasoning in this context, instructors will be better able to create appropriate pedagogical materials and aid student learning. The research questions we seek to address are: What is the nature of undergraduate computer science students' conceptions of concurrency? and How does student reasoning about concurrency differ across the levels of the undergraduate computing program? To study student conceptions of concurrency, we used Lewandowski et al.'s \"Concert Tickets\" problem, in which multiple vendors sell tickets to a concert and students are asked to provide a natural language response that identifies problems that may occur and to provide possible solutions. We present an analysis of sixty student responses drawn from all four years of the undergraduate CS program at a large, public university in the United States. The analysis utilizes a qualitative open coding approach to uncover common features in student solutions. Most students identified the concurrency related problem of double-booking and did so uniformly across student year. We performed a thematic analysis of student responses about double-booking and found emerging clusters around language for access control, speed, visualization, human protocols, and added states. Knowledge of these student conceptions can help instructors to construct pedagogical materials that build on the strengths and prior knowledge that students bring with them at each level and to address troublesome aspects of these concepts.", "authors": [{"name": "Eileen T. Kraemer", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Cazembe Kennedy", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Aubrey Lawson", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "S. Megan Che", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["concurrency", "pedagogical content knowledge", "undergraduate education"]}, {"title": "Final Year Students' Approaches to Implementing Complex Distributed Systems", "link": "https://dl.acm.org/doi/10.1145/3304221.3319774", "abstract": "Understanding how final year students build complex software systems is critical for determining whether desired graduate outcomes have been met, for identifying curriculum gaps, and for designing scaffolding and support structures. A large body of work focuses on the programming strategies employed by novice programmers, with few existing research in understanding programming strategies and development focus of final year students, in particular with respect to non-functional requirements. In this paper, we analyse consecutive revisions of 77 students across two cohorts that implemented a large and complex Distributed Systems assignment with several non-functional requirements. To obtain a qualitative overview of the students' approach to software development, we manually read and tagged all sourcefiles in all assignment revisions with specific development focus categories. Our analysis identifies how the students' development focus evolves throughout the assignment timeline. We visualise the software development process and identify several areas that require further support.", "authors": [{"name": "Michael Scott Pointon", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Claudia Szabo", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["introductory programming", "novice programming", "error fixing", "compile behavior"]}, {"title": "Qualitative Observations of Student Reasoning: Coding in the Wild", "link": "https://dl.acm.org/doi/10.1145/3304221.3319751", "abstract": "Understanding student thinking and identifying student misconceptions are important precursors to developing high quality pedagogical materials and approaches. Prior work has used conceptual assessment surveys and task-based interviews to pursue this knowledge, typically having students evaluate existing code or predict or explain code behavior. However, features of student thinking captured under these conditions may differ from features of student thinking that occurs \"in the wild.\" We present the results of a study conducted with 10 introductory CS students at a large, engineering-focused US university. In this work, students were asked to \"Please, think aloud\" as they interacted in a development environment, attempting to reverse engineer a solution to a defined task based on a provided executable. We captured and analyzed video recordings of the screen and audio recordings of their utterances to characterize their actions, current task, the relevant CS concept involved, current problem-solving phase, and expressed level of certainty. We also took note of the nature of their uncertainties and if and how these uncertainties were resolved. We found that students showed uncertainty regardless of success at task completion. Students who were successful at the task engaged in live experimentation to address these uncertainties in their thinking and coding. However, the ability to produce a program that behaved correctly did not guarantee that the students fully grasped the underlying concepts: some students submitted erroneous code that coincidentally worked, while expressing doubts about the correctness of their implementation.", "authors": [{"name": "Eileen T. Kraemer", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Cazembe Kennedy", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["computing education", "cs2", "cs1", "introductory programming", "pedagogical content knowledge", "misconceptions", "qualitative analysis"]}, {"title": "Resources for Researching and Teaching Computing Education in Primary and Secondary Schools: What Exists and What is Still Needed", "link": "https://dl.acm.org/doi/10.1145/3304221.3325541", "abstract": "No abstract available.", "authors": [{"name": "Miles Berry", "affiliation": "University of Roehampton, London, UNK, United Kingdom"}, {"name": "Leigh Ann DeLyser", "affiliation": "CSforAll Consortium, New York, NY, USA"}, {"name": "Briana Morrison", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}, {"name": "Monica McGill", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["resources", "secondary", "educational research", "constructs", "csforall", "primary", "evaluation", "repository", "teaching tips", "assessment", "k-12"]}, {"title": "Teaching AVR Assembly by Building an Arduino Arcade Machine", "link": "https://dl.acm.org/doi/10.1145/3304221.3325549", "abstract": "This paper describes a series of homework assignments, labs, and a project developed to teach AVR assembly language as part of a sophomore-level Computer Organization course. At the culmination of this module, students built a handheld arcade machine out of an Arduino Uno and programmed it, in assembly language, to play the classic game of Breakout on an LED matrix display. While completing this project students learned most of the fundamentals of low-level programming, including registers, bit operators, control flow, stack handling, subroutine calls, hardware interrupts, delay loops and instruction timing, and communicating with I/O. This project was assigned to three classes of students in the Fall 2018 and Spring 2019.", "authors": [{"name": "Michael Black", "affiliation": "Bridgewater State University, Bridgewater, MA, USA"}, {"name": "Joseph Matta", "affiliation": "Bridgewater State University, Bridgewater, MA, USA"}], "tags": ["assembly language", "avr", "computer organization", "arduino"]}, {"title": "Connecting Majors/Non-Majors Courses Via Tabular Data", "link": "https://dl.acm.org/doi/10.1145/3304221.3325551", "abstract": "As is the case with many Computer Science departments, we offer one set of courses for our majors and another (smaller) set for non-majors. Historically, the divide between these sets has been fairly visible, an academic reality that may be typical for many institutions. Initially triggered by a desire to improve and advance our most heavily enrolled non-majors course, we have been working for the past several years to dovetail courses across this \"great divide\" by focusing on tabular data. This report is an outline of our progress (in general) and this one course that experienced most change (in particular); we believe the direction we are headed and the gains we hope to see might be valuable for other institutions as well.", "authors": [{"name": "Adam Lee", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Ali Erkan", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["tables", "sqlite", "google sheets"]}, {"title": "Automatic Evaluation of the Quality of Solutions for an Open Programming Task", "link": "https://dl.acm.org/doi/10.1145/3304221.3325546", "abstract": "This paper describes a tool for analysis of solutions to programming tasks. The analysis addresses both the code and the generated graphical output. First results on the correlation between quality of code and complexity of the output are reported.", "authors": [{"name": "Stephan Euler", "affiliation": "TH Mittelhessen University of Applied Sciences, Friedberg, Germany"}], "tags": ["automatic code evaluation", "programming", "learning environments"]}, {"title": "csedresearch.org: Resources for Primary and SecondaryComputer Science Education Research", "link": "https://dl.acm.org/doi/10.1145/3304221.3325545", "abstract": "In this Tips, Techniques, and Courseware talk, we will provide an overview of csedresearch.org, a site designed to provide resources for primary and secondary computer science (CS) education researchers. This resource center has three primary functions: 1) to provide a quick and easy way to search and access manually-curated data from over 500 articles from ten targeted venues (currently 2012-2018), 2) to provide a centralized location for evaluation instruments, many of which are focused on computing, and 3) to provide resources for computer science education research (checklists for studies, how to design a study, how to write a research question, etc.). Users can search for articles by filtering at a granular level on various curriculum and activity components, including student demographics, instructor demographics, and program components. Users can also search for evaluation instruments on criteria such as type, year published, constructs measured in the instrument, and whether the instrument has been validated or tested for reliability. We will provide a brief summary of the rationale for the site, the current state of the site, and how educators and researchers are using the site to date. We will also discuss future plans for the site and enable the audience to provide feedback that may help us shape the site to better meet the needs of the community.", "authors": [{"name": "Adrienne Decker", "affiliation": "University at Buffalo, Buffalo, NY, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["resources", "secondary", "educational research", "constructs", "evaluation", "primary", "cognitive", "k-12", "assessment", "noncognitive"]}, {"title": "If Memory Serves: A Game to Supplement the Instruction of Concepts Related to Pointers", "link": "https://dl.acm.org/doi/10.1145/3304221.3325550", "abstract": "In this Tips, Techniques, and Courseware presentation, we will provide an overview of If Memory Serves, a game designed to complement the instruction of pointers in computer science courses. The game was first designed during a working group in ITiCSE 2017 as a tool to enable deeper understanding of pointers due to the difficulties students often face when learning about them. Over the last two years, the game has continued to evolve and has moved from a concept of the game to near-alpha. During this talk, we will demonstrate the game, provide insight into why it was developed, and discuss how it can be used to teach pointers. We will also briefly discuss our concept behind this open-source game and invite feedback from the audience as well as invite others to remix, test, and engage in research on testing the game's effectiveness.", "authors": [{"name": "Ian Pollock", "affiliation": "California State University, East Bay, Hayward, CA, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["learning", "educational research", "games for education", "computing education", "games", "pointers"]}, {"title": "In-Depth Feedback on Programming Assignments Using Pattern Recognition and Real-Time Hints", "link": "https://dl.acm.org/doi/10.1145/3304221.3325552", "abstract": "Automatic grading of students' programs is a challenge in computer science (CS) education. In the last two years we have been using a machine learning tool called 'Sense Education' in our 'Intro to CS' course. The tool provides real-time pedagogical hints while students work on solutions, and in-depth feedback on submissions. It also provides a \"bird's eye\" view of the class's current capabilities, misconceptions, and biases in approaches to solutions. We describe this effort and several test cases. Our goal is to provide teachers with tips on how to effectively use such tools.", "authors": [{"name": "Amir Rubinstein", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}, {"name": "Noam Parzanchevski", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}, {"name": "Yossi Tamarov", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}], "tags": ["feedback", "clustering", "pattern recognition", "automated grading"]}, {"title": "Teaching Self-Balancing Trees Using a Beauty Contest", "link": "https://dl.acm.org/doi/10.1145/3304221.3325544", "abstract": "Trees data structures and their performance is one of the main topics to teach in a data structures course. Appreciating the importance of tree structure and tree height in software performance is an important concept to teach. In this paper, a simple and amusing activity is presented. It demonstrates to students the importance of a well-balanced tree by comparing the height of a binary search tree to a balanced (AVL) tree build upon some personal data to find the \"prettiest\" tree (minimum height). The activity highlights the fact that, irrelevant of your data sequence, a balanced tree guarantees a height of O(log n) and everyone \"wins\" the beauty contest.", "authors": [{"name": "Samah Senbel", "affiliation": "Sacred Heart University, Fairfield, CT, USA"}], "tags": ["self-balancing trees", "binary search trees", "avl trees", "search complexity", "tree height"]}, {"title": "Exploring the Potential of Social Annotations for Predictive and Descriptive Analytics", "link": "https://dl.acm.org/doi/10.1145/3304221.3325547", "abstract": "In this paper, we illustrate the successful implementation of a social annotation tool within a content authoring platform, that allows students to discuss learning material with their fellow classmates, and to self-report on their cognitive, metacognitive and affective states-by self-coding the annotations as they journey through the learning material. We explore the predictive potential of such self- reports in reading material against the students completion rate and assessment scores, and also examine how visualisation of these annotation classifications can help instructors easily identify issues and adapt their teaching approach and learning material.", "authors": [{"name": "Shaveen Singh", "affiliation": "Monash University, Melbourne, Australia"}], "tags": ["self-report", "annotations", "prediction", "e-learning", "learning analytics"]}, {"title": "Laughter over Dread: Early Collaborative Problem Solving through an Extended Induction using Robots", "link": "https://dl.acm.org/doi/10.1145/3304221.3325548", "abstract": "Software development companies want new hires with strong interpersonal and problem solving skills. To ensure the development of such skills, they must be embedded throughout the curriculum. However, many students struggle to collaborate with peers and in self-regulated practice during the early stages of their course. Explicit scaffolding can, however, motivate such engagement. This tips and techniques session shows how an ice-breaker using LEGO EV3 robots at two UK institutions enhanced peer interaction and increased self-regulated practice over the first four weeks of 2016-17 and 2017-18.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Michael Scott", "affiliation": "Falmouth University, Cornwall, United Kingdom"}], "tags": ["interpersonal skills", "teamwork", "robots", "induction", "problem solving", "communities of practice"]}, {"title": "Securing the Human: Broadening Diversity in Cybersecurity", "link": "https://dl.acm.org/doi/10.1145/3304221.3325537", "abstract": "Recent global demand for cybersecurity professionals is promising, with the U.S. job growth rate at 28%, three times the national average. Lacking qualified applicants, many organizations struggle to fill open positions. In a global survey, 2,300 security managers reported that 59% of their security positions were unfilled, although 82% anticipated cyberattacks to their systems. At the same time, the cybersecurity field is broadening, not only in technical concepts but also in human factors, business processes, and international law. The field has not become culturally diversified, however. Professionals hired in 2018 included only 24.9% women, 12.3% African Americans, and 6.8% Latinos. These facts create an opportunity for higher education: diversify the profession while increasing the numbers of skilled computer scientists. New and integrated methods of attracting student populations in the field of cybersecurity are needed. The working group goal is to evaluate the effectiveness of approaches used in higher education to diversify the cybersecurity field through literature review, analysis of the findings, and a survey on techniques used for diversification of the cybersecurity field.", "authors": [{"name": "Timothy T. Yuen", "affiliation": "University of Texas at San Antonio, San Antonio, TX, USA"}, {"name": "Joseph Maguire", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Greg Gagne", "affiliation": "Westminster College, New Wilmington, PA, USA"}, {"name": "Chadi Kari", "affiliation": "University of the Pacific, Stockton, CA, USA"}, {"name": "Liviana Tudor", "affiliation": "Politehnica University of Bucharest & Petroleum-Gas University of Ploiesti, Bucharest, Romania "}, {"name": "David Vosen", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}, {"name": "Xenia Mountrouidou", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Mohammad Azhar", "affiliation": "Borough Of Manhattan Community College, New York City, NY, USA"}, {"name": "Sajal Bhatia", "affiliation": "Sacred Heart University, Fairfield, CT, USA"}], "tags": ["diversification", "cybersecurity", "education"]}, {"title": "Unexpected Tokens: A Review of Programming Error Messages and Design Guidelines for the Future", "link": "https://dl.acm.org/doi/10.1145/3304221.3325539", "abstract": "Diagnostic messages generated by compilers and interpreters such as syntax error messages have been researched for decades. Unfortunately these messages which include error, warning, and runtime messages, present substantial difficulty and could be more effective, particularly for novices. Recent years have seen increased number of papers in the area including studies on the effectiveness of these messages, improving or enhancing them, and their usefulness as a part of programming process data that can be used to predict student performance. Despite this increased interest, the long history of literature is quite scattered and has not been brought together in any digestible form. We argue that in order to help the community proceed with more work on diagnostic messages, the literature needs to be presented in a state-of-the-art report. In addition we will synthesize and present the existing evidence for these messages including the difficulties they present and their effectiveness. We will also formulate a set of guidelines based on this evidence that can be used when designing or enhancing diagnostic messages. This work can serve as a starting point for those who wish to conduct research on such messages, those who wish to design better messages or those that aim to measure their effectiveness, more effectively.", "authors": [{"name": "Janice L. Pearce", "affiliation": "Berea College, Berea, KY, USA"}, {"name": "Chris McDonald", "affiliation": "University of Western Australia, Perth, Australia"}, {"name": "James Prather", "affiliation": "Abilene Christian University, Abilene, TX, USA"}, {"name": "Amir Kamil", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Dennis J. Bouvier", "affiliation": "Southern Illinois University Edwardsville, Edwardsville, IL, USA"}, {"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Brian Harrington", "affiliation": "University of Toronto Scarborough, Scarborough, ON, Canada"}, {"name": "Raymond Pettit", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Peter-Michael Osera", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Durell Bouchard", "affiliation": "Roanoke College, Roanoke, VA, USA"}, {"name": "Amey Karkare", "affiliation": "Indian Institute of Technology Kanpur, Kanpur, India"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["syntax errors", "review", "introduction to programming", "runtime errors", "design guidelines", "hci", "compiler error messages", "survey", "cs1", "human computer interaction", "programming error messsages", "novice programmers", "diagnostic error messages"]}, {"title": "Toward Developing a Cloud Computing Model Curriculum", "link": "https://dl.acm.org/doi/10.1145/3304221.3325536", "abstract": "Cloud Computing is a rapidly evolving field that is triggering a wave of innovations in various domains such as machine learning and artificial intelligence. Cloud skills are becoming essential for any technology-related profession. Furthermore, the accelerated adoption of cloud technologies by industry is increasing the demand for cloud-trained professionals. Thus, higher education institutions are offering training opportunities and programs in cloud computing, however, the lack of well-rounded and high-quality curricular materials continues to be a challenge for educators. A 2018 Working Group (WG) created a report that --among other artifacts-- described fourteen Knowledge Areas (KAs), with numerous Learning Objectives (LOs) for each KA, to teach cloud concepts. Expanding on that work, this WG will focus on providing a collection of resources that would eventually constitute a model cloud curriculum. By relying on two particular surveys: one that looks at the existing curricular offerings, and another one that maps knowledge areas to job titles in cloud computing, we plan to provide a dynamic and configurable curricular exemplars repository for the cloud community-at-large, following the popularity of hands-on, project-based learning methodologies as our primary focus.", "authors": [{"name": "Brian Hainey", "affiliation": "Glasgow Caledonian University, Glasgow, Scotland, United Kingdom"}, {"name": "Harvey Hyman", "affiliation": "University of South Florida, Tampa, FL, USA"}, {"name": "Amadeo Jose Arguelles Cruz", "affiliation": "Instituto Politecnico Nacional, Mexico City, Mexico"}, {"name": "Derek Foster", "affiliation": "University of Lincoln, Lincoln, United Kingdom"}, {"name": "Majd Sakr", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Manh Van Nguyen", "affiliation": "Saint Leo University, Saint Leo, FL, USA"}, {"name": "Laurie White", "affiliation": "Google, Seattle, WA, USA"}, {"name": "D. Cenk Erdil", "affiliation": "Sacred Heart University, Fairfield, CT, USA"}, {"name": "Joshua Adams", "affiliation": "Saint Leo University, Saint Leo, FL, USA"}, {"name": "Sajid Nazir", "affiliation": "Glasgow Caledonian University, Glasgow, Scotland, United Kingdom"}, {"name": "Gareth Lewis", "affiliation": "Falmouth University, Falmouth, England, United Kingdom"}, {"name": "Lee Stott", "affiliation": "Microsoft, London, United Kingdom"}], "tags": ["cloud computing", "curriculum development", "project-based learning", "education", "computer science"]}, {"title": "An International Benchmark Study of K-12 Computer Science Education in Schools", "link": "https://dl.acm.org/doi/10.1145/3304221.3325535", "abstract": "There has been a growing interest and increase in work shared about national K-12 Computer Science Education (CSED) curriculum and implementation efforts around the world. Much of this work focuses on curriculum analysis, country reports, experience reports and case studies. The K-12 CSED community would benefit from an international strategic effort to compare, contrast and monitor K-12 CSED over time, across multiple countries and regions, to understand pedagogy, practice, resources and experiences from the perspective of teachers working in classrooms. Furthermore, there is a need for validated and robust instruments that can support comparable investigations into the current state of K-12 CSED in schools around the world. Through a collaborative effort, this Working Group will develop a validated teacher survey instrument and collect data about CSED implementation and practice in K-12 classrooms. The authors will pilot the survey with K-12 teacher cohorts and analyse, compare and contrast survey findings across countries.", "authors": [{"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Sue Sentance", "affiliation": "Raspberry Pi Foundation, Cambridge, England UK"}, {"name": "Sarah Barksdale", "affiliation": "University of Minnesota, Minneapolis, MN, USA"}, {"name": "Christine Liebe", "affiliation": "Lotus Education Institute, Parker, CO, USA"}, {"name": "Francesco Maiorana", "affiliation": "University of Catania, Catania, Italy"}, {"name": "Keith Quille", "affiliation": "Technological University Dublin, Dublin, Ireland"}, {"name": "Elizabeth Cole", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Leonard Busuttil", "affiliation": "University of Malta, Msida, Malta"}, {"name": "Rebecca Vivian", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Monica M. McGill", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["informatics education", "computer science education", "survey", "k-12", "iticse working group", "schools"]}, {"title": "Towards an Ability to Direct College Students to an Appropriately Paced Introductory Computer Science Course", "link": "https://dl.acm.org/doi/10.1145/3304221.3325538", "abstract": "We propose a working group to investigate methods of proper placement of university entrance-level students into introductory computer science courses. The main issues are the following. The ability to predict skill in the absence of prior experience The value of programming language neutrality in an assessment instrument Stigma and other perception issues associated with students' performance, especially among groups underrepresented in computer science The impact or potential impact on underrepresented populations (minorities, those with lower socioeconomic status) The outcomes/satisfaction/retention metrics in the major of the paced/tracked students compared to those in one-size-fits-all introductory classes", "authors": [{"name": "Victoria Eisele", "affiliation": "Front Range Community College, Fort Collins, CO, USA"}, {"name": "Leo C. Ureel", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Mireilla Bikanga Ada", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina, Charlotte, NC, USA"}, {"name": "James Heliotis", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Megan E. Lutz", "affiliation": "University of Georgia, Athens, GA, USA"}, {"name": "Ethel Tshukudu", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}], "tags": ["assessment", "placement", "introductory courses"]}, {"title": "Program Comprehension: Identifying Learning Trajectories for Novice Programmers", "link": "https://dl.acm.org/doi/10.1145/3304221.3325531", "abstract": "This working group asserts that Program Comprehension (PC) plays a critical part in the writing process. For example, this abstract is written from a basic draft that we have edited and revised until it clearly presents our idea. Similarly, a program is written in an incremental manner, with each step being tested, debugged and extended until the program achieves its goal. Novice programmers should develop their program comprehension as they learn to code, so that they are able to read and reason about code while they are writing it. To foster such competencies our group has identified two main goals: (1) to collect and define learning activities that explicitly cover key components of program comprehension and (2) to define possible learning trajectories that will guide teachers using those learning activities in their CS0/CS1 or K-12 courses.\nWe plan to achieve these goals as follows: Step 1 Review the current state of research and development by analyzing literature on classroom activities that improve program comprehension. Step 2 Concurrently, survey lecturers at various institutions on their use of workshop activities to foster PC. Step 3 Use the outputs from both activities to define and conceptualize what is meant by PC in the context of novice programmers. Step 4 Catalog learning activities with regard to their prerequisites, intended learning outcomes and additional special characteristics. Step 5 Catalog learning activities with regard to their prerequisites, intended learning outcomes and additional special characteristics. Step 6 Develop a map of learning activities and thereby also models of probable learning trajectories.", "authors": [{"name": "Birte Heinemann", "affiliation": "Paderborn University, Paderborn, Germany"}, {"name": "Claudio Mirolo", "affiliation": "University of Udine, Udine, Italy"}, {"name": "Quintin Cutts", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Mirela Gutica", "affiliation": "British Columbia Institute of Technology, Burnaby, Canada"}, {"name": "Rodrigo Duran", "affiliation": "Aalto University, Helsinki, Finland"}, {"name": "Carsten Schulte", "affiliation": "Paderborn University, Paderborn, Germany"}, {"name": "Renske Weeda", "affiliation": "Radboud University, Nijmegen, Netherlands"}, {"name": "Cruz Izu", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Violetta Lonati", "affiliation": "University of Milan, Milan, Italy"}, {"name": "Eileen Kraemer", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Ashish Aggarwal", "affiliation": "University of Florida, Glansville, FL, USA"}], "tags": ["learning trajectories", "cs1", "program comprehension"]}, {"title": "1.5 Degrees of Separation: Computer Science Education in the Age of the Anthropocene", "link": "https://dl.acm.org/doi/10.1145/3304221.3325530", "abstract": "Climate change is the defining environmental challenge now facing our planet. Babies born today will be 22 when global warming reaches 1.5 C, according to the latest IPCC report and forecasts. What will life be like in 2040? How do we as educators respond today, to the challenges that lie ahead for the next generation?\nHow do our practices evolve to take global climate change into account? How do we as educators respond when we see the impact our products have on climate change and the environment? Is it enough to relegate sustainability and climate change to a required course or can we begin to imagine sustainability as a conversation across the entire curriculum?\nIn this working group, we will collaboratively review the literature, and gather, assemble and compile sample syllabi, case studies, and assignments that address climate change in the context of computer science education. We will work together to think through how best to equip our students with the tools needed to adapt to a world shaped by climate change.", "authors": [{"name": "Bedour Alshaigy", "affiliation": "Oxford Brookes University, Oxford, United Kingdom"}, {"name": "Linda Ott", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Andrew Bradley", "affiliation": "Oxford Brookes University, Oxford, United Kingdom"}, {"name": "Anne-Kathrin Peters", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Birgit R. Krogstie", "affiliation": "Norwegian University of Science and Technology, Trondheim, Norway"}, {"name": "Charles Wallace", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Charles Riedesel", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "Viraj Kumar", "affiliation": "Indian Institute of Science, Bengaluru, India"}, {"name": "Ian Pollock", "affiliation": "California State University East Bay, Hayward, CA, USA"}], "tags": ["sustainability", "anthropocene", "model curricula", "climate change"]}, {"title": "Data Science Education: Global Perspectives and Convergence", "link": "https://dl.acm.org/doi/10.1145/3304221.3325533", "abstract": "Over the past two decades, data science or data analytics degree programs have begun to emerge, reflecting the world's demand for data specialists to make sense of the vast amounts of collected data in the sciences, engineering, business, and other domains. As degree creation has occurred mainly due to demand, ACM and other professional bodies have recently stepped in to provide curricular guidance. However, no \\em shared global framework for data science as an academic discipline exists, making growth unfocused and driven by employer demands. More recently, the growth of artificial intelligence has also impacted data science programs. This working group builds on prior efforts and participant experiences to develop a global taxonomy of approaches to data science education and expectations for graduates of data science programs to \\em think like data scientists.", "authors": [{"name": "Teresa Susana Mendes Pereira", "affiliation": "Instituto Politecnico de Viana do Castelo, Viana do Castelo, Portugal"}, {"name": "Casey C. Bennett", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Karen C. Davis", "affiliation": "Miami University, Oxford, OH, USA"}, {"name": "John Impagliazzo", "affiliation": "Hofstra University, Hempstead, NY, USA"}, {"name": "Andrew McGettrick", "affiliation": "Strathclyde University, Glasgow, United Kingdom"}, {"name": "Lovisa Sundin", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Sherif Aly Ahmed", "affiliation": "The American University in Cairo, Cairo, Egypt"}, {"name": "Allen Parrish", "affiliation": "Mississippi State University, Mississippi State, MS, USA"}, {"name": "Rajendra K. Raj", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Carol J. Romanowski", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["global standards", "multidisciplinary education", "computing education", "iticse working group", "accreditation", "data science education"]}, {"title": "Pass Rates in STEM Disciplines Including Computing", "link": "https://dl.acm.org/doi/10.1145/3304221.3325532", "abstract": "Vast numbers of publications in computing education begin with the premise that programming is hard to learn and hard to teach. Many papers note that failure rates in computing courses, and particularly in introductory programming courses, are higher than their institutions would like. Two highly distinct research projects have established that average success rates in introductory programming courses world-wide are in the region of 67%. However, there is little published work comparing pass rates in computing courses with those in other STEM disciplines. As institutions continually ask computing educators to justify the atypical failure rates in their courses, a thoroughly researched comparison of this sort could prove useful in demonstrating whether the phenomenon is real, and, if so, whether it extends somewhat beyond the boundaries of individual institutions. This working group will gather information on pass rates in computing courses, particularly introductory programming courses, and in courses at comparable levels in other STEM disciplines. Members of the group will be required to gather the information from their own institutions, and further data will be gathered by way of a broad survey. The data will be analysed to see whether global patterns can be established, and the group will survey the literature to gather and summarise postulated explanations for any difference between pass rates in computing and in other STEM disciplines.", "authors": [{"name": "Chris Gonsalvez", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Neena Thota", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}, {"name": "Jack Parkinson", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Eric Fouh", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Vangel Ajanovski", "affiliation": "Ss Cyril and Methodius University, Skopje, Macedonia"}, {"name": "Matthew Poole", "affiliation": "University of Portsmouth, Portsmouth, United Kingdom"}, {"name": "Andrew Luxton-Reilly", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["pass rate", "cs1", "introductory programming", "failure rate", "stem disciplines", "iticse working group"]}, {"title": "A Periodic Table of Computing Education Learning Theories", "link": "https://dl.acm.org/doi/10.1145/3304221.3325534", "abstract": "Computing education research is built on the use of suitable methods within appropriate theoretical frameworks to provide guidance and solutions for our discipline, in a way that is rigorous and repeatable. However, the scale of theory covered extends well beyond the CS discipline and includes educational theory, behavioural psychology, statistics, economics, and game theory, among others. A computing education researcher's journey towards appropriate and discipline relevant theory can be challenging and, when a researcher has learned one area of theory, it can be easy to return to familiar theory, as it may not be clear what the next step could be. The periodic table is a visual arrangement of the elements to group like with like, providing insight into how families of elements will react. Could we do the same with learning theories located in the domain of computer science education, and would it be useful? The working group will identify and survey existing literature on relationships between key areas of theory in computing education, identify ways of organising these research areas to show how knowledge of one could assist another, and produce initial graphical representations of theory and their relationship groupings to assist researchers in understanding how computing theory is currently used in the discipline and what theories might become of interest.", "authors": [{"name": "Heather Bort", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "James Robinson", "affiliation": "Raspberry PI Foundation, Cambridge, United Kingdom"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Mississauga, Canada"}, {"name": "Cornelia Connolly", "affiliation": "NUI Galway, Galway, Ireland"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Kathryn Cunningham", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Peter Donaldson", "affiliation": "University of Glasgow, Glasgow, Scotland Uk"}, {"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Claudia Szabo", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Nickolas Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["learning theory", "epistemology", "computing education"]}, {"title": "Effective Computer Science Teacher Professional Development: Beauty and Joy of Computing 2018", "link": "https://dl.acm.org/doi/10.1145/3304221.3319779", "abstract": "The Advanced Placement Computer Science Principles (AP CSP) course has been fully active for 2 years, garnering a large group of diverse students [2], and flaming the need for highly trained CSP teachers, especially in effective practices for diversity and equity. We have conducted summer professional development (PD) workshops from 2012-2018 which have prepared 748 teachers to teach AP CSP using the Beauty and Joy of Computing (BJC) curriculum. To improve equity and readiness for teaching, we have refined our PD by: shortening the PD from 6 weeks to 1 week; developing new, highly scaffolded pre-PD work; and modifying the in-person schedule to incorporate more pedagogy and teaching experiences, while continuing to provide in-depth, hands-on support for teachers to learn the basics of programming. The most recent revisions to our PD schedule resulted in improved post-PD survey results, with teachers from the 2018 cohort planning to adopt more of the BJC curriculum than in past years. From 2017 to 2018, planned adoption rates increased by 13%, resulting in 73% of the 2018 PD participants planning to adopt more than $60%$ of the BJC curriculum and 58% planning to adopt 80-$100% of the BJC curriculum in their classrooms in 2018-2019. In this paper, we discuss the most recent BJC PD implementation and provide evidence of increased teacher self-efficacy in areas including fostering interest in computing for underrepresented populations.", "authors": [{"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Alexandra Milliken", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Christa Cody", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Veronica Catete", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["professional development", "computer science principles", "k12 education"]}, {"title": "Infusing Computing: Analyzing Teacher Programming Products in K-12 Computational Thinking Professional Development", "link": "https://dl.acm.org/doi/10.1145/3304221.3319772", "abstract": "In summer 2018, we conducted two week-long professional development workshops for 116 middle and high school teachers interested in infusing computational thinking (CT) into their classrooms. Teachers learned to program in Snap!, connect CT to their disciplines, and create infused CT learning segments for their classes. This paper investigates the extent to which teachers were able to successfully infuse CT skills of pattern recognition, abstraction, decomposition, and algorithms into their learning products.\nIn this work, we analyzed 58 teacher-designed programming products to look for common characteristics, such as project type, intended coding requirements for their students, and code features/functionality. Teacher-created products were classified into five types: animation, interactive story, quiz, intended game, and simulation/exploration tools. Coding requirements varied from using and/or explaining provided code, modifying existing code, programming with starter code, to building entire programs. Products were classified according to the extent to which they involved sprite manipulation, questions/answers, event handling, drawing, and control blocks. We found that teachers from different disciplines created products that vary in type, coding requirements, and features to suit their specific needs. Moreover, we found relationships between discipline, project type, and the required coding teachers expected students to do.\nOur results inform future Infusing Computing Professional Development (PD) to provide more targeted training to support different teacher needs.", "authors": [{"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Richard Robinson", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Amy Isvik", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Deepti Joshi", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Jennifer Albert", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Yihuan Dong", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Robin Jocius", "affiliation": "The Citadel, Charleston, SC, USA"}, {"name": "Veronica Catet\u00e9", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Ashley Andrews", "affiliation": "The Citadel, Charleston, SC, USA"}], "tags": ["professional development", "computational thinking", "programming", "k-12"]}, {"title": "Impact of HFOSS on Education on Instructors", "link": "https://dl.acm.org/doi/10.1145/3304221.3319765", "abstract": "Student involvement in Humanitarian Free and Open Source Software (HFOSS) increases student self-reported learning while providing the motivation of \"doing good\" [11]. Supporting this type of student participation also impacts the instructors. This effect includes modifying one's teaching approach, providing a different perspective on the subject matter, and changing how instructors perceive their roles. This paper explores the impact on instructors that result from supporting student participation in HFOSS, including consideration of pedagogical practices, self-perceptions of teaching, and exposure to open source culture and technologies. The paper also examines resources that instructors consider important for HFOSS education. The analysis presented here is based upon a qualitative analysis of semi-structured interviews with 24 faculty members. Results indicate that exploring HFOSS education changes instructors' pedagogical approaches, broadens instructors' perspectives on the connections between academic content and professional practice, and has impact on instructors' attitudes and motivations when teaching.", "authors": [{"name": "Stoney Jackson", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Heidi J. C. Ellis", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Gregory W. Hislop", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Darci Burdge", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Lori Postner", "affiliation": "Nassau Community College, Garden City, NY, USA"}], "tags": ["hfoss", "computing for social good", "computing education", "humanitarian computing"]}, {"title": "Evaluating the Effectiveness of Explicit Instruction in Reducing Program Reasoning Fallacies in Elementary Level Students", "link": "https://dl.acm.org/doi/10.1145/3304221.3325588", "abstract": "Previous research in K-5 CS education has focused on improving students' engagement in programming using visual block-based environments like Scratch. However, little is known about how elementary school students' reason about programs. We define computational reasoning as the ability to read, write, trace and debug programs and predict program behavior. Recently, computing education researchers have become interested in exploring how elementary school students build their computational reasoning abilities. This poster presents results from a study which analyzed the role of explicit instruction in the form of 'laws of computation' in cultivating elementary school (4th and 5th graders) students' ability to reason about programs using Microsoft Kodu Game Lab. We used pretests to record students' default models of reasoning about programs and then used posttests to measure the effectiveness of intervention by noting students' reasoning responses on a similar program. Our findings indicate that by default students reason sequentially about program execution which can be incorrect in situations like parallel rule execution. We also found that the use of explicit instruction in the form of 'laws' is helpful for students to refine their understanding of program execution and to improve their reasoning ability.", "authors": [{"name": "Ashish Aggarwal", "affiliation": "University of Florida, Gainesviile, FL, USA"}, {"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "David S. Touretzky", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["computational reasoning", "explicit instruction", "kodu", "program comprehension", "elementary school students", "analogical reasoning"]}, {"title": "A Conceptual Framework for Identifying Emotional Factors Leading to Student Disengagement in VLEs", "link": "https://dl.acm.org/doi/10.1145/3304221.3325570", "abstract": "Higher Education is witnessing a mental health crisis without precedents. Learning analytics offer powerful tools to monitor students engagement, but would instructors in Virtual Learning Environments (VLEs) benefit from being able to monitor mental well-being as well? And how can this be implemented in a way that is not disruptive to education? We have devised a conceptual framework addressing this issue, which incorporate the role of the online tutor into an environment \"observing\" student communicative acts. The conceptual framework is evaluated in a series of experiments and case studies, aimed at assessing the feasibility and appreciate the usefulness of single potential components, and on the basis of expert commentaries.", "authors": [{"name": "Floriana Grasso", "affiliation": "University of Liverpool, Liverpool, United Kingdom"}, {"name": "Lubna Alharbi", "affiliation": "University of Liverpool, Liverpool, United Kingdom"}, {"name": "Phil Jimmieson", "affiliation": "University of Liverpool, Liverpool, United Kingdom"}], "tags": ["emotional analytics", "student mental health", "vles"]}, {"title": "A Framework for Improving the Sharing of Teaching Practices among Computer Science Instructors", "link": "https://dl.acm.org/doi/10.1145/3304221.3325590", "abstract": "In this poster we present a novel conceptual framework for enhanc- ing the sharing of best teaching practices among academics. The proposed framework is constructed based upon the understanding and mapping of the [1] knowledge creation theory.", "authors": [{"name": "Mike Joy", "affiliation": "University of Warwick, Coventry, United Kingdom"}, {"name": "Nouf Almujally", "affiliation": "University of Warwick, Coventry, United Kingdom"}], "tags": ["knowledge management system", "teaching practices"]}, {"title": "A Reflective Writing Framework for Computing Education", "link": "https://dl.acm.org/doi/10.1145/3304221.3325580", "abstract": "Many disciplines already embed reflective practice in their curriculum as it is important for the professional development of their students. Many frameworks have been developed to capture reflective practice, but there is a lack of knowledge about what constitutes it in computer science education (CSE). This poster introduces a reflective writing framework (RWF) in CSE. This poster makes two contributions: (1) it outlines the construction process of the RWF for CSE, and (2) it discusses the proposed validation of the RWF with a panel of experts.", "authors": [{"name": "Mike Joy", "affiliation": "University of Warwick, Coventry, United Kingdom"}, {"name": "Thomas Daniel Ullmann", "affiliation": "Open University, Milton Keynes, United Kingdom"}, {"name": "Huda Alrashidi", "affiliation": "University of Warwick, Coventry, United Kingdom"}], "tags": ["reflection", "comgputer science", "reflective writing"]}, {"title": "Eye Tracking to Evaluate Comprehension of Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3304221.3325555", "abstract": "concepts (CTCs), specifically in block-based programming environments like Scratch, has been challenging, and assessment instruments developed and presented in prior studies either do not provide a complete picture about students' cognitive processes or they are not easy-to-administer, subjective, or requires lengthy analysis of qualitative data. Eye-tracking has become one of the most popular methods to study what individuals view, in what order, for how long, and how often, and it is a technology that could give us a window into students' cognitive processes and could be used as an assessment tool for comprehension of CTCs [1].\nThis study presents eye-tracking technology as an objective, non-intrusive, and easy-to-administer assessment instrument to measure students' comprehension of core CTCs including sequences, loops, events, parallelism, conditionals, operators, data, motion, looks, sound, pen, and sensing. It explores gradual changes in students' comprehension of CTCs as reflected on three eye-gaze data as a proxy; FD (Fixation Duration), SA (Saccade Amplitudes), and RF (Regression Frequency).", "authors": [{"name": "Abdurrahman Arslanyilmaz", "affiliation": "Youngstown State University, Youngstown, OH, USA"}, {"name": "Kendra Corpier", "affiliation": "Youngstown State University, Youngstown, OH, USA"}], "tags": ["assessment", "computational thinking", "eye tracking"]}, {"title": "The Use of Gamification to Support the Process of Teaching Scrum", "link": "https://dl.acm.org/doi/10.1145/3304221.3325583", "abstract": "This poster presents our work in progress using gamification principles to create a game for supporting the process of teaching Project Management concepts. We created the Scrum Simulator, a game that is focused on promoting the engagement of students in the learning process of agile concepts and the Scrum methodology. This game is based on CRPG ? Computer Role-Playing game, where the student controls the actions of a character immersed in a well-defined world. Our game simulates different circumstances where the student can \"live\" the different Scrum phases and roles. We will describe the details of the implementation of the project and how students can experience real situations in software development.", "authors": [{"name": "Douglas Sanches Cunha", "affiliation": "FEMA, Assis, SP, Brazil"}, {"name": "Luiz Carlos Begosso", "affiliation": "FATEC, FEMA, Assis, SP, Brazil"}, {"name": "Luis Henrique Buzzo Franco", "affiliation": "FEMA, Assis, SP, Brazil"}, {"name": "Luiz Ricardo Begosso", "affiliation": "FEMA, Assis, SP, Brazil"}], "tags": ["simulator", "gamification", "project management", "agile", "scrum"]}, {"title": "OurKidsCode: A National Programme to get Families Involved in CS Education", "link": "https://dl.acm.org/doi/10.1145/3304221.3325574", "abstract": "Across Europe, primary age children are being encouraged to learn computing. OurKidsCode is a joint project between the National Parents' Council (Primary) and Trinity College Dublin. The project's needs analysis found that families play an important role in supporting children's learning, indicating the opportunity for innovative computing workshops throughout Ireland. In response, OurKidsCode has designed family-friendly, mixed age workshops to help parents and children work together and build the confidence and competence to engage with computing. Challenges addressed through the design included widening recruitment, increasing engagement and sustaining involvement. Evaluation of the pilot workshops showed a significant increase in the computing confidence of the participants and an increased readiness to take part in future computing activites.", "authors": [{"name": "Glenn Strong", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "Richard Millwood", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "Lorraine Fisher", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "Aine Lynch", "affiliation": "National Parents Council Primary, Dublin, Ireland"}, {"name": "Nina Bresnihan", "affiliation": "Trinity College Dublin, Dublin, Ireland"}], "tags": ["confidence", "families", "primary education", "computing"]}, {"title": "Student Motivation and Engagement in STEM Courses: Exploring the Potential Impact of Gamification", "link": "https://dl.acm.org/doi/10.1145/3304221.3325578", "abstract": "Gamification in education still lacks systematic studies assessing its impact on learning. This poster will present the design of our empirical studies on the effect of various combination of game elements on student motivation and engagement in CS courses.", "authors": [{"name": "Keith Irwin", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Breonte Guy", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Darina Dicheva", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Lillian Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Christo Dichev", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["gamification", "computing education", "student engagement"]}, {"title": "Computing Ipsative Assessment. Improving the Student Experience in Higher Education Using Personalised Assessment and Feedback", "link": "https://dl.acm.org/doi/10.1145/3304221.3325565", "abstract": "Computing: Ipsative Assessment (C:IA) is a tool developed to help ameliorate the issues potentially causing student dissatisfaction regarding assessment and feedback within UK higher education. Using Newcastle University as a case study the system was given to a small group of students as a trial. This poster discusses some of the causes of the dissatisfaction that our students faced with their assessment and feedback, and how using the system we attempt to reduce the impact of these issues.", "authors": [{"name": "Marie Devlin", "affiliation": "Newcastle University, Newcastle, England UK"}, {"name": "Ryan Crosby", "affiliation": "Newcastle University, Newcastle, England UK"}, {"name": "Lindsay Marshall", "affiliation": "Newcastle University, Newcastle, England UK"}], "tags": ["assessment", "education", "feedback"]}, {"title": "Development of a Checklist Tool for Teaching Problem-Solving Skills", "link": "https://dl.acm.org/doi/10.1145/3304221.3325560", "abstract": "Problem solving is a critical skill for computer science. However, the complexity and overhead of most programming tasks make problem solving difficult to explicitly teach. Previous studies describe explicit instruction of problem-solving strategies, but provide few details about how the strategies have been developed. We describe the development of a checklist tool that guides students in solving general programming tasks. The tool was developed by observing problem-solving strategies used by advanced computer science students in practice. We believe that the tool will provide a basis for explicit problem-solving instruction for novice programmers.", "authors": [{"name": "Dalton Polhill", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Grant Douglas", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Matthew Sampson", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "David Hudec", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Rhys Young", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "James Mosley", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Judi McCuaig", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Alliyya Mohammed", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Hillary Dawkins", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Mostafa Rashed", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Kevin Glover-Netherton", "affiliation": "University of Guelph, Guelph, Canada"}, {"name": "Sean Lunt", "affiliation": "University of Guelph, Guelph, Canada"}], "tags": ["teaching aid development", "problem solving"]}, {"title": "Infusing Data Science Across Disciplines", "link": "https://dl.acm.org/doi/10.1145/3304221.3325579", "abstract": "In this poster, we describe our effort to develop, pilot, and evaluate a model for infusing data literacy into undergraduate curricula across a variety of disciplines using a modular approach. Our pilot implementation achieved reasonable success in attaining student learning outcomes, enhanced engagement, and interests.", "authors": [{"name": "Russell M. Smith", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Muztaba Fuad", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Debzani Deb", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["computer science education", "cs+x", "data science"]}, {"title": "Idempotent Factorizations: A New Addition to the Cryptography Classroom", "link": "https://dl.acm.org/doi/10.1145/3304221.3325557", "abstract": "While it is commonly believed RSA requires two primes p and q, that is incorrect. Infinite examples of RSA encryption moduli n=pq exist with p and/or q composite that generate correct RSA keys. This can be explained in the undergraduate cryptography classroom with support from public domain technologies like the python numbthy library and the Gephi graph processor.", "authors": [{"name": "Barry Fagin", "affiliation": "US Air Force Academy, USAFA, CO, USA"}], "tags": ["computer science education", "abstract algebra", "cryptography", "rsa"]}, {"title": "Improving Functional Programming Understanding through Student-Created Instructional Videos", "link": "https://dl.acm.org/doi/10.1145/3304221.3325587", "abstract": "This poster presents findings on a pedagogical approach we designed to enhance undergraduate computing students' understanding of functional programming (FP) through student-created video-tutorials. Students created two video tutorials. The first video-tutorial assignment asked the students to develop explanations of FP concepts (theoretical understanding of FP). The second video-tutorial required students to explain their solutions to programming exercises using Haskell (application of FP). Our findings suggest that the use of student-created video-tutorial can be effective for increasing students' understanding and application of functional programming.", "authors": [{"name": "Christina Gardner-McCune", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Pedro G. Feij\u00f3o-Garc\u00eda", "affiliation": "University of Florida and Universidad El Bosque, Gainesville, FL, USA"}], "tags": ["computing education", "student-created artifacts"]}, {"title": "We Need to Talk!! &ndash; A Chatroom Application Using a Student-Designed Protocol", "link": "https://dl.acm.org/doi/10.1145/3304221.3325575", "abstract": "This poster describes an assignment for a computer networks class in which students design and implement an application-layer protocol for a chatroom using a client-server architecture running over TCP-IP. Working collaboratively, students design a single protocol that will be implemented by all class members. The protocol is written in a style based on that used in a Request for Comments (RFC), the international standard for describing networking protocols. Students work in pairs to implement the protocol using a programming technology of their choice. This experience helps students to understand that different applications can communicate when they are all designed according to the same RFC specification.", "authors": [{"name": "Greg Gagne", "affiliation": "Westminster College, Salt Lake City, UT, USA"}], "tags": ["computer networks", "protocols", "tcp-ip", "computer science education", "client--server"]}, {"title": "The Peanut Butter and Jelly Sandwich Challenge as an Approach to Improve Students Abilities in Test Case Writing", "link": "https://dl.acm.org/doi/10.1145/3304221.3325582", "abstract": "Test cases are a set of test inputs, execution conditions, and expected results developed for a particular objective, such as to exercise a particular program path or to verify compliance with a specific requirement. Test cases that are written by students typically have recurring errors that make difficult to find hidden bugs or lack essential details about the data to be used and the instructions that must be followed. As an attempt to improve the quality of students test cases, we used a \"Peanut butter and jelly sandwich challenge\", typically used to teach algorithmic thinking, to show students the difficulties one may have repeating a simple set of instructions when they are not precisely described. That activity was adapted to cover contents focused on test case writing.", "authors": [{"name": "Andrew Diniz", "affiliation": "PUC-Rio, Rio de Janeiro, Brazil"}, {"name": "Hendi Coelho", "affiliation": "PUC-Rio, Rio de Janeiro, Brazil"}, {"name": "Ricardo Almeida", "affiliation": "PUC-Rio, Rio de Janeirop, Brazil"}, {"name": "Kiev Gama", "affiliation": "Universidade Federal de Pernambuco, Recife, Brazil"}], "tags": ["test cases", "software testing", "blackbox testing"]}, {"title": "Teaching Logic with Iltis: an Interactive, Web-Based System", "link": "https://dl.acm.org/doi/10.1145/3304221.3325571", "abstract": "Iltis is an interactive, web-based system for teaching logic. It is designed to provide immediate and comprehensive feedback for exercises covering various aspects of the reasoning workflow. This poster presentation reports on new exercises and feedback mechanisms for modal and first-order logic.", "authors": [{"name": "Marko Schmellenkamp", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Jonas Schmidt", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Daniel Sonnabend", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Thomas Zeume", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Gaetano Geck", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Johannes May", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Felix Tschirbs", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Jonas Haldimann", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Fabian Vehlken", "affiliation": "TU Dortmund, Dortmund, Germany"}, {"name": "Artur Ljulin", "affiliation": "TU Dortmund, Dortmund, Germany"}], "tags": ["modal logic", "logic", "propositional logic", "interactive learning environments", "first-order logic"]}, {"title": "Adapting the IT2017 Curricula for Two Year Transfer Programs: Determining Appropriate Competencies for the First Two Years of a Baccalaureate IT Program", "link": "https://dl.acm.org/doi/10.1145/3304221.3325584", "abstract": "After the Association for Computing Machinery (ACM) and the IEEE Computer Society endorsed the recently completed Information Technology Curricula 2017 Curriculum Guidelines (IT2017) for Baccalaureate Degree Programs in Information Technology (IT) [1], the ACM Committee for Computing Education in Community Colleges (CCECC) at the direction of the ACM Education Board joined with the chair of the IT2017 task group to create corresponding guidance for two-year colleges offering IT transfer programs. In some countries, students can complete the first two years of a Bachelor's degree at a two-year school (which may be known as a community college, technical college, or junior college), and then transfer to a university to complete the remaining two years of their course of study [3]. The CCECC formed the IT Transfer Task Force (ITTTF), consisting of educators from both two-year colleges and four-year universities, to provide guidance for IT programs in such two-year schools. The guidance includes the competencies students should achieve during the first two years of an IT Bachelor's degree. The ITTTF is currently seeking public feedback from educators and IT industry representatives on an initial set of competencies to guide how the ITTTF should proceed to build IT Transfer Curriculum Guidelines. This poster will outline the initial selection of competencies to solicit feedback and input on the guidelines, including best practices for communication between two year IT Transfer programs and their four year university partners.", "authors": [{"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Melissa Stange", "affiliation": "Lord Fairfax Community College, Middletown, VA, USA"}, {"name": "Markus Geissler", "affiliation": "Cosumnes River College, Sacramento, CA, USA"}, {"name": "Christian Servin", "affiliation": "El Paso Community College, El Paso, TX, USA"}, {"name": "Cindy S. Tucker", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}], "tags": ["it transfer", "two-year colleges", "it2017", "curricula"]}, {"title": "Unplugged Activities to Introduce Parallel Computing in Introductory Programming Classes: an Experience Report", "link": "https://dl.acm.org/doi/10.1145/3304221.3325573", "abstract": "Learning programming in early introductory classes is challenging for first year university students, and introducing parallel programming (PDC) in early classes along with traditional sequential programming is even more challenging. Unplugged activities may help alleviate some of the difficulties for students. Unplugged activities have been shown to increase student interest, and to enhance student understanding of CS programming concepts. We have used unplugged activities to teach PDC concepts before introducing parallel programming. Our experiences show that using unplugged activities to introduce the PDC concepts reduce the barrier to learn parallel programming.", "authors": [{"name": "Mike Rogers", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}, {"name": "Thomas Hines", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}, {"name": "Sheikh K. Ghafoor", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}, {"name": "David W. Brown", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}], "tags": ["unplugged activities", "parallel and distributed computing", "introductory programming"]}, {"title": "From Data To Insights in CS1", "link": "https://dl.acm.org/doi/10.1145/3304221.3325586", "abstract": "In this poster, we present some insights from student interaction data based on a year-long study on how to rethink the instructional model of a large CS1 (n=800) course. A key goal of the study was to address the increasing academic diversity in large introductory courses. The redesigned curriculum uses a combination of automation, real-time data and a better utilization of teaching staff to deliver an enhanced learning experience. The new measures demonstrated significant improvements in student engagement and over 90% course satisfaction.", "authors": [{"name": "Ananda Gunawardena", "affiliation": "Rutgers University / Princeton University, New Brunswick, NJ, USA"}], "tags": ["video-based instruction", "analytics", "introductory cs"]}, {"title": "Motivating High School Girls to Study Computer Science", "link": "https://dl.acm.org/doi/10.1145/3304221.3325589", "abstract": "This research study aims to identify design strategies, instructional models and technological tools (e.g., educational games) that can be used to motivate high school girls to pursue computer science (CS) education. Part of this study, an educational game CodeBlock intended to teach basic programming, was designed and implemented for HoloLens devices. This study evaluates to what extent participating in a coding workshop consisting of a set of coding exercises and the CodeBlock game play could increase the interest of high school girls in CS. The workshop is conducted by undergraduate students who were involved in the design and implementation of the game, which has an additional benefit of exposing young girls to technologies implemented by post-secondary students, thus increasing the chances they will pursue post-secondary education in CS related fields.", "authors": [{"name": "Mirela Gutica", "affiliation": "British Columbia Institute of Technology, Burnaby, BC, Canada"}], "tags": ["girls", "gender gap", "role models", "motivation", "computer science"]}, {"title": "Findings from a Multi-year Study of CT in K-2 Students in Formal and Informal Settings", "link": "https://dl.acm.org/doi/10.1145/3304221.3325585", "abstract": "For the past four years, our research group has conducted a series of NSF funded studies on Computational Thinking (CT) involving elementary school students, parents, and teachers. We developed curriculum, trained teachers, observed classrooms, created museum exhibits, followed students and families, explored theory, and utilized the diverse skills of a large multi-disciplinary research group to understand the intersection of STEM, literacy, and CT. As we close out this grant, we are looking to disseminate our findings, share lessons learned about research methods and data collection, and build collaborations for future research.", "authors": [{"name": "Monica Cardella", "affiliation": "Purdue University, West Layfayette, IN, USA"}, {"name": "Sean Brophy", "affiliation": "Purdue University, West Layfayette, IN, USA"}, {"name": "Tony Lowe", "affiliation": "Purdue University, West Layfayette, IN, USA"}], "tags": ["professional development", "computational thinking", "formal and informal instruction", "p-12"]}, {"title": "Devising Work-based Learning Curricula with Apprentice Research Software Engineers", "link": "https://dl.acm.org/doi/10.1145/3304221.3325576", "abstract": "Work-based learning (WBL) is a delivery model that attempts to address the isolation of theory and practice by integrating them into a single programme. The concern is that through lack of experience and understanding, both universities and industry may devise 'Frankenstein' curricula, harming individuals rather than helping them. This poster introduces a small project to support curricula development by proposing universities act as both the learning provider and workplace for apprentice Research Software Engineers (RSEs).", "authors": [{"name": "Quintin Cutts", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Derek Somerville", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Matthew Barr", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Joseph Maguire", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Jack Parkinson", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}], "tags": ["work-based learning", "research software engineers"]}, {"title": "Insights from using Supplemental Instruction (SI) in Data Structures Course to Increase Retention", "link": "https://dl.acm.org/doi/10.1145/3304221.3325553", "abstract": "Data Structures (CS 242) ranks as one of the most challenging courses in our core curriculum. It has the steepest learning curve for our students and has the lowest retention rate. Students find it challenging to master the mathematical concepts, learn the data structures and apply them in large programs. Three years ago, the department decided to offer Supplemental Instruction (SI) in CS 242 and in Discrete Structures (CS 225), a co-requisite for CS 242, in the hope of increasing retention in CS 242. In this poster, the author shares experiences with the SI approach, and the results of a student survey to assess the efficacy of SI in both these courses.", "authors": [{"name": "Aparna Mahadev", "affiliation": "Worcester State University, Worcester, MA, USA"}], "tags": ["curriculum issues", "data structures", "student retention", "instruction", "student engagement", "pedagogy"]}, {"title": "Exploring the Correlation Between Teacher Pedagogical Content Knowledge and Content Knowledge in Computer Science Classrooms", "link": "https://dl.acm.org/doi/10.1145/3304221.3325556", "abstract": "Educators have long claimed that pedagogical content knowledge (PCK), ways of presenting a subject that make it comprehensible to others, is a critical element of student academic success. This poster presents findings from a preliminary study of Computer Science Principles teachers that demonstrate a significant correlation between teacher PCK and student content knowledge. The study describes the measures used to assess PCK, operationalizes the mechanisms for measuring teacher pedagogical content knowledge, shares the results from a multi-level modeling analysis, and identifies methodological improvements for follow-up research. The findings from this initial study show correlations of teacher PCK with student content knowledge while accounting for other teacher- and student-level variables across multiple schools.", "authors": [{"name": "Emily Bryans", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Doug Edwards", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Brian Magerko", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Taneisha Lee", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Tom McKlin", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Sabrina Grossman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Dana Wanzer", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Jason Freeman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["music", "teacher professional development", "computer science education", "pedagogical content knowledge", "steam", "broadening participation"]}, {"title": "A Proposal for Recognizing Skills in Data Science Using Open Badges", "link": "https://dl.acm.org/doi/10.1145/3304221.3325561", "abstract": "The growing demand for data scientists and their importance in industrial trends has resulted in a number of recent initiatives to promote skills in data science. One of these initiatives is a badge based scheme for the recognition of skills in data science developed as part of the BDVe project with the collaboration of the BDVA. This initiative is based upon a committee of experts, from both academia and industry, which will define and maintain a list of skills required to play key roles in the data science ecosystem.", "authors": [{"name": "Ernestina Menasalvas", "affiliation": "Universidad Polit\u00e9cnica de Madrid, Madrid, Spain"}, {"name": "Nik Swoboda", "affiliation": "Universidad Polit\u00e9cnica de Madrid, Madrid, Spain"}, {"name": "Ana M. Moreno", "affiliation": "Universidad Polit\u00e9cnica de Madrid, Madrid, Spain"}], "tags": ["data science credentials", "open badges", "data science badges"]}, {"title": "A Gamification Pathway for Computer Science Student Success", "link": "https://dl.acm.org/doi/10.1145/3304221.3325577", "abstract": "Surging enrollments in computer science programs have necessitated the scaling-up of many programs, resulting in more curriculum offerings and larger courses enrollments to meet increasing student demand. To ensure that all students are receiving equitable information and mentoring, a pathway for computer science student success has been designed as a game, offering concrete steps for students to take in each of their four undergraduate years. Incentives are offered to students as they complete each step, culminating in badges. The use of program-wide gamification has been well-received by students, with student engagement and retention positively impacted. Lessons learned from this pilot include the importance of early introduction to the students, faculty reinforcement in the classroom, and the use of experience rewards over material rewards.", "authors": [{"name": "Dustin York", "affiliation": "Maryville University, St. Louis, MO, USA"}, {"name": "Patricia Morreale", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Nohelia Diplan", "affiliation": "Kean University, Union, NJ, USA"}], "tags": ["gamification", "computer science education", "engagement", "mobile application", "retention"]}, {"title": "Impact of Part-Time CS Engineering Internships on Workload", "link": "https://dl.acm.org/doi/10.1145/3304221.3325554", "abstract": "This study evaluates the impact of part-time internships (PTI) on concurrent subjects and students' satisfaction, in a Computer Science (CS) Engineering degree program. PTI offer some advantages: the technologies learned have a very positive influence on the quality of subsequent capstone projects (CP), students maintain in contact with the university, and synergies can be generated. Nevertheless, there are some challenges as well: maintaining a reasonable workload for students and achieving optimal coordination among different subjects.", "authors": [{"name": "Juan J. Olarte", "affiliation": "University of La Rioja, Logro\u00f1o, Spain"}, {"name": "Arturo Jaime", "affiliation": "University of La Rioja, Logro\u00f1o, Spain"}, {"name": "C\u00e9sar Dom\u00ednguez", "affiliation": "University of La Rioja, Logro\u00f1o, Spain"}, {"name": "Francisco J. Garc\u00eda-Izquierdo", "affiliation": "University of La Rioja, Logro\u00f1o, Spain"}], "tags": ["coordination across subjects", "workload", "internships"]}, {"title": "Instructional Pseudocode Guide to Teach Problem-Solving", "link": "https://dl.acm.org/doi/10.1145/3304221.3325581", "abstract": "Teaching students problem-solving skills is the biggest challenge for many computing programs. Students often do not consider what questions they need to ask while designing a solution. This paper introduces how technical writing techniques and problem-solving strategies can be combined to help students find those questions and develop programming code through writing instructions and documenting their design process. Preliminary results indicate that this approach helps developing problem-solving skills and improves the student success rate in the first programming course.", "authors": [{"name": "Sourav Debnath", "affiliation": "Kennesaw State University, Marietta, GA, USA"}, {"name": "Svetlana Peltsverger", "affiliation": "Kennesaw State University, Marietta, GA, USA"}], "tags": ["programming", "computer science education", "cs1", "success"]}, {"title": "Supporting Abstraction Skills Using Augmented Reality?", "link": "https://dl.acm.org/doi/10.1145/3304221.3325562", "abstract": "We investigated the potential of augmented reality (AR) to enable visualization of abstract concepts and present the first iteration of a teaching experiment that evaluates the use of AR as support for abstraction skills. Students were confronted with the task to present and explain information to different groups of stakeholders at the example of a coffee machine. Results show that students find it helpful to have a visual app-prototype and especially one that can be disassembled in different levels. The main goal was to sensitize students for the need to think about and to abstract information for certain roles and perspectives.", "authors": [{"name": "Marco Knietzsch", "affiliation": "OTH Regensburg, Regensburg, Germany"}, {"name": "Florian Hauser", "affiliation": "OTH Regensburg, Regensburg, Germany"}, {"name": "J\u00fcrgen Mottok", "affiliation": "OTH Regensburg, Regensburg, Germany"}, {"name": "Rebecca Reuter", "affiliation": "OTH Regensburg, Regensburg, Germany"}], "tags": ["abstraction skills", "software engineering education", "augmented reality"]}, {"title": "COOL: Cooperative Open Learning for Beginning Programmers", "link": "https://dl.acm.org/doi/10.1145/3304221.3325569", "abstract": "COOL Informatics (COOL stands for Cooperative Open Learning) is a teaching concept for beginning programmers that is based on brain-supporting teaching methods and materials. It includes several forms of cooperative learning like peer tutoring, pair programming, and talents exchange. We introduced the concept in a Java programming course of our Business Informatics bachelor program in 2018 and have been able to improve the learning outcomes (exam results) and to reduce drop-out rates compared to previous years and to reference groups of 2018.", "authors": [{"name": "Iris Groher", "affiliation": "Johannes Kepler Universit\u00e4t, Linz, Austria"}, {"name": "Johannes Sametinger", "affiliation": "Johannes Kepler Universit\u00e4t, Linz, Austria"}, {"name": "Barbara Sabitzer", "affiliation": "Johannes Kepler Universit\u00e4t, Linz, Austria"}], "tags": ["cs1", "discovery learning", "brain-based learning", "cooperative learning"]}, {"title": "Designing Engaging Learning Experiences", "link": "https://dl.acm.org/doi/10.1145/3304221.3325563", "abstract": "A learning experience comprises several factors and understanding them becomes a crucial first step in developing engaging learning experiences, considering how learning is no longer always a passive \"absorb what is told/what you read\" exercise. Drawing lessons from designing user experiences, we present a structured and holistic approach to design engaging learning experiences and cater to both learners and teachers, by considering the factors and unique attributes of a learning experience. We explore the role of technology in augmenting learning experiences. Our work attempts to understand the factors/attributes that constitute engaging learning experiences and develop strategies/tools to help design such experiences.", "authors": [{"name": "Raghav V. Sampangi", "affiliation": "Dalhousie University, Halifax, NS, Canada"}, {"name": "Angela A. Siegel", "affiliation": "Dalhousie University, Halifax, NS, Canada"}], "tags": ["learning experience", "learning outcomes", "human-centric learning"]}, {"title": "Shaping Curricular Guidelines for Associate-Degree Cybersecurity Programs", "link": "https://dl.acm.org/doi/10.1145/3304221.3325568", "abstract": "As projections of the shortage of cybersecurity workers grow, the spotlight is on cybersecurity education. In December of 2017, the Joint Task Force on Cybersecurity Education published Cybersecurity Curricula 2017: Curriculum Guidelines for Post-Secondary Degree Programs in Cybersecurity (CSEC2017), representing a new discipline in ACM's Computing Curricula Series. Now the ACM CCECC (Committee for Computing Education in Community Colleges) is leading creation of a similar set of guidelines for two-year cybersecurity programs at the associate-degree level, called CSEC2Y. The CSEC2Y task force of community college educators presented and released the initial draft, called StrawDog at a special session at SIGCSE 2019. A survey seeking public feedback from educators, professionals, and global advisors collected feedback and input on the StrawDog draft. A second draft, called IronDog, will be available by mid-July. In this poster, survey results from the first draft, and the most recent draft will be presented for feedback and critique by the international community.", "authors": [{"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Melissa Stange", "affiliation": "Lord Fairfax Community College, Middletown, VA, USA"}, {"name": "Markus Geissler", "affiliation": "Cosumnes River College, Sacramento, CA, USA"}, {"name": "Christian Servin", "affiliation": "El Paso Community College, El Paso, TX, USA"}, {"name": "Cindy Tucker", "affiliation": "Bluegrass Community & Technical College, Lexington, KY, USA"}], "tags": ["cybersecurity", "community college", "junior college", "technical college", "two-year college", "curriculum"]}, {"title": "Computing Opportunities for Students of Color", "link": "https://dl.acm.org/doi/10.1145/3304221.3325564", "abstract": "In fall 2018, the authors established a new student organization at DePauw University to address the severe underrepresentation of students of color (SoC) in computing. The organization, Computing Opportunities for Students of Color (COSOC), aims to create a community for SoC and to establish a sense of belonging through role modeling, mentoring, tutoring, and a series of academic and community events. This poster describes the need for such an organization, goals and objectives, pilot study, main components of COSOC, positive preliminary impact on SoC (including enrollment data), and additional planned assessment. Finally, the poster lists future plans for COSOC.", "authors": [{"name": "Gloria Townsend", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Khadija Stewart", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["community", "students of color", "underrepresentation in computer science", "sense of belonging", "retention", "mentoring", "diversity"]}, {"title": "A Prototype MATLAB Code Critiquer", "link": "https://dl.acm.org/doi/10.1145/3304221.3325591", "abstract": "This poster presents MATLAB Critiquer, a system that examines code submissions and provides feedback to first year engineering students who are learning to program in MATLAB. Code Critiquers act as substitute mentors, when instructors are not available, and give students experience with interactive, test-driven development. Students using our critiquer are engaged in communication by proxy with the instructor. This communication does not replace instructor feedback; rather, it codifies common feedback scenarios to assist the instructor in reaching students just when the student is engaged in problem solving and learning. Our critiquer uses the MATLAB Java API; connecting to the MATLAB Engine that parses and executes student code submissions. We process error messages that are returned using regular expressions, then use these results to craft feedback for the students. Static code analysis is used to provide feedback on style. The critique covers code structure, shakedown test results, and programming style in a manner appropriate for novice coders.", "authors": [{"name": "Charles Wallace", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Marissa Walther", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Leo C. Ureel", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["code critiquer", "matlab", "engineering fundamentals", "autograder"]}, {"title": "How Can Children Express Their Intentions Through Coding?: Analysis of Viscuit Programs in Kindergarten", "link": "https://dl.acm.org/doi/10.1145/3304221.3325558", "abstract": "Viscuit is a programming language developed by one of the authors. With Viscuit, you can move and change multiple pictures on the screen using eyeglasses, which make a sequence from left to right, following from-to (picture rewriting) rules. Its distinguishing feature is that the program is expressed solely with pictures and their layouts. No letters are necessary at all. Therefore, Viscuit is perfectly suitable for pre-school children. We have been carrying out regular programming lessons in a kindergarten in Japan since 2015. We have recorded and analysed almost all of the programs made by 56 children aged 5-6 years in a series of 13 lessons held during the school year 2017. In this poster we report how the children could express their intentions through coding.", "authors": [{"name": "Yasunori Harada", "affiliation": "Digitalpocket LLC, Kanagawa, Japan"}, {"name": "Yuriko Nakayama", "affiliation": "Kagawa-fujimigaoka Kindergarten, Kanagawa, Japan"}, {"name": "Takeshi Watanabe", "affiliation": "The University of Electro-Communications & Digitalpocket LLC, Tokyo, Japan"}, {"name": "Yasushi Kuno", "affiliation": "The University of Electro-Communications, Tokyo, Japan"}], "tags": ["viscuit: expression of intention", "pre-school programming"]}, {"title": "Challenges of Delivering a Graduate Apprenticeship", "link": "https://dl.acm.org/doi/10.1145/3304221.3325566", "abstract": "Graduate Apprenticeship degree programmes look to overcome the segregation of learning and working, by integrating traditional education into the context of the work environment. This poster showcases a number of actions that were put into place to mitigate challenges that arose during the first run of these programmes.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Tiffany Young", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": ["work-based learning", "online distance learning", "support student success", "graduate apprenticeship"]}, {"title": "Incorporating On-Campus Days in a Graduate Apprenticeship", "link": "https://dl.acm.org/doi/10.1145/3304221.3325567", "abstract": "Graduate Apprenticeships look to overcome the segregation of learning and working by integrating traditional education into the context of the work environment. This poster looks to highlight the importance of peer interactions, specifically for Online Distance Learners and how Robert Gordon University has implemented this within its GA programmes through on-campus days.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Tiffany Young", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": []}, {"title": "Integrating Real-World Clients in a Project Management Module", "link": "https://dl.acm.org/doi/10.1145/3304221.3325559", "abstract": "Graduates in CS are required to have a background in project management, but often this is taught as a theoretical module, with little \"real-world\" relevance. A Project Management module has been redeveloped around the idea of having a real client interact with the class throughout the module, to positive comments from staff and students alike.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "William Ballew", "affiliation": "James Fisher Digital, Cumbria, United Kingdom"}, {"name": "Tiffany Young", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": ["client", "project management", "agile"]}, {"title": "Lessons from Experts: Software Design Dialogues", "link": "https://dl.acm.org/doi/10.1145/3304221.3325602", "abstract": "This talk will reflect on decades of empirical research on software design in high-performing teams and by experts. The talk will present three broad perspectives: It will identify some of the particular challenges of designing software and the practices that experts use to address them. It will characterise expert software design in terms of a complex of design dialogues. It will consider how expert practice can inform how we teach software design.", "authors": [{"name": "Marian Petre", "affiliation": "Open University, Milton Keynes, United Kingdom"}], "tags": ["expert software design practice", "empirical studies of software development", "software design", "software design education"]}, {"title": "Interdisciplinary Computer Science Pre-service TeacherPreparation: Panel", "link": "https://dl.acm.org/doi/10.1145/3304221.3325543", "abstract": "Many researchers [1] recognize that great Computer Science (CS) teaching demands great pedagogy, technology, and subject knowledge. It is believed that without a focus on teachers, which are the connection between schools, universities, and work, and their preparation the gap in CS knowledge will be difficult to close [2] and the support to curricular indications, as the national curriculum for computing in England, Computer Science Principles, CS 10K, CS for All, CSTA, Scientix, will not sustainable. World-spread projects as Computing At School, Mobile Computer Science Principles or Initial Teacher Education Lab emphasize the role of teachers in reaching students, sustaining their daily practice. International initiatives as code.org, CoderDojo, Code Club are great examples of well propagated curricular, pedagogical and technological innovations in education. Beside this the research effort has produced many block-based programming languages, tools, and technologies \"Low floor and high ceiling\". With this deluge of content, pedagogical and technological innovations there is the necessity to involve and sustain teachers in getting confidence with CS. Ways to accomplish this will be discussed.", "authors": [{"name": "Chery Lucarelli", "affiliation": "The College of St. Scholastica, Minnesota, MN, USA"}, {"name": "Gretchen Richards", "affiliation": "Jacksonville State University, Alabama, AL, USA"}, {"name": "Francesco Maiorana", "affiliation": "University of Catania, Catania, Italy"}, {"name": "Barbara Ericson", "affiliation": "University of Michigan, Michigan, MI, USA"}, {"name": "Miles Berry", "affiliation": "University of Roehampton, London, United Kingdom"}], "tags": ["parsons problems", "subject knowledge standards", "teacher preparation", "learning platform", "interactive ebook"]}, {"title": "A Grounded Theory of Computing Professional Identity Formation", "link": "https://dl.acm.org/doi/10.1145/3304221.3325598", "abstract": "Computing professional identity formation is critical for curriculum decision-making, workforce development, and retaining students in computing degree programs. However, we have limited knowledge of how computing professional identity develops. My research focuses on filling this gap by empirically understanding how undergraduate computing students form their professional identity through their negotiations in formal and informal learning environments. The end goal is to generate and test a theory, grounded in data, which can help Computer Science departments to design interventions for fostering computing professional identity formation.", "authors": [{"name": "Amanpreet Kapoor", "affiliation": "University of Florida, Gainesville, FL, USA"}], "tags": ["identity", "computing professional identity", "grounded theory"]}, {"title": "Investigating Novice Programmers' Interaction with Programming Environments", "link": "https://dl.acm.org/doi/10.1145/3304221.3325596", "abstract": "Learning computer programming can be challenging for novices. Students have to deal with theoretical aspects of programming and problem solving in general, as well as mastering the syntax of a programming language. However, the feedback students receive from programming environments such as compiler error messages can be problematic. This work is aimed at better understanding the impact of these feedback mechanisms and working towards designing improved \"novice-friendly\" programming feedback to inform the development of pedagogical environments.", "authors": [{"name": "Ioannis Karvelas", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["programming", "compiler error messages", "programming process data", "cs1", "novice programmers", "educational data mining"]}, {"title": "From Studying to Learning Computer Science: A study of the first-year experience of computer science education at university", "link": "https://dl.acm.org/doi/10.1145/3304221.3325595", "abstract": "Ensuring that computer science students graduate and learn the desired curriculum is important in order to meet future demands. However, educational institutions have limited room for action as the number of students increases, without additional teaching and structural resources. The research presented here aims to combine knowledge about how computer science students' study and the effects of educational design to maximize the pedagogical potential within the room for action at universities today.", "authors": [{"name": "Madeleine Lor\u00e5s", "affiliation": "Norwegian University of Science and Technology, Trondheim, Norway"}], "tags": ["first year experience", "computer science education", "study behavior"]}, {"title": "A Theory of Applied Mind of Programming: Understanding the challenges in learning to program", "link": "https://dl.acm.org/doi/10.1145/3304221.3325600", "abstract": "Computer Science teaching and education research often struggles to explain a novice programmer's struggles. This dissertation creates a theoretical framework utilizing cognitive psychology, neuroscience, and learning theory to describe the mind of the programmer and the gap novices must bridge. The resulting theory of applied mind for programming can provide greater explanatory power in research and guide assessment and pedagogical approaches.", "authors": [{"name": "Tony Lowe", "affiliation": "Purdue University, West Layfayette, IN, USA"}], "tags": ["programming", "bruner", "neuroscience", "education theory", "dual process theory", "education", "computer science"]}, {"title": "Gamification and Collaboration to Evaluate and Improve the Security Mindset of Developers", "link": "https://dl.acm.org/doi/10.1145/3304221.3325593", "abstract": "My research involves investigating gamification and serious games in relation to secure programming. Current research has shown the effectiveness of serious games in other contexts, and I aim to discover what kinds of game or gameplay work most effectively and develop a more reusable system for designing serious games or gamifications for programming contexts.", "authors": [{"name": "L\u00e9on McGregor", "affiliation": "Heriot-Watt University, Edinburgh, United Kingdom"}], "tags": ["gamification", "usable security", "serious games", "developer centred security", "secure programming"]}, {"title": "Computational Thinking At Primary School: Didactical and Psychological Aspects", "link": "https://dl.acm.org/doi/10.1145/3304221.3325599", "abstract": "The research project aims to identify the cognitive processes underlying the Computational Thinking (CT) skills of primary school pupils. Moreover, it investigates which didactical strategies are most effective for implementing CT in the curriculum. A mixed methods research was designed: qualitative data gathered from interviews and observations are combined with quantitative data collected through pre- and post-test measures with respect to the intervention.", "authors": [{"name": "Marialaura Moschella", "affiliation": "Free University of Bolzano, Bressanone - Brixen, Italy"}], "tags": ["cognitive skills", "computational thinking", "agile methodology"]}, {"title": "Pattern-Oriented Instruction and its Influence on Meaningful Learning of Algorithmic Patterns and Acquiring Fundamental Skills in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3304221.3325601", "abstract": "Pattern-oriented instruction (POI) is an instructional computer science (CS) approach that relies on algorithmic patterns (APs). Teaching through APs has been shown to help students acknowledge APs and incorporate them into their solutions, thus demonstrating abstraction skills, and particularly analogical reasoning and problem decomposition. However, further research is required to examine the influence of POI in a wider context, for example, examining the influence of POI on creativity in problem solving and specifically on the diversity of the employed problem-solving strategies.", "authors": [{"name": "Liat Nakar", "affiliation": "Weizmann Institute of Science, Rehovot, Israel"}], "tags": ["algorithmic patterns", "pattern-oriented instruction", "abstraction", "meaningful learning", "k-12", "introduction to computer science"]}, {"title": "Learning through Construction's Influence on IT Students' Identity Formation", "link": "https://dl.acm.org/doi/10.1145/3304221.3325597", "abstract": "This PhD work aims to understand how Learning through Construction (LtC) affects the formation of IT identity in students. Thematic qualitative study with principles of constructivist Grounded Theory investigates what the students experience in the context of LtC, and how they are affected by these experiences.", "authors": [{"name": "Justyna Szynkiewicz", "affiliation": "NORD University, Steinkjer, Norway"}], "tags": ["it identity", "computer science education", "active learning", "learning through construction"]}, {"title": "\"I Don't Know Too Much About It\": On the Security Mindsets of Future Software Creators", "link": "https://dl.acm.org/doi/10.1145/3304221.3325592", "abstract": "Anyone can learn to code and build software these days. But the intricate and convoluted nature of computer security means that not anyone can write proper secure code. The goal of this research is to help average software developers build secure software with little understanding of security by investigating the security and privacy perceptions, experiences, and practices of current computer science students.", "authors": [{"name": "Mohammad Tahaei", "affiliation": "University of Edinburgh, Edinburgh, United Kingdom"}], "tags": ["computer science students", "security apis", "usable security and privacy", "secure programming", "software development", "education", "software developers"]}, {"title": "Utilising Game Design to Create Engaging Education: A framework for Gameful Learning", "link": "https://dl.acm.org/doi/10.1145/3304221.3325594", "abstract": "If educators were to be skilled game designers, then they would be better equipped to design engaging education scenarios. This research engages in studying commercial design of engagement in games, so educators may be able to better facilitate engaging educational design, facilitated through quantified engagement metrics (SCEQ) and game design principles (GameFlow).", "authors": [{"name": "David Williams", "affiliation": "Dublin Business School, Dublin, Ireland"}], "tags": ["framework", "game development", "gamification", "engagement.", "education", "flow", "pedagogy", "mda", "acm proceedings"]}, {"title": "Direct Manipulation versus Text-based Programming: An experiment report", "link": "https://dl.acm.org/doi/10.1145/3304221.3319738", "abstract": "The standard approach to programming is to learn a programming language, write a program in a development environment, compile it, and run it to check how it works. Another approach is possible using direct manipulation programming. This approach makes it possible to directly manipulate the programming objects (variables, arrays, indices) to implement a given algorithm and to automatically produce the corresponding program. In this paper, we report on the results of an experiment that we performed to compare the standard approach with direct manipulation programming. The experiment was conducted with an audience of 54 beginner students divided into 2 groups. The first group programmed with Python Tutor and the second with AlgoTouch, a direct manipulation programming tool. In this article, we present the experience and detail the results obtained.", "authors": [{"name": "Moncef Daoud", "affiliation": "Universit\u00e9 Bretagne Sud, Lorient, France"}, {"name": "Michel Adam", "affiliation": "Universit\u00e9 Bretagne Sud, Vannes, France"}, {"name": "Patrice Frison", "affiliation": "IRISA lab - Universit\u00e9 Bretagne Sud, Vannes, France"}], "tags": ["programming for beginners", "visualization of algorithms", "designing algorithms", "programming by direct manipulation"]}, {"title": "Auto-Generating Visual Exercises for Learning Program Semantics", "link": "https://dl.acm.org/doi/10.1145/3304221.3319741", "abstract": "Understanding program execution is a challenging task for novice programmers. The semantic rules which determine how execution affects the program state are numerous and complex, and students frequently hold fundamental misconceptions about these rules. If students do not build a correct mental model of program execution early on, they will face substantial hurdles as they try to develop and debug their code. This paper presents VizQuiz, a tool for auto-generating multiple choice quizzes designed to help students gain insight into the semantic rules which govern program execution. VizQuiz provides students with an initial state and a piece of code, and tasks them with mentally tracing the execution of that code and selecting the correct final state. Reference diagrams are used to depict the initial and final states, and as feedback to help students visualize the correct behavior if they select a wrong answer. Feedback is auto-generated, so students can immediately correct their misconceptions and re-attempt.", "authors": [{"name": "Rebecca Smith", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Scott Rixner", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Joe Warren", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Terry Tang", "affiliation": "Rice University, Houston, TX, USA"}], "tags": ["education", "program semantics", "program mutation"]}, {"title": "Identifying Predictors for Code Highlighting Skills: A Regressional Analysis of Knowledge, Syntax Abilities and Highlighting Skills", "link": "https://dl.acm.org/doi/10.1145/3304221.3319745", "abstract": "Programming comprises a multitude of involved skills and abilities. To assess these, an even larger multitude of tasks exists, ranging from very complex to basal levels. Recent demands call for the assessment of basal skills, with the aim to figure out possible problems of learners more precisely. In order to read and interpret source code sufficiently, students must be able to recognize given concepts in a source code, e.g. to identify the objects and methods in an object-oriented program. Whether this skill relies solely on conceptual knowledge and the abilities in handling syntax is still unclear. This study gives evidence that isolated skills in these areas are outperformed by the interaction of both areas. We developed a test consisting of conceptual questions, fill-in-the-Java-keyword items and highlighting items. We investigated whether the knowledge about object orientation and the skills in handling Java syntax sufficiently predict the ability to recognize concepts in Java source code via a multiple linear regression. We found that the model with interaction term explains the data better compared to the null model, the isolated predictors or combined predictors without interaction term. This leads to the conclusion that even though programming consists of skills in certainly different areas, it is more important to interconnect these areas with each other than to teach them in an isolated manner.", "authors": [{"name": "Mike Barkmin", "affiliation": "University of Duisburg-Essen, Essen, Germany"}, {"name": "Matthias Kramer", "affiliation": "University of Duisburg-Essen, Essen, Germany"}, {"name": "Torsten Brinda", "affiliation": "University of Duisburg-Essen, Essen, Germany"}], "tags": ["object-oriented programming", "syntactic knowledge", "conceptual knowledge", "assessment", "multiple linear regression"]}, {"title": "Teaching Electronics and Programming in Norwegian Schools Using the air: bit Sensor Kit", "link": "https://dl.acm.org/doi/10.1145/3304221.3325527", "abstract": "We describe lessons learned from using the air:bit project to introduce more than 150 students in the Norwegian upper secondary school to computer programming, engineering and environmental sciences. In the air:bit project, students build and code a portable air quality sensor kit, and use their air:bit to collect data to investigate patterns in air quality in their local environment. When the project ended students had collected more than 400,000 measurements with their air:bit kits, and could describe local patterns in air quality. Students participate in all parts of the project, from soldering components and programming the sensors, to analyzing the air quality measurements. Following the project we conducted a survey to investigate the satisfaction of participating in the project, as well as learning outcomes in the different parts of the project to improve future versions. The results show that both teachers and students were very satisfied with participating in the project. While the students showed positive learning outcomes in electronics and simple programming parts of the project, there is room for improvement regarding more advanced programming tasks. We believe that our work provides insight for other similar maker-inspired projects, and guidelines for educators to incorporate computer programming in traditional science experiments.", "authors": [{"name": "Julianne Iversen", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Maria Wulff Hauglann", "affiliation": "The Arctic University of Norway, Tromso, Norway"}, {"name": "Morten Gr\u00f8nnesby", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Bj\u00f8rn Fjukstad", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Hedinn Gunhildrud", "affiliation": "Science Centre of Northern Norway, Troms\u00f8, Norway"}, {"name": "Margaret Dalseng", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Nina Angelvik", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Fredrik H\u00f8is\u00e6ther Rasch", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}, {"name": "Lars Ailo Bongo", "affiliation": "The Arctic University of Norway, Troms\u00f8, Norway"}], "tags": ["computer science education", "microcontrollers", "air quality", "stem"]}, {"title": "Below C Level: A Student-Centered x86-64 Simulator", "link": "https://dl.acm.org/doi/10.1145/3304221.3319762", "abstract": "Learning an assembly language introduces students to important computing concepts such as the program stack and lays the conceptual groundwork for topics such as caching. While many instructors choose a RISC language such as MIPS for teaching assembly languages, the pervasiveness of x86-64 in both the desktop and server environments has compelled many instructors to adopt it in their courses. Unfortunately, x86-64 is a complex assembly language and as a result students often have difficulty understanding and visualizing the execution of an x86-64 program. This is especially the case for introductory level students, who struggle with the concepts of control flow; the difference between registers and memory; and memory organization (e.g. the stack).\nWhile students can use debuggers (e.g. GDB) to help them step through the execution of a program and examine the program state, these tools are challenging to learn and are therefore not an ideal fit for introductory level students. This paper introduces Below C Level (BCL), an x86-64 open source simulator aimed at helping novices overcome the barriers to learning this challenging language. BCL offers an intuitive interface and many features that allow students to easily simulate x86-64 code snippets or programs. During simulation BCL helps students decipher individual instructions and visualizes the program stack and register file, allowing students to quickly trace through their program and gain a deeper understanding of x86-64 code.", "authors": [{"name": "Caitlin Fanning", "affiliation": "University of San Diego, San Diego, CA, USA"}, {"name": "Saturnino Garcia", "affiliation": "University of San Diego, San Diego, CA, USA"}], "tags": ["gui", "x86-64", "computer systems education", "simulator", "assembly languages", "open source"]}, {"title": "Developing Course Projects in a Hack Day: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3304221.3319777", "abstract": "Some researchers are starting to point out the importance of hackathons as an alternative venue for college students practicing and learning. Many positive aspects were highlighted such as peer learning and improvements in problem-solving, project management and task priority analysis. However, this hackathon phenomena is something that is happening outside the curriculum, with scarce reports of teachers taking advantage of similar approaches in undergraduate courses. In this article, we present our experience of an undergraduate introductory course on Distributed Systems where students have to participate in a \"hack day\" at the end of the semester. The goal is to take advantage of the hackathon model to bring a more realistic and engaging scenario where students can develop their course project and put into practice what they have learned in the semester. With this model, they have to do face-to-face group work and also have the opportunity to share knowledge with other groups. Our experience indicates positive results with this approach. Students reported a high level of engagement and enthusiasm. There were different situations of peer learning being reported, and according to their perception, students felt they learned more in the hack day than in lectures or laboratory practice.", "authors": [{"name": "Kiev Gama", "affiliation": "Universidade Federal de Pernambuco, Recife, Brazil"}], "tags": ["challenge-based learning", "hackathon", "project-based learning", "peer learning"]}, {"title": "Use, Modify, Create: Comparing Computational Thinking Lesson Progressions for STEM Classes", "link": "https://dl.acm.org/doi/10.1145/3304221.3319786", "abstract": "Computational Thinking (CT) is being infused into curricula in a variety of core K-12 STEM courses. As these topics are being introduced to students without prior programming experience and are potentially taught by instructors unfamiliar with programming and CT, appropriate lesson design might help support both students and teachers. \"Use-Modify-Create\" (UMC), a CT lesson progression, has students ease into CT topics by first \"Using\" a given artifact, \"Modifying\" an existing one, and then eventually \"Creating\" new ones. While studies have presented lessons adopting and adapting this progression and advocating for its use, few have focused on evaluating UMC's pedagogical effectiveness and claims. We present a comparison study between two CT lesson progressions for middle school science classes. Students participated in a 4-day activity focused on developing an agent-based simulation in a block-based programming environment. While some classrooms had students develop code on days 2-4, others used a scaffolded lesson plan modeled after the UMC framework. Through analyzing student's exit tickets, classroom observations, and teacher interviews, we illustrate differences in perception of assignment difficulty from both the students and teachers, as well as student perception of artifact \"ownership\" between conditions.", "authors": [{"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Amy Isvik", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Dolly Bounajim", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Yihuan Dong", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Jennifer Houchins", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Alexandra Milliken", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Veronica Catet\u00e9", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Danielle Boulden", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["computational thinking", "lesson design", "modify-create"]}, {"title": "Text-based Programming in Elementary School: A Comparative Study of Programming Abilities in Children with and without Block-based Experience", "link": "https://dl.acm.org/doi/10.1145/3304221.3319734", "abstract": "This paper describes an elementary school intervention to teach a text-based programming language to 10-11 year old students. We compare students with no previous programming experience with students with 3 semesters of experience with a block-based programming language. We analyze students' performance and learning based on detailed logs in an online programming platform and on multiple choice tests. Although both groups have a similar percentage of syntactical errors, the experienced group showed a better performance on exam scores and a lower number of test case errors. These findings suggest that, 10-11 year old students benefit from block-based experience when learning a new text-based programming language.", "authors": [{"name": "Luciana Benotti", "affiliation": "Universidad Nacional de Cordoba / CONICET, Cordoba, Argentina"}, {"name": "Marcos J. Gomez", "affiliation": "Universidad Nacional de Cordoba, Cordoba, Argentina"}, {"name": "Marco Moresi", "affiliation": "Universidad Nacional de Cordoba, Cordoba, Argentina"}], "tags": ["text-based languages", "learning analytics", "block-based languages", "elementary education"]}, {"title": "Exploring Differences in Minority Students' Attitudes towards Computing after a One-Day Coding Workshop", "link": "https://dl.acm.org/doi/10.1145/3304221.3319736", "abstract": "As programming continues to be an essential 21st century skill, it is critical to focus on diversity and increasing participation of underrepresented groups in computing. To address this need, we must better understand minorities' views and attitudes towards programming, especially in their youth, as literature shows that children form ideas about their interests and careers in middle school or earlier. To explore this, we provided middle school students in the U.S. with a full day (7 hours) of programming activities to learn about their initial attitudes towards computing and how a short intervention might change these attitudes. We ran two separate one-day events, serving a total of 34 minority students (21 males and 13 females; grades 6 and 7) from a low-income, urban area. We found that students' initial attitudes towards computing were high, and that one day of learning programming increased their reported attitudes in computing even more. We also found differences in attitudes by gender and ethnicity. These findings highlight the positive attitudes minority students have towards computing, and the importance of providing resources and support to help maintain their interests in computing while recognizing demographic differences.", "authors": [{"name": "Michael J. Lee", "affiliation": "New Jersey Institute of Technology, Newark, NJ, USA"}], "tags": ["middle school", "attitudes", "minorities", "computing education"]}, {"title": "A Framework for Decomposition in Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3304221.3319793", "abstract": "Computational Thinking has become an important cognitive skill to develop in all areas of education. Despite its increasing popularity, the construct itself is only partially understood. There are few measures currently in place that advance our understanding of computational thinking and its subconstructs. In this article, we analyze existing measures of computational thinking (CT), looking specifically at their measures of decomposition. Decomposition is defined as the process of breaking down a problem into its sub-components. Even though most definitions of computational thinking include decomposition, fewbreak down the decompositional process beyond a basic definition. As one of the first steps in the computational thinking process, it is important to better understand the various manners in which decomposition occurs, which methods are most effective, and under what conditions. To better understand the decompositional process, we analyze evidence of decompositional process in a variety of disciplines. We then present a framework for decomposition in computational thinking. We demonstrate how this framework may help educators to better prepare students to break down complex problems, as well as provide guidance for how decompositional ability might be measured.", "authors": [{"name": "Peter J. Rich", "affiliation": "Brigham Young University, Provo, UT, USA"}, {"name": "Garrett Egan", "affiliation": "Brigham Young University, Provo, UT, USA"}, {"name": "Jordan Ellsworth", "affiliation": "Brigham Young University, Provo, UT, USA"}], "tags": ["assessment", "computational thinking", "framework", "decomposition"]}, {"title": "Making Computer Science Education Mandatory: Exploring a Demographic Shift in Switzerland.", "link": "https://dl.acm.org/doi/10.1145/3304221.3319758", "abstract": "A promising approach to make K-12 Computer Science education more systemic could arise from a strategy focusing mostly on pre-service teachers educated through mandatory courses instead of self-selected in-service teachers. When employing mandatory courses, schools of education can reach all future teachers, but what are potential consequences resulting from this demographic shift? Pre-service teachers may not expect to acquire programming skills and may not be convinced of the relevance of Computer Science. In 2017, one of the first mandatory Computer Science education courses for pre-service K-12 teachers was introduced at the School of Education of northwestern Switzerland (PH FHNW). The mandatory nature of the course was possible because of the introduction of Computer Science as a subject in a new national curriculum. The course, based on Scalable Game Design, was taken by over 600, mostly female (75%), pre-service elementary school teachers. This paper explores the characteristics of this new audience and investigates the consequences of mandatory pre-service teacher Computer Science education. While our research shows that the course was successful, with regards to improving the students' skills, it reveals significant gender effects concerning attitudes towards Computer Science and self-efficacy.", "authors": [{"name": "Ashok Basawapatna", "affiliation": "SUNY Old Westbury, New York, NY, USA"}, {"name": "Alexander Repenning", "affiliation": "School of Education Northwestern Switzerland (PH FHNW), Windisch, Switzerland"}, {"name": "Anna Lamprou", "affiliation": "School of Education Northwestern Switzerland (PH FHNW), Windisch, Switzerland"}, {"name": "Serge Petralito", "affiliation": "School of Education Northwestern Switzerland (PH FHNW), Windisch, Switzerland"}], "tags": ["mandatory computer science education", "gender issues in computer science education", "computer science education", "self -efficacy", "pre-service teacher education", "k-12"]}, {"title": "Pedagogical Content for Professors of Introductory Programming Courses", "link": "https://dl.acm.org/doi/10.1145/3304221.3319776", "abstract": "Teaching introductory programming requires knowledge of both content and pedagogy. Pedagogy includes understanding the typical difficulties students face as they learn, as well as recognizing didactic strategies professors can use to help students to overcome these difficulties. Our research aims to improve the pedagogical knowledge instructors have to teach introductory programming courses, especially those new in this area. We conducted 16 semi-structured interviews with instructors who teach introductory programming courses and collected diaries filled by 110 students during their studies. Qualitative analysis of this data revealed a set of difficulties students faced when learning programming basics and a set of didactic strategies professors use to mitigate them. The results were reviewed by senior instructors in order to confirm them and by junior instructors to verify the importance of this material from their perspective. The main contribution of our paper is a set of difficulties faced by students learning programming, a classification of the most harmful challenges, and the didactic strategies usually used to teach and avoid them. Thus, we provide the basis for the pedagogical content necessary to junior and senior professors planning introductory programming courses.", "authors": [{"name": "Yorah Bosse", "affiliation": "University of Sao Paulo (USP) & Federal University of Mato Grosso do Sul (UFMS), Sao Paulo, Brazil "}, {"name": "Marco A. Gerosa", "affiliation": "Northern Arizona University (NAU) & University of Sao Paulo (USP), Flagstaff, AZ, USA "}, {"name": "David Redmiles", "affiliation": "University of California, Irvine (UCI), Irvine, CA, USA"}], "tags": ["strategies", "novice learners", "learning to program", "introductory programming", "barriers to learning", "computational thinking", "pedagogical content"]}, {"title": "An Exploration of Novice Programmers' Comprehension of Conditionals in Imperative and Functional Programming", "link": "https://dl.acm.org/doi/10.1145/3304221.3319746", "abstract": "Students of introductory programming courses are expected to develop higher-order thinking skills to inspect, understand and modify code. However, although novices can correctly write small programs, they appear to lack a more abstract, comprehensive grasp of basic constructs, such as conceiving the overall effect of alternative conditional flows. This work takes a little-explored perspective on the comprehension of tiny programs by asking students to reason about reversing conditionals in either an imperative or a functional context. More specifically, besides deciding if the given constructs can be reversed, students had to justify their choice by writing a reversing program or by providing suitable counterexamples. The students' answers to four reversibility questions have been analysed through the lens of the SOLO taxonomy. 45% of students correctly identified the reversibility for the four code items; furthermore, more than 50% of each cohort were able to provide correct justifications for at least three of their four answers. Most incorrect answers were due to failures to consider border cases or to edit the conditional expressions appropriately to reverse the construct. Differences in comprehension between functional and imperative languages are explored indicating the explicit else paths of the functional examples facilitate comprehension compared with the implicit else (no update) of its imperative counterpart.", "authors": [{"name": "Cruz Izu", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Claudio Mirolo", "affiliation": "University of Udine, Udine, Italy"}], "tags": ["cs1", "imperative vs. functional programming", "program comprehension", "solo taxonomy", "reversibility"]}, {"title": "Towards a Common Instrument for Measuring Prior Programming Knowledge", "link": "https://dl.acm.org/doi/10.1145/3304221.3319755", "abstract": "Computing education researchers and educators use a wide range of approaches for measuring students' prior knowledge in programming. Such measurement can help adapt the learning goals and assessment tools for groups of learners at different skills levels and backgrounds. There seems to be no consensus on if and how prior programming knowledge should be measured. Traditional background surveys are often ad-hoc or non-standard, which do not allow comparison of results between different course contexts, levels, and learner groups. Moreover, surveys may yield inaccurate information and may not be useful due to lack of detail. In contrast, tests can provide much higher detail and accuracy than surveys about student knowledge or skills, but large-scale tests are typically very time-consuming or impractical to arrange. To bridge the gap between ad-hoc surveys and standardized tests, we propose and evaluate a novel self-evaluation instrument for measuring prior programming knowledge in introductory programming courses. This instrument investigates in higher detail typical course concepts in programming education considering the different levels of proficiency. Based on a sample of two thousand introductory programming course students, our analysis shows that the instrument is internally consistent, correlates with traditional background information metrics and identifies students of varying programming backgrounds.", "authors": [{"name": "Arto Hellas", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Rodrigo Silva Duran", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Jan-Mikael Rybicki", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Sanna Suoranta", "affiliation": "Aalto University, Espoo, Finland"}], "tags": ["self-evaluation", "cs1", "introductory programming", "prior experience", "assessment"]}, {"title": "Copying Can Be Good: How Instructors Use Imitation in Teaching Programming", "link": "https://dl.acm.org/doi/10.1145/3304221.3319783", "abstract": "Students' \"copying\" is often considered negatively. In this paper, we explore the ways in which copying and imitation are used positively by computing instructors in their teaching. We found that instructors expect their students to use these strategies in many different contexts and at many different levels.", "authors": [{"name": "Carol Zander", "affiliation": "University of Washington Bothell, Bothell, WA, USA"}, {"name": "Anna Eckerdal", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Kate Sanders", "affiliation": "Rhode Island College, Providence, RI, USA"}, {"name": "Jan Erik Mostrom", "affiliation": "Umea University, Umea, Sweden"}, {"name": "Lynda Thomas", "affiliation": "Aberystwyth University, Aberystwyth, United Kingdom"}, {"name": "Robert McCartney", "affiliation": "University of Connecticut, Storrs, CT, USA"}], "tags": ["imitation", "copying", "mimicry"]}, {"title": "Applying Case-Based Learning for a Postgraduate Software Architecture Course", "link": "https://dl.acm.org/doi/10.1145/3304221.3319737", "abstract": "Software architecture remains a difficult subject for learners to grasp and for educators to teach given its level of abstraction. On the other hand, case-based learning (CBL) is a popular teaching approach used across disciplines especially in business, medicine and law where students work in groups apply their knowledge to solve real-world case studies, or scenarios using their reasoning skills and existing theoretical knowledge. In this paper, we provide how we apply case-based learning to address the challenge in teaching a postgraduate software architecture course. Our learners are postgraduate students taking a master's program in software engineering. We first describe our design of case-based learning for our software architecture course. We then analyse the survey ratings and learners' profile to evaluate the effectiveness of the proposed case-based design. These data are gathered from 9 class runs over a period of 8 years. Our analysis results show the effectiveness of our case-based design and significant relationships between this effectiveness to the learners' years of working experiences and the number of learners. Key contributions in this paper are our proposed case-based design for software architecture and the analysis findings.", "authors": [{"name": "Eng Lieh Ouh", "affiliation": "Singapore Management University, Singapore, Singapore"}, {"name": "Yunghans Irawan", "affiliation": "National University of Singapore, Singapore, Singapore"}], "tags": ["case-based learning", "curriculum design", "pedagogical approach", "software architecture"]}, {"title": "Students' Misconceptions of Optimization Algorithms", "link": "https://dl.acm.org/doi/10.1145/3304221.3319749", "abstract": "There are ongoing efforts to identify students' misconceptions of computing topics, including algorithms. The paper addresses students' misconceptions of optimization problems and their corresponding algorithms. Optimization problems are an important class of problems in computer science, thus their associated misconceptions may form a relevant subset of misconceptions on algorithms. The findings presented are based on a number of evaluations conducted in past years. Assignment reports elaborated by students were used as primary materials for qualitative analysis. We present 8 misunderstandings, structured into 5 general themes. As it could be expected, some themes refer to optimization algorithms or to specific algorithm design techniques, but we also identified misconceptions of two more general themes, namely basic concepts of optimization, and basic concepts of problems and algorithms. We discuss implications of the findings for algorithm instruction and curricula.", "authors": [{"name": "J. \u00c1ngel Vel\u00e1zquez-Iturbide", "affiliation": "Universidad Rey Juan Carlos, Madrid, Spain"}], "tags": ["students' misconceptions", "computer science education", "optimization problems", "algorithm design techniques"]}, {"title": "AlgoBOWL: A Competition-Based Group Project for Algorithms Courses", "link": "https://dl.acm.org/doi/10.1145/3304221.3319761", "abstract": "We describe a competition-based group project that has been in use in the Algorithms course at our institution each semester since 2012. The class is given an NP-hard optimization problem; each student group is asked to create a heuristic algorithm for the problem. The heuristic is run on a set of inputs (with each group supplying one input) and groups are ranked based on their aggregate performance within a specified time period. This paper describes our experience with this approach, including challenges, and our recent efforts to address these through a web application used to facilitate the competition.", "authors": [{"name": "Jack Rosenthal", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Dinesh P. Mehta", "affiliation": "Colorado School of Mines, Golden, CO, USA"}], "tags": ["algorithms education", "web-based interface", "student competition", "heuristics", "np-completeness"]}, {"title": "The Effectiveness of Creating Localized Content for Middle School Computing Curriculum", "link": "https://dl.acm.org/doi/10.1145/3304221.3319778", "abstract": "The need for computing education in K-12 is growing all over the world. Several countries have created national curriculum standards to meet this growing need. In most cases, the actual implementation of the curriculum, including the technical content, is left to individual schools or teachers. In this paper, we outline our work in implementing a computing curriculum based on Alice software in the State of Qatar. We present our experience in creating the content and evaluating its effectiveness. The curriculum was developed in cooperation with schoolteachers, education professionals, and the Qatari Ministry of Education. Materials developed included lesson plans, academic calendar, assessment tools, and student textbooks. We address the issues encountered in creating this computing curriculum content.", "authors": [{"name": "Hanan Alshikhabobakr", "affiliation": "Carnegie Mellon University Qatar, Doha, Qatar"}, {"name": "Saquib Razak", "affiliation": "Carnegie Mellon University Qatar, Doha, Qatar"}, {"name": "Huda Gedawy", "affiliation": "Carnegie Mellon University Qatar, Doha, Qatar"}], "tags": ["computing", "k-12", "computer science", "curriculum content"]}, {"title": "Using Action Research to Distill Research-Based Segments of Pedagogical Content Knowledge of K-12 Computer Science Teachers", "link": "https://dl.acm.org/doi/10.1145/3304221.3319773", "abstract": "Teachers' pedagogical content knowledge (PCK) is an important factor in all that concerns teaching and learning processes. As such, it plays an important role in pre-service teachers' training and in-service teachers' professional development. In line with this, the pedagogical content knowledge of computer science teachers (CS-PCK) receives considerable attention in current computing education research. However, very little is known about effective ways of extracting valid and reliable CS-PCK segments from the practical work of CS in-service teachers, and hence, only a limited reservoir of such segments is available for CS educators. Here we report on research in which we developed and investigated a new strategy for extracting research-based CS-PCK segments from the practical work of experienced high-school teachers. This strategy incorporated action research, conducted by the CS teachers in their classes, as part of a long and extensive workshop for professional development of CS teachers. Our findings show that the use of action research within the unique platform provided by the workshop yielded a rich variety of research-based CS-PCK segments. Furthermore, our findings emphasize the important role of the social context of the workshop in teachers' success in conducting reliable and valid action research. In addition, teachers' attitudes regarding the use of action research as a tool for improving their practice were positive, as well as their tendency to adopt and use this tool in their practice.", "authors": [{"name": "Ofra Brandes", "affiliation": "Weizmann Institute of Science, Rehovot, Israel"}, {"name": "Michal Armoni", "affiliation": "Weizmann Institute of Science, Rehovot, Israel"}], "tags": ["pck", "cs-pck", "teachers", "action research", "k-12"]}, {"title": "A Systems Change Approach to CS Education: Creating Rubrics for School System Implementation", "link": "https://dl.acm.org/doi/10.1145/3304221.3319733", "abstract": "Computer science education is moving from an elective subject in K-12 schools to a more compulsory topic with a focus on all students. As a new discipline is added to education, we need to explore not only the implications and theory behind student and teacher learning and development, but also the systems change that will happen in organizations in order to produce sustainable CS education. In this paper, we explore theories of systems change, especially in education, and describe the creation of a series of rubrics to help districts self-assess their CS education supports. Early data is presented from a pilot year of workshops with 67 school districts showing a partial landscape of how school districts rate their own strengths and weaknesses and provide a discussion of initial evidence of validity for the rubrics.", "authors": [{"name": "Lauren Wright", "affiliation": "CSforALL, New York, NY, USA"}, {"name": "Leigh Ann DeLyser", "affiliation": "CSforALL, New York, NY, USA"}], "tags": ["institutional change", "computer science education", "school system"]}, {"title": "Effect of Native Language on Student Learning and Classroom Interaction in an Operating Systems Course", "link": "https://dl.acm.org/doi/10.1145/3304221.3319787", "abstract": "Understanding an operating systems (OS) code base is a difficult task since it involves understanding a huge amount of low-level C and assembly code. The inherent level of difficulty associated with OS topics is high because of the high element interactivity (i.e., material consists of elements that heavily interact). The mental effort associated with learning a complex subject like OS may be higher for non-native English speakers, when the subject is taught in a natural language (i.e., English) that is not the students' native language. We were interested in finding the effect of an instructional design that combines the students' native language along with English on students' understanding of select topics in OS. We designed an experiment to teach CPU virtualization using xv6 to two groups of undergraduate students in Tamil Nadu, India. We taught the experimental group using English and Tamil (native language of students in Tamil Nadu) and the control group using only English. We conducted a pre-test and a post-test to test students' understanding of the OS topics taught, before and after our intervention respectively. We also collected data on the questions that students asked in lectures during our intervention. We found that teaching OS using native language and English is no different than teaching OS using only English with respect to student learning. We also found that the native language had an impact on the student engagement and classroom interaction by creating more dialogue within the Tamil+English (experimental) classroom when compared to the English-only (control) classroom.", "authors": [{"name": "Jim Williams", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Adalbert Gerald Soosai Raj", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Saswati Mukherjee", "affiliation": "College of Engineering Guindy, Anna University, Chennai, India"}, {"name": "Jignesh M. Patel", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Richard Halverson", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Eda Zhang", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}], "tags": ["operating systems", "native language", "bilingual cs education"]}, {"title": "Using Automated Prompts for Student Reflection on Computer Security Concepts", "link": "https://dl.acm.org/doi/10.1145/3304221.3319731", "abstract": "Reflection is known to be an effective means to improve students' learning. In this paper, we aim to foster meaningful reflection via prompts in computer science courses with a significant practical, software development component. To this end we develop an instructional strategy and system that automatically delivers prompts to students based on their commits in a source code repository. The system allows for prompts that instigate reflection in students to be timely with respect to students' work, and delivered automatically, thus easily scaling up the strategy.\nIn this paper, we describe the design of a rule-based prompt delivery system, including a list of security related reflection prompts. We collect preliminary evidence for the reflection strategy in a course targeting mobile development. The evaluation provides evidence that such a system can help realize a reflection-in-action instructional strategy at scale and improve students' learning.", "authors": [{"name": "Kostadin Damevski", "affiliation": "Virginia Commonwealth University, Richmond, VA, USA"}, {"name": "Hui Chen", "affiliation": "Brooklyn College of the City University of New York, Brooklyn, NY, USA"}, {"name": "Agnieszka Ciborowska", "affiliation": "Virginia Commonwealth University, Richmond, VA, USA"}], "tags": ["reflection", "automated reflection", "reflection prompt"]}, {"title": "Teaching Integer Security Using Simple Visualizations", "link": "https://dl.acm.org/doi/10.1145/3304221.3319760", "abstract": "Integer errors can introduce significant vulnerabilities into C programs. We have developed a program analysis and visualization tool to help students understand integer representation and type conversions with the goal to help students avoid introducing these errors into the code they develop. The visualization is through the Integer Representation (IR) window within a larger system for analysis and visualization of security issues in C programs. The system is called the Visualization and Analysis for C Code Security (VACCS) system. In this paper, we describe our experience with teaching fundamental aspects of integer security in a junior-level systems programming course, the IR window, and an evaluation of the tool. Our results indicate that students found the tool to be useful and that it enhanced the course in which it was used.", "authors": [{"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Steven Carr", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}, {"name": "Ching-Kuang Shene", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "James Walker", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Man Wang", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["integer security", "cybersecurity education", "visualization"]}, {"title": "The Impact of Adding Textual Explanations to Next-step Hints in a Novice Programming Environment", "link": "https://dl.acm.org/doi/10.1145/3304221.3319759", "abstract": "Automated hints, a powerful feature of many programming environments, have been shown to improve students' performance and learning. New methods for generating these hints use historical data, allowing them to scale easily to new classrooms and contexts. These scalable methods often generate next-step, code hints that suggest a single edit for the student to make to their code. However, while these code hints tell the student what to do, they do not explain why, which can make these hints hard to interpret and decrease students' trust in their helpfulness. In this work, we augmented code hints by adding adaptive, textual explanations in a block-based, novice programming environment. We evaluated their impact in two controlled studies with novice learners to investigate how our results generalize to different populations. We measured the impact of textual explanations on novices' programming performance. We also used quantitative analysis of log data, self-explanation prompts, and frequent feedback surveys to evaluate novices' understanding and perception of the hints throughout the learning process. Our results showed that novices perceived hints with explanations as significantly more relevant and interpretable than those without explanations, and were also better able to connect these hints to their code and the assignment. However, we found little difference in novices' performance. Our results suggest that explanations have the potential to make code hints more useful, but it is unclear whether this translates into better overall performance and learning.", "authors": [{"name": "Nicholas Lytle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Thomas Price", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Joseph Jay Williams", "affiliation": "University of Toronto, Toronto, Canada"}, {"name": "Samiha Marwan", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["textual hints", "computer science education", "intelligent tutoring systems", "next step hints"]}, {"title": "Using Social Annotations to Augment the Learning Space and Learner Experience", "link": "https://dl.acm.org/doi/10.1145/3304221.3319767", "abstract": "Learning has always been considered a social and collaborative activity. From the social constructivism perspective, students learn through the process of sharing experiences and build knowledge and understanding through discussion. This pilot study demonstrates the successful integration of an online social annotation tool in a Python programming workshop that allows students to discuss learning material and code segments with their fellow classmates. We investigate how the students leveraged the tool to improve their learning and to log their sentiments while reading the material and attempting the programming activities. We find that those students who had access to the annotation tool spent an above average amount of time on the material. They also had a higher completion rate and performance compared to the control group who did not have the annotation feature available to them. Feedback from the students who used the tool was very positive. Finally, we delve deeper into analysing the annotation patterns and explore how instructors can make use of fine-grained annotation data to inform and adapt the design of CS teaching and learning materials in online or blended contexts.", "authors": [{"name": "Bernd Meyer", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Shaveen Singh", "affiliation": "Monash University, Melbourne, Australia"}], "tags": ["situated cognition", "annotations", "engagement", "digital education"]}, {"title": "RepoBee: Developing Tool Support for Courses using Git/GitHub", "link": "https://dl.acm.org/doi/10.1145/3304221.3319784", "abstract": "The use of version control systems within computing education is growing in popularity. However, this is challenging because such systems are not particularly well designed to support educational situations, nor are they easy to use with confidence in teaching, as specialist knowledge and experience is required. This experience paper reports the development of the open source tool RepoBee, which assists in the use of Git/GitHub in an educational context. The tool provides a straightforward interface for managing batch tasks such as repository generation and cloning for setting and gathering assignments, opening and closing of issues to communicate with students, as well as facilitating peer reviews. Parts of RepoBee are open to integration with third party tools for additional tasks, such as running unit tests or static analysis on student repositories. We also include the perspectives of both teachers and teaching assistants who have been using the tool as part of a first year course for computer scientists.", "authors": [{"name": "Simon Lars\u00e9n", "affiliation": "KTH: Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Richard Glassey", "affiliation": "KTH: Royal Institute of Technology, Stockholm, Sweden"}], "tags": ["course management", "version control systems", "git/github", "computing education"]}]