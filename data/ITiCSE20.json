[{"title": "ITiCSE, Australia, and New Zealand: What's the Story?", "link": "https://dl.acm.org/doi/10.1145/3341525.3394982", "abstract": "Since 1996 the ITiCSE conference has provided a forum for academics with an interest in computing education scholarship and research. ITiCSE is often thought of as the European counterpart to northern America's SIGCSE Technical Symposium. Yet from its very beginning, ITiCSE has differed substantially from the Symposium. In addition to the many participants from Europe and North America, ITiCSE has also always hosted many participants from Australia and New Zealand, expanding its international perspective. Why is this? What is the appeal of ITiCSE to its participants, and what do its participants bring to ITiCSE? More specifically, what do Australians and New Zealanders bring to and take from the conference? Are there opportunities to involve computing educators from other regions? Judy Sheard and Simon will explore these questions and provide their perspectives. In this 25th year of ITiCSE, they will also speculate about the future of the conference and of the future role of Australia and New Zealand -- especially in light of the disruption in 2020.", "authors": [{"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, VIC, Australia"}, {"name": " Simon", "affiliation": "University of Newcastle, Ourimbah, Australia"}], "tags": ["research community", "conferences", "computing education"]}, {"title": "From a Black Art to a School Subject: Computing Education's Search for Status", "link": "https://dl.acm.org/doi/10.1145/3341525.3394983", "abstract": "Computing education, in the sense we know it today, was born in the first half of the 1950s with the advent of mass-produced storedprogram computers [15]. Programming, using a vocabulary of a few dozen machine language commands in octal code, was not considered especially time-consuming to learn: In the first conference on training personnel for the computing machine field in 1954, the spokesperson for Remington Rand stated that \"one manufacturer indicated that programmers may be trained in two weeks, while another requires twelve\", depending on the computer and problem types [4]. After the birth of high-level languages, a 1960 conference of university computing center directors stated that programming is \"now simple enough so that an undergraduate . . . can begin to use a particular machine after a few hours of instruction\" [12].", "authors": [{"name": "Matti Tedre", "affiliation": "University of Eastern Finland, Joensuu, Finland"}], "tags": ["history of computing education", "history of computing", "computing education"]}, {"title": "Twenty-Four Years of ITiCSE Papers", "link": "https://dl.acm.org/doi/10.1145/3341525.3387407", "abstract": "This paper presents an analysis of all 1295 full papers and 129 working group reports presented and published at ITiCSE since the conference began in 1996. Working group reports are analysed separately from full papers, in recognition of the particular process by which they are created. The analysis shows that nearly 40% of ITiCSE's full papers concern programming education, and that more than half of them present work conducted in single courses. In contrast, most of the working group reports have a context that extends beyond specific topic areas, and report on work that was not conducted in any courses. About half of the full papers focus on techniques of teaching and learning or tools for teaching and learning, whereas two thirds of the working group reports focus on techniques of teaching and learning or curriculum. With both full papers and working group reports there has been a steady increase in the proportion of papers that clearly present educational research. The findings from our analysis provide valuable insights for potential authors, attendees, chairs, and the whole ITiCSE community.", "authors": [{"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, VIC, Australia"}, {"name": " Simon", "affiliation": "University of Newcastle, Wadalba, Australia"}], "tags": ["computing education", "classifying publications", "bibliometrics"]}, {"title": "Promoting a Growth Mindset in CS1: Does One Size Fit All? A Pilot Study", "link": "https://dl.acm.org/doi/10.1145/3341525.3387361", "abstract": "This paper describes a pilot intervention conducted in CS1, in the academic year of 2016-2017. The intervention was based on the work of Dweck, promoting a growth Mindset in an effort to increase performance in introductory programming. The study also examined data from a previous year (as a control group) to compare and contrast the results. Multiple factors related to programming performance were recorded with the control and treatment group, which were measured at multiple intervals throughout the course, to monitor changes as the pilot intervention was implemented. This study found a significant increase in programming performance when the intervention was deployed. However, although performance increased for the treatment group, the average Mindset did not significantly change towards a growth Mindset (replicating the findings of Cutts et al, 2010). To further explore this finding, a preliminary deeper investigation using k-means clustering was carried out. The investigation found that the intervention promoted a growth Mindset for some student profiles and a fixed Mindset for others. This finding is important for educators considering intervention development or implementation of Mindset, and demonstrates that a Mindset intervention may not be suitable for all learners.", "authors": [{"name": "Susan Bergin", "affiliation": "Maynooth University, Co Kildare, Ireland"}, {"name": "Keith Quille", "affiliation": "TU Dublin, Dublin, Ireland"}], "tags": ["self-efficacy", "k-means", "CS1", "introductory programming", "replication study", "growth mindset", "clustering", "intervention"]}, {"title": "Resilience and Effective Learning in First-Year Undergraduate Computer Science", "link": "https://dl.acm.org/doi/10.1145/3341525.3387372", "abstract": "Many factors have been shown to be important for supporting effective learning and teaching -- and thus progression and success -- in higher education. While factors such as key introductory-level (CS1) knowledge and skills, as well as pre-university learning and qualifications, have been extensively explored, the impact of measures of positive psychology are less well understood for the discipline of computer science. University study can be a period of significant transition for many students; therefore an individual's positive psychology may have considerable impact upon their response to these challenges. This work investigates the relationships between effective learning and success (first-year performance and attendance) and two measures of positive psychology: Grit and the Nicolson McBride Resilience Quotient (NMRQ). Data was captured by integrating Grit (N=58) and Resilience (N=50) questionnaires and related coaching into the first-year of the undergraduate computer science programme at a single UK university. Analyses demonstrate that NMRQ is significantly linked to attendance and performance for individual subjects and year average marks; however, this was not the case for Grit. This suggests that development of targeted interventions to support students in further developing their resilience could support their learning, as well as progression and retention. Resilience could be used, in concert with other factors such as learning analytics, to augment a range of existing models to predict future student success, allowing targeted academic and pastoral support.", "authors": [{"name": "Julie Walters", "affiliation": "Northumbria University, Newcastle, United Kingdom"}, {"name": "Longzhi Yang", "affiliation": "Northumbria University, Newcastle, United Kingdom"}, {"name": "Morgan Harvey", "affiliation": "University of Sheffield, Sheffield, United Kingdom"}, {"name": "Tom Prickett", "affiliation": "Northumbria University, Newcastle, United Kingdom"}, {"name": "Tom Crick", "affiliation": "Swansea University, Swansea, United Kingdom"}], "tags": ["progression", "effective learning", "learning analytics", "resilience", "success"]}, {"title": "Towards Self-motivated Learning in Computer Science Education: Results of a Questionnaire Study", "link": "https://dl.acm.org/doi/10.1145/3341525.3387397", "abstract": "Self-motivation is known to be a strong predictor for academic achievements over time and therefore it is important to investigate what aspects of computer science foster self-motivated learning. This paper presents a questionnaire study among students of grade 10 and 11 (n = 874) in which their overall interest in computer science studies is related to their intrinsic motivation in practical, theoretical, and technical aspects of this subject. The data analysis shows that the practical aspect is connected to the highest amount of intrinsic motivation. A deeper investigation using linear models, however, reveals that the technical aspect is the core factor influencing the interest in working towards a career as a computer science professional. The theoretical aspect has a lower influence, and the influence of the practical aspect is even negative, when being combined with the two other aspects. Our interpretation of these surprising results is that the technical aspects of computer science are crucial to attract highly self-motivated students for a professional computer science career. However, to address a broader audience of students, it may be advisable to focus on practical aspects in the beginning. Additionally, the authors found significant differences between female and male students and between students that had or had not attended a voluntary computer science course before.", "authors": [{"name": "Boris Girnat", "affiliation": "University of Hildesheim, Hildesheim, Germany"}, {"name": "Christian Werner", "affiliation": "Ostfalia University of Applied Sciences, Wolfsburg, Germany"}], "tags": ["intrinsic motivation/self-motivation", "k-12 curriculum", "psychology of learning"]}, {"title": "Developing an Assessment to Profile Students based on their Understanding of the Variable Programming Concept", "link": "https://dl.acm.org/doi/10.1145/3341525.3387400", "abstract": "Novice programmers often hold misconceptions, and so incorrect mental models, that hinder their progress. These mental models have to be identified, with the help of a concept inventory, for the teachers to become aware of them and to provide appropriate intervention in the future. An assessment using a concept inventory to profile students based on their understanding of selected programming concepts was developed. The variable concept was chosen as a first case study to ensure the assessment's validity and reliability. During two academic years, two groups of students enrolled in a university introductory programming course were submitted to a concept inventory at four different times according to a precise schedule time. Measuring when students understand the concept of variable assignment and move from using incorrect mental models to use a single correct mental model, made it possible to define nine profiles among the 219 first-year students (validity). For each identified profile, the frequency distributions of students stayed consistent from one academic year to another (reliability). Finally, the value of such an assessment was briefly discussed with five teachers.", "authors": [{"name": "Julie Henry", "affiliation": "University of Namur, Namur, Belgium"}, {"name": "Bruno Dumas", "affiliation": "University of Namur, Namur, Belgium"}], "tags": ["misconceptions", "CS1", "mental models", "concept inventory", "novice programmers", "variable assignment", "misunderstanding"]}, {"title": "Automated Assessment of Android Exercises with Cloud-native Technologies", "link": "https://dl.acm.org/doi/10.1145/3341525.3387430", "abstract": "Mobile applications are very challenging to test as they usually have a complex graphical user interface and advanced functionality that involves interacting with remote services. Due to these features, student assessment in courses about mobile application development usually relies on assignments or projects that are manually checked by teaching assistants for grading. This approach clearly does not scale to large classrooms, especially for online courses. This article presents a novel system for automated assessment of Android exercises with cloud-native technologies. Different from the state of the art, the proposed solution leverages a mobile app testing framework that is largely used in the industry instead of custom libraries. Furthermore, the devised system employs software containers and scales with the availability of resources in a data center, which is essential for massive open online courses. The system design and implementation is detailed, together with the results from a deployment within a master-level course with 120 students. The received feedback demonstrates that the proposed solution was effective, as it provided insightful feedback and supported independent learning of mobile application development.", "authors": [{"name": "Mario Di Francesco", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Maria L. Montoya Freire", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Daniel Bruzual", "affiliation": "Eficode, Helsinki, Finland"}], "tags": ["computer science education", "full-stack", "UI testing", "android", "mobile app development", "software containers", "automated grading", "online learning"]}, {"title": "Depth of Use: An Empirical Framework to Help Faculty Gauge the Relative Impact of Learning Management System Tools", "link": "https://dl.acm.org/doi/10.1145/3341525.3387375", "abstract": "Learning management system (LMS) tools are increasingly relevant to scaling computing pedagogies. Measuring their utilization and impact at scale, however, remains computationally expensive. We examine the problem of estimating the utilization of a department-wide LMS, and its impact on the design, management and outcomes of Computer Science courses. We introduce 'depth-of-use' (DOU): a first-principles, resource-specific metric of LMS utilization. We then hypothesis-test the relationship between DOU and course attributes like modality (course level, mode-of-delivery, third-party app use), participation (enrollment, viewership), logistics (teaching support, digital skills training) and outcomes (average GPA, DFW rate). Experiments on metadata from over 1300 Computer Science courses taught at Virginia Tech between 2015 and 2019 suggest that our framing of DOU helps identify resource-level preferences of micro-cohorts of courses, linked to their content, logistics and pedagogies. We discover that, across the Computer Science department at Virginia Tech, overall LMS use is consistently linked to favorable learning outcomes. We also discover that a complex interaction between the needs for scale, ubiquitous access and interoperability drives strong LMS utilization, with graduate and online-only courses faring highest in their aggregate use of LMS services. Finally, we describe two key applications of our analyses. One, we demonstrate how DOU can help CS faculty identify the relative impact of transition from legacy apps to LMS services. Two, we describe how DOU can help instructional designers evaluate and improve their design interventions.", "authors": [{"name": "Daron Williams", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Taha Hassan", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "D. Scott McCrickard", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Larry Cox", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Matt Louvet", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Bob Edmison", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["learning management system", "utilization", "adoption"]}, {"title": "Unproductive Help-seeking in Programming: What it is and How to Address it", "link": "https://dl.acm.org/doi/10.1145/3341525.3387394", "abstract": "While programming, novices often lack the ability to effectively seek help, such as when to ask for a hint or feedback. Students may avoid help when they need it, or abuse help to avoid putting in effort, and both behaviors can impede learning. In this paper we present two main contributions. First, we investigated log data from students working in a programming environment that offers automated hints, and we propose a taxonomy of unproductive help-seeking behaviors in programming. Second, we used these findings to design a novel user interface for hints that subtly encourages students to seek help with the right frequency, estimated with a data-driven algorithm. We conducted a pilot study to evaluate our data-driven (DD) hint display, compared to a traditional interface, where students request hints on-demand as desired. We found students with the DD display were less than half as likely to engage in unproductive help-seeking, and we found suggestive evidence that this may improve their learning.", "authors": [{"name": "Thomas W. Price", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Anay Dombe", "affiliation": "Vishwakarma Institute of Technology, Pune, India"}, {"name": "Samiha Marwan", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["block-based programming", "adaptive hints", "help-seeking"]}, {"title": "Aiding an Introduction to Formal Reasoning Within a First-Year Logic Course for CS Majors Using a Mobile Self-Study App", "link": "https://dl.acm.org/doi/10.1145/3341525.3387409", "abstract": "In this paper, we share our experiences concerning the introduction of the Android-based self-study app AXolotl within the first-semester logic course offered at our university. This course is mandatory for students majoring in Computer Science and Artificial Intelligence. AXolotl was used as part of an optional lab assignment bridging clausal reasoning and SAT solving with classical reasoning, proof construction, and first-order logic. The app provides an intuitive interface for proof construction in various logical calculi and aids the students through rule application. The goal of the lab assignment was to help students make a smoother transition from clausal and decompositional reasoning used earlier in the course to inferential and contextual reasoning required for proof construction and first-order logic. We observed that the lab had a positive influence on students' understanding and end the paper with a discussion of these results.", "authors": [{"name": "Wolfgang Windsteiger", "affiliation": "Johannes Kepler University, Linz, Austria"}, {"name": "Armin Biere", "affiliation": "Johannes Kepler University, Linz, Austria"}, {"name": "Martina Seidl", "affiliation": "Johannes Kepler University, Linz, Austria"}, {"name": "David Cerna", "affiliation": "Johannes Kepler University, Linz, Austria"}, {"name": "Wolfgang Schreiner", "affiliation": "Johannes Kepler University, Linz, Austria"}], "tags": ["mobile educational application", "self-study tools", "formal reasoning", "case study", "logic education"]}, {"title": "Hands-on Security Testing in a University Lab Environment", "link": "https://dl.acm.org/doi/10.1145/3341525.3387366", "abstract": "In this paper, we present a novel approach to providing students with hands-on learning experiences for security testing. Specifically, we give details of a Raspberry Pi-based lab architecture which we developed as part of a security course, and provide example lab tasks that such an architecture affords. We provide evidence that introducing such hands-on labs within the security course directly improved student performance. Finally, we compare our approach to other existing approaches of which we are aware that are based on virtual machines and networks.", "authors": [{"name": "Liam O'Reilly", "affiliation": "Swansea University, Swansea, United Kingdom"}, {"name": "Faron Moller", "affiliation": "Swansea University, Swansea, United Kingdom"}, {"name": "Lauren Powell", "affiliation": "Swansea University, Swansea, United Kingdom"}, {"name": "Phillip James", "affiliation": "Swansea University, Swansea, United Kingdom"}], "tags": ["computer architecture", "computer security", "computing education"]}, {"title": "Developing a Computer Graphics Course with a Game Development Engine", "link": "https://dl.acm.org/doi/10.1145/3341525.3387428", "abstract": "This paper reports on an intervention in introductory Computer Graphics courses, where practical coursework is transitioned from standard OpenGL Graphics APIs to the Unity Game Development Engine. Game Development Engines (GDEs) provide powerful programming tools and computing components. Software development in GDEs is facilitated by full-fledged IDEs. Complex scene modeling and image rendering are managed through a rich catalogue of rendering assets. Graphics APIs are evolving towards a lower level of hardware abstraction, reduced overhead, and multithreading capabilities. Such changes in APIs benefit software developers who build graphics engines; how much they benefit Computer Graphics education is yet to be determined. New graphics APIs represent a shift in graphics programming practices, nearly as big as programmable GPUs and shader-based APIs over a decade ago. As then, Computer Graphics instructors have to decide: either use outdated models, or again change how Computer Graphics is taught. This paper describes an educational approach that acknowledges the increasing divide between the ease of use and development speed of GDEs, and the complexity and vastness of new graphics APIs. We show the use of a GDE as software development framework, to support programming assignments covering core Computer Graphics concepts. Relying on a GDE, such graphics assignments don't have to shy away from shader-based graphics programming, while non-graphics low-level tasks are managed by the engine itself. With our approach, we hope to contribute to the discussion about evolving best practices in teaching Computer Graphics.", "authors": [{"name": "Holly Zhang", "affiliation": "Indiana University, Bloomington, IN, USA"}, {"name": "Dimitrij (Mitja) Hmeljak", "affiliation": "Indiana University, Bloomington, IN, USA"}], "tags": ["educational technology", "computer graphics", "game development engine", "computer-aided learning"]}, {"title": "Infusing Principles and Practices for Secure Computing Throughout an Undergraduate Computer Science Curriculum", "link": "https://dl.acm.org/doi/10.1145/3341525.3387426", "abstract": "In recent years, all computing disciplinary communities and curricular guidelines have increased their expectations of and requirements for incorporating cybersecurity into their discipline. For computer science, this has been a daunting task for a number of reasons, including the fast-paced evolution and expansion of the discipline, the perceived challenge of finding space in the curriculum, and the difficulty of selecting the best content. This paper takes the position that infusing security concepts pervasively into an undergraduate Computer Science program is a crucial and attainable best practice. A five-step methodology is presented to incorporate cybersecurity into a traditional computer science curriculum in a way that maintains disciplinary integrity without adding significant new curricular content. This methodology is consistent with the philosophy and recommendations of the latest computer science and cybersecurity curricular guidelines. The paper also illustrates the application of these techniques to a typical Computer Science program.", "authors": [{"name": "Christa M. Chewar", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Rajendra K. Raj", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Edward Sobiesk", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Jean R. S. Blair", "affiliation": "United States Military Academy, West Point, NY, USA"}], "tags": ["cybersecurity education", "computer science education", "curriculum development", "security education"]}, {"title": "Common Bugs in Scratch Programs", "link": "https://dl.acm.org/doi/10.1145/3341525.3387389", "abstract": "Bugs in SCRATCH programs can spoil the fun and inhibit learning success. Many common bugs are the result of recurring patterns of bad code. In this paper we present a collection of common code patterns that typically hint at bugs in SCRATCH programs, and the LitterBox tool which can automatically detect them. We empirically evaluate how frequently these patterns occur, and how severe their consequences usually are. While fixing bugs inevitably is part of learning, the possibility to identify the bugs automatically provides the potential to support learners.", "authors": [{"name": "Ute Heuer", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Florian Oberm\u00fcller", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Nina K\u00f6rber", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Christoph Fr\u00e4drich", "affiliation": "University of Passau, Passau, Germany"}, {"name": "Gordon Fraser", "affiliation": "University of Passau, Passau, Germany"}], "tags": ["block-based programming", "scratch", "code quality"]}, {"title": "Designing One Year Curriculum to Teach Artificial Intelligence for Middle School", "link": "https://dl.acm.org/doi/10.1145/3341525.3387364", "abstract": "Artificial Intelligence (AI) has become a common ingredient in everyday products and a part of early education. Educators teach the subject to inform students about their possible advantages and risks. Recently, various resources have been designed to teach AI, however, these resources generally fail to meet an interdisciplinary approach and do not narrate the overall picture of AI development. To address this gap, we developed a 36-week open-source AI curriculum for middle school education. Our contribution is threefold: (1) Providing interdisciplinary connections to reveal the background of developing a new technology (2) Structuring the recent resources in the field to ease the integration of AI into classrooms (3) Presenting an inclusive approach with online and unplugged activities. In this paper, we present the design process of our curriculum, details about the lecture structures and it's supplementary materials. Finally, we share our observations from the teacher (n=18) and student (n=60) workshops.", "authors": [{"name": "Alpay Sabuncuoglu", "affiliation": "Twin Science and Robotics, Istanbul, Turkey"}], "tags": ["artificial intelligence education", "curriculum design"]}, {"title": "Tools, Languages, and Environments Used in Primary and Secondary Computing Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3387365", "abstract": "With the advent of teaching primary and secondary computing education, tools, languages, and environments (TLEs) are important pedagogical support systems for students and teachers. While there are a number of resources available for teaching K-12 students and teachers, there is little synthesis of the data with respect to usage and adoption rates for various TLEs. Using data extracted from 510 articles related to K-12 education, we conducted an analysis using descriptive statistics to determine what TLEs in K-12 are most frequently studied by researchers. We found 193 TLEs being used in research studies and experience reports, then differentiate between these two types of data and between students and teacher professional development. This preliminary research provides a first descriptive analysis of TLEs being used in K-12 space and simultaneously sets the stage for creating a classification system for TLEs based on the literature, including how they are used and what topics (in or outside of computing education) they are used to teach.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College & CSEdResearch.org, Galesburg, IL, USA"}, {"name": "Adrienne Decker", "affiliation": "University at Buffalo, Buffalo, NY, USA"}], "tags": ["primary education", "secondary education", "tools", "experience reports", "environments", "k-12", "research", "languages"]}, {"title": "Bring the Page to Life: Engaging Rural Students in Computer Science Using Alice", "link": "https://dl.acm.org/doi/10.1145/3341525.3387367", "abstract": "Exposure to science, technology, engineering, and mathematics (STEM) at a young age is key to inspiring students to pursue careers in these fields. Thus, many institutions of higher education offer events to engage youth in STEM activities. These events are most effective when they are adapted to the specific audience. In Montana, a large percentage of the K-12 student population is from rural communities, where the ability to participate in such events is limited due to travel logistics and a shortage of relatable materials. We have developed a computer science outreach module that targets these populations through the use of storytelling and the Alice programming environment, thus drawing a parallel between storytelling and building algorithms. We describe the module's implementation, report and analyze feedback, and provide lessons learned from the module's implementation at outreach events.", "authors": [{"name": "Samuel Micka", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Barbara Z. Komlos", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Brittany Terese Fasy", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Brendan Kristiansen", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Stacey A. Hancock", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "Allison S. Theobold", "affiliation": "Montana State University, Bozeman, MT, USA"}], "tags": ["rural communities", "K-12 education", "CS outreach", "cultural responsiveness"]}, {"title": "An International Pilot Study of K-12 Teachers' Computer Science Self-Esteem", "link": "https://dl.acm.org/doi/10.1145/3341525.3387418", "abstract": "Computer Science (CS) is a new subject area for many K-12 teachers around the world, requiring new disciplinary knowledge and skills. Teacher social-behavioral factors (e.g. self-esteem) have been found to impact learning and teaching, and a key part of CS curriculum implementation will need to ensure teachers feel confident to deliver CS. However, studies about CS teacher self-esteem are lacking. This paper presents an analysis of publicly available data (n=219) from a pilot study using a Teacher CS Self-Esteem scale. Analysis revealed significant differences, including 1) females reported significantly lower CS self-esteem than males, 2) primary teachers reported lower levels of CS self-esteem than secondary teachers, 3) those with no CS teaching experience reported significantly lower CS self-esteem, 4) teachers with 0-3 years experience had a negative CS self-esteem, but after four years, teachers had a positive CS self-esteem, and 5) teachers who lived further from metropolitan areas and in some countries reported lower CS self-esteem. These initial findings suggest a pressing need for future research to look further into teacher CS self-esteem to inform teacher CS professional development.", "authors": [{"name": "Monica M. McGill", "affiliation": "Knox College & CSEdResearch.org, Galesburg,, IL, USA"}, {"name": "Sue Sentance", "affiliation": "Raspberry Pi Foundation, Cambridge, United Kingdom"}, {"name": "Francesco Maiorana", "affiliation": "Kansas State University, Manhattan, KS, USA"}, {"name": "Katrina Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Rebecca Vivian", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Leonard Busuttil", "affiliation": "University of Malta, Msida, Malta"}, {"name": "Elizabeth Cole", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Christine Liebe", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Keith Quille", "affiliation": "TU Dublin, Dublin, Ireland"}, {"name": "Sarah Barksdale", "affiliation": "University of Minnesota, Minneapolis, MN, USA"}], "tags": ["self-esteem", "computer science education", "K-12 teachers", "teachers"]}, {"title": "Evaluation and Assessment Needs of Computing Education in Primary Grades", "link": "https://dl.acm.org/doi/10.1145/3341525.3387371", "abstract": "Until recently, computer science (CS) has been predominantly taught at upper-secondary or tertiary levels. Lately, however, CS curricula have been introduced into school systems from the very first year of school. In this paper, we undertake a participatory research approach, using focus group discussions between a group of experts in the field of evaluation and assessment at the primary level (K-5). The group considered the evaluation and assessment measures they have used, what their current needs are and how the CS education community can move towards meeting those needs. We present the discussion results as a position paper, situated in the context of broader education research. The experts identified three key priorities for the education research community: creating a universal taxonomy of assessment in the primary grades (K-5), creating measurements of student progression and growth over time, and creating culturally relevant evaluations and assessments. Through identifying key priorities, this work provides direction for urgently needed resource development and research directions for K-5 evaluation and assessment.", "authors": [{"name": "Rebecca Vivian", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Alan Peterfreund", "affiliation": "SageFox Consulting Group, Amherst, MA, USA"}, {"name": "Florence Sullivan", "affiliation": "University of Massachusetts, Amherst, MA, USA"}, {"name": "Dave Frye", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College & CSEdResearch.org, Galesburg, IL, USA"}, {"name": "Melissa Zeitz", "affiliation": "Liberty Elementary School, Springfield, MA, USA"}, {"name": "Jason Ravitz", "affiliation": "Evaluation by Design LLC, Richmond, CA, USA"}], "tags": ["teachers", "K-12", "primary education", "pre-service teachers", "K12", "evaluation", "assessment"]}, {"title": "Towards a Holistic Reservoir of Research-Based PCK Segments of K-12 Computer Science Teachers", "link": "https://dl.acm.org/doi/10.1145/3341525.3387412", "abstract": "Computer science education (CSE) at the K-12 level is becoming increasingly more prevalent. Consequently, there is an urgent need for competent CS teachers; hence, also for effective training programs. The pedagogical content knowledge of CS teachers (CS-PCK) plays an important role in teachers' training. To effectively incorporate CS-PCK into teachers' training, a CS-PCK resource, which relies on the \"wisdom of practice\" of experienced teachers as well as the body of research on CS education would be of great value. Such a resource should consist of reliable, coherent, and self-contained CS-PCK segments, which can be used in relevant contexts with little processing and adaptation. Such a resource can also serve in-service teachers, developers of teaching materials, as well as others dealing with K-12 CS education. Constructing such a reservoir requires: 1) an effective procedure for obtaining reliable CS-PCK segments, and 2) a method for organizing CS-PCK segments that reflects their content and attributes. Herein we describe one part of a large research project on CS-PCK. In a previous publication, we reported on a method for extracting research-based CS-PCK segments from experienced teachers and established its effectiveness, thus satisfying the first requirement. The current paper concerns the second requirement. We will describe and demonstrate our innovative method for devising an incremental structure that can contain CS-PCK segments, obtained from either experienced teachers or from the CS education research literature.", "authors": [{"name": "Ofra Brandes", "affiliation": "Weizmann Institute of Science, Rehovot, Israel"}, {"name": "Michal Armoni", "affiliation": "Weizmann Institute of Science, Rehovot, Israel"}], "tags": ["teachers", "K-12", "PCK", "CS-PCK", "repository"]}, {"title": "SCAPA: Development of a Questionnaire Assessing Self-Concept and Attitudes Toward Programming", "link": "https://dl.acm.org/doi/10.1145/3341525.3387415", "abstract": "There is a constantly growing number of initiatives asserting the relevance of programming already in primary education and offering respective interventions with the goal to foster interest in and positive attitudes toward programming. To evaluate to what extent this goal is achieved, assessing students' attitudes toward programming reliably is indispensable. However, there still is a need for validated instruments for assessing this in elementary school students. This seems particularly relevant as self-concept and attitudes toward a school subject were repeatedly observed to be significant predictors of learning motivation and achievement. The newly developed Self-Concept and Attitude toward Programming Assessment (SCAPA) is based on existing instruments for assessing students' self-concept and attitude toward mathematics. SCAPA measures aspects of students' self-concept and attitudes toward programming on seven scales: i) self-reported previous programming experience and understanding, ii) self-concept, iii) intrinsic value belief, iv) attainment value belief, v) utility value belief, vi) cost belief, and vii) compliance and persistence. We administered SCAPA to 197 elementary school students between seven and ten years of age in the context of an evaluation of a computational thinking intervention. Data were analyzed for reliability (i.e., internal consistency on item and scale level) and construct validity (by means of confirmatory factor analysis). Results indicated good reliability for all scales except for the self-reported previous programming experience and understanding scale. Overall, these results reflect SCAPA's suitability for assessing different aspects of elementary school students' self-concept and attitudes toward programming.", "authors": [{"name": "Klaus Ostermann", "affiliation": "University of T\u00fcbingen, T\u00fcbingen, Germany"}, {"name": "Korbinian Moeller", "affiliation": "Leibniz-Institut f\u00fcr Wissensmedien, Loughborough University & University of T\u00fcbingen, Loughborough, United Kingdom "}, {"name": "Luzia Leifheit", "affiliation": "University of T\u00fcbingen & Leibniz-Institut f\u00fcr Wissensmedien, T\u00fcbingen, Germany"}, {"name": "Jessika Golle", "affiliation": "University of T\u00fcbingen, T\u00fcbingen, Germany"}, {"name": "Katerina Tsarava", "affiliation": "University of T\u00fcbingen & Leibniz-Institut f\u00fcr Wissensmedien, T\u00fcbingen, Germany"}, {"name": "Manuel Ninaus", "affiliation": "University of T\u00fcbingen & Leibniz-Institut f\u00fcr Wissensmedien, T\u00fcbingen, Germany"}, {"name": "Ulrich Trautwein", "affiliation": "University of T\u00fcbingen, T\u00fcbingen, Germany"}], "tags": ["computer science education", "instrument development", "primary education", "computing education", "K-12 education", "assessment"]}, {"title": "Developing an Inclusive K-12 Outreach Model", "link": "https://dl.acm.org/doi/10.1145/3341525.3387421", "abstract": "This paper outlines the longitudinal development of a K-12 outreach model, to promote Computer Science in Ireland. Over a three-year period, it has been piloted to just under 9700 K-12 students from almost every county in Ireland. The model consists of a two-hour camp that introduces students to a range of Computer Science topics: addressing computing perceptions, introduction to coding and exploration of computational thinking. The model incorporates on-site school delivery and is available at no cost to any interested school across Ireland. The pilot study so far collected over 3400 surveys (pre- and post- outreach delivery). Schools from all over Ireland self-selected to participate, including male only, female only and mixed schools. The no-cost nature of the model meant schools deemed \"disadvantaged\", to private fee-paying schools participated. Initial findings are very positive, including the balance of male and female participants, where in the 2017-18 academic year it was 56:44 and in 2019-20 (to date), it is 35:65 respectively. Once the model is validated and tweaked (based on survey data), the model will be published (open access) for other institutions to implement the model locally. In addition, the authors intend to link schools (that the team have worked with over the three years) with local institutions, thus developing a sustainable ecosystem for the program to continue. This paper describes the model structure and outlines early findings.", "authors": [{"name": "Karen Nolan", "affiliation": "TU Dublin, Dublin, Ireland"}, {"name": "Roisin Faherty", "affiliation": "TU Dublin, Dublin, Ireland"}, {"name": "Susan Bergin", "affiliation": "Maynooth University, Co Kildare, Ireland"}, {"name": "Keith Quille", "affiliation": "TU Dublin, Dublin, Ireland"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["female student", "computer science education", "K-12", "computing camps inclusive", "perceptions", "outreach"]}, {"title": "Postponing the Concept of Class When Introducing OOP", "link": "https://dl.acm.org/doi/10.1145/3341525.3387369", "abstract": "The literature on programming education describes different problems found in courses that introduce the basic concepts of Object-Oriented Programming (OOP). Some of these problems arise from the large amounts of abstract concepts that are needed even for the simplest programs. Other difficulties are related with the concepts of class and instantiation, and the duality between classes and objects. Educators and researchers have proposed several alternatives to define a gradual path for the introduction of OOP.\nA group of educators from several universities in the Buenos Aires area crafted a learning path for a first course about OOP in which the concepts of class and instantiation are introduced several weeks after the beginning of the course. Gradualism is achieved in this proposal by starting with a minimal metamodel based on self-defined objects, which is progressively enlarged. Following this learning path, by the time students are introduced to classes and instantiation, they already have a good acquaintance with object definition and interaction, and are also able to quickly understand the convenience of the new concepts.\nThe same group conceived and developed a didactically-oriented programming language along with an IDE; and produced several exercises that can be solved using the initial metamodels.\nIn this article, we discuss which concepts and language elements can be introduced before classes and instantiation, the need for a programming language that supports the proposed learning path, and the results of its application in several universities.", "authors": [{"name": "Carlos Lombardi", "affiliation": "Universidad Nacional de Hurlingham & Universidad Nacional de Quilmes, Villa Tesei, Argentina "}, {"name": "Nicol\u00e1s Passerini", "affiliation": "Universidad Nacional de Quilmes & Universidad Nacional de San Mart\u00edn, Bernal, Argentina"}], "tags": ["CS1", "CS2", "CS0", "educational tools", "instructional approaches"]}, {"title": "Engage Against the Machine: Rise of the Notional Machines as Effective Pedagogical Devices", "link": "https://dl.acm.org/doi/10.1145/3341525.3387404", "abstract": "The term \"the machine\" is commonly used to refer to the complicated physical hardware running similarly complex software that ultimately executes programs. The idea that programmers write programs for a notional machine - an abstract model of an execution environment - not the machine itself, has risen to the point of gaining acceptance as a useful device in computing education. This has seeded a growing discussion about how explicitly utilizing notional machines in teaching can help students construct more accurate mental models, which is essential for learning programming. Much of the existing literature necessarily involves specific languages, visualization, and/or facilitating tools, and is not very accessible to many practitioners. Less focus has been put on how teachers can make explicit use of notional machines in their teaching. In this paper we describe notional machines and their use in a manner that is more accessible to a general educator audience in order to facilitate more effective computing education at all levels. We advocate explicitly delineating between visualization tools and the notional machines they depict, isolating and clarifying the notional machine so that it is conspicuous, apparent and useful. We present examples of how this approach can facilitate a more consistent method of teaching computing, and be used in more effective pedagogical practice for teaching computing.", "authors": [{"name": "Paul E. Dickson", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Neil C. C. Brown", "affiliation": "King's College London, London, United Kingdom"}], "tags": ["pedagogy", "memory diagrams", "code writing", "visualization", "stack traces", "program construction", "code tracing", "notional machines"]}, {"title": "Misconception-Based Peer Feedback: A Pedagogical Technique for Reducing Misconceptions", "link": "https://dl.acm.org/doi/10.1145/3341525.3387392", "abstract": "Developing high quality pedagogical materials and techniques is a challenging but important task. We leverage prior work identifying student misconceptions and difficulties in introductory computing courses to design misconception-based feedback (MBF) to address these difficulties. In MBF, peers working in pairs use prompts to guide their discussion of a recently completed coding assignment. A human autograder group (HAG) simulates the behavior of a typical autograder program, supplying only test cases and their correct outputs, allowing us to factor out the effect of the medium (computer vs. human). Participants completed conceptual pre-tests and post-tests that asked them to explain their reasoning, and we captured screen and audio recordings of the sessions. Our mixed-methods analysis looked for statistical differences in frequency counts of misconceptions and qualitatively analyzed audio/video data and language used in pre/post-test written responses to look for explanations of these differences. We use a mixed-methods approach: looking for statistical differences in frequency counts of misconceptions and qualitatively analyzing audio/video data and language used in pre/post-test written responses for explanations of these differences. Significant benefits of MBF were seen on questions that required students to comprehend differences between pass-by-value and pass-by-reference. Not only did these questions show a greater reduction in misconceptions for the MBF group than the HAG group, but the qualitative analysis provided evidence that the students' improvement in language and understanding of the concepts from pre-test to post-test was directly tied to the MBF intervention. This study presents a promising, low resource technique to address misconceptions about several important computer science concepts.", "authors": [{"name": "Yvon Feaster", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Eileen Kraemer", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Aubrey Lawson", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Cazembe Kennedy", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["misconceptions", "active learning", "pedagogical content knowledge", "computing education"]}, {"title": "Using Peer Code Review as an Educational Tool", "link": "https://dl.acm.org/doi/10.1145/3341525.3387370", "abstract": "Code-review, the systematic examination of source code, is widely used in industry, but seldom used in courses. We designed and implemented a rubric-driven online peer code-review system (PCR) that we have deployed for two semesters, during which 228 students performed over 1003 code reviews. PCR is designed to meet four goals: (1) Provide timely feedback to students on their submissions, (2) Teach students the art of code review, (3) Allow custom feedback on submissions even in massive online classes, and (4) Allow students to learn from each other. We report on using PCR, in particular, the accuracy of student-based reviews, the surprising number of free-form comments made by students, the variability of staff-based reviews, how student engagement impacts the accuracy, the additional workload, and anecdotal perspectives of students. We describe some critical design considerations for PCR including rubric design, the importance of PCR training on each assignment to acclimate students to the rubric, and how we match student reviewers to student submissions.", "authors": [{"name": "Xiangyu Song", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Seth Copen Goldstein", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Majd Sakr", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": []}, {"title": "Introducing a Paper-Based Programming Language for Computing Education in Classrooms", "link": "https://dl.acm.org/doi/10.1145/3341525.3387402", "abstract": "Past research has shown that the use of tangible programming platforms in computing education can enhance students' interest, engagement, and collaboration within workgroups. However, to this day, the adoption of such interfaces in classrooms has remained relatively scarce. This is possibly due to the expenses and efforts necessary to acquire, set up and maintain such platforms. In this context, the use of paper as a principal means of interaction represents an inexpensive and versatile solution, that additionally harnesses the prevalence of paper in classrooms. This work, therefore, introduces PaPL, an easily reproducible platform for paper-based programming languages. The platform was evaluated in two exploratory user studies. The first study aimed at investigating the interaction of over 100 senior year high school students with the platform under varying conditions of group size and usage constraints. In the second study, the platform was tested with 32 sixth-graders and 2 teachers to evaluate its usage in an authentic context. The results indicate that group size may affect active discussion and error count, while usage constraints may affect active discussion of students interacting with the platform. Moreover, the classroom study shows promising results with regard to the use of PaPL in formal education.", "authors": [{"name": "Francesco Mondada", "affiliation": "Mobots Group EPFL, Lausanne, Switzerland"}, {"name": "Melissa Skweres", "affiliation": "EPFL, Lausanne, Switzerland"}, {"name": "Aditya Mehrotra", "affiliation": "Mobots Group EPFL, Lausanne, Switzerland"}, {"name": "No\u00e9 Duruz", "affiliation": "Mobots Group EPFL, Lausanne, Switzerland"}, {"name": "Andrea Mussati", "affiliation": "Mobots Group EPFL, Lausanne, Switzerland"}, {"name": "Christian Giang", "affiliation": "Mobots Group EPFL & SUPSI-DFA, Lausanne & Locarno, Switzerland"}, {"name": "Julien Dedelley", "affiliation": "Mobots Group EPFL, Lausanne, Switzerland"}], "tags": ["group collaboration", "tangible programming", "computing education", "educational robotics"]}, {"title": "Through the Lens: Enhancing Assessment with Video-Based Presentation", "link": "https://dl.acm.org/doi/10.1145/3341525.3387376", "abstract": "This paper discusses a video-based approach trialled within Robert Gordon University. Students are typically asked to formally deliver presentations (either individually, or in groups) for summative assessment. Timetabling issues, large student numbers and staff availability can prevent these presentations from being conducted in effective learning environments. Marking is often completed after the presentations, with markers referring to shorthand notes in order to award a grade, potentially missing out specific feedback and action points. Furthermore, students are sometimes reluctant to present, and feel that they only have one chance to \"get it right\". Students were asked to film their presentations and submit them digitally for grading. This assessment style was trialled over four modules across two semesters and showed a number of benefits: students gave positive feedback about the experience and indicated that they appreciated the fact that they could review and rehearse their submission multiple times, thus submitting their best version for assessment. Staff found that marking time was reduced and they were delivering more specific feedback, as they were able to review the work multiple times.", "authors": [{"name": "Jen BirtlesKelman", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": ["student experience", "professional skills", "presentation skills", "video assessment", "video presentation"]}, {"title": "The Use of DJing Tasks as a Pedagogical Bridge to Learning Data Structures", "link": "https://dl.acm.org/doi/10.1145/3341525.3387427", "abstract": "Computing is a field that needs to make more strides to have workforce that matches the racial and ethnic diversity found in the population of the United States. The author of the study aims to address this problem, by using course materials that incorporate the culture of students taking computer science courses. Geneva Gay [5] mentions in her theory of culturally responsive pedagogy that it's critical for instructors to embed the students' culture in their course materials, so students can use their own experiences to understand concepts. The study explores how DJing tasks (such as creating, editing and iterating through playlists) can be used to teach students about data structures. Participants in the study were drawn from a convenience sample in a 15-week sophomore course in data structures at a small liberal arts college. 16 of the 24 students fully participated in the study, and all of the respondents were Black women pursuing a major or a minor in computer science. The students were taught with examples that used Black music as a context throughout the course, and were tasked with creating software for a drum machine or a DJ controller as a final project. Study participants were asked via a web survey to compare example problems presented in a music based context to examples they had seen in the course text. Students were also asked to reflect on the experiences they had engaging in the final project.", "authors": [{"name": "David James", "affiliation": "Spelman College, Atlanta, GA, USA"}], "tags": ["culturally responsive pedagogy", "steam"]}, {"title": "A Case Study and Call to Action: Incorporating the ACRL Framework for Information Literacy in Undergraduate CS Courses", "link": "https://dl.acm.org/doi/10.1145/3341525.3387401", "abstract": "Information literacy (IL) is fundamentally important for CS students and graduates who are required to write research papers and stay abreast of new technologies and ideas. However, IL is absent in CS curriculum guidelines and the literature is scarce on research focused on IL skills among CS students. In this paper, we discuss aspects of IL and introduce the ACRL Framework for Information Literacy in Higher Education in the context of an undergraduate CS course covering social issues. We share how we used the Framework as the basis of our learning activities, which included lectures, a reading, and an assignment in which students reflected on core ideas pertaining to IL. We analyzed responses from the assignment to assess whether students achieved our learning outcomes. Nearly all students recognized markers of scholarly authority, but fewer students achieved learning outcomes based on more abstract concepts. We provide recommendations on incorporating IL activities in CS courses, and encourage explicit interventions to improve CS students' IL skills.", "authors": [{"name": "Keshav Mukunda", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}, {"name": "Holly Hendrigan", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}, {"name": "Diana Cukierman", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}], "tags": ["instructor-librarian collaboration", "computing science curriculum", "ACRL framework", "information literacy"]}, {"title": "Twenty-Four Years of ITiCSE Authors", "link": "https://dl.acm.org/doi/10.1145/3341525.3387387", "abstract": "The 25th ITiCSE might be considered an appropriate occasion for reflection on the history of the conference. In the 24 years since it began, ITiCSE has published more than 1400 full papers and working group reports. This paper presents an analysis of the authors of these papers and reports: who they are, where they come from, the numbers of authors per paper, and more. We highlight ITiCSE's most prolific authors, and note those with the greatest number of co-authors in ITiCSE publications. We apply Lotka's law to the population of authors: notwithstanding the handful of authors who have contributed to many ITiCSE papers, we find that the return rate for authors is not as high as Lotka's inverse-square law would suggest. We analyse the level of collaboration evident in papers with more than one author, and find a high level of collaboration between countries, presumably as a consequence of the nature of ITiCSE's working groups.", "authors": [{"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}], "tags": ["classifying publications", "bibliometrics", "computing education"]}, {"title": "Get Paid to Program: Evaluating an Employment-Aware After-School Program for High School Women of Color", "link": "https://dl.acm.org/doi/10.1145/3341525.3387357", "abstract": "After-school programs are one of the primary mechanisms used to introduce students to computing. Yet, such programs may leave behind students who need to work after-school jobs and earn an income. In this work we implement and evaluate a 10-week-long after-school program we call \"Get Paid to Program\", which uses research-based curriculum and pedagogical practices to introduce majority-minority, low-income high school women to computing. We evaluate the impact of this program on students' self-confidence around computing and their interest in STEM and computing careers. We evaluate the program with 30 high school women over two program implementations. Our evaluation shows a significant change in participants' computing self-efficacy. Additionally, we observe a refinement of career interests in computer science, programming, and engineering: participants become more certain of their interest, or lack thereof, after program completion. Interestingly, we find relatively little impact on career interest in other STEM fields, suggesting that computing-specific programs are critical for raising student awareness and interest.", "authors": [{"name": "Elissa M. Redmiles", "affiliation": "Microsoft Research, Redmond, WA, USA"}, {"name": "Dana McFarlane", "affiliation": "Walmart Labs, Reston, VA, USA"}], "tags": ["survey", "after-school program", "high school computing", "computing pipeline", "inclusion in computing", "women in computing", "diversity in computing", "outreach program", "equity in computing"]}, {"title": "Promoting Diversity-Inclusive Computer Science Pedagogies: A Multidimensional Perspective", "link": "https://dl.acm.org/doi/10.1145/3341525.3387360", "abstract": "The field of Computer Science has long been criticized for its lack of minority representation. While extensive literature documents possible causes and solutions to promote diversity, CS still falls considerably short of other STEM disciplines. Through an interdisciplinary approach, we urge that a multidimensional perspective be applied to develop and assess pedagogical strategies aimed at improving student diversity. To the best of our knowledge, our paper is the first that, in the context of CS, (1) examines the need to adopt an intersectional approach in more than just two dimensions, and (2) defines and identifies the Fallacious Archetype of a successful CS student. Also, we are the first to investigate the possibility and implication of examining certain other minority types: gender non-binary students and age-related student minorities. To conclude, we provide contextual examples that take an intersectional approach to assess CS diversity-inclusive pedagogies.", "authors": [{"name": "Vahab Pournaghshband", "affiliation": "University of San Francisco, San Francisco, CA, USA"}, {"name": "Paola Medel", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}], "tags": ["age", "diversity", "race", "gender", "socioeconomic status"]}, {"title": "The Relationship of Gender, Experiential, and Psychological Factors to Achievement in Computer Science", "link": "https://dl.acm.org/doi/10.1145/3341525.3387403", "abstract": "Computer science (CS) is widely recognized as a field with a significant gender gap despite the growing prevalence of computing. Several factors including CS attitudes, exposure to CS, experience with computer programming, and confidence in using computers are understood to be correlated with the low participation of women in CS. These factors also play an important role in students' interest in CS careers and are particularly crucial during secondary school. However, there is a dearth of research that examines differences in how these factors are inter-correlated for younger students (ages 11-13). The purpose of this study was to generate and test a statistical model that demonstrates the inter-correlation amongst these factors with respect to gender. A total of 260 middle school students participated in this study. Four instruments measuring students' CS attitudes, confidence in using computers, CS conceptual understanding, and prior experience with CS-related activities were used. Structural equation modeling was utilized to test the hypothesized model. The findings showed that previous participation in CS-related activities had a significant direct effect on CS attitudes and confidence in using computers, but the effect on students' CS conceptual understanding was indirect. We also found that in a female specific model, previous participation had a significantly stronger direct effect on CS attitudes compared to its effect in a male specific model. The importance of providing more CS-related experience, especially to female students, as well as suggestions on activities that promote gender equity in the field are discussed.", "authors": [{"name": "James Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Arif Rachmatullah", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Bradford Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Madeline Hinckle", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "University of Florida, Gainesville, FL, USA"}, {"name": "Eric Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["self-efficacy", "CS knowledge", "prior experience", "gender", "middle grades"]}, {"title": "The Power of Female Athletes to Level the Computer Science Playing Field", "link": "https://dl.acm.org/doi/10.1145/3341525.3387416", "abstract": "Between 2007 and 2017 the graph of percents of USA female bachelor's degrees in computer and information sciences plateaued below 20%. The seeming inability to crack the 20% ceiling, given the expenditure of billions of USA dollars for projects and research aimed at recruitment and retention of women, calls for new research that is uniquely different from that explored in the literature. The authors investigate the role of female athletes within the computer science environment. The literature currently contains no such exploration. Along with female athletes (FA), the study involves additional groups: female non-athletes (FNA), male athletes (MA), and male non-athletes (MNA). This paper addresses the research questions: Do cumulative GPAs for FA, FNA, MA, and MNA in the current study follow the literature's GPA ordering for the four groups? How do CS1 course grades and cumulative GPAs for the groups relate to each other? Do female and male athletes and non-athletes have different experiences in CS1? If FA thrive in computer science, can future researchers recast some of the elements from the sporting domain for use with FNA in the computing domain, so that many more females will persist in computing?", "authors": [{"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Khadija Jirari Stewart", "affiliation": "DePauw University, Greencastle, IN, USA"}, {"name": "Sharmin Tunguz", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["gender and diversity", "broadening participation", "CS1"]}, {"title": "Global and Local Agendas of Computing Ethics Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3387423", "abstract": "Whilst today's computing educators are very successful at preparing students in the technologies of computing, they are also entrusted with the responsibility of preparing them to face the complex issues surrounding ethics. These issues are perpetually changing, unpredictable, and challenging. Twenty-first century computing students graduate into a world in which many of the greatest ethical issues roiling society are centered on their field. A recent surge of scholarly interest has produced some rich overviews of computing ethics pedagogy. This paper seeks to go beyond the Western perspectives typically centered in that work to consider how these problems may be understood in quite different ways through the value systems of diverse professional groups, political systems, and cultures. The breadth of computing ethics as a subject makes a universal overview of its education here unrealistic. Instead, a selective review of relevant international literatures is presented to illustrate a range of influences on the teaching of computing ethics. Different cultural conceptualizations of ethics and contrasting curricula from a set of global regions are outlined. Other influences include (i) differing levels of professional association from global down to national; and (ii) subfields and topics of computing (including diversity and social responsibility). This position paper considers these perspectives on computing ethics education relative to each other without attempting to reconcile any differences, and emphasizes the importance of adopting culturally relevant dimensions if students are to take ownership of the ethics of their future work.", "authors": [{"name": "Viraj Kumar", "affiliation": "Indian Institute of Science, Bangalore, India"}, {"name": "Cheryl Brown", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Elizabeth von Briesen", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Paul Myers", "affiliation": "Trinity University, San Antonio, TX, USA"}, {"name": "Gerry Cross", "affiliation": "Mount Royal University, Calgary, Canada"}, {"name": "Janet Hughes", "affiliation": "The Open University, Edinburgh, United Kingdom"}, {"name": "Ethan Plaut", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Feng Wang", "affiliation": "Suzhou Polytechnic Institute of Agriculture, Suzhou, China"}], "tags": ["teaching", "cultural diversity", "curriculum", "ethics", "education"]}, {"title": "Exploring Creativity and Learning through the Construction of (Non-Digital) Board Games in HCI Courses", "link": "https://dl.acm.org/doi/10.1145/3341525.3387374", "abstract": "Several non-technical skills - such as teamwork, verbal and written communication, time management, problem-solving, and critical thinking - are currently being highlighted in discussions about curriculum recommendations for the computing field. In the same way, methodological alternatives are discussed in order to support the development of these skills and engage students in the learning process. In this scenario, we report an experience carried out in three distinct Human-Computer Interaction (HCI) courses, in graduate and undergraduate programs, where the students created their own (non-digital) board games to explore specific HCI concepts. The experience involved 84 students. We observed student engagement during the proposed activities and their impressions of the impact of those activities on their learning process.", "authors": [{"name": "Milene Selbach Silveira", "affiliation": "Pontifical Catholic University of Rio Grande do Sul (PUCRS), Porto Alegre, Brazil"}], "tags": ["board games", "computing students' skills", "student engagement", "human-computer interaction"]}, {"title": "Creative Choice in Fifth Grade Computing Curriculum", "link": "https://dl.acm.org/doi/10.1145/3341525.3387405", "abstract": "We examine the effects of creative choice in fifth grade computer science curriculum on students' engagement/preferences, performance, and self-efficacy (n=107). This work is rooted in evaluating creativity as a tool to increase engagement in elementary school computer science education by studying a group of one hundred fifth grade students at a public charter school in California. The work occurred within a year long computing curriculum focused on introducing students to programming. To experimentally evaluate creative choice over a six week period, we created several instances of two variants of worksheets for the students - creative worksheets and more rigid worksheets, alternating control and experimental groupings. After the treatment, surveys and quizzes were used to evaluate students' experiences and learning. We found that students benefit from a blend of creative and structured instructions and can feel a sense of ownership with even limited versions of creative choice. In addition, student performance was not affected by our different treatments.", "authors": [{"name": "Zo\u00eb Wood", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "John Wilcox", "affiliation": "Peabody Charter Elementary School, Santa Barbara, CA, USA"}, {"name": "Kirsten Mork", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["K-12 instruction", "creativity", "gender and diversity", "accessibility", "K-12 curriculum"]}, {"title": "Problem Solving and Creativity: Complementing Programming Education with Robotics", "link": "https://dl.acm.org/doi/10.1145/3341525.3387420", "abstract": "With its direct feedback and the tangible machine, robotics is a strong motivator for engaging students in STEM fields, as evidenced by the popularity of competitions and events such as FIRST and Robo Games. However, in the context of K-12 computer science education, the potential of robotics seems as yet hardly tapped into. In an attempt to bridge the gap, we designed a Python library for robotics with Lego's EV3 robots to complement programming classes. We employed our library to teach secondary school students as part of an outreach activity. Our approach is built around open-ended tasks instead of narrow exercise statements. Although our activity was based on the EV3 Space Challenge Set, we encouraged the students at any time to pursue their own ideas and even their own challenges. While students had little problems in using Python to program their robots, we still found a series of misconceptions and observed that female students were more interested in following their own creative projects than in solving given challenges.", "authors": [{"name": "Adrian Regez", "affiliation": "PH Bern, Berne, Switzerland"}, {"name": "Pascal L\u00fctscher", "affiliation": "PH Graub\u00fcnden, Chur, Switzerland"}, {"name": "Marco Gassner", "affiliation": "PH Graub\u00fcnden, Chur, Switzerland"}, {"name": "Dennis Komm", "affiliation": "PH Graub\u00fcnden & ETH Z\u00fcrich, Chur, Z\u00fcrich, Switzerland"}, {"name": "Urs Hauser", "affiliation": "PH Luzern & ETH Z\u00fcrich, Lucerne, Switzerland"}, {"name": "Rico Puchegger", "affiliation": "PH Graub\u00fcnden, Chur, Switzerland"}, {"name": "Tobias Kohn", "affiliation": "University of Cambridge, Cambridge, United Kingdom"}], "tags": ["computer science education", "K-12 education", "python", "robotics"]}, {"title": "Program a Hit -- Using Music as Motivator for Introducing Programming Concepts", "link": "https://dl.acm.org/doi/10.1145/3341525.3387377", "abstract": "People with no prior experience or a low self-efficacy in computing are less likely to choose Computer Science (CS) as a study subject. This especially has an impact on young women and is therefore one of the reasons for the prevalent gender imbalance in CS student populations. We designed a workshop that addresses this issue and uses music as motivating context. It introduces a variety of essential programming concepts in a fun and engaging way and results in creative artifacts programmed by the participants. First experiences show that this approach leads to promising results and might therefore contribute in the longer term to a more diverse CS student population.", "authors": [{"name": "Christian K\u00f6ppe", "affiliation": "Utrecht University, Utrecht, Netherlands"}], "tags": ["gender diversity", "introductory programming", "music"]}, {"title": "Examining Student Coding Behaviours in Creative Computing Lessons using Abstract Syntax Trees and Vocabulary Analysis", "link": "https://dl.acm.org/doi/10.1145/3341525.3387408", "abstract": "Creative computing is an approach to computing education which emphasises the creation of interactive audiovisual software and an art-school influenced pedagogy. Given this emphasis on Dewey's \"learning by doing\", we set out to investigate the processes students use to develop their programs. We refer to these processes as the students' 'coding behaviour', and we expect that understanding it will provide us with valuable information about how students learn in our creative computing classes. As existing metrics were not sufficient, we introduce a new set of quantitative metrics to describe coding behaviours. The metrics consider factors such as students' vocabulary use and development, how fast and how much they alter the functionality of code over time and how they iterate on their code through text insert and delete operations. Many of our lessons involve providing students with demonstrator code which they use as a base for the development of their programs, so we use demo code as an entry point to our dataset. We look at programs students have written through developing the demo code in a dataset of over 16,000 programs. We clustered the demo code using the set of descriptive metrics. This lead to a set of clusters containing programs which are associated with distinct coding behaviours. Four was the ideal number of clusters for cluster density and separation. We found that the clusters had distinct behaviour patterns, that they were associated with different instructors and that they contained demo programs with different lengths.", "authors": [{"name": "Maria Teresa Llano", "affiliation": "Goldsmiths, University of London, London, United Kingdom"}, {"name": "Matthew Yee-King", "affiliation": "Goldsmiths, University of London, London, United Kingdom"}, {"name": "Mark d'Inverno", "affiliation": "Goldsmiths, University of London, London, United Kingdom"}, {"name": "Louis McCallum", "affiliation": "Goldsmiths, University of London, London, United Kingdom"}, {"name": "Vit Ruzicka", "affiliation": "University of the Arts, London, United Kingdom"}, {"name": "Mick Grierson", "affiliation": "University of the Arts, London, United Kingdom"}], "tags": ["creative computing", "automated code analysis", "MOOCs", "demonstrator code"]}, {"title": "A Methodology to Integrate Professional Skill Development throughout an ICT Curriculum", "link": "https://dl.acm.org/doi/10.1145/3341525.3387358", "abstract": "Several studies have reported on different methods of including the development of a professional skill (such as communication, collaboration) that have been effective at increasing the competency of an information and communication technology (ICT) student with that skill at a subject level. This paper proposes a methodology that can be used in the design of an ICT curriculum to examine the breadth and depth of professional skill development inclusion across a curriculum. The methodology is applied to a case study ICT curriculum to evaluate the extent of professional skill development. This methodology and the case study ICT curriculum can assist curriculum designers in the difficult task of integrating professional skill development within an ICT curriculum to the extent necessary to achieve professionally competent graduates.", "authors": [{"name": "Tina Acu\u00f1a", "affiliation": "University of Tasmania, Hobart, Australia"}, {"name": "Nicole Herbert", "affiliation": "University of Tasmania, Hobart, Australia"}, {"name": "Kristy de Salas", "affiliation": "University of Tasmania, Hobart, Australia"}, {"name": "Erik Wapstra", "affiliation": "University of Tasmania, Hobart, Australia"}], "tags": ["skills", "employability", "teamwork", "communication", "collaboration"]}, {"title": "Soft Skills: What do Computing Program Syllabi Reveal About Non-Technical Expectations of Undergraduate Students?", "link": "https://dl.acm.org/doi/10.1145/3341525.3387396", "abstract": "Industry expectations of graduates are higher than ever. Not only are they required to be skilled in several technologies, but also need to be equipped with non-technical skills - often called soft skills or professional skills. This puts pressure on computing programs, as educators try to integrate these requirements into already full curricula. Although incorporating such skills into programs is seemingly common practice, little is known about what skills are being taught and why, outside of isolated case studies. In this work we ask: What non-technical skills are expected of undergraduate students according to computing programs? To answer this we manually curated 278 non-technical syllabi from 110 universities in 30 European countries. The most frequently identified skills are teamwork, ethics, written/oral communication, and presentation skills, while the development of one's own values, motivating others, creativity, and empathy feature least frequently. By providing a detailed analysis and an interactive website visualizing this data, we hope to aid the community in reviewing which non-technical skills are taught with an aim to teaching the right skills to the right students. This work sheds new light on what is expected of undergraduate computing students in terms of non-technical skills and identifies areas where more coverage might be needed.", "authors": [{"name": "Joost Vennekens", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Wouter Groeneveld", "affiliation": "KU Leuven, Leuven, Belgium"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["computer science education", "soft skills", "learning outcomes", "non-technical skills", "computing education", "software developer", "transferable skills", "syllabus", "required skills", "curriculum design"]}, {"title": "Developing Industry-Relevant Higher Order Thinking Skills in Computing Students", "link": "https://dl.acm.org/doi/10.1145/3341525.3387381", "abstract": "A 2016 survey commissioned by the British Higher Education Council revealed CS graduates had one of the highest unemployment rates. Industry sources attribute this to a growing gap between employer expectations and university curriculum. This gap primarily consists of soft skills and higher-order thinking skills, which include the ability to analyse, synthesise, evaluate, critique and design. Technical job advertisements increasingly specify higher order thinking skills as entry requirements for graduates.\nThis paper presents the results of our work studying whether formative tasks can develop higher-order thinking skills. The formative tasks consisted of quizzes covering the first four levels of the Bloom's taxonomy. The higher-order thinking skills were measured based on the static and dynamic models students created for a real world problem, as part of the final exam. Our results reveal a strong correlation exists between application and analysis level quizzes and design activities needing higher-order thinking in the exam. Students repeating the quizzes several times also had better results than others in higher-order design skills. These results suggest that practising with well-constructed quizzes especially at the higher Bloom's level exercises the cognitive channels that help improve higher-order thinking skills.", "authors": [{"name": "Margaret Hamilton", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Charles Thevathayan", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Shekhar Kalra", "affiliation": "RMIT University, Melbourne, Australia"}], "tags": ["intelligent tutoring systems", "higher order thinking skills", "computer science education", "employability"]}, {"title": "Top-down Design of a CS Curriculum for a Computer Games BA", "link": "https://dl.acm.org/doi/10.1145/3341525.3387378", "abstract": "Computer games are complex products incorporating software, design and art. Consequently, their development is a multidisciplinary effort, requiring professionals from several fields, who should nonetheless be knowledgeable across disciplines. Due to the variety of skills required, and in order to train these professionals, computer game development (GD) degrees have been appearing in North America and Europe since the late 1990s. Following this trend, several GD degrees have emerged in Portugal. Given the lack of specialized academic staff, not uncommon in younger scientific areas, some of these degrees \"borrowed\" computer science (CS) programs and faculty within the same institution, leading in some cases to a disconnect between CS theory and practice and the requirements of GD classes. In this paper, we discuss our experience in adapting the CS curriculum of a three-year computer games BA in accordance with GD requirements. We used a top-down approach, where the game engine used for GD informs the choice of CS topics and programming languages lectured in the CS curriculum. The discussion is centered around the choices taken and the theoretical and empirical rationale behind our decisions. Preliminary empirical results indicate a substantial increase in GD project quality and a clear improvement in the students' technical skills, as well as in their experimentation and adaptation capabilities.", "authors": [{"name": "N\u00e9lio C\u00f3dices", "affiliation": "Lus\u00f3fona University, Lisbon, Portugal"}, {"name": "Nuno Fachada", "affiliation": "Lus\u00f3fona University, Lisbon, Portugal"}], "tags": ["CS curriculum", "undergraduate degree", "computer games"]}, {"title": "Semantic Transfer in Programming Languages: Exploratory Study of Relative Novices", "link": "https://dl.acm.org/doi/10.1145/3341525.3387406", "abstract": "It is a natural part of a student's computing education to transfer from language to language, hence adopting to a new programming language (PL) quickly is a necessary skill. Prior work in computer science research mainly brings awareness of the success and difficulties that students face when learning new languages. In addition, work that directly relates to PL transfer mainly concerns experienced programmers problem solving in a new language, evidencing plan transfer. We could not find research attempting to devise a model of PL transfer based on code comprehension. We explore this phenomenon in the context of five university students transitioning from procedural Python to object-oriented Java, over a period of 10 weeks. We analyse the results through the lens of a model of second language acquisition using the notion of Semantic transfer and the Mindshift learning theory (MLT). The findings indicate that during the initial learning stages, learners relied mostly on their syntactic matching between Python and Java and subsequent semantic transfer which affected their learning positively on Carryover concepts and negatively on Changed concepts. Students could not transfer their semantic knowledge on concepts they perceived as Novel. An understanding of the transfer process learners go through during a shift can help inform our pedagogy on how to ease the transition process and achieve an effective learning process, and we provide pointers in this direction.", "authors": [{"name": "Quintin Cutts", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Ethel Tshukudu", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}], "tags": ["transfer", "syntax", "semantics", "programming language concepts", "java", "python", "code comprehension"]}, {"title": "Seamless Integration of NoSQL class into the Database Curriculum", "link": "https://dl.acm.org/doi/10.1145/3341525.3387399", "abstract": "Since NoSQL emerged a decade ago, it has rapidly gained popularity and has been actively incorporated into data management solutions for big data. This phenomenon brings positive challenges to accommodate NoSQL topics in the database curriculum. This paper presents our experience of teaching a NoSQL class over the last three years. The course uses a comprehensive teaching methodology that combines lectures, hands-on assignments, projects, and research-based approaches. The methodology aims at both students' in-depth learning and seamless integration of NoSQL topics into the database curriculum. The teaching methodology and course contents are detailed. Student evaluations of teaching, assessment results, success stories, and challenges and lessons learned are presented.", "authors": [{"name": "Suneuy Kim", "affiliation": "San Jos\u00e9 State University, San Jose, CA, USA"}], "tags": ["curriculum", "NoSQL", "databases", "education", "big data"]}, {"title": "CS in Schools: Developing a sustainable Coding Programme in Australian Schools", "link": "https://dl.acm.org/doi/10.1145/3341525.3387422", "abstract": "Digital technology is compulsory in schools in most states at most year levels in Australia. However, a recent survey of over 400 Australian schools in 2019 found that 96% have had difficulty hiring qualified technology teachers and 39% of schools have reduced the amount of technology education they offer. We have observed that there is a shortage of teachers who feel qualified to teach coding. To address this problem, we launched CS in Schools (see https://csinschools.com), a successful in-class professional development programme for teachers that helps schools build a robust digital technology capability in their students. Our programme matches pedagogy with content expertise, by matching a volunteer computing professional with a secondary school teacher, and helping that teacher develop their coding skills in the classroom over a six month period. This experience paper describes the approach we took in piloting our programme with 10 teachers in~8 schools who taught over 1,100 students in 2019. We also describe our current scale-up in 2020 to work with around 60 teachers, around 40 volunteers, over 25 schools, and more than 6,000 students. Our goal is to work with hundreds of schools in 2021.", "authors": [{"name": "Kristy Kendall", "affiliation": "Toorak College, Mount Eliza, VIC, Australia"}, {"name": "Selina Williams", "affiliation": "RMIT University, Melbourne, VIC, Australia"}, {"name": "Hugh E. Williams", "affiliation": "RMIT University, Melbourne, VIC, Australia"}], "tags": ["K-12 education", "broadening participation", "teacher professional development"]}, {"title": "Service-Learning for Web Technology: Observations from a Small Case Study", "link": "https://dl.acm.org/doi/10.1145/3341525.3387414", "abstract": "In the past academic year, we conducted an experiment at using service-learning in order to integrate learning of empathy and creativity into an undergraduate course on Web Technology. This was a small scale pilot project, conducted in collaboration with the service-learning team at our institute. In the project, students collaborated with WAI-NOT, a non-profit organization that develops an online platform for children with various kinds of (physical/mental) disabilities. The students developed new \"games\" for this platform, to teach the children basic computer skills (e.g., clicking, moving the mouse). Key in this project was the interaction between the students, the non-profit and the target audience. Due to the small size of the class, we did not conduct a quantitative evaluation of the project, but we do discuss the experiences and feedback from teachers, students and community.", "authors": [{"name": "Joost Vennekens", "affiliation": "KU Leuven, Sint-Katelijne-Waver, Belgium"}], "tags": ["computer science education", "experience report", "service-learning"]}, {"title": "Attitudinal Trajectories in an Online CS1 Class: Demographic and Performance Trends", "link": "https://dl.acm.org/doi/10.1145/3341525.3387429", "abstract": "In this research, we investigate the trajectory of attitudinal change towards computer science among students in an online CS1 class. We perform this investigation to address several trends in modern computer science education. First, as computer science increasingly becomes a required class for all majors, how do students' first experiences with the subject impact their attitudes? Second, as online education continues to expand, how does enrolling in CS1 online specifically affect audiences that may be marginalized in both CS classes and in online learning environments, such as women and underrepresented minorities? Third, can we intervene to improve attitudes towards computer science, especially among those marginalized audiences? In this research, we poll students in an online for-credit CS1 class four times to observe the change in their attitudes towards computer science over time and intervene with some students to try to improve their perception of computer science. We find that attitudes towards computer science improve with initial exposure, that women's attitudes towards CS begin less positive but follow the same trajectory, and that mid-semester regression in attitudes toward computer science may predict eventual struggles to perform well in the class.", "authors": [{"name": "Jasmine Suh", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Maria-Isabelle Dittamo", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Amber Ott", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "David A. Joyner", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Abby Thien", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Ben Engelman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Alysha Naran", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Lily Bernstein", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["computing attitudes", "CS1", "online learning"]}, {"title": "Design and Evaluation of a Collaborative Online Computational Thinking Course", "link": "https://dl.acm.org/doi/10.1145/3341525.3387388", "abstract": "For online courses to be an effective alternative to face-to-face courses, they must provide equivalent levels of interaction, engagement, supervision, and support. This paper analyzes and compares the experiences of students in face-to-face and online sections of the same introductory course taught by the same instructor. The course heavily utilizes team-based active learning, and effort was put into maintaining comparable group experiences in the online section. An analysis of student opinions and objective outcomes revealed only minor differences between the two sections. Notably, there were no statistically significant variations in students' overall grades, self reported confidence, or course evaluation ratings, indicating that high quality student experiences and outcomes can be achieved when migrating active learning to an online format.", "authors": [{"name": "Scott Rixner", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Rebecca Smith", "affiliation": "Rice University, Houston, TX, USA"}], "tags": ["active learning", "computational thinking", "online education"]}, {"title": "Crowdsourcing Content Creation for SQL Practice", "link": "https://dl.acm.org/doi/10.1145/3341525.3387385", "abstract": "Crowdsourcing refers to the act of using the crowd to create content or to collect feedback on some particular tasks or ideas. Within computer science education, crowdsourcing has been used -- for example -- to create rehearsal questions and programming assignments. As a part of their computer science education, students often learn relational databases as well as working with the databases using SQL statements. In this article, we describe a system for practicing SQL statements. The system uses teacher-provided topics and assignments, augmented with crowdsourced assignments and reviews. We study how students use the system, what sort of feedback students provide to the teacher-generated and crowdsourced assignments, and how practice affects the feedback. Our results suggest that students rate assignments highly, and there are only minor differences between assignments generated by students and assignments generated by the instructor.", "authors": [{"name": "Nea Pirttinen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["assignment creation", "teacher-generated content", "student-generated content", "assignment quality", "introduction to databases", "SQL", "crowdsourcing"]}, {"title": "ProgSnap2: A Flexible Format for Programming Process Data", "link": "https://dl.acm.org/doi/10.1145/3341525.3387373", "abstract": "In this paper, we introduce ProgSnap2, a standardized format for logging programming process data. ProgSnap2 is a tool for computing education researchers, with the goal of enabling collaboration by helping them to collect and share data, analysis code, and data-driven tools to support students. We give an overview of the format, including how events, event attributes, metadata, code snapshots and external resources are represented. We also present a case study to evaluate how ProgSnap2 can facilitate collaborative research. We investigated three metrics designed to quantify students' difficulty with compiler errors - the Error Quotient, Repeated Error Density and Watwin score - and compared their distributions and ability to predict students' performance. We analyzed five different ProgSnap2 datasets, spanning a variety of contexts and programming languages. We found that each error metric is mildly predictive of students' performance. We reflect on how the common data format allowed us to more easily investigate our research questions.", "authors": [{"name": "Kelly Rivers", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Austin Cory Bart", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Luke Gusukuma", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "David Babcock", "affiliation": "York College, York, PA, USA"}, {"name": "Thomas W. Price", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Ayaan M. Kazerouni", "affiliation": "Virginia Tech, Blackburg, VA, USA"}, {"name": "David Hovemeyer", "affiliation": "Johns Hopkins University, Baltimore, MD, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Ge Gao", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["data sharing", "compiler error metrics", "programming process data"]}, {"title": "Compigorithm: An Interactive Tool for Guided Practice of Complexity Analysis", "link": "https://dl.acm.org/doi/10.1145/3341525.3387390", "abstract": "It is essential that students learn to write code that is not only correct, but also efficient. To that end, algorithmic complexity analysis techniques, such as Big-O analysis, are typically an important part of courses on algorithm design. However, students often hold fundamental misconceptions about how Big-O analysis works. This paper presents Compigorithm, an interactive tool for helping students practice Big-O analysis. Compigorithm scaffolds student learning by breaking down the analysis process into five concrete steps and walking students through each of these steps. When students make mistakes, they are provided with automated hints and allowed to re-attempt until they get the correct answer. Compigorithm was piloted in an introductory algorithms course and evaluated using a controlled experiment. The experimental group trained by analyzing algorithms using Compigorithm, while the control group analyzed the same algorithms by hand. On the subsequent post-test, the experimental group outperformed the control group by a significant margin (p < 0.00001; Cohen's d = 0.84).", "authors": [{"name": "Scott Rixner", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Rebecca Smith", "affiliation": "Rice University, Houston, TX, USA"}], "tags": ["algorithmic complexity", "educational tools", "interactive learning"]}, {"title": "A Dynamic Visualisation of the DES Algorithm and a Multi-faceted Evaluation of Its Educational Value", "link": "https://dl.acm.org/doi/10.1145/3341525.3387386", "abstract": "There is a general consensus that visualisations can be effective in teaching, compared to traditional modes of instruction. Encryption offers an interesting case study for the application of visualisation, largely due to its complex and abstract nature. This paper is concerned with the presentation of a dynamic and interactive visualisation of the Data Encryption Standard (DES) algorithm, and the evaluation of its educational value. Its design was motivated by the desire to seamlessly bridge the gap between algorithm formulation and its visualisation, and to provide instruction in context. As DES is an archetypal cryptographic algorithm, a visualisation of its operations on confusion and diffusion is a key requirement. The educational value of the visualisation is expressed in terms of four facets: its educational effectiveness, its presentation as an interactive and dynamic graphical object, its perceived usefulness by students and its completeness as a learning resource. Educational effectiveness was assessed in terms of the pre-test and post-test scores of a treatment group and a control group of students, whereas the other three facets were evaluated through a survey taken by the treatment group. An analysis of the results of the evaluation of the visualisation confirms its educational value.", "authors": [{"name": "Rachid Anane", "affiliation": "Coventry University, Coventry, United Kingdom"}, {"name": "Mohammad T. Alshammari", "affiliation": "University of Ha'il, Ha'il, Saudi Arabia"}], "tags": ["empirical evaluation", "animation", "instruction", "encryption"]}, {"title": "Using DevContainers to Standardize Student Development Environments: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/3341525.3387424", "abstract": "In computer science classes it can be a challenge to ensure every student has a functioning development environment. Running pre-configured servers that provide students with remote access can help mitigate most of these setup issues, however they can also introduce new limitations of their own. We propose using DevContainers to overcome the local machine setup difficulties for the students. DevContainers allow the instructional staff to provision a development environment (a Docker image) with all the correct software versions pre-configured. This development environment can be used on any major OS through Docker. Moreover, through this DevContainer configuration, Microsoft Visual Studio Code can integrate seamlessly with the Docker container to provide an experience for the user that is practically the same as working on the native OS. This work examines the value of employing a DevContainer setup in an Advanced Data Structures course and provides details for those interested in using DevContainers in their courses.", "authors": [{"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Sander Valstar", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "William G. Griswold", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["virtual machine", "student development environments", "DevContainer", "docker"]}, {"title": "UserFlow: A Tool for Visualizing Fine-grained Contextual Analytics in Teaching Documents", "link": "https://dl.acm.org/doi/10.1145/3341525.3387410", "abstract": "The adoption of innovative online teaching tools in Computer Science (CS) courses provides opportunities for data-informed instruction as a regular teaching practice in CS classrooms. In this paper, we present a design study for an interactive visual analytics dashboard, called UserFlow, that supports feedback collection from teaching documents and assists instructors in interpreting feedback and acting on it in a timely manner. The design study is conducted with eight domain experts comprising of four teaching instructors, two learning analytics (LA) experts and two instructional designers. UserFlow offers a set of novel visualization designs for presenting the four interleaving aspects of document engagement (i.e., annotations, document traversal path, reading/focus time and student information). We evaluated UserFlow in an undergraduate computer science course with over 700 students. Our results demonstrate the usefulness and need for such a tool for CS educators to inform teaching approaches and courseware improvement.", "authors": [{"name": "Michael Wybrow", "affiliation": "Monash University, Melbourne, VIC, Australia"}, {"name": "Bernd Meyer", "affiliation": "Monash University, Melbourne, VIC, Australia"}, {"name": "Shaveen Singh", "affiliation": "Monash University, Melbourne, VIC, Australia"}], "tags": ["annotations", "digital education", "dashboards", "learning analytics", "engagement"]}, {"title": "Step Tutor: Supporting Students through Step-by-Step Example-Based Feedback", "link": "https://dl.acm.org/doi/10.1145/3341525.3387411", "abstract": "Students often get stuck when programming independently, and need help to progress. Existing, automated feedback can help students progress, but it is unclear whether it ultimately leads to learning. We present Step Tutor, which helps struggling students during programming by presenting them with relevant, step-by-step examples. The goal of Step Tutor is to help students progress, and engage them in comparison, reflection, and learning. When a student requests help, Step Tutor adaptively selects an example to demonstrate the next meaningful step in the solution. It engages the student in comparing \"before\" and \"after\" code snapshots, and their corresponding visual output, and guides them to reflect on the changes. Step Tutor is a novel form of help that combines effective aspects of existing support features, such as hints and Worked Examples, to help students both progress and learn. To understand how students use Step Tutor, we asked nine undergraduate students to complete two programming tasks, with its help, and interviewed them about their experience. We present our qualitative analysis of students' experience, which shows us why and how they seek help from Step Tutor, and Step Tutor's affordances. These initial results suggest that students perceived that Step Tutor accomplished its goals of helping them to progress and learn.", "authors": [{"name": "Rui Zhi", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Thomas W. Price", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Wengran Wang", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Yudong Rao", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Samiha Marwan", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Ge Gao", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["worked examples", "thematic analysis", "adaptive feedback", "next-step hints"]}, {"title": "Effects of Competitive and Cooperative Classroom Response Systems on Quiz Performance and Programming Skills in a Video Game Programming Course", "link": "https://dl.acm.org/doi/10.1145/3341525.3387393", "abstract": "Classroom response systems (CRSs) are tools that allow all students to respond to teacher questions individually through a software platform during lectures. Some widely used CRSs, like Kahoot or Classtime, include gamified designs that transform teacher questions into competitive or cooperative challenges in an attempt to make their usage more enjoyable. A question arises as to what differences may exist in the effects of competitive and cooperative gamified CRSs on student's test performance and learning. This study aims to analyze those differences in the context of a pre-graduate programming university course, which introduces students to video game programming. We present a quasi-experiment with 69 students assigned to two experimental and one control group. We examine between-group differences in CRSs' quiz results and programming skills when using competitive, cooperative, and neutral CRSs. An initial analysis suggests that quiz results are significantly lower when using competitive CRSs, in contrast with cooperative and neutral CRSs, but that there are no significant differences in the programming skill acquisition, considering practical assignments, as well as midterm and final examinations.", "authors": [{"name": "Jos\u00e9-Javier Mart\u00ednez-Herr\u00e1iz", "affiliation": "Universidad de Alcal\u00e1, Alcal\u00e1 de Henares, Madrid, Spain"}, {"name": "Luis de-Marcos", "affiliation": "Universidad de Alcal\u00e1, Alcal\u00e1 de Henares, Madrid, Spain"}, {"name": "Adri\u00e1n Dom\u00ednguez", "affiliation": "Universidad de Alcal\u00e1, Alcal\u00e1 de Henares, Madrid, Spain"}], "tags": ["clickers", "cooperation", "gamification", "Classtime", "competition", "Kahoot"]}, {"title": "Insights from Student Solutions to SQL Homework Problems", "link": "https://dl.acm.org/doi/10.1145/3341525.3387391", "abstract": "We analyze the submissions of 286 students as they solved Structured Query Language (SQL) homework assignments for an upper-level databases course. Databases and the ability to query them are becoming increasingly essential for not only computer scientists but also business professionals, scientists, and anyone who needs to make data-driven decisions. Despite the increasing importance of SQL and databases, little research has documented student difficulties in learning SQL. We replicate and extend prior studies of students' difficulties with learning SQL. Students worked on and submitted their homework through an online learning management system with support for autograding of code. Students received immediate feedback on the correctness of their solutions and had approximately a week to finish writing eight to ten queries. We categorized student submissions by the type of error, or lack thereof, that students made, and whether the student was eventually able to construct a correct query. Like prior work, we find that the majority of student mistakes are syntax errors. In contrast with the conclusions of prior work, we find that some students are never able to resolve these syntax errors to create valid queries. Additionally, we find that students struggle the most when they need to write SQL queries related to GROUP BY and correlated subqueries. We suggest implications for instruction and future research.", "authors": [{"name": "Geoffrey L. Herman", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Abdussalam Alawini", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Seth Poulsen", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Liia Butler", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}], "tags": ["SQL", "online assessment", "database education"]}, {"title": "Achievement Goal Orientation Profiles and Performance in a Programming MOOC", "link": "https://dl.acm.org/doi/10.1145/3341525.3387398", "abstract": "It has been suggested that performance goals focused on appearing talented (appearance goals) and those focused on outperforming others (normative goals) have different consequences, for example, regarding performance. Accordingly, applying this distinction into appearance and normative goals alongside mastery goals, this study explores what kinds of achievement goal orientation profiles are identified among over 2000 students participating in an introductory programming MOOC. Using Two-Step cluster analysis, five distinct motivational profiles are identified. Course performance and demographics of students with different goal orientation profiles are mostly similar. Students with Combined Mastery and Performance Goals perform slightly better than students with Low Goals. The observations are largely in line with previous studies conducted in different contexts. The differentiation of appearance and normative performance goals seemed to yield meaningful motivational profiles, but further studies are needed to establish their relevance and investigate whether this information can be used to improve teaching.", "authors": [{"name": "Kukka-Maaria Polso", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Hellas", "affiliation": "Aalto University, Helsinki, Finland"}, {"name": "Heta Tuominen", "affiliation": "University of Turku & University of Helsinki, Turku, Finland"}, {"name": "Petri Ihantola", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["achievement goal orientation", "MOOC", "CS1", "performance"]}, {"title": "What are We Asking our Students? A Literature Map of Student Surveys in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3387383", "abstract": "Many research papers pull data from student surveys. But are those surveys well designed? Are the questions used validated? Are the results comparable across studies? What exactly are we asking our students? In this work, we performed a systematic literature map of the past 15 years of papers in the three main conferences sponsored by the ACM Special Interest Group on Computer Science Education: International Computing Education Research (ICER), Innovation and Technology in Computer Science Education (ITiCSE), and the Special Interest Group on Computer Science Education Technical Symposium (SIGCSE). We search for all papers referring to student surveys or questionnaires. Out of 1313 papers analyzed, 42 papers referred to surveys containing general questions applicable to many or all computer science students. Our analysis showed that many papers were using surveys to extract similar types of information, such as demographics, prior experience or motivation to study computer science. However, the questions were being asked in different ways, using different scales, thus making it difficult or impossible to compare survey results between studies. We further found that while some studies based their questions on well-validated surveys, or at least shared their questions for possible later validation, approximately half of the papers found neither validated their questions, nor shared them to allow for post-hoc validation.", "authors": [{"name": "Brian Harrington", "affiliation": "University of Toronto Scarborough, Scarborough, ON, Canada"}, {"name": "Angela Zavaleta Bernuy", "affiliation": "University of Toronto Scarborough, Scarborough, ON, Canada"}], "tags": ["literature map", "questionnaires", "validation", "questions", "surveys"]}, {"title": "Are Variable, Array and Object Diagrams in Java Textbooks Explanative?", "link": "https://dl.acm.org/doi/10.1145/3341525.3387368", "abstract": "Diagrams in textbooks are an essential tool to explain concepts. Aneffective diagram should help a novice learner to build a runnable mental model, increase recall, and improve problem-solving skills. Richard Mayer and others suggest that to have an impact on the readers' mental model, diagrams must document two major features:system topology andcomponent behavior. The presence of these two features makes a diagramexplanative. In this paper, we propose a framework of what constitutesexplanative diagram for variables, arrays, and objects based on Mayer et al.'s definition. We used our framework to analyze diagrams of variables, arrays, and objects in 15 commonly used introductory Java textbooks to ascertain how these concepts are illustrated, annotated and explained. Our results show that none of the textbooks provide what we would consider as explanative diagrams. We conclude with an assessment of diagrams in introductory programming textbooks and present open questions for further study.", "authors": [{"name": "Manuel A. P\u00e9rez-Qui\u00f1ones", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Syeda Fatema Mazumder", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Celine Latulipe", "affiliation": "University of Manitoba, Winnipeg, Canada"}], "tags": ["explanative diagrams", "visual representations", "Java", "programming concepts", "CS1 textbooks"]}, {"title": "Assessing CS1 Design Skills with a String Manipulation Task", "link": "https://dl.acm.org/doi/10.1145/3341525.3387382", "abstract": "This study explores novice programmers' abilities to design and code a string manipulation task in C after one semester of tertiary instruction. String manipulation is an important skill for novice programmers to master as most applications deal with text and/or interact with the user. The analysis shows most novice programmers (88%) were able to sketch their own programming plan to print a word in pyramid style. 53% of students chose to control the printing letter by letter (character level) and 32% updated and printed the word as a whole (string level). However only 6% used string functions, apart from strlen() and strcmp(), to implement their plan. This indicated a low level of transfer from their most recent class activity which focused on the C string library. As expected, not all succeeded to correctly implement their plan: 56% were correct at character level and 63% at string level, resulting in 49% of the whole cohort completing the task. Their code has been thoroughly analysed to identify implementation issues, and logical, syntax and plan errors are reported and discussed.", "authors": [{"name": "Cruz Izu", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Amali Weerasignhe", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["string manipulation", "code design", "iteration", "novice programmers"]}, {"title": "The Effect of a Spatial Skills Training Course in Introductory Computing", "link": "https://dl.acm.org/doi/10.1145/3341525.3387413", "abstract": "Spatial skills have been associated with STEM success for decades. Research has shown that training spatial skills can have a positive impact on outcomes in STEM domains such as engineering, mathematics and physics; however -- despite some promising leads -- evidence for the same relationship with computing is limited. This research describes a spatial skills intervention delivered to around 60 students in introductory computing courses who tested with relatively low spatial skills, mirroring a well established intervention developed and used by Sorby in engineering for over 20 years. This study has shown correlation between spatial skills and computing assessment marks which was observed both before and after training took place, suggesting that as the students' spatial skills are improved via training, so too is their computing assessment. Students who took part in the intervention also showed a significant increase in class rankings over their peers. The authors consider this to be a good indication that spatial skills training for low spatial skills scorers starting a computing degree is of value.", "authors": [{"name": "Jack Parkinson", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Quintin Cytts", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}], "tags": ["introductory computing", "training course", "spatial skills", "intervention"]}, {"title": "Can Students' Spatial Skills Predict Their Programming Abilities?", "link": "https://dl.acm.org/doi/10.1145/3341525.3387380", "abstract": "Spatial abilities have been shown to have high predictability in students' success in STEM related fields. Studies have also shown that there is a correlation between students' spatial skills and programming abilities, but it is unknown how well students' prior spatial abilities can predict students' introductory programming abilities at the end of the semester. During this study we used a multinomal logistic regression to create a predictive model to predict students' introductory programming abilities at the end of the semester. The highest model accuracy (64.6%) was obtained when accounting for students' prior programming abilities, prior spatial skills, socioeconomic status, and three factors regarding students' attitudes towards computing. It was also found that when looking at the predictability of each individual variable, students' prior spatial ability had the highest predictability (56.6% accuracy) when compared to all other variables.", "authors": [{"name": "Jian Zhang", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Ryan Bockmon", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "Jonathan Gratch", "affiliation": "Texas Woman's University, Denton, TX, USA"}, {"name": "Stephen Cooper", "affiliation": "University of Nebraska - Lincoln, Lincoln, NE, USA"}, {"name": "Mohsen Dorodchi", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["spatial skills", "CS1", "attitudes", "replication", "intervention"]}, {"title": "Evaluating the Effectiveness of Flipped Teaching in a Mixed-Ability CS1 Course", "link": "https://dl.acm.org/doi/10.1145/3341525.3387395", "abstract": "First year programming-courses attract a diverse crowd of Computer Science (CS) and non-CS students who bring mixed-abilities and different learning needs to the classroom. Teaching the same material to such mix of students poses an interesting challenge to the instructor. This study aims to evaluate the extent to which the flipped teaching enhances students learning in such courses. The evaluation is based on three components: 1) a survey of 25 Likert questions completed by 46 students, 2) class average grade and pass rate, and 3) student ratings of the course. Findings of the survey indicate that the overall student impression on the flipped model is very positive in terms of classroom learning and engagement as well as self-directed learning. We found no significant difference between the opinions of different student populations, specifically good programmers versus weak programmers, and CS students versus non-CS students. Course ratings and grades were compared against older offerings of the same course taught by the same instructor who was using traditional lecturing. Results confirms the survey findings and show improved class grades, pass-rates, and student satisfaction.", "authors": [{"name": "Abdallah Mohamed", "affiliation": "University of British Columbia-Okanagan, Kelowna, BC, Canada"}], "tags": ["active learning", "programming for all", "CS1", "flipped classroom"]}, {"title": "Towards a Competence Model for the Novice Programmer Using Bloom's Revised Taxonomy - An Empirical Approach", "link": "https://dl.acm.org/doi/10.1145/3341525.3387419", "abstract": "This work addresses the demand of an empirically developed competence model for programming as challenging core tier of computer science curricula. The presented paper investigates the application of Bloom's revised taxonomy for learning, teaching and assessing by Anderson and Krathwohl for the specification of currently used learning objectives in programming education. Accordingly, 129 module descriptions of beginner level programming courses from 35 German universities constitute the sample. Learning goals are evaluated using Mayring's qualitative content analysis. In addition, seven guided interviews with computer science professors as experts are categorized according to Mayring's qualitative analysis method. As a result, a model comprised of deductively-inductively built cognitive categories is proposed, proving the adequacy of Bloom's revised taxonomy for computer science and programming in particular. The categories depict current operationalized learning objectives and cognitive competencies of novice programmers, as well as additional non-cognitive competencies. Thus, the results can help classify competency levels and support the didactic design of introductory programming classes and assessment. This research also constitutes a basis for the development of a measuring instrument of programming competence in the future.", "authors": [{"name": "Natalie Kiesler", "affiliation": "Goethe University, Frankfurt am Main, Germany"}], "tags": ["qualitative content analysis", "Bloom's revised taxonomy", "programming competence", "competence model"]}, {"title": "Comparing Small Programs for Equivalence: A Code Comprehension Task for Novice Programmers", "link": "https://dl.acm.org/doi/10.1145/3341525.3387425", "abstract": "Novice programmers should develop program comprehension skills as they learn to code so that they are able both to read and reason about code created by others, and to reflect on their code when writing, debugging or extending it. This work takes a little-explored perspective on the comprehension of small programs by asking students to decide if two code segments are equivalent or not in terms of carrying out the same computation. A variation of Euclid's algorithm, that extends the greatest common divisor calculation to more than two numbers, was chosen for this work, as it has an adequate level of complexity and its semantics are not obvious. Four program transformations of the original code were developed: two transformations were equivalent and two were not. 73.5% of students were able to identify correctly the four options and 75.5% provided good insights on the equivalent program flow to justify their choices. The overall task has a SOLO mean of 3.19, which indicates code equivalence is a suitable and approachable task to analyse program execution at novice level. In addition, the data analysis suggests that students' code-reading abilities beyond basic tracing may be generally underestimated and we should investigate how to bridge the potential gap between reasoning about program execution and extracting its purpose.", "authors": [{"name": "Cruz Izu", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Claudio Mirolo", "affiliation": "University of Udine, Udine, Italy"}], "tags": ["program execution", "code comprehension", "semantic equivalence", "novice programmers"]}, {"title": "If They Build It, Will They Understand It? Exploring the Relationship between Student Code and Performance", "link": "https://dl.acm.org/doi/10.1145/3341525.3387379", "abstract": "The computer science community has struggled to assess student learning via Scratch programming at the primary school level (ages 7-12). Prior work has relied most heavily on artifact (student code/projects) analysis, with some attempts at one-on-one interviews and written assessments. In this paper, we explore the relationship between artifact analysis and written assessments. Through this study of a large-scale introductory computing implementation, we found that for students who had code in their projects, student performance on specific questions on the written assessments is only very weakly correlated to specific attributes of final projects typically used in artifact analysis as well as attributes we use to define candidate code (r < 0.2, p < 0.05). In particular, the correlation is not nearly strong enough to serve as a proxy for understanding.", "authors": [{"name": "Diana Franklin", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Jean Salac", "affiliation": "University of Chicago, Chicago, IL, USA"}], "tags": ["artifact analysis", "scratch", "primary education", "assessment"]}, {"title": "Error Message Readability and Novice Debugging Performance", "link": "https://dl.acm.org/doi/10.1145/3341525.3387384", "abstract": "It is well known that programming error messages can be notoriously difficult for novices to understand, hampering progress and leading to frustration. In response, researchers have explored various approaches for enhancing such messages, yet results from this active strand of research are currently mixed. Direct comparisons of results between studies is challenging as these typically investigate different kinds of message enhancements and report results using different metrics. In addition, many prior studies have involved code writing tasks. In such cases, not all students encounter the same errors and messages, and it is difficult to isolate the time spent interpreting messages and resolving errors from the time spent writing code. In this research, we explore the effects of presenting novices with compiler error messages designed using the most recent collection of published guidelines - specifically, more easily readable, short, positive messages containing resolution hints. To accurately determine the time and effort required to read and respond to the messages, we utilise a debugging task where all students are presented the same code and therefore encounter the same errors. We present results of a randomised controlled experiment (n > 700) which shows that, compared to standard error messages, the messages we tested resulted in significantly shorter debugging times and higher self-reported scores of message usefulness for students in the very early stages of learning a new language.", "authors": [{"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "James Prather", "affiliation": "Abilene Christian University, Abilene, TX, USA"}, {"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["programming error messages", "CS1", "debugging", "error message enhancement", "novice programmers", "compiler error messages", "readability"]}, {"title": "An Open-Source, API-Based Framework for Assessing the Correctness of Code in CS50", "link": "https://dl.acm.org/doi/10.1145/3341525.3387417", "abstract": "We present check50, an open-source, extensible tool for assessing the correctness of students' code that provides a simple, functional framework for writing checks as well as an easy-to-use API that abstracts away common tasks, among them compiling and running programs, providing their inputs, and checking their outputs. As a result, check50 has allowed us to provide students with immediate feedback on their progress as they complete an assignment while also facilitating automatic and consistent grading, allowing teaching staff to spend more time giving tailored, qualitative feedback. We have found, though, that since introducing check50 in 2012 in CS50 at Harvard, students have begun to perceive the course's programming assignments as more time-consuming and difficult than in years past. We speculate that the feedback that check50 provides prior to students' submission of each assignment has compelled students to spend more time debugging than they had in the past. At the same time, students' correctness scores are now higher than ever.", "authors": [{"name": "Brian Yu", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Chad Sharp", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Jelle van Assema", "affiliation": "University of Amsterdam, Amsterdam, Netherlands"}, {"name": "Kareem Zidane", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["feedback", "autograding", "assessment"]}, {"title": "CompareCFG: Providing Visual Feedback on Code Quality Using Control Flow Graphs", "link": "https://dl.acm.org/doi/10.1145/3341525.3387362", "abstract": "The quality of the code impacts the cost of its maintenance, yet \"code quality\" is often not given attention in introductory programming courses, perhaps due to the difficulty of providing automated code quality feedback. We have been exploring how to provide automated feedback on complexity, one aspect of code quality. We have developed CompareCFG that provides feedback based on control flow graphs (CFGs). It generates visualisations of students' submissions and provides the means for a student to compare the CFG of their own code with CFGs of less complex submissions, helping to support their understanding of code complexity. CompareCFG also provides actionable feedback by indicating specific issues in a submission that can reduce its complexity. We evaluated CompareCFG in a pilot study. We found it provides useful feedback to participants that helped them reduce the complexity of their code. CompareCFG offers a convenient way to provide programming students with automated visual feedback on code quality.", "authors": [{"name": "Lucy Jiang", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Robert Rewcastle", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Ewan Tempero", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["CFG", "software maintenance", "automatic assessment tools", "control flow graph", "code quality"]}, {"title": "Selection of Code Segments for Exclusion from Code Similarity Detection", "link": "https://dl.acm.org/doi/10.1145/3341525.3394987", "abstract": "When student programs are compared for similarity, certain segments of code are always sure to be similar. Some of these segments are boilerplate code -- public static void main String [] args and the like -- and some will be code that was provided to students as part of the assessment specification. The purpose of this working group is to explore what other code is expected to be reasonably common in student assessments, and should therefore be excluded from similarity checking. The answers will clearly vary with programming language, and perhaps with level of assessment item. Working group members will collect assessment submissions from their own or their colleagues' students, and it is hoped that these submissions will together encompass a wide variety of assessment tasks in a wide variety of programming languages. The working group aims to deliver clear guidelines as to what code can reasonably be excluded from automatic code similarity detection in various circumstances. It also aims to deliver a summary of what sort of code lecturers tend to provide for students when setting an assigned task, and why they provide that code.", "authors": [{"name": "Oscar Karnalim", "affiliation": "University of Newcastle, Ourimbah, Australia"}, {"name": " Simon", "affiliation": "University of Newcastle, Ourimbah, Australia"}, {"name": "Amey Karkare", "affiliation": "Indian Institute of Technology, Kanpur, India"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, VIC, Australia"}, {"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Renee McCauley", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Michael Liut", "affiliation": "University of Toronto, Mississauga, ON, Canada"}, {"name": "Ilir Dema", "affiliation": "University of Toronto, Mississauga, ON, Canada"}], "tags": ["plagiarism", "collusion", "code similarity detection", "academic integrity"]}, {"title": "Capturing and Characterising Notional Machines", "link": "https://dl.acm.org/doi/10.1145/3341525.3394988", "abstract": "A notional machine is a pedagogic device to assist the understanding of some aspect of programs or programming. It is typically used to support explaining a programming construct, or the user-understandable semantics of a program. For example, a variable is like a box with a label, and assignment copies or moves a value into that box. This working group will capture examples of notional machines from actual pedagogical practice, as expressed in textbooks (or other teaching materials) or used in the classroom. We will interview at least 30 teachers about their experience with, and perceptions of, the use of notional machines in teaching. Using the interviews, we will work on devising and refining a form to characterise essential features of notional machines. We will also attempt to relate them to each other to describe potential learning sequences or progressions. The working group report will contain descriptions of notional machines used at different levels in education, in different countries, by many teachers. Capturing and Characterising Notional Machines Sally Fincher, Johan Jeuring, Craig S Miller Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). ITiCSE 2020,,Trondheim, Norway \u00a9 2020 Copyright held by the owner/author(s). 978-1-4503-0000-0/18/06...$15.00 https://doi.org/10.1145/1234567890 The resulting catalogue of notional machines will allow a teacher to select a machine for a particular use, permit comparison between them, and provide a starting point for further categorization and analysis of notional machines. Additionally, we will make more theoretical explorations. We will explore a variety of presentational formats, examining what is necessary and what superfluous; we will look for dimensions of comparison and will examine how notional machines are instantiated across the discipline. We argue that the creation and use of notional machines is potentially a signature pedagogy for computing [1] and that creating and using notional machines represents a certain level of pedagogic sophistication that might be an indicator of pedagogic content knowledge (PCK).", "authors": [{"name": "Benedict du Boulay", "affiliation": "University of Sussex, Brighton, United Kingdom"}, {"name": "Arto Hellas", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Janice L. Pearce", "affiliation": "Berea College, Berea, KY, USA"}, {"name": "Sally Fincher", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Peter Donaldson", "affiliation": "University of Glasgow, Glasgow, Scotland Uk"}, {"name": "Craig S. Miller", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Johan Jeuring", "affiliation": "Utrecht University, Utrecht, Netherlands"}, {"name": "Colleen Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Matthias Hauswirth", "affiliation": "USI Universit\u00e0 della Svizzera italiana, Lugano, Switzerland"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Felienne Hermans", "affiliation": "Leiden University, Leiden, Netherlands"}, {"name": "Andreas M\u00fchling", "affiliation": "Kiel University, Kiel, Germany"}], "tags": ["PCK", "notional machines", "signature pedagogies", "pedagogical practice"]}, {"title": "Toward High Performance Computing Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3394989", "abstract": "High Performance Computing (HPC) is the ability to process data and perform complex calculations at extremely high speeds. Current HPC platforms can achieve calculations on the order of quadrillions of calculations per second with quintillions on the horizon. The past three decades witnessed a vast increase in the use of HPC across different scientific, engineering and business communities, for example, sequencing the genome, predicting climate changes, designing modern aerodynamics, or establishing customer preferences. Although HPC has been well incorporated into science curricula such as bioinformatics, the same cannot be said for most computing programs. This working group will explore how HPC can make inroads into computer science education, from the undergraduate to postgraduate levels. The group will address research questions designed to investigate topics such as identifying and handling barriers that inhibit the adoption of HPC in educational environments, how to incorporate HPC into various curricula, and how HPC can be leveraged to enhance applied critical thinking and problem solving skills. Four deliverables include: (1) a catalog of core HPC educational concepts, (2) HPC curricula for contemporary computing needs, such as in artificial intelligence, cyberanalytics, data science and engineering, or internet of things, (3) possible infrastructures for implementing HPC coursework, and (4) HPC-related feedback to the CC2020 project.", "authors": [{"name": "Rajendra K. Raj", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Cruz Izu", "affiliation": "The University of Adelaide, Adelaide, SA, Australia"}, {"name": "Shahram Rahimi", "affiliation": "Mississippi State University, Mississippi State, MS, USA"}, {"name": "Sherif G. Aly", "affiliation": "The American University in Cairo, Cairo, Egypt"}, {"name": "Michael P. Robson", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Juan Chen", "affiliation": "National University of Defense Technology, Changsha, Hunan, China"}, {"name": "Steven I. Gordon", "affiliation": "The Ohio State University, Columbus, OH, USA"}, {"name": "Nasser Giacaman", "affiliation": "The University of Auckland, Auckland, New Zealand"}, {"name": "Carol J. Romanowski", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Sheikh Ghafoor", "affiliation": "Tennessee Tech, Cookeville, TN, USA"}, {"name": "Neena Thota", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}], "tags": ["computer science education", "HPC", "iticse working group", "high performance computing", "contemporary computing education", "high-performance computing curricula"]}, {"title": "Assessing How Pre-requisite Skills Affect Learning of Advanced Concepts", "link": "https://dl.acm.org/doi/10.1145/3341525.3394990", "abstract": "Students often struggle with advanced computing courses, and comparatively few studies have looked into the reasons for this. It seems that learners do not master the most basic concepts, or forget them between courses. If so, remedial practice could improve learning, but instructors rightly will not use scarce time for this without strong evidence. Based on personal observation, program tracing seems to be an important pre-requisite skill, but there is yet little research that provides evidence for this observation. To investigate this, our group will create theory-based assessments on how tracing knowledge affects learning of advanced topics, such as data structures, algorithms, and concurrency. This working group will identify relevant concepts in advanced courses, then conceptually analyze their pre-requisites and where an imagined student with some tracing difficulties would encounter barriers. The group will use this theory to create instructor-usable assessments for advanced topics that also identify issues caused by poor pre-requisite knowledge. These assessments may then be used at the start and end of advanced courses to evaluate to what extent students' difficulties with the advanced course originate from poor pre-requisite knowledge.", "authors": [{"name": "Ben Blamey", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Filip Str\u00f6mb\u00e4ck", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}, {"name": "Greg L. Nelson", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Violetta Lonati", "affiliation": "Universit\u00e0 degli Studi di Milano, Milano, Italy"}, {"name": "Mattia Monga", "affiliation": "Universit\u00e0 degli Studi di Milano, Milano, Italy"}, {"name": "Ibrahim Albluwi", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Karen H. Jin", "affiliation": "University of New Hampshire, Manchester, NH, USA"}, {"name": "Ari Korhonen", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Bonnie MacKellar", "affiliation": "St John's University, Queens, NY, USA"}, {"name": "Marjahan Begum", "affiliation": "Copenhagen Business School, Copenhagen, Denmark"}], "tags": ["computer science education", "tracing", "data structures and algorithms", "concurrency"]}, {"title": "Developing a Model Augmented Reality Curriculum", "link": "https://dl.acm.org/doi/10.1145/3341525.3394991", "abstract": "This paper outlines the objectives of the working group on developing a model Augmented Reality curriculum for higher education. We motivate the need for the model curriculum by the growing Augmented Reality industry and subsequent demand for trained professionals. While the industry is growing, the educational offers that train the required skills remain limited and fragmented. The working group will address this challenge by surveying the state of the art in Augmented Reality education are reviewing available data on industry requirements. Based on the results, the group will develop a new model Augmented Reality curriculum. The working group will also develop future work recommendations for the design of teaching materials and integration of Augmented Reality in computing curricula.", "authors": [{"name": "Mikhail Fominykh", "affiliation": "Molde University College, Molde, Norway"}, {"name": "Andrey Karsakov", "affiliation": "ITMO University, Saint Petersburg, Russian Fed."}, {"name": "Aljosa Smolic", "affiliation": "Trinity College Dublin, Dublin, Ireland"}, {"name": "Mark Billinghurst", "affiliation": "University of South Australia, Adelaide, Australia"}, {"name": "Eleni Mangina", "affiliation": "University College Dublin, Dublin, Ireland"}, {"name": "Judith Molka-Danielsen", "affiliation": "Molde University College, Molde, Norway"}, {"name": "Marius Preda", "affiliation": "Institute MINES-Telecom, Paris, France"}, {"name": "Fridolin Wild", "affiliation": "Oxford Brookes University, Oxford, United Kingdom"}, {"name": "Lisandra S. Costiner", "affiliation": "Merton College, University of Oxford, Oxford, United Kingdom"}, {"name": "Ian Pollock", "affiliation": "California State University East Bay, Hayward, CA, USA"}, {"name": "Ralf Klamma", "affiliation": "RWTH Aachen University, Aachen, Germany"}], "tags": ["augmented reality", "software engineering", "curriculum"]}, {"title": "Cloud Computing Curriculum: Developing Exemplar Modules for General Course Inclusion", "link": "https://dl.acm.org/doi/10.1145/3341525.3394992", "abstract": "The accelerating evolution and adoption of cloud computing services is generating increased demand for job skills in this domain. To address this growth, higher education has identified the importance of cloud computing courses that are practical and compatible with this rapidly changing field. This is especially relevant as cloud services are becoming common computing resources for many new computational approaches and advanced subjects such as machine learning and data science. The ability to incorporate specific components of cloud computing teaching content into a variety of courses has become important. However, the lack of availability of high-quality teaching material that is easy to integrate, when teaching rapidly evolving cloud-related concepts continues to be a challenge for instructors. This working group will try to address this challenge.", "authors": [{"name": "Majd Sakr", "affiliation": "Carnegie Mellon University, Pittsburg, PA, USA"}, {"name": "Narine Hall", "affiliation": "Champlain College, Burlington, VT, USA"}, {"name": "Sajid Nazir", "affiliation": "Glasgow Caledonian University, Glasgow, Scotland Uk"}, {"name": "Joshua Adams", "affiliation": "Saint Leo University, Saint Leo, FL, USA"}, {"name": "Lee Stott", "affiliation": "Microsoft, Seattle, WA, USA"}, {"name": "Carmen Taglienti", "affiliation": "Northeastern University, North Andover, MA, USA"}, {"name": "Derek Foster", "affiliation": "University of Lincoln, Lincoln, England UK"}, {"name": "Sara Hooshangi", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Laurie White", "affiliation": "Google LLC, Seattle, WA, USA"}, {"name": "Karthik Kuber", "affiliation": "York University, Toronto, ON, Canada"}, {"name": "Brian Hainey", "affiliation": "Glasgow Caledonian University, Glasgow, Scotland Uk"}, {"name": "Mark Hills", "affiliation": "East Carolina University, Greenville, NC, USA"}], "tags": ["education", "computer science", "cloud computing", "curriculum development"]}, {"title": "Meaningful Assessment at Scale: Helping Instructors to Assess Online Learning", "link": "https://dl.acm.org/doi/10.1145/3341525.3394993", "abstract": "Increased opportunities for online learning, including growth in Massive Open Online Courses (MOOCS), are changing our education environments, increasing access and flexibility in how students engage with education. However, there are still many questions regarding how we engage with students effectively in these environments, in particular through assessment.\nAssessment within on-line environments can vary, based on the technology available and pedagogical approach. However, forms of assessment in these environments must support additional constraints, in that they must scale to support potentially massive cohorts, minimal learner interaction, and range of learner intention. At the same time, there are unique opportunities due to the accessibility of rich learning analytics and learner data. Understanding effective assessment and assessment feedback at scale has broader implications as we cope with growing CS enrolments, and interest in technology.\nThis working group aims to explore assessment within CS MOOCs, as a specific example of the on-line learning environment, identifying engaging and effective assessment exemplars that reflect both the constraints and opportunities of this context. The working group will (1) identify and survey existing literature on formative and summative assessment of Computer Science MOOCS, (2) clarify how assessment may be considered meaningful for students, (3) identify key features of assessment that assist an instructor in evaluating the nature and quality of learning, and (4) identifying case studies that explore both innovative and effective assessments to provide a rich experience for students and also detailed feedback to teaching staff. The outcome of this working group will be a report.", "authors": [{"name": "Alistair Morrison", "affiliation": "University of Glasgow, Glasgow, United Kingdom"}, {"name": "Katrina Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Rebecca Vivian", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Christine Liebe", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Vangel V. Ajanovski", "affiliation": "Ss. Cyril and Methodius University in Skopje, Republic of North Macedonia, Macedonia"}, {"name": "Miranda Parker", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Nickolas Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["pedagogy", "feedback", "learning analytics", "assessment", "MOOCs", "online learning"]}, {"title": "Reviewing Computing Education Papers", "link": "https://dl.acm.org/doi/10.1145/3341525.3394994", "abstract": "Peer review is a mainstay of academic publication - indeed, it is the peer-review process that provides much of the publications' credibility. This working group is examining the ways peer review is used in various computing education venues and will use this examination to articulate community standards for peer review in this discipline.", "authors": [{"name": "Brian Harrington", "affiliation": "University of Toronto, Scarborough, Toronto, ON, Canada"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}, {"name": "Robert McCartney", "affiliation": "University of Connecticut, Storrs, CT, USA"}, {"name": "Lauri Malmi", "affiliation": "Aalto University, Espoo, Finland"}, {"name": "Kate Sanders", "affiliation": "Rhode Island College, Providence, RI, USA"}, {"name": "Marian Petre", "affiliation": "The Open University, Milton Keynes, United Kingdom"}, {"name": "Cornelia Connolly", "affiliation": "National University of Ireland Galway, Galway, Ireland"}, {"name": "Marzieh Ahmadzadeh", "affiliation": "University of Georgia, Athens, GA, USA"}, {"name": "J\u00e9r\u00e9mie Lumbroso", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Monica M. McGill", "affiliation": "Knox College and CSEdResearch.org, Galesburg, IL, USA"}, {"name": "Joseph Maguire", "affiliation": "University of Glasgow, Glasgow, Scotland Uk"}, {"name": "Sally Hamouda", "affiliation": "Rhode Island College, Providence, RI, USA"}], "tags": ["peer review", "computing education"]}, {"title": "Developing Competency Statements for Computer Science Curricula: The Way Ahead", "link": "https://dl.acm.org/doi/10.1145/3341525.3394995", "abstract": "This Working Group aims to take the current approved Computer Science curricula document, CS2013, and redevelop it into competency statements. The CC2020 project has designed and built a prototype of a visualization tool to compare and contrast current computing curricula. Three basic approaches were taken to portray the base data that will be used for the tool: the first being expert-defined competencies, the second based on mining, and the third based on expert-defined knowledge areas. The visualization tool takes competency statements from each of the current approved computing curricula and visually represents them. Using competency to frame curricula and describe educational outcomes in computing is not new. Since the CC2005 report was published several additional curricula have appeared and the information technology, information systems, and software engineering communities have developed three approaches to defining computing competency in the context of developing their curricula reports. In future the CC2020 report advocates that all new curricula will be written as competency statements. Currently the CS2013 curricula is expressed in learning outcomes rather than the competency statements, so it is essential to be able to demonstrate Computer Science curricula in these new terms to accommodate the new direction and demonstrate Computer Science in the new visualization tool.", "authors": [{"name": "Tony Clear", "affiliation": "Auckland University of Technology, Auckland, New Zealand"}, {"name": "Justyna Szynkiewicz", "affiliation": "Nord University, Bodo, Norway"}, {"name": "Francesco Maiorana", "affiliation": "Kansas State University, Manhattan, KS, USA"}, {"name": "Charles Reidesel", "affiliation": "University of Nebraska-Lincoln, Lincoln, NE, USA"}, {"name": "Thea Charles", "affiliation": "Seigel Family Endowment, New York, NY, USA"}, {"name": "Arnold Pears", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Abhijat Vichare", "affiliation": "Consultant, Pune, India"}, {"name": "Francois Pitt", "affiliation": "University of Toronto, Toronto, OR, Canada"}, {"name": "Mirela Gutica", "affiliation": "British Columbia Institute of Technology, Vancouver, BC, Canada"}, {"name": "Stephen Frezza", "affiliation": "Gannon University, Eire, PA, USA"}, {"name": "Alison Clear", "affiliation": "Eastern Institute of Technology, Auckland, New Zealand"}, {"name": "Barry Lunt", "affiliation": "Brigham Young University, Provo, UT, USA"}], "tags": ["cc2020", "computer science", "computing curricula", "competency"]}, {"title": "Integrating Computing into K-16 Education: Scaffolding Teacher and Student Learning in STEM Disciplines", "link": "https://dl.acm.org/doi/10.1145/3341525.3393961", "abstract": "The increasing role of computation in today's society requires us to go beyond computer science courses to integrating computational tools and practices within disciplinary contexts. However, we know little about what integration looks like in primary, secondary, and university classrooms. In this panel, we share perspectives on the importance of developing knowledge of computation in a digitized world and how it could be integrated within disciplinary context. In particular, we will discuss what embedding computation looks like at the elementary, secondary, and university level and how it can support disciplinary learning.", "authors": [{"name": "Tor Ole Odden", "affiliation": "University of Oslo, Oslo, Norway"}, {"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}, {"name": "Cathrine Wahlstr\u00f8m Tellefsen", "affiliation": "University of Oslo, Oslo, Norway"}, {"name": "Elisa Nadire Caeli", "affiliation": "Aarhus University, Copenhagen, Denmark"}], "tags": ["K-12", "higher education", "computational thinking"]}, {"title": "ACM Taskforce Efforts on Computing Competencies for Undergraduate Data Science Curricula", "link": "https://dl.acm.org/doi/10.1145/3341525.3393962", "abstract": "The ACM Data Science Taskforce was established in 2017 by the ACM Education Council and tasked with articulating the role of computing discipline-specific contributions to the emerging field of data science. This taskforce is seeking to define what the computing contributions are to this multidisciplinary field, in order to provide guidance for computer science or similar departments offering data science programs of study at the undergraduate level. This panel session will provide an update of the work of the ACM Data Science Taskforce and will engage the ITiCSE international community in this effort. Panelists are members of the taskforce and will report on version 2 of a draft report released Fall 2019, and the activities to-date, including a summary of data science curricular efforts, as well as the current articulation of computing competencies. This session should be of interest to all conference attendees, but especially faculty developing bachelors-level curricula in Data Science.", "authors": [{"name": "Paul M. Leidig", "affiliation": "Grand Valley State University, Allendale, MI, USA"}, {"name": "Lillian Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["data science", "curriculum"]}, {"title": "Learning Theoretical Computing from the Mathematical Impossibility Results of the CS Curriculum", "link": "https://dl.acm.org/doi/10.1145/3341525.3393986", "abstract": "In this paper, we present a novel technique to systematically introduce questions of computability and algorithmic complexity in the curricula of the early years of Computer Science degrees. We propose to start from those results of impossibility that are already included in the curriculum of CS-geared mathematics courses, and around these classical impossibility theorems, we identify motivating and interesting theoretical computing questions. We provide a helpful list of impossibility results and motivating problems, and we analyze how and where they could be introduced in the CS mathematics curriculum. We also provide a preliminary evaluation of the effectiveness of the proposed technique to demonstrate that the introduction of theoretical computing questions from impossibility results could increase students' academic results in theoretical computing subjects and mathematics subjects of the CS curriculum.", "authors": [{"name": "Rafael del Vado V\u00edrseda", "affiliation": "Universidad Complutense de Madrid, Madrid, Spain"}], "tags": ["mathematics", "impossibility", "computability", "logic", "complexity"]}, {"title": "DIY Smart Home: The Development of an Exemplary Internet of Things Infrastructure for Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3393987", "abstract": "The generic term smart home describes among other things the increase of quality of life, security and reduction of energy consumption in our homes and workplaces through automated processes. These processes enable educators to work up realistic and tangible aspects of computing science using everyday examples. Programming, networks, communication protocols, web design and development, electrical engineering, data science, CAD and even project management can be combined with smart home in terms of content. For this reason, we have used open source tools to develop a cost-effective infrastructure that combines the above-mentioned aspects in a single kit. This kit is based on various in-house developed sensors and actuators based on the ESP8266, a Raspberry Pi as the central unit and Node-RED as the framework for linking the hardware. This hardware can be connected without writing code or previous knowledge, enables a quick experience of success while offering much potential for internal differentiation in teaching.", "authors": [{"name": "Tobias Stuckenberg", "affiliation": "Paulus School Oldenburg, Oldenburg, Germany"}, {"name": "Ira Diethelm", "affiliation": "University of Oldenburg, Oldenburg, Germany"}, {"name": "Anatolij Fandrich", "affiliation": "University of Oldenburg, Oldenburg, Germany"}], "tags": ["computer science education", "IoT", "internet of things", "smart home", "ESP8266", "Node-RED"]}, {"title": "Encouraging Student Participation in Online Tutorials: A Tutor's Perspective", "link": "https://dl.acm.org/doi/10.1145/3341525.3393991", "abstract": "This paper will present an ongoing project to identify elements of best practice for the delivery of online synchronous tutorials. The authors have been involved with the delivery of online synchronous sessions for several years, observing both the role of the student and the session host. Both the student and the session host play their part in the success of the synchronous session. Therefore, it is imperative for the session host to be equipped with the necessary tools and techniques to deliver a synchronous session which maximizes the learning, participation and enjoyment of the student attendees.", "authors": [{"name": "Bobby Law", "affiliation": "Glasgow Caledonian University & The Open University Scotland, Glasgow & Edinburgh, United Kingdom "}, {"name": "Iain D. Lambie", "affiliation": "Glasgow Caledonian University & The Open University Scotland, Glasgow & Edinburgh, United Kingdom "}], "tags": ["e-learning", "synchronous communication", "distance learning"]}, {"title": "Coding and Music Creation in a Multi-Agent Environment", "link": "https://dl.acm.org/doi/10.1145/3341525.3393993", "abstract": "This paper reports on an extension of NetLogo designed to enable immediate, visual-based creation of multi-voice music at the level of notes, motifs, and phrases. The extension, NetMusic, uses the NetLogo interface as a visual sketchpad and configurable application programming interface for multi-voice music making. Student coders compose music by learning to use, modify, and create NetLogo procedures. A curricular module, taught during several weeks of a small introductory computer science course for students with no background in programming and centered on multi-agent simulation, used music composition to engage students in music creation via coding. In this report we focus on the the tool and curriculum, concluding with preliminary response from students in the course.", "authors": [{"name": "Siv Disa Anderson", "affiliation": "Independent Contractor, Annandale, NY, USA"}, {"name": "Sven Anderson", "affiliation": "Bard College, Annandale, NY, USA"}], "tags": ["computer science education", "steam", "netlogo", "music"]}, {"title": "Fun Maths for All Game Development Students", "link": "https://dl.acm.org/doi/10.1145/3341525.3393992", "abstract": "We present an approach for teaching maths to game development undergraduates from a wide variety of backgrounds. We discuss the concepts behind an introductory maths course, its assessment and put forward some preliminary results on a practical implementation.", "authors": [{"name": "Diogo de Andrade", "affiliation": "Lus\u00f3fona University, Lisboa, Portugal"}, {"name": "Nuno Fachada", "affiliation": "Lus\u00f3fona University, Lisboa, Portugal"}], "tags": ["mathematics", "python", "game development"]}, {"title": "A feedback-oriented platform for deliberate programming practice", "link": "https://dl.acm.org/doi/10.1145/3341525.3393996", "abstract": "In many areas it has been shown that performing carefully selected and focused tasks with increasing levels of difficulty, and receiving immediate feedback, accelerates the learning process. This is known as deliberate practice and it is undoubtedly applicable to programming. However, it is hard to implement: monitoring the behavior of a subject and quickly giving useful feedback requires resources that are typically scarce (instructors, teaching assistants, etc.). Furthermore, grading and giving feedback are typically combined into a single activity, leading to results that are not necessarily useful for improvement. In this teaching tip and courseware note we describe the platform that we developed to address this problem by enabling students to perform programming assignments while following the guidelines of deliberate practice.", "authors": [{"name": "Pedro Salazar", "affiliation": "Universidad de los Andes, Bogota, Colombia"}, {"name": "Mario S\u00e1nchez", "affiliation": "Universidad de los Andes, Bogota, Colombia"}], "tags": ["programming", "feedback", "python", "automated grading", "deliberate practice"]}, {"title": "Notes on Using Google Colaboratory in AI Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3393997", "abstract": "We discuss our experiences using Google Colaboratory (Colab), a hosted version of Jupyter Notebooks, in undergraduate artificial intelligence (AI) courses at two universities. Colab was designed for AI and data science researchers to share reproducible experiments and explanations of techniques, but we have also found it well suited to classroom use. The primary benefit is that it provides students computational resources sufficient to run modern AI techniques interactively, and avoids students needing to separately configure software packages and dependencies, since they can run notebooks shared by the instructor. We briefly outline two of our notebooks, for teaching deep learning with Tensorflow, and reinforcement learning with OpenAI Gym.", "authors": [{"name": "Mark J. Nelson", "affiliation": "American University, Washington, DC, USA"}, {"name": "Amy K. Hoover", "affiliation": "New Jersey Institute of Technology, Newark, NJ, USA"}], "tags": ["Google colab", "notebook interface", "Jupyter notebook", "AI education"]}, {"title": "Auditing the COMPAS Recidivism Risk Assessment Tool: Predictive Modelling and Algorithmic Fairness in CS1", "link": "https://dl.acm.org/doi/10.1145/3341525.3393998", "abstract": "We present an assignment in which students apply predictive modelling to build a model that predicts re-arrest of criminal defendants using real data. Students assess the algorithmic fairness of a real-world criminal risk assessment tool (RAT), and reproduce results from an impactful story in ProPublica and a 2018 Science Advances paper. Students explore different measures of algorithmic fairness, and adjust the model they build to satisfy the false positive parity measure.\nOur target audience is students in Introduction to Data Science courses that do not require previous computing experience, as well as students in standard CS1 courses. We advocate for teaching predictive modelling in CS1. To facilitate the teaching of predictive modelling in CS1, we provide tutorials on predictive modelling and algorithmic fairness, in both Python and Java; we also provide a simplified \"Learning Machine\" API in those languages.\nOur approach enables teaching algorithmic fairness and predictive modelling more generally very early in the students' computing career. A companion website with all our teaching materials is available at https://PredictiveModellingEarly.github.io/.", "authors": [{"name": "Claire S. Lee", "affiliation": "Princeton University, Princeton , NJ, USA"}, {"name": "Jeremy Du", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Michael Guerzhoy", "affiliation": "Princeton University, University of Toronto, & Li Ka Shing Knowledge Institute, Princeton, NJ, USA "}], "tags": ["data science", "predictive modelling", "algorithmic fairness", "CS1"]}, {"title": "Towards Flexible and Extensible Git-based Course Management with RepoBee", "link": "https://dl.acm.org/doi/10.1145/3341525.3393999", "abstract": "RepoBee is an open source tool that helps teachers to use Git effectively in teaching. Use of version control systems has been growing in popularity, with more teachers adopting the technology, or planning to in the future. However, systems like Git are challenging to use and were not designed with teaching in mind. In response, tools have emerged that attempt to reduce the complexity of this task for teachers, whilst providing students with an authentic experience of using a version control system. We have developed RepoBee to provide common features a teacher might need: the ability to distribute assignments to students; gather their efforts for grading; run grading tasks and other analytics; as well enabling support for peer review. In sharing our solution with other academics, it has become clear that there is a wide range of needs. This in turn has influenced our design philosophy for RepoBee such that it should be flexible and extensible, in order to be used in a broad range of teaching contexts and can be extended to accommodate course specific needs. This paper aims to draw attention to three particular aspects that distinguish RepoBee: support for different course models; support for course specific features; and support for multiple repository hosting platforms.", "authors": [{"name": "Simon Lars\u00e9n", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}, {"name": "Richard Glassey", "affiliation": "KTH Royal Institute of Technology, Stockholm, Sweden"}], "tags": ["version control systems", "course management", "Git/Github"]}, {"title": "Tools for Analysis of Curricula Evolution Across Computer Science Curriculum Guidelines", "link": "https://dl.acm.org/doi/10.1145/3341525.3393995", "abstract": "Many educational institutions strive for constant evolution of computer science (CS) study programs to parallel the global technological development. As developments pick-up speed and curricula reconstructions happen ever more often, the institutions can not wait for an entire generation of students to have finished, to be able to assess the results and analyze the process of transition. This paper presents a set of tools as part of an open-sourced system for curriculum management, useful in the analysis of the evolution of curricula across time, tracking both structural and topical changes in reference to computing curricula guidelines.", "authors": [{"name": "Vangel Ajanovski", "affiliation": "Ss. Cyril and Methodius University in Skopje, Skopje, Macedonia"}], "tags": ["study information systems", "reference curricula guidelines", "curriculum analysis", "curriculum mapping"]}, {"title": "Plethora of Skills: Play-Learn-Practice-Invent-Share", "link": "https://dl.acm.org/doi/10.1145/3341525.3393984", "abstract": "In today's world, students have to analyze and solve problems creatively, collaborate with teammates, communicate clearly, adapt rapidly to new technologies, and deal with a flood of information. This forces education systems to adopt new teaching methods and tools. Many are already adopting the required changes, but there is still a long way to go. In 2017, researchers at the Weizmann Institute of Science, together with the Center for Educational Technologies (CET), joined forces to address this challenge and created Plethora, an online game-like environment, which helps improve complex problem-solving through algorithmic thinking skills. The authors are part of this endeavor and its implementation.", "authors": [{"name": "Smadar Szekely", "affiliation": "Private, Tel-Aviv, Israel"}, {"name": "Judith Gal-Ezer", "affiliation": "The Open University of Israel, Tel-Aviv, Israel"}, {"name": "Rami Marelly", "affiliation": "Private, Tel-Aviv, Israel"}], "tags": ["educational games", "problem solving", "algorithmic thinking", "computational thinking"]}, {"title": "Applying Pair Programming Practice in the Improvement of Software Design Skills, in an Undergraduate Course", "link": "https://dl.acm.org/doi/10.1145/3341525.3393985", "abstract": "Teaching design patterns has proved to be a complicated topic in software engineering courses. Practitioners require mastering this technique in order to develop higher-quality programs. As part of the experiment, we used pair programming practice to solve this problem in an undergraduate classroom activity, aiming that finding the best pair configuration based on previous programming skills and character affinity, would lead us to better results. The experiment was divided into five rounds, increasing the complexity every each exercise. Afterward, we compared the score obtained by the students in the mid-term exam with last semester scores, resulting in an improvement of 0.37 points with the previous semester, which was 12.3% of the highest score (3 points).", "authors": [{"name": "Hernan Quintana", "affiliation": "Universidad de Lima, Lima, Peru"}, {"name": "Billy Grados", "affiliation": "Universidad de Lima, Lima, Peru"}], "tags": ["design patterns", "software engineering education", "pair programming"]}, {"title": "Keeping Students Occupied with the Course Contents After Leaving the Classroom", "link": "https://dl.acm.org/doi/10.1145/3341525.3393990", "abstract": "Keeping students engaged with the course contents between classes is challenging. Although out-of-class activities are used to address this challenge, they have limited impacts on improving student's engagement outside the classroom because of the lack of real-time feedback and progress updates. For this reason, these types of activities are less appealing to the current generation of students who feel the pull of instant gratification more intensely. This paper presents a mobile learning system, named Dysgu, which enables students to work on their out-of-class activities, compare their progress with the rest of the class, and improve their self-efficacy. The goal of Dysgu is to better engage students with out-of-class activities and reduce procrastination in those activities. By using Dysgu, faculty can facilitate and monitor learning even after the students leave the classroom and intervene early when students fall behind their peers.", "authors": [{"name": "Muztaba Fuad", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Lynn Zubov", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Monika Akbar", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}], "tags": ["homework", "mobile learning", "learning path", "personalization"]}, {"title": "Extending a CPU Design Project to Reinforce Learning", "link": "https://dl.acm.org/doi/10.1145/3341525.3393988", "abstract": "A computer systems course using the \"Nand2Tetris\" materials has been taught in our institution for two years. Assignment work is based around extensions or variations of the projects provided. The challenge described in this paper was to develop a variation of project 5 that supported student's authentic learning of basic CPU design within time constrains and fitted with existing course materials. A 2-phase CPU design assignment was created that asked students to complete first the CPU design from the text book, and then complete an alternative CPU which replaced the D-register with a small register bank; each phase was weighted equally. The second phase reinforced the concepts learned in the first phase by making students identify the significant overlaps when decoding and generating control bits, as well as being exposed to hardware design choices at register level. Note files for project 5 can be easily sourced from MOOC resources, while this is not the case for the second phase as this was our own CPU design. Other alternative designs are possible, which can be used in rotation for this course. We could also ask students in advance CA courses to design and code their own extension of the Hack machine.", "authors": [{"name": "Cruz Izu", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["cheating preemption", "instruction decoding", "CPU design", "assessment"]}, {"title": "eduFUSE a Visualizer for User-Space File Systems", "link": "https://dl.acm.org/doi/10.1145/3341525.3393989", "abstract": "File systems are a significant topic in operating systems courses and a good understanding of them is important for software developers in order to use them well. One way to give students hands-on experience with the file system layers is via simulation, another way is to create a real file system which works with the operating system. Both of these approaches have difficulties. A user-space file system such as FUSE can solve these difficulties. We have developed eduFUSE, a system which provides a GUI interface to user-space file systems on both Linux and macOS. Not only does this system provide improved visualization and easier information filtering than the standard text based user-space file system tools, but it also provides both a C interface and an improved Java interface so that students can use whichever language they prefer to build a realistic file system in a safe environment. Students with experience of standard FUSE rated the GUI interface well above that of the traditional system.", "authors": [{"name": "Luke Thompson", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Joel Clarke", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Robert Sheehan", "affiliation": "The University of Auckland, Auckland, New Zealand"}], "tags": ["visualization", "pedagogical tool", "user-space file system"]}, {"title": "Impacts of Block-based Programming on Young Learners' Programming Skills and Attitudes in the Context of Smart Environments", "link": "https://dl.acm.org/doi/10.1145/3341525.3394000", "abstract": "In computer programming education, showing the application of programming in reality has become a common way to introduce it to young learners. However, we have limited knowledge of how best to utilize smart objects and environments to foster the learners' programming skills and develop a positive attitude towards programming. My research focuses on filling this gap by presenting an educational block-based programming tool that brings together the hot topic of smart environments and the visual programming paradigm. The end goal is empirically investigating the impacts of state-of-the-art smart technologies together with block-based programming on the learners' programming skills and attitudes towards programming in non-formal learning environments.", "authors": [{"name": "Mazyar Seraj", "affiliation": "University of Bremen & German Research Center for Artificial Intelligence (DFKI), Bremen, Germany "}], "tags": ["attitudes towards programming", "programming skills", "smart homes", "young learners", "block-based programming", "experiment"]}, {"title": "Teaching Computational Thinking with Interventions Adapted to Undergraduate Students' Proficiency Levels", "link": "https://dl.acm.org/doi/10.1145/3341525.3394001", "abstract": "Adapting a teaching intervention to the proficiency level of a student improves learning when teaching programming. The goal of this PhD-project is to discover to what extent this holds when teaching computational thinking (CT) skills. I will first determine how teaching interventions can be adapted to CT proficiency levels, and then examine their effectiveness through a series of longitudinal studies.", "authors": [{"name": "Imke de Jong", "affiliation": "Utrecht University, Utrecht, Netherlands"}], "tags": ["adaptation", "proficiency level", "higher education", "interventions", "computational thinking"]}, {"title": "The Design, Development, and Evaluation of a Novel Computer-based Competency Assessment of Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/3341525.3394002", "abstract": "There is a long-standing question in the computational thinking (CT) literature regarding CT assessment methods. To address this, this project takes a multidisciplinary approach to design, develop, and evaluate a novel computer-based competency assessment of CT. Several pilot studies have suggested promising results regarding its reliability; the evaluation phase will be conducted using a psychometric model and data mining techniques to investigate item properties and extract performance patterns.", "authors": [{"name": "Rina P.Y. Lai", "affiliation": "University of Cambridge, Cambridge, United Kingdom"}], "tags": ["formative assessment", "parson's problem", "computer-based assessment", "computational problems", "computational thinking"]}, {"title": "Investigating the Socially Shared Regulation of Learning in the Context of Programming Education", "link": "https://dl.acm.org/doi/10.1145/3341525.3394003", "abstract": "Students' ability to control and act upon their cognitive, behavioral, motivational, and metacognitive process is known as Self-regulation of learning (SRL). It has proved to be an effective strategy for academic programming success. However, the understanding of how programming students regulate their learning collaboratively deserves further investigation. The objective of this thesis is to study this process and use the findings to support the development and validation of a Computer-Supported Collaborative Learning (CSCL) environment grounded on the regulation of learning principles.", "authors": [{"name": "Leonardo S. Silva", "affiliation": "University of Coimbra, Coimbra, Portugal"}], "tags": ["CS1", "socially shared regulation of learning", "introductory programming", "self-regulated learning", "CSCL"]}, {"title": "Using Spatio-Algorithmic Problem Solving Strategies to Increase Access to Data Structures", "link": "https://dl.acm.org/doi/10.1145/3341525.3394004", "abstract": "The substantive gender and racial gaps in spatial ability create unnecessary barriers to entry to STEM and computing fields [14,15]. Data structures courses in particular are difficult for those in underrepresented groups [8,12,13]. In Chemistry, this gender gap has been closed by teaching students both spatio-imagistic and spatio-analytic strategies to solving problems with diagrams. I seek to similarly close this gap in Data Structures by developing and evaluating further techniques for teaching data structures using diagrams.", "authors": [{"name": "Seth Poulsen", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}], "tags": ["diagrams", "access to computing", "data structures"]}, {"title": "A Comprehensive Analysis of Students' Experiences of Belonging to the CS Community", "link": "https://dl.acm.org/doi/10.1145/3341525.3394005", "abstract": "Developing a sense of belonging to the community in CS departments during the first year plays a vital role in students' retention decisions. This research plan outlines both belonging as a psychosocial construct framed within higher education and issues related to it in computer science. The fully mixed sequential dominant status design will be used to understand and quantify belonging from both the students' and faculty's perspective. Pedagogical actions to improve belonging will be studied and disseminated.", "authors": [{"name": "Sercan Erer", "affiliation": "Aalto University, Espoo, Finland"}], "tags": ["sense of belonging", "computer science education", "freshmen"]}, {"title": "Efficient Instructional Design of Programming Examples", "link": "https://dl.acm.org/doi/10.1145/3341525.3394006", "abstract": "This research is dedicated to the theory which underlies programming teaching through the worked examples. Today Computing Education Research (CER) has a lack of agreement on the efficiency of different methodologies applied in programming teaching. I investigate the influence of the following practical factors on learning: modality effect, segmentation effect, visualization, and self-explanation.", "authors": [{"name": "Albina Zavgorodniaia", "affiliation": "Aalto University, Espoo, Finland"}], "tags": ["programming teaching", "cognitive load", "worked examples"]}, {"title": "Frame-Based Novice Programming", "link": "https://dl.acm.org/doi/10.1145/3341525.3394007", "abstract": "As visual programming languages become more widespread and accessible, there is an increasing likelihood that students' first encounters with programming will be through manipulating blocks on a screen rather than typing text. Therefore, supporting the transition from block-based programming languages to general text-based languages will be important if they go on to more advanced programming studies. This work sets out to explore the user experience of Stride, the hybrid visual/text-based programming language and environment that has been designed for this transition.", "authors": [{"name": "Joe Dillane", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["{blackbox", "frame-based editing", "novice programming"]}, {"title": "The Impact of English Language on Non-Native English Speaking Students' Performance in Programming Class", "link": "https://dl.acm.org/doi/10.1145/3341525.3394008", "abstract": "The study focuses on investigating the impact of English on Non-native English speaking students' performance in computer programming class. Four related factors will be examined including English proficiency, knowledge of English computer terminology, understanding of English-based programming language keywords and the level of foreign language anxiety. Then, the study will apply machine learning techniques to identify students who are struggling in the programming class because of English language barriers.", "authors": [{"name": "Suad Alaofi", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["programming", "CS1", "non-native English students"]}, {"title": "Supporting Computer Science Teaching Beyond Syllabus: ICT for Cooperation and Reflection", "link": "https://dl.acm.org/doi/10.1145/3341525.3394009", "abstract": "Ensuring effective and up-to-date ways of teaching Computer Science (CS) at the pre-university level could ensure more relevant and higher quality education for future generations. The current situation is unclear and granulated, especially with computer science teachers' skills, methods, and relevance of topics that they teach. The research presented here aims to map skills that these teacher should have, understand the methods that are currently being used, understand reflection in classroom and collaboration. Ultimately we aim to include this new knowledge in an ICT tool that could aid CS teachers' practice.", "authors": [{"name": "Vojislav Vujo\u0161evi\u0107", "affiliation": "Norwegian University of Science and Technology, Trondheim, Norway"}], "tags": ["computer science education", "reflection", "teaching", "collaboration"]}, {"title": "The Importance of Embedding Meta Skills in Computer Science Graduate Apprenticeship Programmes", "link": "https://dl.acm.org/doi/10.1145/3341525.3394010", "abstract": "The purpose of this proposal is to investigate the need for the increased focus on developing transferable and meta skills of Graduate Apprentice Computer Science students and how the advancements of technology can impact the need for this. The Fourth Industrial Revolution is evolving at an exponential rate and is shaping industry and the workplace. The need for developing higher-order skills more explicitly, rather than through the hidden curriculum, will be investigated to ensure students are prepared for the constantly changing landscape of the workplace.", "authors": [{"name": "Tiffany Young", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": ["work-based learning", "employability", "transferable skills", "hidden curriculum", "graduate apprenticeship", "meta skills"]}]