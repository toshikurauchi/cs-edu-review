[{"title": "Changing the face of computing", "link": "https://dl.acm.org/doi/10.1145/2445196.2445198", "abstract": "The demand for computing professionals continues to grow, while women and minorities remain severely underrepresented at all levels. This opening SIGCSE 2013 keynote asks the crucial question \"What can WE do to change the face of computing?\" Several answers to this question will be provided in an unusual format with the following all-star cast. Each speaker will take five minutes to share 20 slides (which automatically advance every 15 seconds) to provide a stimulating presentation that ends with \"What can YOU do to change the face of computing?\"", "authors": [{"name": "Tracy Camp", "affiliation": "Colorado School of Mines, Golden, CO, USA"}], "tags": ["broadening participation"]}, {"title": "Principles, priorities, and pressures: personal and organizational", "link": "https://dl.acm.org/doi/10.1145/2445196.2445199", "abstract": "Early discussion regarding a talk at the First-Timers Luncheon highlighted the opportunity for an oldtimer to welcome first timers, encourage participation, and provide perspectives.\nThroughout my career, I have been privileged to be able to connect my personal career with activities for the broad, educational-computing community. This talk reflects on factors that have impacted both my own career and the evolution of broader groups --- particularly SIGCSE.\nSome general principles (e.g., inclusion, respect, service and social responsibility) seem clear, but even then circumstances present challenges and contradictions. Other principles (e.g., encouraging creative brainstorming, utilizing serendipity, listening to people) may be less obvious, but equally vital.\nMany have described the SIGCSE community as a professional family, and this talk seeks to celebrate that community as promotes a vision for fulfilling personal careers and continued organizational development.", "authors": [{"name": "Henry Walker", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["career perspectives"]}, {"title": "This much I know: thoughts on the past, present and future of educational programming tools", "link": "https://dl.acm.org/doi/10.1145/2445196.2445200", "abstract": "Tools to support and improve the learning and teaching of programming have been developed, used and researched for many years. Yet, sometimes it seems we are still faced with exactly the same problems we were trying to tackle a decade ago, or two decades ago.\nIn this talk I will look back on educational software tools, through very subjective blinkers, and present a highly personal slice of the history of some of these efforts. This is followed by an attempt to speculate about the future. Where my crystal balls fail me, I will simply stipulate wishes, requirements and challenges always much easier than presenting facts. Overall, I hope that some current trends in educational software tools emerge.", "authors": [{"name": "Michael K\u00f6lling", "affiliation": "University of Kent, Canterbury, United Kingdom"}], "tags": ["educational tools"]}, {"title": "Online education", "link": "https://dl.acm.org/doi/10.1145/2445196.2445201", "abstract": "There has been an explosion of interest in Online Education since Stanford made three computer science courses freely available in September 2011 and attracted 300,000 \"students.\" Yet Online Education has been around in various forms for thirty plus years. What accounts for the sudden inflection point sparked by these courses? Will the rush to put courses online prove to be (a) a flash in the pan, (b) the savior of higher education, (c) the death knell of universities as we know them, (d) all of the above?", "authors": [{"name": "John Etchemendy", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["online education"]}, {"title": "Unlocking the clubhouse: a decade later and now what?", "link": "https://dl.acm.org/doi/10.1145/2445196.2445202", "abstract": "In the decade since Unlocking the Clubhouse: Women in Computing (MIT Press, 2002) was published, educational institutions have coalesced around the mission of increasing women's participation in computing. Yet, despite the uptick of interest in computer science majors and the surge of technology shaping all aspects of our lives, the numbers of women majoring in computer science are still abysmally small. In this talk, I will further reflect on why this is the case, and make connections to the issues raised in Stuck in the Shallow End: Education, Race, and Computing---the underrepresentation in computer science of students of color. I will examine how underrepresentation in computing relates to the larger educational crisis in this country and issues we face as world citizens. This talk is part of an overarching mission to understand how inequality is produced in this country and the types of social action required to equalize opportunities and broaden participation in computing.", "authors": [{"name": "Jane Margolis", "affiliation": "University of California at Los Angeles, Los Angeles, CA, USA"}], "tags": ["broadening participation"]}, {"title": "Shifting the paradigm of african-american students from consumers of computer science to producers of computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445204", "abstract": "No abstract available.", "authors": [{"name": "Yolanda Rankin", "affiliation": "Spelman College, Atlanta, GA, USA"}, {"name": "Jakita Thomas", "affiliation": "Spelman College, Atlanta, GA, USA"}, {"name": "Quincy Brown", "affiliation": "Bowie State University, Bowie, MD, USA"}, {"name": "Leshell Hatley", "affiliation": "Uplift Inc., Washington D.C., USA"}], "tags": ["mobile applications", "middle school", "entrepreneurship", "game design", "african americans", "high school"]}, {"title": "ACM/IEEE-CS computer science curriculum 2013: reviewing the ironman report", "link": "https://dl.acm.org/doi/10.1145/2445196.2445206", "abstract": "For over 40 years, the ACM and IEEE-Computer Society have sponsored the creation of international curricular guidelines for undergraduate programs in computing. These Computing Curricula volumes are updated approximately every 10-year cycle, with the aim of keeping curricula modern and relevant. The next volume in the series, Computer Science 2013 (CS2013), is currently in progress. This panel seeks to update and engage the SIGCSE community in providing feedback on a complete draft of the CS2013 report (called the Ironman report), which will be released shortly before SIGCSE. Since the Ironman report is the penultimate draft of the CS2013 report, this panel is an especially important venue for starting the last round of feedback that will impact the final CS2013 curricular guidelines.", "authors": [{"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, California, USA"}, {"name": "Richard LeBlanc", "affiliation": "Seattle University, Seattle, Washington, USA"}, {"name": "Ernesto Cuadros-Vargas", "affiliation": "San Pablo Catholic University, San Pablo, Peru"}, {"name": "Steve Roach", "affiliation": "University of Texas at El Paso, El Paso, Texas, USA"}], "tags": ["computer science", "computing curricula 2013", "cs2013"]}, {"title": "Computer science education for social good", "link": "https://dl.acm.org/doi/10.1145/2445196.2445208", "abstract": "No abstract available.", "authors": [{"name": "Elizabeth Patitsas", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Michael Goldweber", "affiliation": "Xavier University, Cincinnati, OH, USA"}, {"name": "John Barr", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["computing for the social good", "introductory programming projects"]}, {"title": "Session details: Paper - data structures", "link": "https://dl.acm.org/doi/10.1145/3249851", "abstract": "No abstract available.", "authors": [{"name": "Jodi Tims", "affiliation": "Baldwin-Wallace University"}], "tags": []}, {"title": "Board game strategies in introductory computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445210", "abstract": "We present three open-ended freshman projects where students design and implement their own player strategies for well-established board games: Quoridor by Mirko Marchesi (Gigamic), San Francisco Cable Cars by Dirk Henn (Queen Games), and The aMAZEing Labyrinth by Max J. Kobbert (Ravensburger). Unlike modern computer games, most board games are inherently discrete. For example, the board tends to have a fixed number of allowed positions for the game pieces and every player performs a search through a finite number of possible moves to decide which move to take next. As such, designing a player strategy for a board game provides a very natural context for basic data structures, searching algorithms, and other concepts typically covered in a freshman-level computer science sequence. Furthermore, the project allows for continual improvements to one's strategy, targeting both beginners as well as more advanced programmers.", "authors": [{"name": "James E. Heliotis", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Sean P. Strout", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Ivona Bezakova", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["introductory computer science", "basic data structures and algorithms", "open-ended project", "learning in context"]}, {"title": "Integrating theoretical and empirical computer science in a data structures course", "link": "https://dl.acm.org/doi/10.1145/2445196.2445211", "abstract": "A significant rethinking of the computer science curriculum at a regional comprehensive university has led to a much tighter integration of discrete mathematics, data structures and algorithm analysis in a two-course Data Structures and Algorithms sequence. The courses are 4 semester hours each with two hour weekly labs. The new approach provides good support for a substantially increased emphasis on the reinforcement of theoretical constructs with empirical studies. The nature of the programming assignments has been particularly impacted by these efforts to reinforce the theoretical with the empirical. This article has a focus on the second course content and conduct, and how these modifications support a different approach to the course projects. This article also contains a report of favorable trends in completion percentages of the course under the new regime.", "authors": [{"name": "John W. Coffey", "affiliation": "University of West Florida, Pensacola, FL, USA"}], "tags": ["data structures", "algorithms", "empirical computer science", "theoretical computer science", "computer science education"]}, {"title": "Hunting high and low: instruments to detect misconceptions related to algorithms and data structures", "link": "https://dl.acm.org/doi/10.1145/2445196.2445212", "abstract": "We present the result of assessing first-year students' misconceptions related to algorithms and data structures. Our study confirms findings from previous small-scale studies but additionally broadens the scope of the topics and methods investigated. The evaluation of our experiments sheds light on dependencies between active and passive knowledge as well as on the instruments used; in particular, we conclude that there is no \"one size fits all\" instrument but that instruments should be selected depending on the topic at hand.", "authors": [{"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}, {"name": "Wolfgang Paul", "affiliation": "Technische Universit\u00e4t Dortmund, Dortmund, Germany"}], "tags": ["instruments", "misconceptions", "CS1/2"]}, {"title": "Session details: Paper - peer instruction", "link": "https://dl.acm.org/doi/10.1145/3249852", "abstract": "No abstract available.", "authors": [{"name": "Adrian German", "affiliation": "Indiana University"}], "tags": []}, {"title": "Experience report: CS1 in MATLAB for non-majors, with media computation and peer instruction", "link": "https://dl.acm.org/doi/10.1145/2445196.2445214", "abstract": "As computer programming is increasingly considered an essential literacy skill for all students, MATLAB courses in particular can play a role in introducing non-major students to a tool commonly used in many of their fields. This paper reports on our department's experience introducing a CS1 in MATLAB for non-majors course. The course assumed no prior programming experience and no training in linear algebra. Without linear algebra and without the ability to do domain-specific tailoring, we turned to Media Computation to contextualize the skills and motivate students. Media Computation is an approach to programming instruction that focuses on manipulation of visual, audio, and video media. The course design also featured the Peer Instruction lecture format, in which lectures are punctuated by frequent questions that students answer individually and in small groups. To our knowledge, this represents the first time that Media Computation and Peer Instruction pedagogies have been comprehensively adapted to a MATLAB course. This work shares selected materials designed for this course, and reports outcomes of the two terms the course has been offered.", "authors": [{"name": "Cynthia Bailey Lee", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["active learning", "MATLAB", "peer instruction", "CS1", "media computation", "clickers", "classroom response"]}, {"title": "How we teach impacts student learning: peer instruction vs. lecture in CS0", "link": "https://dl.acm.org/doi/10.1145/2445196.2445215", "abstract": "In this paper we look at the impact on student learning of how a class is taught. We compare 2 sections of a non-majors CS0 course offered in the same term, by the same instructor, covering the same content and utilizing the same book, labs and exams. One section was taught using standard lecture practices including lecture from slides, live coding and weekly quizzes. The other section was taught using the Peer Instruction (PI) method that actively engages students in constructing their own learning, instead of absorbing understanding from the instructor's explanations. Using a factorial analysis of variance, we find a main effect of instructional method on final exam grade (F (1,200) = 5.87, p = 0.016) with students in the Peer Instruction section scoring an average 5.7% higher than in the standard lecture practices section. We find no significant interactions among gender and grade or class status (lower or upper division) and grade. In a separate analysis, we also find the interaction of instructional method and high school background to be significant (F (1,147) = 7.48, p = 0.007). In discussion we consider the meaning of these results for educators and describe questions for future work.", "authors": [{"name": "Julian Parris", "affiliation": "University of California at San Diego, San Diego, CA, USA"}, {"name": "Jaime Spacco", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Beth Simon", "affiliation": "University of California at San Diego, San Diego, CA, USA"}], "tags": ["active learning", "student-centric learning", "peer instruction"]}, {"title": "Peer instruction in computing: the role of reading quizzes", "link": "https://dl.acm.org/doi/10.1145/2445196.2445216", "abstract": "Peer Instruction has recently gained interest in computing as an effective active learning pedagogy. The general focus of PI research has been on the in-class portion of PI: multiple choice questions and group discussion. Here, our focus is the reading quizzes completed by students for purposes of class preparation. These quizzes contain content questions but also ask for difficulties or confusion with course material. Consistent with expectations, we demonstrate that providing correct responses to quiz questions positively correlates with other course assessments. Somewhat counter-intuitively, we find that identifying confusions, noting problematic sections, or asking questions about the reading are also correlated with lab grades.", "authors": [{"name": "Leo Porter", "affiliation": "Skidmore College, Saratoga Springs, NY, USA"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Cynthia Bailey Lee", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["active learning", "peer instruction", "cs1", "clickers", "classroom response"]}, {"title": "Session details: Paper - student dynamics", "link": "https://dl.acm.org/doi/10.1145/3249853", "abstract": "No abstract available.", "authors": [{"name": "Suzanne Buchele", "affiliation": "Southwestern University"}], "tags": []}, {"title": "Incorporating metacognition into learning", "link": "https://dl.acm.org/doi/10.1145/2445196.2445218", "abstract": "Metacognition refers to one's knowledge about one's cognitive processes, and is often associated with intelligence. Students who have good metacognition skills typically perform better in their cognitive tasks. For the Fall and Winter semesters in 2011-12, we incorporated metacognition into our computer science courses (both undergraduate and graduate level courses), so that the student becomes more aware of his/her own understanding of the various topics of the course. In this paper, we describe how we incorporated metacognition into our courses, and present results from our analysis of the data that we have gathered over the various courses.", "authors": [{"name": "Murali Mani", "affiliation": "University of Michigan, Flint, Flint, MI, USA"}, {"name": "Quamrul Mazumder", "affiliation": "University of Michigan, Flint, Flint, MI, USA"}], "tags": ["active learning", "metacognition", "regression"]}, {"title": "Teaching computer science soft skills as soft concepts", "link": "https://dl.acm.org/doi/10.1145/2445196.2445219", "abstract": "In this paper, we describe a course on computer science and software engineering soft skills offered by the Department of Computer Science (CS) at the Technion -- Israel Institute of Technology. The course was developed in response to a call by the Israeli hi-tech industry to equip the Technion's CS graduates with such skills. This request actually reflects the industry's recognition of the importance of soft skills in software development processes, not only on the managerial level, but also among software team members. The paper describes the course and aims to deliver the message that like soft concepts of computer science (e.g., abstraction and readability), which cannot be imparted rigidly using formal definitions, soft skills too cannot be studied and taught formally and, rather, should be learned and grasped gradually over a certain period of time, based on students' engagement, active learning, and reflection. Furthermore, students must accept such soft skills as concepts that can neither be defined formally nor evaluated adequately.", "authors": [{"name": "Gadi Har-Shai", "affiliation": "Technion -- Israel Institute of Technology, Haifa, Israel"}, {"name": "Orit Hazzan", "affiliation": "Technion -- Israel Institute of Technology, Haifa, Israel"}], "tags": ["soft skills", "diversity", "ethics", "teamwork", "reflection", "communication", "time management"]}, {"title": "The relationship between belonging and ability in computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445220", "abstract": "Retaining students in computer science majors has been a persistent topic among computer science educators for almost two decades. Researchers have examined the relationship between belonging and engagement, self-efficacy, retention and persistence. Our quantitative research suggests that a student's sense of belonging is related to a student's perception of his ability, possibly more so than to actual performance. Our qualitative analysis further suggests that feelings of belonging can influence students' attitudes toward the mutability of ability, based on conversation and support from their academic and non-academic communities. Supporting a student's sense of belonging both to the discipline and their supportive communities can improve the academic resilience of computer science students, thus improving retention.", "authors": [{"name": "Tamara Floyd Smith", "affiliation": "Tuskegee University,, Tuskegee, AL, USA"}, {"name": "Nanette Veilleux", "affiliation": "Simmons College, Boston, MA, USA"}, {"name": "Joyous Crawford", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Rebecca Bates", "affiliation": "Minnesota State University, Mankato, Mankato, MN, USA"}, {"name": "Diane Jones", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Cheryl Allendoerfer", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["computer science education research", "belonging", "mixed-methods research"]}, {"title": "Session details: Paper - non-majors", "link": "https://dl.acm.org/doi/10.1145/3249854", "abstract": "No abstract available.", "authors": [{"name": "Debra Goldberg", "affiliation": "University of Colorado at Boulder"}], "tags": []}, {"title": "A data-centric introduction to computer science for non-majors", "link": "https://dl.acm.org/doi/10.1145/2445196.2445222", "abstract": "Relational databases and other collections of data are increasingly prevalent across a wide range of professions and disciplines. However, most courses on databases and data mining are designed for computer science majors, and students who wish to familiarize themselves with these topics must first take several prerequisite courses. This paper presents the design and implementation of a course for non-majors that provides a data-centric introduction to computer science. The course covers the basics of databases and data mining, and it also offers an introduction to programming and data visualization. By teaching a variety of computational methods for processing collections of data, the course provides students with tools they can use in their fields of study and future professions, while also exposing them to key concepts from computer science. The course has been well received by students from a variety of majors, and survey results suggest that it has had a positive impact on their perceptions of computer science.", "authors": [{"name": "David G. Sullivan", "affiliation": "Boston University, Boston, Massachusetts, USA"}], "tags": ["programming", "data visualization", "data mining", "non-majors", "curriculum", "relational databases", "computer science education"]}, {"title": "Demystifying networking: teaching non-majors via analogical problem-solving", "link": "https://dl.acm.org/doi/10.1145/2445196.2445223", "abstract": "The goals of a typical Networking course for Computer Science majors include getting students to learn the relevant concepts, delving into details of various protocols, and using Networking utilities. Such focus on low-level details is unlikely to be interesting to non-majors. Also, there is a larger danger of students not understanding the basic concepts due to the perceived complexity in the details and technical jargon. We address both these issues by teaching Networking concepts through solving problems in analogical real-life scenarios. The main idea of our approach is: The instructor poses an analogy problem, students work in groups to devise solutions, followed by a class discussion to map the analogy problem as well as its solution to their corresponding technical details in Networking domain. Thus we emphasize the core concepts of Networking and demystify the specialized technical details. Across three offerings of this course, we have found that: (i) our students' performance on typical Networking questions is comparable or higher than traditionally taught students, (ii) students can solve unseen technical problems, (iii) students' confidence in tackling technical questions is high.", "authors": [{"name": "Sahana Murthy", "affiliation": "Indian Institute of Technology Bombay, Mumbau, India"}, {"name": "Sridhar Iyer", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}], "tags": ["active learning", "analogies", "networking", "non-majors"]}, {"title": "Computation, complexity, and emergence: an interdisciplinary honors seminar", "link": "https://dl.acm.org/doi/10.1145/2445196.2445224", "abstract": "The Computation, Complexity, and Emergence honors seminar at UMBC is designed to introduce an interdisciplinary undergraduate audience to the principles of complex systems that permeate our world. The course goals are for students to understand how simple individual behaviors can lead to complex global behaviors and to be able to identify the sources and effects of complexity in natural and artificial systems. The course is designed to increase students' comfort and skill level in scientific writing, participating actively in written and oral discussions, and learning collaboratively in an interdisciplinary community. The paper describes the course and the innovative elements that lead to student engagement, then presents data from pre- and post-assessments about student attitudes and perceptions.", "authors": [{"name": "Marie desJardins", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}], "tags": ["curriculum", "computing", "interdisciplinary", "complexity"]}, {"title": "Session details: Paper - approaches for outreach", "link": "https://dl.acm.org/doi/10.1145/3249855", "abstract": "No abstract available.", "authors": [{"name": "Adam Anthony", "affiliation": "Baldwin-Wallace University"}], "tags": []}, {"title": "Application of the cognitive apprenticeship framework to a middle school robotics camp", "link": "https://dl.acm.org/doi/10.1145/2445196.2445226", "abstract": "This paper details the development and implementation of a summer robotics camp for middle school children. The Cognitive Apprenticeship (CA) model is used as the framework for developing the camp. Specifically, methods such as modeling, coaching, scaffolding, articulation, reflection, and exploration are integrated throughout the camp structure. Activities include the use of an engineering notebook, debugging logs, and various cognitive challenges, all supervised by a team of expert mentors. During the two-week summer camp, participants realized a positive shift in attitudes towards science, developed common engineering design skills, and showed increased proficiency in the reasoning pattern of isolation of variables. The CA framework, in conjunction with robotics are an excellent way to build interest in STEM and develop skills in engineering, science, and computational thinking.", "authors": [{"name": "J. Christopher Moore", "affiliation": "Coastal Carolina University, Conway, SC, USA"}, {"name": "Laura R. Covington", "affiliation": "Coastal Carolina University, Conway, SC, USA"}, {"name": "D. Brian Larkins", "affiliation": "Coastal Carolina University, Conway, SC, USA"}, {"name": "Louis J. Rubbo", "affiliation": "Coastal Carolina University, Conway, SC, USA"}], "tags": ["K-12", "robotics", "education", "stem", "cognitive apprenticeship"]}, {"title": "Using scaffolded examples to teach computational thinking concepts", "link": "https://dl.acm.org/doi/10.1145/2445196.2445227", "abstract": "In this paper we describe a set of computing activities that were used in an outreach enrichment program for middle school girls. The computing activities used a combination of scaffolded exam-ples and minimalist workbooks to introduce and support interaction with computational thinking (CT) concepts, including problem solving, abstraction and basic computational vocabulary. We describe the activities briefly, followed by a discussion of the girls' experiences, drawing primarily from interviews conducted at the end of each activity.", "authors": [{"name": "Mary Beth Rosson", "affiliation": "The Pennsylvania State University, University Park, PA, USA"}, {"name": "Heidi Webb", "affiliation": "The Pennsylvania State University, University Park, PA, USA"}], "tags": ["scaffolded example", "scratch", "middle school girls"]}, {"title": "A cascading mentoring pedagogy in a CS service learning course to broaden participation and perceptions", "link": "https://dl.acm.org/doi/10.1145/2445196.2445228", "abstract": "This study reports on the design, implementation, and evaluation of a service-learning course based on a \"cascading mentoring\" model linking together the faculty, administration, and undergraduates of an urban university's computer science department with local high school students. We present findings from surveys and post-interviews that illustrate undergraduates' and high school students' experiences in the program and how their perceptions of computing and mentoring changed based upon the outreach. In our discussion, we focus on the institutional and conceptual challenges of implementing the community service course within the university's computer science department, while also highlighting the learning opportunities for streamlining such a model for future iterations.", "authors": [{"name": "Jean Griffin", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Yasmin Kafai", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Rita Powell", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Joseph Sun", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Susan Davidson", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Deborah Fields", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Quinn Burke", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Michele Grab", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Michelle Slattery", "affiliation": "Peak Research, Boulder, CO, USA"}], "tags": ["community service", "mentoring"]}, {"title": "Panel: mobile application development in computing curricula", "link": "https://dl.acm.org/doi/10.1145/2445196.2445230", "abstract": "Many institutions are considering offering a course on mobile application development to harness its popularity to attract new majors, retain those we have, and to motivate learning. The panelists present four experiences in teaching a mobile application development course. They share their experiences in an effort to start a discussion about mobile application development in computing curricula. In the first half of the session, each panelist presents their experience including: an overview of the course; its audience, position in the curriculum, and pre-requisites; the platform, language, and development environment used; positives about the course; and roadblocks and negatives about the course. This provides a foundation for an audience directed discussion in the second half.", "authors": [{"name": "Lori Postner", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Stoney Jackson", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Eni Mustafaraj", "affiliation": "Wellesley College, Wellesley, MA, USA"}, {"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["mobile application development"]}, {"title": "Strategies for adding the emerging PDC curriculum recommendations into CS courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445232", "abstract": "The new CS curricular recommendations call for a heightened emphasis on parallel and distributed computing (PDC), in response to the explosive growth of multicore processors and \"cloud\" distributed computing. How can an educator incorporate this urgent priority into undergraduate CS courses? This panel describes four approaches: exploring GPU architecture and programming in a Computer Organization course; incorporating shared memory parallelism into several core courses; adding the PDC notion of reduction to multiple CS courses; and inserting short PDC modules into many courses at multiple curricular levels. We will illustrate how these contrasting approaches all respond to PDC recommendations within the feasibility constraint of incrementally modifying individual courses.", "authors": [{"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, MI, USA"}, {"name": "Richard A. Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, MN, USA"}, {"name": "David P. Bunde", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["parallelism", "education", "curriculum", "parallel computing", "curricular recommendations", "distributed computing"]}, {"title": "Fulbrights abroad in computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445234", "abstract": "The Fulbright Scholar Program is the flagship academic exchange program of the U.S. Department of State; approximately 1,100 American scholars travel worldwide annually to lecture and conduct research. The program is open to all U.S. citizens with university teaching experience and a Ph.D. or equivalent professional/terminal degree. Opportunities for Computer Science educators to win Fulbright scholarships are many. The goal of this panel is to inform the community of computer science educators about the Fulbright program, including the application process, and to answer questions about the program. After an introduction to the program at large, the panelists will each give a 10-15 minute overview of their personal experience as a Fulbright scholar in 2011-2012, leaving ample time for questions from educators considering applying for a Fulbright scholarship. The panelists will offer diverse perspectives based on their experiences in India, Zambia, and Siberia.", "authors": [{"name": "Linda Ott", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Tom Armstrong", "affiliation": "Wheaton College, Norton, MA, USA"}, {"name": "Matthew Boutell", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, IN, USA"}], "tags": ["fulbright", "international experience", "international exchange", "teaching abroad"]}, {"title": "Session details: Paper - alternatives to lectures", "link": "https://dl.acm.org/doi/10.1145/3249856", "abstract": "No abstract available.", "authors": [{"name": "Sherri Goings", "affiliation": "Carleton College"}], "tags": []}, {"title": "The inverted classroom and the CS curriculum", "link": "https://dl.acm.org/doi/10.1145/2445196.2445236", "abstract": "The inverted classroom is a pedagogical technique in which passive knowledge acquisitions activities (e.g. lecture, readings) are assigned as homework and hands-on knowledge assimilation tasks (e.g. problem solving, lab, creative work) replace traditional lecture during classroom contact hours. Recent initiatives like the Kahn Academy [1] have raised the visibility of the inverted classroom and it is being adopted in disciplines across the curriculum from Economics [2] to Biology [3]. In this experience report we present successful inverted classroom pilots in linear algebra and introductory programming classes. In particular, this pilot focused on combining the inverted classroom philosophy with other proven pedagogical techniques (e.g. inquiry based learning) there was also a focus on creating free materials that could replace traditional, expensive textbooks when using the inverted classroom. We explain how the inverted classroom pedagogy is well aligned with the hands-on practice required in both math and computer science and discuss our plans to continue our experiment and to expand it beyond the original two classes.", "authors": [{"name": "Kate Lockwood", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}, {"name": "Rachel Esselstein", "affiliation": "California State University, Monterey Bay, Seaside, CA, USA"}], "tags": ["instructional technology", "pedagogy", "linear algebra", "introductory programming", "inverted classroom"]}, {"title": "Integrating fantasy role-play into the programming lab: exploring the 'projective identity' hypothesis", "link": "https://dl.acm.org/doi/10.1145/2445196.2445237", "abstract": "It has been claimed that learning can be facilitated by a positive academic self-concept. Therefore, reinforcing this construct may benefit students and the application of 'projective identity' in educational multimedia could be a means of achieving this. To test this hypothesis, two versions of a debugging exercise were developed, with one incorporating elements of fantasy role-play. They were compared through a double-blind parallel-group randomised trial using a sample of 36 undergraduate computing students. Factor scores for academic self-concept in programming were imputed from responses to a 5-point Likert scale, validated through a confirmatory factor analysis of 91 responses. An ANCOVA revealed that students using the fantasy role-play learning activity developed a stronger self-concept than the control group, with respective gains of 2.4% and 1.1%. However, further work is required to determine if such modest gains are practically significant, can be further enhanced and maintained.", "authors": [{"name": "Michael James Scott", "affiliation": "Brunel University, Uxbridge, Middlesex, United Kingdom"}, {"name": "Gheorghita Ghinea", "affiliation": "Brunel University, Uxbridge, Middlesex, United Kingdom"}], "tags": ["programming", "learning", "projective identity", "academic self-concept", "education", "roleplay", "fantasy"]}, {"title": "Teaching creativity in computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445238", "abstract": "In this paper, we describe how a multidisciplinary undergraduate course in Conducting Robots becomes a venue for fostering creativity and teaching strategies for creativity enhancement. We perform a number of creativity measurements and explain our results in the context of creativity research.", "authors": [{"name": "Christopher Ault", "affiliation": "The College of New Jersey, Ewing, NJ, USA"}, {"name": "Yunfeng Wang", "affiliation": "The College of New Jersey, Ewing, NJ, USA"}, {"name": "Andrea Salgian", "affiliation": "The College of New Jersey, Ewing, NJ, USA"}, {"name": "Teresa M. Nakra", "affiliation": "The College of New Jersey, Ewing, NJ, USA"}], "tags": ["creativity", "multidisciplinary", "robotics", "music", "orchestral conducting"]}, {"title": "Session details: Paper - instructional technologies", "link": "https://dl.acm.org/doi/10.1145/3249857", "abstract": "No abstract available.", "authors": [{"name": "Ashish Amresh", "affiliation": "Arizona State University"}], "tags": []}, {"title": "Seeking grace: a new object-oriented language for novices", "link": "https://dl.acm.org/doi/10.1145/2445196.2445240", "abstract": "Grace is a new object-oriented language that supports a variety of approaches to teaching programming. It integrates accepted new ideas in programming languages into a simple language that allows students and teachers to focus on the essential complexities of programming rather than the accidental complexities of the language. We motivate Grace, review its design, and evaluate it against Kolling's criteria.", "authors": [{"name": "Michael Homer", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Kim B. Bruce", "affiliation": "Pomona College, Claremont, CA, USA"}, {"name": "James Noble", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Amy Ruskin", "affiliation": "Pomona College, Claremont, CA, USA"}, {"name": "Andrew P. Black", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Richard Yannow", "affiliation": "Pomona College, Claremont, CA, USA"}], "tags": ["novice", "CS2", "CS1", "object-oriented language"]}, {"title": "Developing a highly interactive ebook for CS instruction", "link": "https://dl.acm.org/doi/10.1145/2445196.2445241", "abstract": "Electronic books (ebooks) are becoming commonplace and widespread. Highly interactive ebooks actively engage the reader and have great potential to increase student learning. With the recent release of Apple's iBooks Author application, instructors can develop highly interactive ebooks. This paper reports on our experience of creating an interactive Prolog programming ebook using iBooks Author. A particular focus is placed on ebook features pertinent to undergraduate computer science instruction including code listings, coding tutorials, and integration with course management systems and automated grading systems. This work is supported, in part, by two NSF grants.", "authors": [{"name": "Reed Phillips", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "Philip Meznar", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "James B. Fenwick", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "Barry L. Kurtz", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "Alex Weidner", "affiliation": "Appalachian State University, Boone, NC, USA"}], "tags": ["authoring tools", "active learning", "ebook"]}, {"title": "CS50 sandbox: secure execution of untrusted code", "link": "https://dl.acm.org/doi/10.1145/2445196.2445242", "abstract": "We introduce CS50 Sandbox, an environment for secure execution of untrusted code. Implemented as an asynchronous HTTP server, CS50 Sandbox offers clients the ability to execute programs (both interactive and non-interactive) written in any compiled or interpreted language in a tightly controlled, resource-constrained environment. CS50 Sandbox's HTTP-based API takes files, command lines, and standard input as inputs and returns standard output and error plus exit codes as outputs. Atop CS50 Sandbox, we have built CS50 Run, a web-based code editor that enables students to write code in a browser in any language, whether compiled or interpreted, that's executed server-side within a sandboxed environment. And we have built CS50 Check, an autograding framework that supports black- and white-box testing of students' code, leveraging CS50 Sandbox to run series of checks against students' programs, no matter the language of implementation.\nWe present in this work the pedagogical motivations for each of these tools, along with the underlying designs thereof. Each is available as open source.", "authors": [{"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["sandbox"]}, {"title": "Session details: Paper - tough curricular challenges", "link": "https://dl.acm.org/doi/10.1145/3249858", "abstract": "No abstract available.", "authors": [{"name": "Andrea Danyluk", "affiliation": "Williams College"}], "tags": []}, {"title": "Cloud computing in the curriculum: fundamental and enabling technologies", "link": "https://dl.acm.org/doi/10.1145/2445196.2445244", "abstract": "Cloud computing is a new buzzword for a group of old technologies that have been integrated to create a system that is more than the sum of its parts. After teaching a seminar in cloud computing three times over the last year I have gained a better understanding of the fundamental and enabling technologies that should be brought into our curriculum to facilitate our students becoming competent users of cloud computing. Developing and deploying an application on a cloud architecture appears very similar to working with any remotely accessible server architecture but to work with it effectively our students need to understand the following technologies: firewalls, addressing and sub-netting, encryption, scripting, storage architectures, and virtualization. There are several enabling technologies that make the cloud more than just the sum of its parts. Some of the most important enabling technologies include: segregation of services and multi-systems architectures, workload characterization, identity federation, load balancing, and content distribution networks.", "authors": [{"name": "Charles B. Border", "affiliation": "Rochester Institute of Technlogy, Rochester, NY, USA"}], "tags": ["cloud computing", "multi-system", "load balancing", "curriculum", "virtualization", "workload characterization"]}, {"title": "Characterizing the need for graduate ethics education", "link": "https://dl.acm.org/doi/10.1145/2445196.2445245", "abstract": "We report on some initial findings of an investigation into current practices in, and the need for, information/computer ethics curricula at the graduate level. We give some results and analysis from a survey of faculty and graduate students at four diverse U.S. institutions. Faculty and students agree that students will face professional ethical challenges after graduation, but assessment of students' preparedness for these challenges differs widely across the surveyed institutions. A clear majority of faculty and students expressed support for an elective graduate-level ethics course, and roughly half supported a required graduate-level ethics course.", "authors": [{"name": "Kellen Dins", "affiliation": "University of Wisconsin-Stout, Menomenie, USA"}, {"name": "Elizabeth Buchanan", "affiliation": "University of Wisconsin-Stout, Menomenie, USA"}, {"name": "Scott Dexter", "affiliation": "Brooklyn College, Brooklyn, USA"}, {"name": "Kenneth R. Fleischmann", "affiliation": "University of Texas at Austin, Austin, USA"}, {"name": "Keith Miller", "affiliation": "University of Illinois Springfield, Springfield, USA"}], "tags": ["pedagogy", "computer ethics", "professionalization", "graduate education"]}, {"title": "Methodology education in computing: towards a congruent design approach", "link": "https://dl.acm.org/doi/10.1145/2445196.2445246", "abstract": "All major computing curricula recommendations mention methodological skills and knowledge as an important learning objective in undergraduate and graduate education. None of those curricula recommendations, however, include a methodology course for students. One reason for that lack might be the stunning diversity of computing fields and the unique methods each branch of computing uses in their research. A methodology course in computing has to make a choice between three options: a narrow but deep specialization in some techniques and methods, a broad but superficial covering of a large number of methods, and a higher-level view on the principles of methodology and research design. This paper adopts the high-level approach, and presents a course description for a methodology course that aims at providing students understanding of how the elements of a research study link together.", "authors": [{"name": "Matti Tedre", "affiliation": "Stockholm University, Kista, Sweden"}], "tags": ["research design", "computing education", "methodology education", "congruent design", "thesis work", "methodology", "computer science education"]}, {"title": "Session details: Paper - retention", "link": "https://dl.acm.org/doi/10.1145/3249859", "abstract": "No abstract available.", "authors": [{"name": "Carl Alphonce", "affiliation": "University at Buffalo, SUNY"}], "tags": []}, {"title": "Retaining nearly one-third more majors with a trio of instructional best practices in CS1", "link": "https://dl.acm.org/doi/10.1145/2445196.2445248", "abstract": "Beginning in 2008, we introduced a new CS1 incorporating a trio of best practices intended to improve the quality of the course, appeal to a broader student body, and, hopefully, improve retention in the major. This trio included Media Computation, Pair Programming, and Peer Instruction. After 3 and 1/2 years (8 CS1 classes, 3 different instructors, and 1011 students passing the course) we find that 89% of the majors who pass the course are still studying computing one year later. This is an improvement of 18% over our average retention of 71% for the previous version of the course (measured since Fall 2001). If the focus shifts from retention of passing CS1 majors to retention of CS1 initially enrolled majors, multiple improvements--fewer students drop, more students pass, and more passing students are retained--compound to increase retention by 31% (from 51% to 82%). In this paper we analyze further aspects of these results, detail the three instructional design choices, and consider how they impact issues known to affect retention.", "authors": [{"name": "Beth Simon", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Leo Porter", "affiliation": "Skidmore College, Saratoga Springs, NY, USA"}], "tags": ["active learning", "student-centric learning", "peer instruction", "pair programming", "contextualized computing"]}, {"title": "Retention of STEM majors using early undergraduate researchexperiences", "link": "https://dl.acm.org/doi/10.1145/2445196.2445249", "abstract": "An early undergraduate research program for rising sophomores and juniors at risk of leaving STEM degree programs is described. Students are paid a stipend to work part-time, at a maximum of twenty hours per week, as part of a research team. Faculty researchers are not financially compensated for working with students. The program successfully brings together STEM departments to target students who are at risk of leaving their major. Initial results demonstrate a positive influence of undergraduate research in retaining STEM majors and improvements in Student Assessment of Learning Gains. Future work, including institutionalization of the project, is discussed.", "authors": [{"name": "John Filaseta", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Heather Bullen", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Bethany Bowling", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Maureen Doyle", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}], "tags": ["recruitment and retention", "STEM", "undergraduate research"]}, {"title": "Halving fail rates using peer instruction: a study of four computer science courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445250", "abstract": "Peer Instruction (PI) is a teaching method that supports student-centric classrooms, where students construct their own understanding through a structured approach featuring questions with peer discussions. PI has been shown to increase learning in STEM disciplines such as physics and biology. In this report we look at another indicator of student success the rate at which students pass the course or, conversely, the rate at which they fail. Evaluating 10 years of instruction of 4 different courses spanning 16 PI course instances, we find that adoption of the PI methodology in the classroom reduces fail rates by a per-course average of 61% (20% reduced to 7%) compared to standard instruction (SI). Moreover, we also find statistically significant improvements within-instructor. For the same instructor teaching the same course, we find PI decreases the fail rate, on average, by 67% (from 23% to 8%) compared to SI. As an in-situ study, we discuss the various threats to the validity of this work and consider implications of wide-spread adoption of PI in computing programs.", "authors": [{"name": "Beth Simon", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Leo Porter", "affiliation": "Skidmore College, Saratoga Springs, NY, USA"}, {"name": "Cynthia Bailey Lee", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["active learning", "student-centric learning", "peer instruction", "assessment", "flipped classroom"]}, {"title": "Session details: Paper - CS education research", "link": "https://dl.acm.org/doi/10.1145/3249860", "abstract": "No abstract available.", "authors": [{"name": "Kristy Boyer", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "Becoming experts: measuring attitude development in introductory computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445252", "abstract": "We have begun the process of examining how students perceive the field of computer science by employing a novice-to-expert continuum framework. As part of this exploration we have developed and are validating the Computing Attitudes Survey (CAS). In this study, our research focuses on how students develop expert-like attitudes and what effect an introductory course may have on that development. In particular, we find that the CAS instrument can be used to detect pre/post attitude shifts after a single introductory course of instruction and that individual subpopulations show positive attitude gains across gender, area of study and pedagogy Further, the CAS can also be used to identify significant pre/post attitude shifts among individual component factors, groupings of items on the survey that characterize different aspects of novice thought processes.", "authors": [{"name": "Allison Elliott Tew", "affiliation": "University of Washington Tacoma, Tacoma, WA, USA"}, {"name": "Brian Dorn", "affiliation": "University of Hartford, West Hartford, CT, USA"}], "tags": ["surveys", "attitudes", "assessment"]}, {"title": "What is it we are asking: interpreting problem-solving questions in computer science and linguistics", "link": "https://dl.acm.org/doi/10.1145/2445196.2445253", "abstract": "The cognitive abilities of learners have been studied extensively in both psychological and educational contexts. In the field of education, attention is placed on high-order thinking strategies, while in computer science education the focus is on cognitive skills required for solving problems. Since any process of problem solving is based on answering questions, it is worth looking at the questions we ask. In this conceptual framework, the current study aims to investigate the cognitive requirements from learners answering questions that arise from the questions' formulation. The study focuses on a linguistic investigation of keywords that appear in questions aimed at promoting the learners' high-order thinking when solving problems. To sharpen our attention to the uses of particular keywords in questions, we present a comparison between questions used in two different disciplines, computer science and linguistics. The paper outlines and describes nine question keyword categories, demonstrates the question keyword categories, and argues that the cognitive requirements from learners answering those questions are very similar for both disciplines.", "authors": [{"name": "Noa Ragonis", "affiliation": "Beit Berl College and Technion - ITT, Beit Berl, Israel"}, {"name": "Gila Shilo", "affiliation": "Beit Berl College, Beit Berl, Israel"}], "tags": ["cognition", "linguistics", "problem solving", "questions", "high order thinking", "computer science education", "answers"]}, {"title": "Investigating factors of student learning in introductory courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445254", "abstract": "Instructors of the introductory computer science courses, commonly called \"CS1\" and \"CS2\", face a large number of choices when designing their classes. Instructors have available to them a multitude of ways to explain each topic as well as course-wide choices such as objects-first or objects-late or using a functional or procedural language. Understanding how these options can affect student learning would help simplify these decisions. Unfortunately, just comparing how well students perform may not be accurate as it ignores the many confounding factors that could also have made a difference. To get beyond that problem, this study investigates underlying factors that affect student learning. Using a survey of instructors, we find that students' abilities are nearly always correlated with the importance that the instructor placed on a particular topic. Our results also highlight several \"hard\" topics for which student mastery and topic importance were not correlated in CS1 and only weakly correlated in CS2. While one might expect the time spent covering a topic in class to also be correlated with student mastery, we find little evidence of this. In fact, for some basic programming concepts, we document negative correlations between instructional time and learning. We discuss how instructors can use these results when organizing their courses and how the computer science education community can use this finding of \"hard\" topics to focus their efforts.", "authors": [{"name": "Sarah Michele Ford", "affiliation": "University of Massachusetts, Amherst, Amherst, MA, USA"}, {"name": "Matthew Hertz", "affiliation": "Canisius College, Buffalo, NY, USA"}], "tags": ["CS2", "curriculum design", "CS1", "survey"]}, {"title": "Computer science curriculum 2013: social and professional recommendations from the ACM/IEEE-CS task force", "link": "https://dl.acm.org/doi/10.1145/2445196.2445256", "abstract": "Social and professional principles were included in ABET computer science accreditation standards in 1987 and first appeared in the ACM/IEEE-CS Computing Curricula in 1991. This moderated panel presented the Social Issues and Professional Practice Knowledge Area (SP KA) of the 2013 ACM/IEEE-CS draft curricular guidelines for computer science. Specific knowledge units from the Ironman version were highlighted for discussion along with course and module exemplars", "authors": [{"name": "Carol L. Spradling", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Florence A. Appel", "affiliation": "Saint Xavier University, Chicago, IL, USA"}, {"name": "Lisa C. Kaczmarczyk", "affiliation": "Independent Evaluation Consultant, San Diego, CA, USA"}], "tags": ["access to computing", "sustainability", "computing curricular 2013: computer science", "social issues", "professional practice", "professional ethics", "social and legal aspects of computing", "sustainable computing", "computer ethics pedagogy", "professional communication"]}, {"title": "Understanding NSF funding opportunities", "link": "https://dl.acm.org/doi/10.1145/2445196.2445258", "abstract": "This session highlights programs in the National Science Foundation's (NSF) Education and Human Resources (EHR) and Computer and Information Science and Engineering (CISE) directorates. The focus is on providing descriptions of several programs of interest to college faculty and discussing the requirements and guidelines for programs in these areas. The session includes a description of the proposal and review processes as well as strategies for writing competitive proposals. Participants are encouraged to discuss procedural issues with the presenters.", "authors": [{"name": "D. Suzanne Westbrook", "affiliation": "National Science Foundation, Arlington, VA, USA"}, {"name": "Jeffrey Forbes", "affiliation": "National Science Foundation, Arlington, VA, USA"}, {"name": "Victor Piotrowski", "affiliation": "National Science Foundation, Arlington, VA, USA"}, {"name": "Jane Prey", "affiliation": "National Science Foundation, Arlington, VA, USA"}], "tags": ["awards", "national science foundation", "grants", "education", "proposals", "funding"]}, {"title": "An interactive exploration of gender and computing: unpacking the student experience", "link": "https://dl.acm.org/doi/10.1145/2445196.2445260", "abstract": "Being a computer science and engineering student is experienced differently by male and female students; gendered interactions affect the development of academic and professional role confidence as well as professional identity. In this hands-on special session, participants explore concepts of gender schemas, privilege, and identity using a range of interactive activities. We have found these concepts useful in framing discussion with our students and in understanding and improving student experiences. The session introduces and obtains feedback on a Gender and Engineering Exploration Kit, which the participants are encouraged to review, use, and share at their home institutions.", "authors": [{"name": "Yevgeniya V. Zastavker", "affiliation": "Franklin W. Olin College of Engineering, Needham, MA, USA"}, {"name": "Caitrin Lynch", "affiliation": "Franklin W. Olin College of Engineering, Needham, MA, USA"}, {"name": "Lynn Andrea Stein", "affiliation": "Franklin W. Olin College of Engineering, Needham, MA, USA"}, {"name": "Debbie Chachra", "affiliation": "Franklin W. Olin College of Engineering, Needham, MA, USA"}, {"name": "Alisha Sarang-Sieminski", "affiliation": "Franklin W. Olin College of Engineering, Needham, MA, USA"}], "tags": ["gender", "classroom climate", "diversity", "meritocracy"]}, {"title": "Demystifying computing with magic, continued", "link": "https://dl.acm.org/doi/10.1145/2445196.2445262", "abstract": "One man's \"magic\" is another man's engineering. Robert A. Heinlein\nSome beginning students have fuzzy mental models of how the computer works, or worse, sincerely believe that the computer works unpredictably, \"by magic\". We seek to demystify computing for these students using analogy, by showing them something that even magic itself isn't really mystical, it is just computation. This is a continuation of our standing-room only SIGCSE 2012 special session.\nMagic is one of the most colorful examples of \"unplugged\" (i.e., without-computer, active learning) activities. It adds a unique facet in that it holds a hidden secret that the audience can be challenged to unfold. Once solved, students are often enthusiastic to perform the magic in front of others. In this session, we will share a variety of new magic tricks whose answer is grounded in computer science: modulo arithmetic, human-computer interfaces, algorithms, binary encoding, invariants, etc. For each trick, we will have an interactive discussion of its underlying computing fundamentals, and tips for successful showmanship. Audience participation will be critical, for helping us perform the magic, discussing the solution, and contributing other magic tricks.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "David Ginat", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}], "tags": ["magic", "card tricks", "unplugged activities", "computational thinking"]}, {"title": "Session details: Paper - tools", "link": "https://dl.acm.org/doi/10.1145/3249861", "abstract": "No abstract available.", "authors": [{"name": "Laurie King", "affiliation": "College of the Holy Cross"}], "tags": []}, {"title": "Reading mobile games throughout the curriculum", "link": "https://dl.acm.org/doi/10.1145/2445196.2445264", "abstract": "We introduce ALE, a new framework for writing games for the Android platform. The primary motivation behind ALE is to emphasize reading code before writing it. Beginners read game code to learn how levels can be made, and advanced users read the code of ALE itself to learn how to create useful and extensible libraries. To date, roughly 200 students at our university have used ALE, ranging from first-semester engineering undergraduates through Masters students. ALE has proven useful in teaching non-majors about CS, in making introductory CS programming courses more exciting, and in encouraging creativity, entrepreneurship, and good program design in upper-level electives. Based on these experiences, we encourage educators at all levels to consider using ALE to improve students' ability to learn by reading code.", "authors": [{"name": "Sharon Kalafut", "affiliation": "Lehigh University, Bethlehem, PA, USA"}, {"name": "Bradley Askins", "affiliation": "Lehigh University, Bethlehem, PA, USA"}, {"name": "Michael Spear", "affiliation": "Lehigh University, Bethlehem, PA, USA"}, {"name": "Jennifer Bayzick", "affiliation": "Lehigh University, Bethlehem, PA, USA"}], "tags": ["android", "OpenQL", "games", "CS1", "java"]}, {"title": "Hairball: lint-inspired static analysis of scratch projects", "link": "https://dl.acm.org/doi/10.1145/2445196.2445265", "abstract": "Scratch programming has risen in prominence, not only as a potential language for K-12 computer science, but also in introductory college courses. Unfortunately, grading Scratch programs is time-consuming, requiring manual execution of each program. Automation of this process is greatly complicated by the very reason Scratch is an attractive introductory language--the projects are multimedia in nature, requiring eyes and ears to fully appreciate.\nWe propose Hairball, an automated system that can be used both by a student to point out potential errors or unsafe practices, and by a grader to assist in inspecting the implementation of Scratch programs. Because automatic analysis will not be able to determine the sensory effect, Hairball focuses instead on the implementation, including safe/robust programming practices, providing a \"lint-like\" tool for Scratch.\nIn this case study, we have created an initial set of Hairball plugins that detect and label instances of initialization of Scratch state, synchronization between say and sound blocks, synchronization between broadcast and receive blocks, and use of timing and loops for complex animation. Our evaluation shows that Hairball is very useful in conjunction with manual analysis. Overall, Hairball was actually slightly more accurate than manual analysis at labeling these instances. Specifically for broadcast/receive, Hairball's analysis correctly classified 99% of the 432 instances, manual analysis only 81%. Overall, if Hairball was only used to identify correctly implemented instances, with manual analysis for the remainder, it would remove 76% of the instances for the manual analysis and assist in the rest, with a false positive rate of less than 0.5%.", "authors": [{"name": "Diana Franklin", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Michelle Len", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Phillip Conrad", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Greg Dreschler", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Bryce Boe", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Charlotte Hill", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}], "tags": ["automated assessment", "scratch", "static analysis"]}, {"title": "GSK: universally accessible graph sketching", "link": "https://dl.acm.org/doi/10.1145/2445196.2445266", "abstract": "Combinatorial graphs, often conveyed as node-link diagrams, figure prominently in Computer Science and other Science, Technology, Engineering, and Mathematics (STEM) disciplines. Unfortunately, they are most often inaccessible to blind students and professionals. This paper introduces GSK, a self-contained Graph SKetching tool that allows blind and sighted people to easily create, edit, and share graphs in real-time using interaction mechanisms (mouse, keyboard, monitor, screen reader) that are standard for them. GSK was successfully used by a blind Computer Science student and his sighted instructors to create and access graphs specific to his automata theory and operating systems courses. Our hope is that GSK will enable more blind STEM students and professionals to actively participate in their disciplines by providing them and their sighted colleagues with a cross-collaboration tool that allows them to share graphs just as easily as they share text and word processing documents.", "authors": [{"name": "Matthias F. Stallmann", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Suzanne P. Balik", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Robert D. Rodman", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Sean P. Mealin", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["accessibility", "computational equivalence", "universal design"]}, {"title": "Session details: Paper - student behaviors and experiences", "link": "https://dl.acm.org/doi/10.1145/3249862", "abstract": "No abstract available.", "authors": [{"name": "Martha Kosa", "affiliation": "Tennessee Technological University"}], "tags": []}, {"title": "Collaborative learning and anxiety: a phenomenographic study of collaborative learning activities", "link": "https://dl.acm.org/doi/10.1145/2445196.2445268", "abstract": "Collaborative learning encourages deeper learning, producing significant benefit in learning outcomes. There has been an increasing trend to adopt collaborative activities, due to the expected learning benefits but also because of the expected social benefits and their impact on transition concerns. However, collaborative activities may also introduce additional stress and anxiety for students as they cope with altered participation expectations, and the need to develop collaboration, communication and management skills concurrently with their discipline skills. In this paper we describe a phenomenographic analysis of student's reflections on collaborative activities, including their perceptions of the purpose of such activities, and corresponding behaviours.", "authors": [{"name": "Nickolas J.G. Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Rebecca Vivian", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["collaborative learning", "computer science education", "phenomenography"]}, {"title": "Life's a game and the game of life: how making a game out of it can change student behavior", "link": "https://dl.acm.org/doi/10.1145/2445196.2445269", "abstract": "There is little argument that creating experiences for students that will increase student success and retention is a goal that is shared by anyone teaching courses. In computing courses, we have seen a lot of focused attention on the first year introductory courses as it has been shown that it is failure in these courses that drives students away from the discipline. In this paper we describe success we have had with first year students through the creation of achievement system for the undergraduate experience. Through the Just Press Play project and its associated achievements, we observed a significant shift in student behavior in relation to our first year students which lead to a greater level of student success in their first course.", "authors": [{"name": "Elizabeth Lane Lawley", "affiliation": "Rochester Institute of Technology, Rochester, New York, USA"}, {"name": "Adrienne Decker", "affiliation": "Rochester Institute of Technology, Rochester, New York, USA"}], "tags": ["retention", "student mentoring", "CS1", "gamification"]}, {"title": "A student perspective on prior experience in CS1", "link": "https://dl.acm.org/doi/10.1145/2445196.2445270", "abstract": "This work explores the effects of prior exposure to programming on student experiences in an introductory computer programming course CS1). We take a student-focused approach: using a combination of surveys and semi-structured interviews, we obtain information on the student experiences in CS1 and their relationship to prior programming experience (PE). The analysis of the results provides insight into the following two questions: a) How does PE affect peer interaction: pair programming sessions, assignment partnerships, and online and in-class interactions? b) What are the students' beliefs on the relationship between PE and success in the course?", "authors": [{"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Toronto, ON, Canada"}, {"name": "Anya Tafliovich", "affiliation": "University of Toronto Scarborough, Toronto, ON, Canada"}, {"name": "Jennifer Campbell", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["pair programming", "cs1", "novice programming", "previous experience"]}, {"title": "Session details: Paper - introducing CS in high school", "link": "https://dl.acm.org/doi/10.1145/3249863", "abstract": "No abstract available.", "authors": [{"name": "Chris Hundhausen", "affiliation": "Washington State University"}], "tags": []}, {"title": "The role of teachers in implementing curriculum changes", "link": "https://dl.acm.org/doi/10.1145/2445196.2445272", "abstract": "In 2011 New Zealand introduced computer science into high schools after a long period when computing was mainly focussed on training students to be users. The transition was rapid, and teachers had little time to upskill to prepare for the new topics, and yet there was widespread voluntary adoption of the new standards. The role of teachers and the national teachers' organisation in making the change has been pivotal, and this paper reviews the changes from the teachers' perspective. This story is intended to inform those planning similar changes in other countries, and provide a context for the next steps in NZ. The discussion centres around a survey of 91~teachers, which reveals strong intrinsic motivation from teachers to make the changes, a mixture of prior knowledge and skills that teachers shared with each other through peer support and online communication, a low level of confidence as teachers of computer science, and a need for further professional development.", "authors": [{"name": "David Thompson", "affiliation": "University of Canterbury, Christchurch, New Zealand"}, {"name": "Peter Andreae", "affiliation": "Victoria University of Wellington, Wellington, New Zealand"}, {"name": "Tim Bell", "affiliation": "University of Canterbury, Christchurch, New Zealand"}, {"name": "Anthony Robins", "affiliation": "University of Otago, Dunedin, New Zealand"}], "tags": ["curriculum implementation", "teacher professional development"]}, {"title": "Computer science principles: analysis of a proposed advanced placement course", "link": "https://dl.acm.org/doi/10.1145/2445196.2445273", "abstract": "In this paper we analyze the CS Principles project, a proposed Advanced Placement course, by focusing on the second pilot that took place in 2011-2012. In a previous publication the first pilot of the course was explained, but not in a context related to relevant educational research and philosophy. In this paper we analyze the content and the pedagogical approaches used in the second pilot of the project. We include information about the third pilot being conducted in 2012-2013 and the portfolio exam that is part of that pilot. Both the second and third pilots provide evidence that the CS Principles course is succeeding in changing how computer science is taught and to whom it is taught.", "authors": [{"name": "Andrea Arpaci-Dusseau", "affiliation": "University of Wisconsin, Madison, Madison, WI, USA"}, {"name": "Baker Franke", "affiliation": "Chicago Lab High School, Chicago, IL, USA"}, {"name": "Rebecca Dovi", "affiliation": "Patrick Henry High School, Ashland, VA, USA"}, {"name": "Ralph Morelli", "affiliation": "Trinity College, Hartford, CT, USA"}, {"name": "Chinma Uche", "affiliation": "GHAMAS, Hartford, CT, USA"}, {"name": "Matthew Bauer", "affiliation": "Illinois Institute of Technology, Chicago, IL, USA"}, {"name": "Jean Griffin", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Marilyn Carrell", "affiliation": "Springdale High School, Springdale, AR, USA"}, {"name": "Owen Astrachan", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Richard Kick", "affiliation": "Newbury Park High School, Thousand Oaks, CA, USA"}, {"name": "Deepa Muralidhar", "affiliation": "North Gwinnett High School, Gwinnett, GA, USA"}, {"name": "Dwight Barnett", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Christina Gardner", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "R Brook Osborne", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Andy Kuemmel", "affiliation": "West High School, Madison, WI, USA"}], "tags": ["advanced placement", "national pilot", "portfolio assessment"]}, {"title": "A more formal approach to \"computer science: principles\"", "link": "https://dl.acm.org/doi/10.1145/2445196.2445274", "abstract": "We report on a course, entitled \"How Computers Work: Logic in Action\", which we have offered the past few years at the University of Oklahoma, and which will be offered soon at the University of Wyoming. Intended for non-CS majors, this course is our answer to the question, What would you teach if you had only one course to help students grasp the essence of computation and perhaps inspire a few of them to make computing a subject of further study? Assuming no prior knowledge of computers or mathematics beyond high school algebra, the course is compatible with the \"Computer Science: Principles\" approach proposed by the College Board, although it is a significant departure from the pilot courses that are currently following this approach.", "authors": [{"name": "Rex Page", "affiliation": "University of Oklahoma, Norman, OK, USA"}, {"name": "Ruben Gamboa", "affiliation": "University of Wyoming, Laramie, WY, USA"}], "tags": ["first year", "formal computation", "service course"]}, {"title": "Session details: Paper - socio-cultural issues", "link": "https://dl.acm.org/doi/10.1145/3249864", "abstract": "No abstract available.", "authors": [{"name": "Allison Elliott Tew", "affiliation": "University of Washington Tacoma"}], "tags": []}, {"title": "Building equitable computer science classrooms: elements of a teaching approach", "link": "https://dl.acm.org/doi/10.1145/2445196.2445276", "abstract": "This paper offers a framework for equitable instruction that emerged while designing a computer science course for students entering the sixth grade. Leveraging research from a range of fields, including sociology, mathematics education, and the learning sciences, we argue that in addition to material resources, such as rich course content and quality instruction, equity also depends on students' access to non-material resources, such as productive domain identities and peer relationships. We illustrate each dimension of the framework by describing in detail a core set of pedagogical practices implemented during a summer course.", "authors": [{"name": "Nasar Khan", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Danielle Ehsanipour", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Roxane Caires", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Amirah Qureshi", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Noopur Gupta", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Niral Shah", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["equity", "scratch", "identity"]}, {"title": "Bringing computer science back into schools: lessons from the UK", "link": "https://dl.acm.org/doi/10.1145/2445196.2445277", "abstract": "Computer science in UK schools is a subject in decline: the ratio of Computing to Maths A-Level students (i.e. ages 16--18) has fallen from 1:2 in 2003 to 1:20 in 2011 and in 2012. In 2011 and again in 2012, the ratio for female students was 1:100, with less than 300 female students taking Computing A-Level in the whole of the UK each year. Similar problems have been observed in the USA and other countries, despite the increased need for computer science skills caused by IT growth in industry and society. In the UK, the Computing At School (CAS) group was formed to try to improve the state of computer science in schools. Using a combination of grassroots teacher activities and policy lobbying at a national level, CAS has been able to rapidly gain traction in the fight for computer science in schools. We examine the reasons for this success, the challenges and dangers that lie ahead, and suggest how the experience of CAS in the UK can benefit other similar organisations, such as the CSTA in the USA.", "authors": [{"name": "Simon Humphreys", "affiliation": "BCS, Cambridge, United Kingdom"}, {"name": "Sue Sentance", "affiliation": "Anglia Ruskin University, Cambridge, United Kingdom"}, {"name": "Neil Christopher Charles Brown", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Michael K\u00f6lling", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Simon Peyton Jones", "affiliation": "Microsoft Research, Cambridge, United Kingdom"}, {"name": "Tom Crick", "affiliation": "Cardiff Metropolitan University, Cardiff, United Kingdom"}], "tags": ["computer science education", "teachers", "high school"]}, {"title": "Cultivating a K12 computer science community: a case study", "link": "https://dl.acm.org/doi/10.1145/2445196.2445278", "abstract": "In this paper, we use a sociocultural lens to provide an in-depth case study of a computer science program at a high school serving traditionally underserved youth. The study illuminates the contextual factors that supported dramatic programmatic growth, including the policy, curriculum, pedagogy, community, and school factors leading to student recruitment and retention in computer science. By focusing on computer science classroom practices and beyond, the study sheds light on the role multiple stakeholders can take in supporting computer science education in a K12 setting, and suggests strategies for program development in other K12 computer science settings.", "authors": [{"name": "Richard Guenther", "affiliation": "St. Vrain Valley School District, Longmont, CO, USA"}, {"name": "Michael Wenk", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Sarah Hug", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["case study", "diverse student populations", "recruitment", "K12 education"]}, {"title": "Teaching secure coding: the myths and the realities", "link": "https://dl.acm.org/doi/10.1145/2445196.2445280", "abstract": "Teaching secure coding has never been more important. The CS2013 Ironman draft includes Information Assurance and Security as a new Knowledge Area and recommends that security be cross-cutting across all undergraduate computer science curricula. The Summit on Education in Secure Software recommended: 1) increasing the number of faculty who understand the importance of secure programming principles, and will require students to practice them; 2) integrating computer security content into existing technical and non-technical courses; and 3) using innovative teaching methods to strengthen the foundation of computer security knowledge. In this panel, we will speak to these recommendations and the new curricular guidelines and discuss the importance and challenges of teaching secure coding.", "authors": [{"name": "Elizabeth Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Matt Bishop", "affiliation": "University of California at Davis, Davis, CA, USA"}, {"name": "Kara Nance", "affiliation": "University of Alaska Fairbanks, Fairbanks, AK, USA"}, {"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}], "tags": ["secure coding"]}, {"title": "Alternatives to lecture: revealing the power of peer instruction and cooperative learning", "link": "https://dl.acm.org/doi/10.1145/2445196.2445282", "abstract": "This session will demonstrate best practices for integrating a variety of student engagement pedagogies into the classroom. Presenters play the role of instructors on the first day of class. Audience members play the role of students as they collaborate on a variety of sample activities. By providing models of active learning in computing contexts, we seek to motivate instructors to adopt these pedagogies in their classrooms. Attendees will be invited to join a growing community of faculty who share resources and best practices. Sufficient time will be reserved for questions and discussion.", "authors": [{"name": "Scott Grissom", "affiliation": "Grand Valley State University, Allendale, MI, USA"}, {"name": "Alexander Chizhik", "affiliation": "San Diego State University, San Diego, CA, USA"}, {"name": "Beth Simon", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Leland Beck", "affiliation": "San Diego State University, San Diego, CA, USA"}], "tags": ["student-centered learning", "active learning", "peer instruction", "cooperative learning", "student engagement pedagogies", "collaborative learning"]}, {"title": "ACM/IEEE computer science 2013 exemplar-fest", "link": "https://dl.acm.org/doi/10.1145/2445196.2445284", "abstract": "Beginning with the publication of Curriculum 68, ACM and IEEE-Computer Society have sponsored various efforts to establish international curricular guidelines for undergraduate programs in computing. Work on the next volume, Computer Science 2013 is well underway, with the Ironman draft out shortly before SIGCSE 2013. The Ironman draft includes course and curricular exemplars, which should serve as a rich resource for those trying to meet the curriculum standards. This special session highlights the exemplar section of the Ironman report through a description of its purpose, presentation of several exemplars, and an invitation to the SIGCSE community to participate by submitting exemplars and providing feedback on what they would find useful in this section of the CS 2013 final report.", "authors": [{"name": "Andrea Danyluk", "affiliation": "Williams College, Williamstown, MA, USA"}, {"name": "Steve Roach", "affiliation": "ITT Exelis, McLean, VA, USA"}, {"name": "Ruth E. Anderson", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Henry M. Walker", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Christa M. Chewar", "affiliation": "U.S. Military Academy, West Point, NY, USA"}], "tags": ["curriculum exemplars", "computing curricula 2013", "cs 2013"]}, {"title": "Session details: Paper - student-centered approaches", "link": "https://dl.acm.org/doi/10.1145/3249865", "abstract": "No abstract available.", "authors": [{"name": "Durell Bouchard", "affiliation": "Roanoke College"}], "tags": []}, {"title": "Studio-based learning and app inventor for android in an introductory CS course for non-majors", "link": "https://dl.acm.org/doi/10.1145/2445196.2445286", "abstract": "In this study, an experimental introductory CS course was implemented focusing on two pedagogic factors: the use of App Inventor for Android (AIA), a visual blocks programming environment for creating smart phone applications; and the adoption of studio-based learning (SBL) as the main teaching methodology. Participants included 18 non-CS major undergraduates. The Motivated Strategies for Learning Questionnaire (MSLQ) was implemented at several stages. With the exception of the Peer Learning scale in the mid-MSLQ, all participants scored in the high range in the three MSLQs. Results indicated that participants were comfortable collaborating with peers and asking questions. Additional data were collected from entry and exit interviews as well as student-created mind maps. The study revealed positive student response to the pedagogic factors and positive attitudes towards CS, and the subjects also demonstrated significant academic achievement. The experimental approach was found to have a positive effect on students' motivation, creativity, achievement, and attitude towards CS.", "authors": [{"name": "Khuloud Ahmad", "affiliation": "Ball State University, Muncie, IN, USA"}, {"name": "Paul Gestwicki", "affiliation": "Ball State University, Muncie, IN, USA"}], "tags": ["studio-based learning", "AIA", "MSLQ", "introductory computer science", "mind map", "computer science education"]}, {"title": "Impacts of adaptive feedback on teaching test-driven development", "link": "https://dl.acm.org/doi/10.1145/2445196.2445287", "abstract": "Studies have found that following Test-Driven Development (TDD) can improve code and testing quality. However, a preliminary investigation was consistent with concerns raised by other educators about programmers resisting TDD. In this paper, we describe an adaptive, pedagogical system for tracking and encouraging students' adherence to TDD. Along with an empirical evaluation of the system, we discuss challenges and opportunities for persuading student behavior through adaptive technology.", "authors": [{"name": "Kevin Buffardi", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["instructional technology", "web-cat", "automated testing", "test-driven development (TDD)", "unit testing", "adherence", "test-first"]}, {"title": "Adding a contributing student pedagogy component to an introductory database course", "link": "https://dl.acm.org/doi/10.1145/2445196.2445288", "abstract": "An introductory database course is well established within computer science curricula. Instructors in this course are challenged to select a subset of possible topics to cover and emphasize and also to design appropriate assignments to help students master those topics. As theories regarding effective educational practice continue to emerge and become known, we also seek to invigorate our courses by including some of these newer techniques.\nContributing Student Pedagogy is an umbrella term that refers to a family of techniques that involves finding ways for students to become directly involved in the production of course content utilized by other students. Students not only make use of content provided by other students, but they come to view that content as valuable. This paper reports on initial efforts to incorporate an assignment based on contributing student pedagogy into a standard database course. Several iterations took place, with improvements made between the first and second iterations. Plans for future iterations are included and implications, not only for the database course, but other Computer Science courses, are discussed.", "authors": [{"name": "Henry A. Etlinger", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["active learning", "contributing student pedagogy", "database course design and tradeoffs"]}, {"title": "Session details: Paper - underserved populations", "link": "https://dl.acm.org/doi/10.1145/3249866", "abstract": "No abstract available.", "authors": [{"name": "Eric Aaron", "affiliation": "Wesleyan University"}], "tags": []}, {"title": "On the nature of fires and how to spark them when you're not there", "link": "https://dl.acm.org/doi/10.1145/2445196.2445290", "abstract": "Traditionally, computer science education research contributes new tools, techniques, and theories to improve institutionalized learning spaces e.g. classrooms. However, we take the position that the study and improvement of computer science learning spaces outside the classroom are just as important. We take a step toward illuminating the critical qualities of non-institutional computer science learning spaces by engaging in a grounded-theoretical examination of first-hand accounts of non-institutional learning. To further study the topic, we attempted to recreate (in the lab) a learning environment with many qualities that characterize non-institutional learning. To make this possible, we employed a modified version of CodeSpells -- a video game designed to teach Java programming in a way that engenders the sense of sustained, playful, creative exploration driven entirely by the learner. This study introduced 40 girls, ages 10 to 12, to programming for the first time. We use the results of both studies to develop a theoretical framework which we use to examine existing tools such as Scratch, Alice, and educational games in a new light.", "authors": [{"name": "Sarah Esper", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "William G. Griswold", "affiliation": "University of California, San Diego, San Diego, CA, USA"}, {"name": "Stephen R. Foster", "affiliation": "University of California, San Diego, San Diego, CA, USA"}], "tags": ["active learning", "grounded theory", "CS1", "gamification", "authentic practice", "informal learning spaces", "origin stories", "CS0"]}, {"title": "Cupcake cushions, scooby doo shirts, and soft boomboxes: e-textiles in high school to promote computational concepts, practices, and perceptions", "link": "https://dl.acm.org/doi/10.1145/2445196.2445291", "abstract": "In this paper, we present and discuss the use of electronic textiles (e-textiles) for introducing key computational concepts and practices and broadening participation and perceptions about computing. The starting point of our work was the design and implementation of a curriculum module using the Lilypad Arduino in a pre-AP high school class. To understand students' learning of concepts, practices, and perceptions of computing, we focused on the structure and functionality of circuits and program code and their design approaches to making and debugging their e-textile creations, and on their views on computing by examining pre-post interviews. Our discussion addresses the challenges and potential of using e-textiles materials and activities for designing introductory courses that can reach a broader student population.", "authors": [{"name": "Eunkyoung Lee", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Kristin Searle", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Deborah Fields", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Debora Lui", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Eliot Kaplan", "affiliation": "The Westminister Schools, Atlanta, GA, USA"}, {"name": "Yasmin B. Kafai", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}], "tags": ["electronic textiles", "K-12"]}, {"title": "Workifying games: successfully engaging african american gamers with computer science", "link": "https://dl.acm.org/doi/10.1145/2445196.2445292", "abstract": "We report on the implementation and evaluation of a three-year program to increase interest in studying computer science (CS) among African American male high school students. Over the course of 3 years, the Glitch Game Tester (Glitch) program employed 25 African American male high school students. These students tested pre-release digital games, full-time in the summer and part-time in the school year, with an hour of each day dedicated to learning introductory CS. Initially, only 20% of our participants expressed interest in pursing computing as a career. After Glitch, 65% have pursued some form of post-secondary computing studies. These outcomes, and the participants' enthusiasm for engaging in computing, are in sharp contrast to the crisis in African American male education and learning motivation. The research presented in this report discusses lessons learned through implementation of the Glitch program and higher education outcomes after graduation from the program.", "authors": [{"name": "Ken Perry", "affiliation": "Morehouse College, Atlanta, GA, USA"}, {"name": "Amy Bruckman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Charles Meadows", "affiliation": "Morehouse College, Atlanta, GA, USA"}, {"name": "Tom McKlin", "affiliation": "The Findings Group, Decatur, GA, USA"}, {"name": "Betsy DiSalvo", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["design", "intent to persist", "games", "learning"]}, {"title": "Session details: Paper - architecture and hardware", "link": "https://dl.acm.org/doi/10.1145/3249867", "abstract": "No abstract available.", "authors": [{"name": "Timothy Stanley", "affiliation": "Utah Valley University"}], "tags": []}, {"title": "Emumaker86: a hardware simulator for teaching CPU design", "link": "https://dl.acm.org/doi/10.1145/2445196.2445294", "abstract": "This paper describes a new GUI-based tool to teach undergraduate students to design their own CPUs. The tool was purpose-built to teach a wide range of computer organization topics, including digital logic, instruction set encoding, datapath and control units, and pipelining. A datapath builder allows microarchitecture building blocks, such as registers, ALUs, and multiplexors, to be laid out, wired together, and simulated. A control builder allows students to develop control states and microinstructions for the datapath. Both units are integrated with a full PC emulator, allowing student-designed processors to use emulated devices, such as drives, video, and I/O ports. A tutorial teaches students to use the simulator to build a pipelined RISC processor.", "authors": [{"name": "Michael Black", "affiliation": "American University, Washington, DC, USA"}, {"name": "Nathaniel Waggoner", "affiliation": "American University, Washington, DC, USA"}], "tags": ["digital logic", "datapath", "x86", "simulator", "processor"]}, {"title": "Helping students understand the datapath with simulators and crazy models", "link": "https://dl.acm.org/doi/10.1145/2445196.2445295", "abstract": "Undergraduate computer science programs at many small colleges often include only one course focused on hardware. Many important concepts are covered in such a course, including the basics of computer architecture. By the end of such a course, students should have a good understanding of how a binary machine instruction is executed in hardware. Unfortunately, even a simplified diagram of a datapath is often difficult for students to master. We present two approaches that use lab exercises to help to address this problem. In one, students build a working model of the datapath out of ordinary materials; in the other, a software simulator is designed and implemented. These approaches are described and their merits discussed.", "authors": [{"name": "James D. Teresco", "affiliation": "The College of Saint Rose, Albany, NY, USA"}, {"name": "Michael B. Gousie", "affiliation": "Wheaton College, Norton, MA, USA"}], "tags": ["laboratory assignments", "computer organization pedagogy", "modeling computer architecture", "simulating computer architecture"]}, {"title": "Step-by-step design and simulation of a simple CPU architecture", "link": "https://dl.acm.org/doi/10.1145/2445196.2445296", "abstract": "This paper describes a sequence of assignments, each building upon the next, leading students to a working simulation of a simple 8-bit CPU (Central Processing Unit). The design features a classic Von Neumann architecture comprising a simple data path with a few registers, a simple ALU (Arithmetic Logic Unit), and a microprogram to direct all the control signals. The first step involves the design of the ALU which is capable of eight basic operations. The second step guides students to construct a datapath complete with several 8-bit registers. The third step involves the design and implementation of a control unit which uses a microprogram to implement machine code instructions. The microprogram implements nine basic machine language instructions which are sufficient for writing many simple programs. The final step involves adding program memory and an input and output device to form a simple working simulation of a computer. At this point, students may hand-assemble code for their CPU and simulate its execution. All simulations are performed using a free and open source simulator called Logisim which performs digital logic simulations with the ability to build larger circuits from smaller subcircuits. Students can set an adjustable clock rate and observe the internal CPU state and registers as it retrieves instructions and steps through the microcode. The basic CPU architecture provides many opportunities for more advanced exercises, such as adding an instruction fetch unit, adding pipelining, or adding more machine language instructions. The assignments were introduced in a second year course on computer organization, providing an effective hands-on approach to understanding how a CPU actually operates.", "authors": [{"name": "Derek C. Schuurman", "affiliation": "Redeemer University College, Ancaster, ON, Canada"}], "tags": ["CPU simulation", "education", "computer organization"]}, {"title": "Session details: Paper - teaching CS1", "link": "https://dl.acm.org/doi/10.1145/3249868", "abstract": "No abstract available.", "authors": [{"name": "Jian Zhang", "affiliation": "Texas Woman's University"}], "tags": []}, {"title": "Introducing computer science in an integrated science course", "link": "https://dl.acm.org/doi/10.1145/2445196.2445298", "abstract": "This paper describes our implementation and experience of incorporating computer science concepts into a team-taught, first-year interdisciplinary course for prospective science majors at the University of Richmond. The course integrates essential concepts from each of five STEM disciplines: biology, chemistry, computer science, mathematics, and physics. Including computer science in this course faces three primary challenges: few of the students have any CS background; the time devoted to CS instruction is reduced compared to a traditional introductory CS course; and the spirit of the course requires the CS material to be highly integrated with the other disciplines. Here we discuss our experience from three-plus years of offering the course and its impact on the major/minor pool of students in our own discipline.", "authors": [{"name": "Barry Lawson", "affiliation": "University of Richmond, Richmond, VA, USA"}, {"name": "Doug Szajda", "affiliation": "University of Richmond, Richmond, VA, USA"}, {"name": "Lewis Barnett", "affiliation": "University of Richmond, Richmond, VA, USA"}], "tags": ["integrated science", "CS1"]}, {"title": "Teaching the security mindset to CS1 students", "link": "https://dl.acm.org/doi/10.1145/2445196.2445299", "abstract": "In this 21st century technological world, the inherent problems of computer security are becoming increasingly important, and it is critical that our students gain the necessary skills and knowledge, early in their academic programs, to handle these problems. Specifically, the lack of security mindset is responsible for many overlooked and exploitable security bugs in the computer programs that these students design. While learning the security concepts generally requires a more advanced knowledge of computer science, learning the security mindset can be, and should be, addressed as early as CS 1. Although the primary focus of any traditional CS 1 course is that of basic programming concepts, we believe that teaching the security mindset in this course is valuable and effective. In this paper we discuss the course that we have taught for four terms-an introductory course that teaches the security mindset to beginner programmers.\nWe start out by using the term-long incremental development of a security-sensitive program-the login program. Students develop the security mindset by thinking as both hackers and defenders, in order to catch and fix the logical and run-time errors that may lead to security breaches in the program.", "authors": [{"name": "Vahab Pournaghshband", "affiliation": "University of California, Los Angeles, Los Angeles, CA, USA"}], "tags": []}, {"title": "Constructive use of errors in teaching CS1", "link": "https://dl.acm.org/doi/10.1145/2445196.2445300", "abstract": "We developed an approach of learning from errors in CS1, taught in OOP. The approach is based on a set of principles, which include: cognitive conflict, constructivist characteristics, error attribution, self explanation, reflection, and refinement of concept images of fundamental OOP terms and mechanisms. The approach is presented, and some of its activities are illustrated. The developed activities aim at erroneous OOP conceptions that we have observed in a previous study. We applied the approach with CS1 college students, and conducted a comparative study, with an experiment group and a control group. We display a summary of the study's results, together with the students' opinions about the applied approach.", "authors": [{"name": "David Ginat", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}, {"name": "Ronit Shmalo", "affiliation": "SCE - Shamoon College of Engineering, Ashdod, Israel"}], "tags": ["learning from errors", "OOP", "constructivism"]}, {"title": "Session details: Paper - assessment", "link": "https://dl.acm.org/doi/10.1145/3249869", "abstract": "No abstract available.", "authors": [{"name": "Eric Snow", "affiliation": "SRI International"}], "tags": []}, {"title": "Computing creativity: divergence in computational thinking", "link": "https://dl.acm.org/doi/10.1145/2445196.2445302", "abstract": "Conventionally creativity is often conceived as an aptitude to be discovered in an individual that cannot be mathematically measured. But the concept of creative thinking as a divergence from a standard \"norm\" is used in creativity research for the purpose of assessing creativity and is also linked to non-traditional or creative processes that lead to unique and divergent artifacts [1,2]. Using Computational Thinking Pattern Analysis (CTPA)[3], the divergence between implemented computational thinking patterns in a student-created game, and that game's tutorial \"norm\" is calculated as an indicator of creativity. Through a case study of one teacher using three unique learning conditions, CTPA's computed divergence is explored as a valid measurement of creativity in these student games.", "authors": [{"name": "Vicki E. Bennett", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "KyuHan Koh", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Alexander Repenning", "affiliation": "University of Colorado, Boulder, CO, USA"}], "tags": ["computational thinking", "computational thinking pattern analysis", "ACM proceedings", "creativity measurement", "game design"]}, {"title": "On plugging \"unplugged\" into CS classes", "link": "https://dl.acm.org/doi/10.1145/2445196.2445303", "abstract": "A variety of experience reports and studies has shown Computer Science Unplugged to be an effective resource for outreach, and it has been suggested to build upon these benefits to augment teaching in a regular classroom as well. Based upon an analysis of the learning objectives, \"Unplugged\" activities seem to be particularly well suited to serve as an introduction to Computer Science concepts and algorithms; whether or not the effectiveness of using these activities compares to that of traditional teaching methods, however, has remained an open question so far. We present the first experimental study of using Computer Science Unplugged material as part of a regular Computer Science class in lower secondary education. The evaluation of our study affirmatively answers the above question, i.e., teaching using \"Unplugged\" activities can be at least as effective as when following more conventional approaches.", "authors": [{"name": "Renate Thies", "affiliation": "Cusanus-Gymnasium Erkelenz and Technische Universit\u00e4t Dortmund, Dortmund, Germany"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}], "tags": ["computer science unplugged", "assessment"]}, {"title": "Assessment of computer science learning in a scratch-based outreach program", "link": "https://dl.acm.org/doi/10.1145/2445196.2445304", "abstract": "Many institutions have created and deployed outreach programs for middle school students with the goal of increasing the number and diversity of students who later pursue careers in computer science. While these programs have been shown to increase interest in computer science, there has been less work on showing whether participants learn computer science content.\nWe address two questions, one specific, and the other more general: (1) \"What computer science did our middle school students learn in our interdisciplinary two-week summer camp?\" (2) \"How can computer science concepts be assessed in the context of Scratch-based outreach programs\"? We address both questions by presenting the design of our summer camp, an overview of our curriculum, our assessment methodology, and our assessment results.\nThough the sample size is not statistically significant, the results show that a two-week, interdisciplinary, non-academic summer camp can be effective not only for engaging students, but also for imparting CS content. In just two weeks, with a curriculum not entirely focused on computer science, students displayed competence with event-driven programming, initialization of state, message passing, and say/sound synchronization. We have employed assessment methodologies that avoid written exams, an approach both outreach and classroom-based programs may find useful.", "authors": [{"name": "Gerardo Aldana", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Diana Franklin", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Michelle Len", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Chelsea Laird", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Phillip Conrad", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Paulo Almeida-Tanaka", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Jessica Suarez", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Charlotte Hill", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Bryce Boe", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Greg Dreschler", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Felicia Lopez", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Katy Nilsen", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Brynn Kiefer", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Robert Waite", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Christine Pham", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}], "tags": ["k-12 education", "diversity", "assessment", "scratch", "outreach"]}, {"title": "Growing female undergraduate enrollments in computer science: some successful approaches", "link": "https://dl.acm.org/doi/10.1145/2445196.2445306", "abstract": "Computing has seen dramatic decreases in the major across the past decade, especially among under-represented populations. Recently, however, some institutions have begun to see an increase. What are these departments doing to reverse this historical trend? Learn about practices undertaken by U.S. universities that have increased undergraduate enrollments overall, with particular increases in female enrollment and retention. Computer science faculty from Cal Poly San Luis Obispo, Virginia Tech and Florida A&M will present their interventions and results. National Center for Women & Information Technology will share results from other institutions that also have used evidence-based practices resulting in increased enrollments and distribute materials describing those practices.", "authors": [{"name": "Manuel A. Perez-Quinones", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Wendy M. DuBow", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Jason T. Black", "affiliation": "Florida A&M University, Tallahassee, FL, USA"}, {"name": "Ignatios Vakalis", "affiliation": "Cal Poly, San Luis Obispo, San Luis Obispo, CA, USA"}], "tags": ["gender", "recruiting", "diversity"]}, {"title": "Rediscovering the passion, beauty, joy, and awe: making computing fun again, part 6", "link": "https://dl.acm.org/doi/10.1145/2445196.2445308", "abstract": "In his SIGCSE 2007 keynote, Grady Booch exhorted us to share the \"passion, beauty, joy and awe\" (PBJA) of computing. This led to sessions that have provided a forum for sharing: What we've done: Highlighting successful PBJA initiatives the presenters have undertaken or seen and wish to trumpet; What we should do (curriculum): Pointing out where our curriculum is lacking in PBJA, and how to fix it; How we should do it (pedagogy): Sharing how a change in attitude/focus/etc. can make strides to improving PBJA.\nThis year we've gathered educators whose intro class numbers are exploding or who have instituted very creative and successful paths into the major. In this panel we will explore best practices in these crucial early years, in terms of extolling the PBJA of computing.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Valerie Barr", "affiliation": "Union College, Schenectady, NY, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["computer science education", "alternative entries into the major"]}, {"title": "AP CS A exploration of a change from GridWorld to labs", "link": "https://dl.acm.org/doi/10.1145/2445196.2445310", "abstract": "The AP CS A program is exploring the possibility of moving from the utilization of the GridWorld case study to the inclusion of several in-class laboratory exercises, beginning in 2014-2015 or later. The Development Committee believes labs may achieve many benefits of the past case studies, but a lab format will allow teachers more flexibility in teaching and a more agile development cycle for new materials. This Special Session will review the motivations, experiences, limitations, and constraints of case studies, motivations for the use of in-class laboratory exercises, and some components of three laboratory exercises that currently are under development by the AP CS A program.", "authors": [{"name": "Lien Diaz", "affiliation": "College Board, Atlanta, Georgia, USA"}, {"name": "Renee L. Ciezki", "affiliation": "Estrella Mountain Community College, Glendale, Arizona, USA"}, {"name": "Henry M. Walker", "affiliation": "Grinnell College, Grinnell, Iowa, USA"}, {"name": "Robert Glen Martin", "affiliation": "School for the Talented and Gifted, Dallas, Texas, USA"}], "tags": ["active learning", "computing applications", "case studies", "laboratory exercises"]}, {"title": "Revision of the SE 2004 curriculum model", "link": "https://dl.acm.org/doi/10.1145/2445196.2445312", "abstract": "Software Engineering 2004: Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering (SE 2004) [1] is one volume in a set of computing curricula adopted and supported by the ACM and the IEEE Computer Society. In order to keep the software engineering guidelines up to date the two professional societies began a review and revision project in early 2011. This special session will present the results of the review, present a first draft of the revision, and provide time for discussion and input from the computing education community.", "authors": [{"name": "Jeff Offutt", "affiliation": "George Mason University, Fairfax, VA, USA"}, {"name": "Mark J. Sebern", "affiliation": "Milwaukee School of Engineering, Milwaukee, WI, USA"}, {"name": "David Budgen", "affiliation": "University of Durham, Durham, United Kingdom"}, {"name": "Gregory W. Hislop", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Mark Ardis", "affiliation": "Stevens Institute of Technology, Hoboken, NJ, USA"}, {"name": "Willem Visser", "affiliation": "University of Stellenbosch, Stellenbosch, South Africa"}], "tags": ["curriculum guideline", "software engineering education", "se 2004"]}, {"title": "Session details: Paper - tools for teaching the core", "link": "https://dl.acm.org/doi/10.1145/3249870", "abstract": "No abstract available.", "authors": [{"name": "Marie Bienkowski", "affiliation": "SRI International"}], "tags": []}, {"title": "Teaching garbage collection without implementing compiler or interpreters", "link": "https://dl.acm.org/doi/10.1145/2445196.2445314", "abstract": "Given the widespread use of memory-safe languages, students must understand garbage collection well. Following a constructivist philosophy, an effective approach would be to have them implement garbage collectors. Unfortunately, a full implementation depends on substantial knowledge of compilers and runtime systems, which many courses do not cover or cannot assume.\nThis paper presents an instructive approach to teaching GC, where students implement it atop a simplified stack and heap. Our approach eliminates enormous curricular dependencies while preserving the essence of GC algorithms. We take pains to enable testability, comprehensibility, and facilitates debugging. Our approach has been successfully classroom-tested for several years at several institutions.", "authors": [{"name": "Jay McCarthy", "affiliation": "Brigham Young University, Provo, UT, USA"}, {"name": "Robert Bruce Findler", "affiliation": "Northwestern University, Chicago, IL, USA"}, {"name": "Arjun Guha", "affiliation": "Cornell University, Ithaca, NY, USA"}, {"name": "Shriram Krishnamurthi", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Gregory H. Cooper", "affiliation": "Google, Inc., Mountain View, CA, USA"}], "tags": ["garbage collection"]}, {"title": ".NET gadgeteer: a new platform for K-12 computer science education", "link": "https://dl.acm.org/doi/10.1145/2445196.2445315", "abstract": "In this paper we present the features of a new physical device prototyping platform called Microsoft .NET Gadgeteer along with our initial experiences using it to teach computer science in high schools. Gadgeteer makes it easy for newcomers to electronics and computing to plug together modules with varied functionality and to program the resulting system's behavior. We believe the platform is particularly suited to teaching modern programming concepts such as object-oriented, event-based programming and it could be a timely addition to established teaching tools given the current interest in improving high school computer science education in some regions. We have run a number of pilot studies in the US and in the UK with students of varying age and ability. Our results indicate that the tangible and expressive nature of Gadgeteer helps to engage and motivate a diverse set of students. We were also pleasantly surprised by the level of polish and sophistication of the devices which were built. We hope to further explore the potential of Gadgeteer for teaching in future work and we encourage others to build on our experiences.", "authors": [{"name": "James Scott", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Steve Hodges", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Kerry Hammil", "affiliation": "Microsoft, Redmond, WA, USA"}, {"name": "Sue Sentance", "affiliation": "Anglia Ruskin University, Chelmsford, United Kingdom"}, {"name": "Colin Miller", "affiliation": "Microsoft, Redmond, WA, USA"}, {"name": "Scarlet Schwiderski-Grosche", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Steven Johnston", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}, {"name": "Nicolas Villar", "affiliation": "Microsoft Research Cambridge, Cambridge, United Kingdom"}], "tags": ["Microsoft .NET gadgeteer", "prototyping platform", "K-12 computer science education", "modular hardware", "tactile learning"]}, {"title": "Using FPGAs as a reconfigurable teaching tool throughout CS systems curriculum", "link": "https://dl.acm.org/doi/10.1145/2445196.2445316", "abstract": "This paper describes the adaptation of several common computer science courses to include the use of FPGA-based systems for project and assignment work. One of the principal challenges in modern curriculum design is balancing between breadth and depth of course topics while simultaneously reinforcing the interconnections among topics in the field. To address these challenges, faculty are often forced to approximate real-world systems, sometimes at the expense of any hands-on experience. At Coastal Carolina, we have integrated FPGA systems first used in our hardware-based courses into several higher-level systems and applications courses. This allows us to leverage student familiarity with a hands-on, flexible hardware platform and also strengthens the relationships between different subfields within computer science. We discuss both the changes made to our curriculum and the effectiveness of our approach.", "authors": [{"name": "William M. Jones", "affiliation": "Coastal Carolina University, Conway, SC, USA"}, {"name": "H. Erin Rickard", "affiliation": "Coastal Carolina University, Conway, SC, USA"}, {"name": "D. Brian Larkins", "affiliation": "Coastal Carolina University, Conway, SC, USA"}], "tags": ["hardware platforms", "curriculum", "fpga", "education"]}, {"title": "Session details: Paper - parallel distributed computing", "link": "https://dl.acm.org/doi/10.1145/3249871", "abstract": "No abstract available.", "authors": [{"name": "Michael Helmick", "affiliation": "Google"}], "tags": []}, {"title": "MDAT: a multithreading debugging and testing tool", "link": "https://dl.acm.org/doi/10.1145/2445196.2445318", "abstract": "MDAT is a multithreaded testing and debugging tool designed for students learning to program with multiple threads. MDAT automatically generates random schedules to allow students to more thoroughly test their programs. The design of MDAT takes full control over the scheduling allowing a failing run to be reproduced. To assist debugging, MDAT includes an output trace that shows the status of all threads, locks, and semaphores in the program and has an interactive mode that allows students to try out their own schedules. MDAT was effective at detecting deadlock and mutual exclusion violations in student submissions of the unisex restroom problem.", "authors": [{"name": "Rochelle Palting", "affiliation": "Seattle University, Seattle, WA, USA"}, {"name": "Eric Larson", "affiliation": "Seattle University, Seattle, WA, USA"}], "tags": ["debugging", "synchronization", "multithreading", "concurrency", "testing"]}, {"title": "Pattern programming approach for teaching parallel and distributed computing", "link": "https://dl.acm.org/doi/10.1145/2445196.2445319", "abstract": "In this paper, we describe an approach for teaching parallel and distributed computing at the undergraduate level using computational patterns. The goal is to promote higher-level structured design for parallel programming and make parallel programming easier and more scalable. A pattern programming framework has been developed to create a distributed application that avoids the need to write code in low level message--passing APIs such as MPI. Several patterns have been implemented including workpool, pipeline, synchronous and iterative all-to-all, and stencil. We have redesigned a regular senior undergraduate parallel programming course to begin with a pattern strategy using our framework and provide a detailed syllabus around patterns.", "authors": [{"name": "Clayton Ferner", "affiliation": "University of North Carolina Wilmington, Wilmington, NC, USA"}, {"name": "Barry Wilkinson", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Jeremy Villalobos", "affiliation": "Formerly of University of North Carolina Charlotte, Charlotte, NC, USA"}], "tags": ["undergraduate education", "pattern programming"]}, {"title": "Parallel from the beginning: the case for multicore programming in thecomputer science undergraduate curriculum", "link": "https://dl.acm.org/doi/10.1145/2445196.2445320", "abstract": "The computing landscape has shifted towards multicore architectures. To learn about software development, it is increasingly important for students to gain hands-on parallel programming experience in multicore environments. This experience will be significantly different from programming for uniprocessors, because it involves a profound understanding of how to write software that is (1) free of concurrency bugs and (2) able to effectively utilize the underlying parallel hardware architecture. We present our work at Yonsei University and The University of Sydney to teach parallel programming to first and second-year undergraduate students. Our objective is to introduce parallelism early on in the curriculum, to instill it as a first principle of computation. We introduce a series of five parallel programming course modules suitable for a one semester introductory programming course. Each module teaches one fundamental concept of parallel programming: parallelism and execution indeterminism, thread-and-lock based programming, performance of parallel programs, hardware acceleration using OpenCL, and stream-parallel programming with StreamIt. We report our experience from four course offerings (2008-2011) at Yonsei University, and two course offerings at The University of Sydney. Over 73% of students surveyed enjoyed this multicore programming experience and preferred exposure to parallelism at this early stage of their CS education. Our course has been awarded an Intel microgrant for \"Parallelism in the Classroom\", and it is available online at Intel's Multicore Curriculum Initiative Website.", "authors": [{"name": "Yousun Ko", "affiliation": "Yonsei University, Seoul, South Korea"}, {"name": "Bernhard Scholz", "affiliation": "The University of Sydney, Sydney, Australia"}, {"name": "Bernd Burgstaller", "affiliation": "Yonsei University, Seoul, South Korea"}], "tags": ["course design", "multicore computing development/education", "introductory programming", "computer science education"]}, {"title": "Session details: Paper - teacher preparation", "link": "https://dl.acm.org/doi/10.1145/3249872", "abstract": "No abstract available.", "authors": [{"name": "Shaileen Pokress", "affiliation": "Massachusetts Institute of Technology"}], "tags": []}, {"title": "Pair programming for middle school students: does friendship influence academic outcomes?", "link": "https://dl.acm.org/doi/10.1145/2445196.2445322", "abstract": "Research shows the benefits of pair programming for retention and performance in computing, but little is known about how relationship dynamics influence outcomes. We describe results from our study of middle school students programming games using Alice and pair programming. From our analysis using statistical procedures that take into account the interdependence of pair data, we found evidence for partner influence moderated by the role of confidence over improvements in Alice programming knowledge in friend partnerships but not non-friend partnerships. We discuss implications for researchers and educators.", "authors": [{"name": "Jill Denner", "affiliation": "Education, Training, Research Associates, Scotts Valley, CA, USA"}, {"name": "Eloy Ortiz", "affiliation": "Education, Training, Research Associates, Scotts Valley, CA, USA"}, {"name": "Amy C. Hartl", "affiliation": "Florida Atlantic University, Davie, FL, USA"}, {"name": "Dawn DeLay", "affiliation": "Florida Atlantic University, Davie, FL, USA"}, {"name": "Brett Laursen", "affiliation": "Florida Atlantic University, Davie, FL, USA"}, {"name": "Linda Werner", "affiliation": "University of California, Santa Cruz, Santa Cruz, CA, USA"}, {"name": "Shannon Campe", "affiliation": "Education, Training, Research Associates, Scotts Valley, CA, USA"}], "tags": ["computational thinking", "middle school", "pair programming", "game programming", "friendship", "alice"]}, {"title": "CS4Impact: measuring computational thinking concepts present in CS4HS participant lesson plans", "link": "https://dl.acm.org/doi/10.1145/2445196.2445323", "abstract": "In this paper, we aim to directly measure a CS4HS workshop's participating teachers' ability to synthesize CSTA computational thinking core concepts into actionable lesson plans for courses in their current teaching repertoire. Participants were expected to present a lesson plan on the final day of the workshop, highlighting the integration of their classroom curriculum with computing and computational thinking skills. We present our evaluation rubric, used to rate the teachers effective use of the computational thinking core concepts in their lesson plans, and describe how our method of evaluation may more accurately gauge the overall impact that CS4HS workshops have on their participants.", "authors": [{"name": "Heather Bort", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Dennis Brylow", "affiliation": "Marquette University, Milwaukee, WI, USA"}], "tags": ["lesson planning", "CS4HS", "computational thinking", "K-12 outreach"]}, {"title": "Going mobile with app inventor for android: a one-week computing workshop for K-12 teachers", "link": "https://dl.acm.org/doi/10.1145/2445196.2445324", "abstract": "More and more students are interested in developing their own mobile applications. Incorporating mobile technology into classrooms can greatly capture student attention, better student engagement, and improve student achievement. In this paper, we present our experience, findings, and lessons learned from conducting a one-week App Inventor for Android summer computing workshop for K-12 teachers. Our workshop focuses on using App Inventor, a drag-and-drop Android development environment, introduce computing concepts to K-12 teachers in all subjects. During the workshop the teachers developed curriculum applications for the subjects they will teach in the following semesters with the help of our workshop tutors. Workshop assessment results show a 29.5% increase in confidence level in teaching computer science and a 109% computing knowledge level increase.", "authors": [{"name": "Cheng-Hsien Lin", "affiliation": "Lamar University, Beaumont, Texas, USA"}, {"name": "Jiangjiang Liu", "affiliation": "Lamar University, Beaumont , Texas, USA"}, {"name": "Ethan Philip Hasson", "affiliation": "Lamar University, Beaumont, Texas, USA"}, {"name": "Phillip Potter", "affiliation": "Lamar University, Beaumont , Texas, USA"}, {"name": "Zebulun David Barnett", "affiliation": "Lamar University, Beaumont, Texas, USA"}, {"name": "Michael Singleton", "affiliation": "Lamar University, Beaumont, Texas, USA"}], "tags": ["curriculum", "computer science education", "information systems education"]}, {"title": "Session details: Paper - diversity", "link": "https://dl.acm.org/doi/10.1145/3249873", "abstract": "No abstract available.", "authors": [{"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "A large-scale quantitative study of women in computer science at Stanford University", "link": "https://dl.acm.org/doi/10.1145/2445196.2445326", "abstract": "In this paper, we analyze gender dynamics in the undergraduate Computer Science program at Stanford University through a quantitative analysis of 7209 academic transcripts and 536 survey responses. We examine previously studied effects as well as present new findings. We also introduce Fisher's Noncentral Hypergeometric Distribution as a model for estimating the impact of program changes on underrepresented populations and explain why it is a more robust measure than changes in the percentage of minority participants.", "authors": [{"name": "Katie Redmond", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Sarah Evans", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["gender diversity", "women in computer science"]}, {"title": "From difference to diversity: including women in the changing face of computing", "link": "https://dl.acm.org/doi/10.1145/2445196.2445327", "abstract": "In this paper we argue that gender difference thinking, with regards to attitudes towards computing, can work against diversity in the field of computing. Indeed, gender difference approaches to the participation of women in computing have not provided adequate explanations for women's declining interest in computer science (CS) and related technical fields. As yet \"The Changing Face of Computing\" has not led to significant changes in the levels of women's participation. Indeed, the number of computer science degrees awarded to women has steadily declined since 1984. Our objective in this paper is to present a critique on why gender difference approaches may be problematic and propose that a cultural approach offers a more effective framework for investigating and increasing women's participation in CS. We support our findings and recommendations from the most recent research in a series of studies carried out at Carnegie Mellon University (CMU) over the past 10 years. In brief, we found the Women-CS fit at CMU continues to present a positive and encouraging story. Our findings demonstrate that under certain conditions women, alongside their male peers, can fit successfully into a CS environment and help shape that environment and computing culture, for the benefit of everyone, without accommodating presumed gender differences or any compromises to academic integrity.", "authors": [{"name": "Jeria L. Quesenberry", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Carol Frieze", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["women", "women-cs fit", "diversity", "gender differences", "retention", "culture", "computer science education", "gender similarities"]}, {"title": "Are IT interventions for girls a special case?", "link": "https://dl.acm.org/doi/10.1145/2445196.2445328", "abstract": "Over the past two decades, numerous interventions have been conducted to inform and inspire schoolgirls into studies and a career in computing and technology. Two successful intervention of this kind have been held over a number of years, and this paper presents the initial stages of a longitudinal study which evaluates the qualitative data from the survey from six Australian events in total. The paper explores the motivational aspects of the presentations in the context of the responses from students and teachers, and it highlights the importance of ensuring that presentation sessions at these events are fun, funny and interesting, and the importance of considering the age of the target audience. It concludes by raising a concern.", "authors": [{"name": "Jenine Beekhuyzen", "affiliation": "DeakinUniversity, Geelong, Australia"}, {"name": "Jo Coldwell-Neilson", "affiliation": "Deakin University, Geelong, Australia"}, {"name": "Annemieke Craig", "affiliation": "Deakin University, Geelong, Australia"}], "tags": ["K-12 education", "gender and diversity", "girls and it", "intervention", "outreach programs"]}, {"title": "The revolution will be televised: perspectives on massive open online education", "link": "https://dl.acm.org/doi/10.1145/2445196.2445330", "abstract": "No abstract available.", "authors": [{"name": "Nick Parlante", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Fred G. Martin", "affiliation": "University of Massachusetts, Lowell, Lowell, MA, USA"}], "tags": ["massive open online courses", "MOOC", "online education"]}, {"title": "Engaging mathematical reasoning exercises", "link": "https://dl.acm.org/doi/10.1145/2445196.2445332", "abstract": "No abstract available.", "authors": [{"name": "Joan Krone", "affiliation": "Denison University, Granville, OH, USA"}, {"name": "Murali Sitaraman", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Joseph Hollingsworth", "affiliation": "Indiana University Southeast, New Albany, IN, USA"}, {"name": "Bruce Weide", "affiliation": "The Ohio State University, Columbus, OH, USA"}, {"name": "Jason Hallstrom", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["induction", "verification", "correctness proofs", "invariants", "discrete structures", "programming by contract", "specification"]}, {"title": "How AP CS A matches college courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445334", "abstract": "The Advanced Placement (AP) Program provides a framework for high school students to obtain college credit and/or placement for work done in high school. Toward this end, the College Board outlines course descriptions and organizes examinations in several dozen disciplines, including computer science. To meet its goals, each AP course must align with college courses, so students taking an AP course will master needed content Several approaches are used to monitor this connection between AP courses and college-level courses. This session will review these approaches, considering how the AP CS A course matches introductory college computer science courses.", "authors": [{"name": "Lien Diaz", "affiliation": "College Board, Atlanta, Georgia, USA"}, {"name": "Renee L. Ciezki", "affiliation": "Estrella Mountain Community College, Glendale, Arizona, USA"}, {"name": "Henry M. Walker", "affiliation": "Grinnell College, Grinnell, Iowa, USA"}, {"name": "Frances E. Hunt", "affiliation": "Educational Testing Service, Princeton, New Jersey, USA"}], "tags": ["active learning", "computing applications", "case studies", "laboratory exercises"]}, {"title": "Stories from the scratch community: connecting with ideas, interests, and people", "link": "https://dl.acm.org/doi/10.1145/2445196.2445336", "abstract": "This special session aims to provoke discussion about new strategies for engaging young people in computer programming, drawing on experiences of educators and young people using the Scratch programming environment and online communities. The session will combine several different formats, including research presentations and analysis by two members of the team that develops and supports Scratch, short presentations and demonstrations by five educators and young people working with Scratch, and discussions among audience participants.", "authors": [{"name": "Mitchel Resnick", "affiliation": "MIT Media Lab, Cambridge, MA, USA"}, {"name": "Karen Brennan", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["programming", "computational thinking", "learning", "education", "community", "scratch"]}, {"title": "Session details: Paper - assessment in programming courses", "link": "https://dl.acm.org/doi/10.1145/3249874", "abstract": "No abstract available.", "authors": [{"name": "Karl Schmitt", "affiliation": "University of Maryland, College Park"}], "tags": []}, {"title": "Measuring increased engagement using tablet PCs in a code review class", "link": "https://dl.acm.org/doi/10.1145/2445196.2445338", "abstract": "The Programming Studio in the University of Illinois Computer Science department is a required course in which small groups of students participate in weekly code reviews of each other's programs. To increase student engagement in the discussions, Tablet PCs were introduced for several weeks in the middle of the semester. By recording the discussions before, during, and after the use of tablets, we measure the effectiveness of this intervention. In doing so, we develop a simple metric to measure the \"active engagement\" of the participants. We found each section was significantly more engaging when using Tablet PCs (p<0.0001) and the large majority of individual participants were more engaged. This paper contributes both an objective measurement of \"active engagement\" and a successful intervention in a programming studio-type course.", "authors": [{"name": "Wade Fagen", "affiliation": "Univ. of Illinois, Urbana, IL, USA"}, {"name": "Samuel Kamin", "affiliation": "Univ. of Illinois, URBANA, IL, USA"}], "tags": ["software engineering", "education", "tablet computers", "audio analysis"]}, {"title": "What are we thinking when we grade programs?", "link": "https://dl.acm.org/doi/10.1145/2445196.2445339", "abstract": "This paper reports on a mixed methods study which examines how four experienced instructors approached the grading of a programming problem. Two instructors used a detailed, analytic approach and two instructors employed a holistic approach. One instructor exhibited elements of a primary trait approach. Even though the four instructors used different grading scales and philosophies, their raw scores were highly correlated (Spearman's rho of .81) supporting the conclusion that experienced instructors usually agree on whether a program is 'very good' or 'very bad'. Clearly there is no single right way to grade programs. Further discourse should be encouraged for the benefit of both educators and students.", "authors": [{"name": "Brian Hanks", "affiliation": "BFH Educational Consulting, Seattle, WA, USA"}, {"name": "Laurie Murphy", "affiliation": "Pacific Lutheran University, Tacoma, WA, USA"}, {"name": "Sue Fitzgerald", "affiliation": "Metropolitan State University, St. Paul, MN, USA"}, {"name": "Renee McCauley", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Raymond Lister", "affiliation": "University of Technology, Sydney, Sydney, Australia"}], "tags": ["rubrics", "programming", "scoring", "grading"]}, {"title": "Automated online grading for virtual machine-based systems administration courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445340", "abstract": "We present a system for automatically and iteratively grading student work in a Systems Administration course. This system can grade and give feedback regarding live (running) virtual machines the students have configured. It is appropriate for both face-to-face and online course offerings.", "authors": [{"name": "Edwin Rudolph", "affiliation": "University of West Georgia, Carrollton, GA, USA"}, {"name": "Lewis Baumstark", "affiliation": "University of West Georgia, Carrollton, GA, USA"}], "tags": ["automated grading", "virtual machines", "online grading", "networking", "systems administration"]}, {"title": "Session details: Paper - active learning", "link": "https://dl.acm.org/doi/10.1145/3249875", "abstract": "No abstract available.", "authors": [{"name": "Richard A. Brown", "affiliation": "St. Olaf College"}], "tags": []}, {"title": "Building knowledge and confidence with mediascripting: a successful interdisciplinary approach to CS1", "link": "https://dl.acm.org/doi/10.1145/2445196.2445342", "abstract": "As the Media Computing approach has shown, writing programs that make images excites a wide variety of students. In this paper, we report on five years of experience with a new approach to media computation, which we call \"media scripting\". In our introductory class, students build images by interactively scripting an application, so they can experiment easily and mix work \"by hand\" and \"by code\"; we collaborate with studio art faculty, so students build works meeting design criteria; and we emphasize multiple paradigms, so students make images using functional, declarative, imperative, and object-oriented techniques. Our approach has proven quite successful--enrollments are up (at least 33% in CS1, 50% in CS2) and we attract more women (currently 40% of the students in the first course, 25% of those in the second course). Other outcomes are equally positive. For example, comparative data show that our students gain significantly more confidence in their abilities than students in other introductory science courses.", "authors": [{"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Janet Davis", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Jerod Weinman", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["scheme", "multi-paradigm programing", "CS1", "media computation", "interdisciplinary approaches", "functional programming", "computer science education", "scripting"]}, {"title": "The inverted-lecture model: a case study in computer architecture", "link": "https://dl.acm.org/doi/10.1145/2445196.2445343", "abstract": "This paper reports on an experience in using the inverted-lecture model (\"flipping the classroom\") in computer architecture. The first author concurrently taught two courses in computer architecture. One of these courses was CSC/ECE 506: Architecture of Parallel Computers, an introductory Graduate-level course, taught via lecture both residentially and distance-ed. The other was the CSC 456: Computer Architecture and Multiprocessing, a senior-level undergraduate course which was \"flipped.\" Students in the inverted-lecture class exhibited high levels of engagement. Their performance on exams was not quite up to the level of the students in the graduate class, but the difference was not wide. From this experience, we offer observations and suggestions about inverted classes in general.", "authors": [{"name": "Barry W. Peddycord", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Edward F. Gehringer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["inverted-lecture model", "flipped classroom", "inverted classroom", "case study"]}, {"title": "Learning computer science in the \"comfort zone of proximal development\"", "link": "https://dl.acm.org/doi/10.1145/2445196.2445344", "abstract": "As computer science faculty, we are always looking for better ways to recruit and retain new majors. One way to achieve this goal is to incorporate material into the introductory courses that lies within the intersection of the student's \"zone of proximal development\" (which contains concepts that the student is capable of understanding) and \"comfort zone\" (which contains concepts that motivate the student and are presented in a way in which the student is familiar and comfortable). We refer to this region as the \"comfort zone of proximal development.\" In this paper, we present a \"comfort zone of proximal development\" that we have created for computer science students which consists of a collaborative learning environment where programming concepts are introduced with gaming applications.", "authors": [{"name": "Tim Gegg-Harrison", "affiliation": "Winona State University, Winona, Minnesota, USA"}, {"name": "Nicole Anderson", "affiliation": "Winona State University, Winona, Minnesota, USA"}], "tags": ["active learning", "CS1", "mobile game development", "scaffolding", "pair programming/teaching"]}, {"title": "Session details: Paper - tools to support novice programmer", "link": "https://dl.acm.org/doi/10.1145/3249876", "abstract": "No abstract available.", "authors": [{"name": "Brad Richards", "affiliation": "University of Puget"}], "tags": []}, {"title": "The simulation creation toolkit: an initial exploration into making programming accessible while preserving computational thinking", "link": "https://dl.acm.org/doi/10.1145/2445196.2445346", "abstract": "Computational thinking aims to outline fundamental skills from computer science that everyone should learn. These skills include problem formulation, logically organizing data, automating solutions through algorithmic thinking, and representing data through abstraction. One aim of the NSF is to integrate these and other computational thinking concepts into the classroom. This paper introduces a tool called the Simulation Creation Toolkit wherein users apply high-level agent interactions called Computational Thinking Patterns (CTPs) to create simulations. Programming at the Computational Thinking Pattern level allows users to directly create agent interactions in a simulation by employing generic icons acting out a scientific phenomenon they are trying to represent. The Simulation Creation Toolkit aims to preserve the computational thinking benefits of simulation creation while enabling higher-level implementation of agent behaviors. Initial study data collected from sixth grade students with no prior programming experience indicates that students can work the mechanics necessary to create simulations in the classroom environment using the Simulation Creation Toolkit.", "authors": [{"name": "Alexander Repenning", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Clayton H. Lewis", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Ashok Ram Basawapatna", "affiliation": "University of Colorado, Boulder, CO, USA"}], "tags": ["computational thinking patterns", "computational thinking", "scalable game design", "university programming education", "middle school computer education", "student observation"]}, {"title": "Middle school students using Alice: what can we learn from logging data?", "link": "https://dl.acm.org/doi/10.1145/2445196.2445347", "abstract": "There is growing interest in how we can use computer logging data to improve computational tools and pedagogies to engage children in complex thinking and self-expression, but our techniques lag far behind our theories. Only recently have learning scientists begun to measure, collect, analyze, and report how data informs the science of children's learning. In this paper, we describe our initial efforts towards developing tools to mine computer logging data for information on how to enhance learning opportunities. The data were collected as part of an NSF-funded project, and include logs from 320 middle school students using Alice to program computer games in semester-long courses. We describe some lessons learned and decisions made in the process of reconstructing high-level user actions in Alice from low-level Alice logs.", "authors": [{"name": "Linda Werner", "affiliation": "University of California, Santa Cruz, Santa Cruz, CA, USA"}, {"name": "Jill Denner", "affiliation": "Education, Training, Research Associates, Scotts Valley, CA, USA"}, {"name": "Charlie McDowell", "affiliation": "University of California, Santa Cruz, Santa Cruz, CA, USA"}], "tags": ["educational data mining", "Alice", "middle school", "education"]}, {"title": "Bug catcher: a system for software testing competitions", "link": "https://dl.acm.org/doi/10.1145/2445196.2445348", "abstract": "Bug Catcher is a web-based system for running software testing competitions. While programming competitions are a way to engage students, they require students to have coding experience. On the other hand, software testing competitions may reach high school students that do not have access to a programming course. In this paper, we present the Bug Catcher system and the results from four sessions of a competition that include a total of 94 high school students. Bug Catcher provides students with requirements, buggy code, and input fields to enter test cases. We observed that most students began entering test cases based on requirements, but then many took an interest in the code as time went on. Our results show that 90% of students would recommend this activity in the future and 72% of students report that the activity increased their interest in Computer Science. Students also provided feedback on the system from the perspective of students without background in Computer Science, allowing us to create and modify features for future use.", "authors": [{"name": "Jessica Gonzolez", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Quentin Mayo", "affiliation": "University of North Texas, Denton, TX, USA"}, {"name": "Michael Burton", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Renee Bryce", "affiliation": "University of North Texas, Denton, TX, USA"}, {"name": "Chelynn Day", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Tara Noble", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Daniel Bokser", "affiliation": "Utah State University, Logan, UT, USA"}, {"name": "Aaron Andrews", "affiliation": "Utah State University, Logan, UT, USA"}], "tags": ["software testing competition", "computer science outreach"]}, {"title": "Session details: Paper - SE and professional practice", "link": "https://dl.acm.org/doi/10.1145/3249877", "abstract": "No abstract available.", "authors": [{"name": "Colleen Lewis", "affiliation": "Harvey Mudd College"}], "tags": []}, {"title": "Analyzing PHP frameworks for use in a project-based software engineering course", "link": "https://dl.acm.org/doi/10.1145/2445196.2445350", "abstract": "Given the popularity of PHP frameworks used in developing web-based applications, a comparative study is conducted to determine which framework is best suited for incorporation into the curriculum of an undergraduate software engineering course that uses project-based learning. The top six PHP frameworks (Zend, Yii, CakePHP, CodeIgniter, PRADO, and Symphony) were initially considered and then narrowed down to two (CakePHP and CodeIgniter) based on their alignment with common functionality in previous class projects, framework complexity for those new to frameworks (learning curve), and developer friendliness (availability of documentation and online resources). An in-depth comparative study is conducted by developing a functionally-equivalent web application using each of the two frameworks as well as plain PHP (no framework). This work was motivated by the difficulties that were encountered in an evolving, content-rich software engineering course and discusses the educational changes that were made to align student learning with sound software engineering principles and current software development practices used in the computing industry.", "authors": [{"name": "Lisa Lancor", "affiliation": "Southern Connecticut State University, New Haven, CT, USA"}, {"name": "Samyukta Katha", "affiliation": "Southern Connecticut State University, New Haven, CT, USA"}], "tags": ["PHP frameworks", "software engineering", "project-based learning", "software design and development"]}, {"title": "Gaps between industry expectations and the abilities of graduates", "link": "https://dl.acm.org/doi/10.1145/2445196.2445351", "abstract": "Although computer science, information systems, and information technology educators often do an exemplary job of preparing their students for jobs in industry or for further education, there are still many areas where these students do not possess the necessary skills or knowledge based on the expectations of employers or academia. These gaps between the abilities of graduating students and those expected to have can prevent them from succeeding in their careers. This paper presents the results of a systematic literature review conducted to determine which areas graduating students most frequently fall short of the expectations of industry or macademia. The results of this review indicate that graduating students are lacking in many different areas, including technical abilities (design, testing, configuration management tools, etc.) personal skills (communication, teamwork, etc.) and professional qualities (e.g. ethics). By raising awareness of these areas, it is possible for educators to become aware of areas where students most frequently fail to meet expectations and to make curriculum changes or adjustments to address these problems", "authors": [{"name": "Alex Radermacher", "affiliation": "North Dakota State University, Fargo, ND, USA"}, {"name": "Gursimran Walia", "affiliation": "North Dakota State University, Fargo, ND, USA"}], "tags": ["knowledge deficiency", "systematic literature review"]}, {"title": "A mid-career review of teaching computer science I", "link": "https://dl.acm.org/doi/10.1145/2445196.2445352", "abstract": "A mid-career review is presented, of how the teaching of Computer Science I has changed for this instructor over the last two decades. The content of the course has evolved to include algorithm development and program design. Assessment in the course has gone online and moved away from testing how clever the student is, to how much the student has learned in the course. Professional practices are now covered that help students understand and incorporate preferred practices of the discipline. Changes incorporated into the pedagogy include going from using anthropomorphic and ad-hoc to discipline-specific and consistent vocabulary, and from writing code in the class like an experienced programmer to writing it to suit a beginning learner. It is hoped that this review will help new Computer Science I instructors avoid some misconceptions with which this instructor started out.", "authors": [{"name": "Amruth N. Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["computer science I", "program design", "professional practices", "pedagogy", "assessment", "problem-solving"]}, {"title": "Designing and supporting collaborative learning activities", "link": "https://dl.acm.org/doi/10.1145/2445196.2445354", "abstract": "This session will help participants understand the importance of, and challenges in, introducing collaborative learning within introductory Computer Science curricula. At the University of Adelaide, we have designed our first year curriculum, a sequence of three courses, around collaborative learning - in this session we explore our experiences in developing collaborative activities, collaborative assessment and appropriate training for staff, academic and sessional, involved in collaborative sessions. Based on a seven year programme of designing and undertaking collaborative activities, we will discuss our successes, and our failures, in the use of collaborative learning techniques.", "authors": [{"name": "Nickolas J.G. Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["active learning", "teaching cs1", "assessment", "computer science education", "collaborative learning"]}, {"title": "Nifty assignments", "link": "https://dl.acm.org/doi/10.1145/2445196.2445356", "abstract": "Every time I re-use a handout, I look it over and make a few little \"improvements\". I play around with code demos and entertain myself with different slide transitions. However, inevitably, I return to the conclusion that most of what my students learn in my course comes from the assignments. Great assignments are hard to dream up and time-consuming to develop. With that in mind, the Nifty Assignments session is all about promoting and sharing the ideas and ready-to-use materials of successful assignments.", "authors": [{"name": "David J. Malan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Julie Zelenski", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Aditi Muralidharan", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Kevin Wayne", "affiliation": "Princeton University, Princeton, NJ, USA"}, {"name": "Nick Parlante", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "John DeNero", "affiliation": "Google, Mountain View, CA, USA"}, {"name": "Eric Roberts", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["repository", "assignments", "pedagogy", "education", "homeworks", "examples", "library", "nifty"]}, {"title": "Expanding access to K-12 computer science education: research on the landscape of computer science professional development", "link": "https://dl.acm.org/doi/10.1145/2445196.2445358", "abstract": "This session will present the research findings to date from an 18-month study commissioned by the ACM in partnership with the National Science Foundation, Google, Computer Science Teachers Association, Microsoft, and the National Center for Woman and Information Technology that started in July, 2012, and invite an open discussion about them. The study seeks to understand the national landscape of K-12 computer science (CS) professional development (PD) and the capacity to provide high quality CS PD on a large scale. The study is being conducted by The University of Chicago's Center for Elementary Mathematics and Science Education (CEMSE) who will present findings from the landscape study conducted in the Summer and Fall of 2012, as well as preliminary findings about the CS community's capacity for increasing the ranks of K-12 CS teachers in light NSF's stated goal of preparing 10,000 secondary education teachers to teach high-quality computer science[1].\nA goal for this work is to produce actionable findings that will be of use to the broad CS education community. In the spirit of togetherness and engendering some collective action toward a coherent national strategy for expanding computer science education, it's vital that the SIGCSE community be both aware of this study's findings and be given an opportunity to reflect on its implications. Therefore, over half the time of this session will be devoted to open discussion during which several key questions stemming from the findings will be raised as well as questions raised by audience members. This session is an important opportunity for the SIGCSE community to offer feedback and help to guide the future direction of this study to ensure that the findings and plans for the remainder of the study are useful and actionable.", "authors": [{"name": "Gail Chapman", "affiliation": "University of California Los Angeles, Los Angeles, CA, USA"}, {"name": "Michael Lach", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Jeanne Century", "affiliation": "University of Chicago, Chicago, IL, USA"}, {"name": "Baker Franke", "affiliation": "University of Chicago Laboratory Schools, Chicago, IL, USA"}, {"name": "Cameron Wilson", "affiliation": "ACM, Washington, DC, USA"}, {"name": "Owen Astrachan", "affiliation": "Duke Unviersity, Durham, NC, USA"}], "tags": ["access", "scaling", "k-12", "professional development", "landscape", "cs10k"]}, {"title": "Session details: Paper - curricular innovations", "link": "https://dl.acm.org/doi/10.1145/3249878", "abstract": "No abstract available.", "authors": [{"name": "Kurt Eiselt", "affiliation": "University of British Columbia"}], "tags": []}, {"title": "Two models of a cryptography and computer security class in a liberal arts context", "link": "https://dl.acm.org/doi/10.1145/2445196.2445360", "abstract": "The critical need for computer security concepts to be taught in the undergraduate computer science curriculum is evident from current news stories, curricular guidelines, and government initiatives. Beginning to teach a standalone computer security course can be daunting, especially for instructors with little or no background or formal education in computer security. An elective course in cryptography and computer security was developed that matched the talents of the professor and the resources and context of the two Universities and departments in which it was taught. Two models of the course evolved: an elective semester-long computer science and mathematics cross-listed course, and an elective summer computer science course with significant hands-on laboratory exercises. Either course may be used as a model for an accessible course offering involving computer security.", "authors": [{"name": "Suzanne Fox Buchele", "affiliation": "Southwestern University, Georgetown, TX, USA"}], "tags": ["computer security education", "computer security", "cryptology", "cryptography"]}, {"title": "The entrepreneur's bootcamp: a new model for teaching web/mobile development and software entrepreneurship", "link": "https://dl.acm.org/doi/10.1145/2445196.2445361", "abstract": "This paper describes three years of experience with an intensive three course summer semester on web and mobile entrepreneurship for second year CS students and beyond. The program is similar in structure to a high school summer camp or to a summer accelerator/incubator program except that it has a much higher level of academic content and provides the credit equivalent to three Computer Science electives and a full semester of residency. The program has been effective at teaching students production programming and entrepreneurship and has stimulated entrepreneurial activity during the academic year. It is taken by about half of the CS majors in the department which is surprising since it requires them to spend their summer months in a very intense academic and entrepreneurial experience which is quite different from the usual summer experience of their peers.", "authors": [{"name": "Timothy J. Hickey", "affiliation": "Brandeis University, Waltham, Massachusetts, USA"}, {"name": "Pito Salas", "affiliation": "Brandeis University, Waltham, Massachusetts, USA"}], "tags": ["mobile applications", "entrepreneurship", "web applications"]}, {"title": "Growing a computer science program with a focus on game development", "link": "https://dl.acm.org/doi/10.1145/2445196.2445362", "abstract": "A comprehensive undergraduate curriculum in computer game development is described. The program was created as a set of elective courses in the context of a traditional computer science (CS) degree. Primary goals of the program were to increase enrollment in CS and prepare students for careers in the entertainment software industry. In addition, the CS department sought to compete for students with larger state institutions. To do so effectively the department needed to offer a unique program. Results show the new program helped the CS department to nearly triple enrollment over four years and achieve both statewide prominence and national recognition.", "authors": [{"name": "Rob LeGrand", "affiliation": "Angelo State University, San Angelo, TX, USA"}, {"name": "Timothy E. Roden", "affiliation": "Lamar University, Beaumont, TX, USA"}], "tags": ["game programming", "computer science education", "game development"]}, {"title": "Session details: Paper - improving student learning in courses", "link": "https://dl.acm.org/doi/10.1145/3249879", "abstract": "No abstract available.", "authors": [{"name": "Pamela Cutter", "affiliation": "Kalamazoo College"}], "tags": []}, {"title": "Trace-based teaching in early programming courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445364", "abstract": "Students in introductory programming courses struggle with building the mental models that correctly describe concepts such as variables, subroutine calls, and dynamic memory usage. This struggle leads to lowered student learning outcomes and, it has been argued, the high failure and dropout rates commonly seen in these courses. We will show that accurately modeling what is occurring in memory and requiring students to trace code using this model improves student performance and increases retention. This paper presents the results of an experiment in which introductory programming courses were organized around code tracing. We present program memory traces, a new approach for tracing code that models what occurs in memory as a program executes. We use these traces to drive our lectures and to act as key pieces of our active learning activities. We report the results of student surveys showing that instructor tracing was rated as the most valuable piece of the course and students' overwhelming agreement on the importance of the tracing activities for their learning. Finally, we demonstrate that trace-based teaching led to statistically significant improvements student grades, decreased drop and failure rates, and an improvement in students' programming abilities.", "authors": [{"name": "Matthew Hertz", "affiliation": "Canisius College, Buffalo, NY, USA"}, {"name": "Maria Jump", "affiliation": "King's College, Wilkes-Barre, PA, USA"}], "tags": ["CS2", "pedagogy", "CS1", "tracing"]}, {"title": "Teaching cyber-physical systems to computer scientists via modeling and verification", "link": "https://dl.acm.org/doi/10.1145/2445196.2445365", "abstract": "The greater versatility and increasingly smaller sizes of computing, sensing, and networking devices have resulted in a new computing paradigm called Cyber-Physical Systems (CPSs), which integrates computation and sensing into physical processes producing a wealth of exciting applications in many domains of life, such as transportation, medicine, and agriculture. In order to equip students with the essential knowledge and skills to be successful in the future, this paradigm requires an expansion in the scope of computer science curricula to enable students to understand and overcome the complexity inherent in CPSs. In this paper, we describe our experience with teaching CPS via a set of course modules that rely heavily on modeling and verification. By using the popular Android platform, we aim to engage students to successfully build CPS applications while enhancing their understanding of intellectually challenging concepts.", "authors": [{"name": "Hui Chen", "affiliation": "Virginia State University, Petersburg, VA, USA"}, {"name": "Kostadin Damevski", "affiliation": "Virginia State University, Petersburg, VA, USA"}, {"name": "Badreldin Altayeb", "affiliation": "Virginia State University, Petersburg, VA, USA"}, {"name": "David Walter", "affiliation": "Virginia State University, Petersburg, VA, USA"}], "tags": ["computer science education", "cyber-physical systems"]}, {"title": "A derivation-first approach to teaching algorithms", "link": "https://dl.acm.org/doi/10.1145/2445196.2445366", "abstract": "A common approach to teaching algorithms involves describing algorithms first and then proving their correctness afterwards. In this article we advocate a \"derivation-first\" approach in which algorithms are \"derived,\" either from basic concepts or from simpler algorithms, before they are proved correct. We demonstrate how a number of \"classical\" algorithms can be derived, providing students with a more intellectually satisfying experience, a deeper intuition into how algorithm design works, and connections between algorithms that can be useful in developing algorithms for other problems.", "authors": [{"name": "Ran Libeskind-Hadas", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["computer science education", "algorithms", "derivations"]}, {"title": "Session details: Paper - working the web", "link": "https://dl.acm.org/doi/10.1145/3249880", "abstract": "No abstract available.", "authors": [{"name": "Timothy Fossum", "affiliation": "SUNY College at Potsdam"}], "tags": []}, {"title": "Online python tutor: embeddable web-based program visualization for cs education", "link": "https://dl.acm.org/doi/10.1145/2445196.2445368", "abstract": "This paper presents Online Python Tutor, a web-based program visualization tool for Python, which is becoming a popular language for teaching introductory CS courses. Using this tool, teachers and students can write Python programs directly in the web browser (without installing any plugins), step forwards and backwards through execution to view the run-time state of data structures, and share their program visualizations on the web. In the past three years, over 200,000 people have used Online Python Tutor to visualize their programs. In addition, instructors in a dozen universities such as UC Berkeley, MIT, the University of Washington, and the University of Waterloo have used it in their CS1 courses. Finally, Online Python Tutor visualizations have been embedded within three web-based digital Python textbook projects, which collectively attract around 16,000 viewers per month and are being used in at least 25 universities. Online Python Tutor is free and open source software, available at pythontutor.com.", "authors": [{"name": "Philip J. Guo", "affiliation": "Google, Inc., Mountain View, CA, USA"}], "tags": ["program visualization", "python", "CS1"]}, {"title": "Facilitating code-writing in PI classes", "link": "https://dl.acm.org/doi/10.1145/2445196.2445369", "abstract": "We present the Python Classroom Response System, a web-based tool that enables instructors to use code-writing and multiple choice questions in a classroom setting. The system is designed to extend the principles of peer instruction, an active learning technique built around discussion of multiple- choice questions, into the domain of introductory programming education. Code submissions are evaluated by a suite of tests designed to highlight common misconceptions, so the instructor receives real-time feedback as students submit code. The system also allows an instructor to pull specific submissions into an editor and visualizer for use as in-class examples. We motivate the use of this system, describe its support for and extension of peer instruction, and offer use cases and scenarios for classroom implementation.", "authors": [{"name": "Olessia Karpova", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}, {"name": "Yuliya Cherenkova", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}], "tags": ["peer investigation", "active learning", "pair programming", "CS1"]}, {"title": "CS circles: an in-browser python course for beginners", "link": "https://dl.acm.org/doi/10.1145/2445196.2445370", "abstract": "Computer Science Circles is a free programming website for beginners that is designed to be fun, easy to use, and accessible to the broadest possible audience. We teach Python since it is simple yet powerful, and the course content is well-structured but written in plain language. The website has over one hundred exercises in thirty lesson pages, plus special features to help teachers support their students. It is available in both English and French. We discuss the philosophy behind the course and its design, we describe how it was implemented, and we give statistics on its use.", "authors": [{"name": "Troy Vasiga", "affiliation": "University of Waterloo, Waterloo, ON, Canada"}, {"name": "David Pritchard", "affiliation": "Princeton University, Princeton, NJ, USA"}], "tags": ["massive online open courses", "python", "cs0/1", "teacher tools", "wordpress"]}, {"title": "Session details: Paper - computational thinking", "link": "https://dl.acm.org/doi/10.1145/3249881", "abstract": "No abstract available.", "authors": [{"name": "Catherine Lang", "affiliation": "Swinburne University of Technology"}], "tags": []}, {"title": "Will it stick?: exploring the sustainability of computational thinking education through game design", "link": "https://dl.acm.org/doi/10.1145/2445196.2445372", "abstract": "A strategy exposing middle school students to computer science through game design appears to be a promising means to mitigate the computer science pipeline challenge. Particularly when short game design activities are integrated into already existing middle school courses, research suggests that game design is effective in broadening participation and motivating large numbers of students, along with large percentages of women and minorities. A study with over 10,000 students is exploring the sustainability of this approach and finding positive responses to inquiries such as these: Do teachers continue to use game design? Can they advance beyond extrinsic rewards such as research stipends? After building one game, do students advance, building more games or even STEM simulations?", "authors": [{"name": "Pate Motter", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Hilarie Nickerson", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Yasko Endo", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Kyu Han Koh", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Alexander Repenning", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}], "tags": ["computational thinking", "simulation design", "sustainability", "game design", "zone of proximal flow"]}, {"title": "The social turn in K-12 programming: moving from computational thinking to computational participation", "link": "https://dl.acm.org/doi/10.1145/2445196.2445373", "abstract": "In this conceptual paper, we argue that recent developments in K-12 programming education are suggestive of what can be called a \"social turn\", a shift in the field in which learning to code has shifted from being a predominantly individualistic and tool-oriented approach to now one that is decidedly sociologically and culturally grounded in the creation and sharing of digital media. We discuss in detail three dimensions of this social turn (1) from writing code to creating applications, (2) from composing \"from scratch\" to remixing the work of others, and (3) from designing tools to facilitating communities. These three shifts illustrate how the development of artifacts, tools, and communities of programming lead us to move from computational thinking to computational participation. We draw from examples of past and current research, both inside and outside of school, and situate these developments in the context of current discussions around computational thinking, which has become a driving force in revitalizing programming in K-12 curricula and altogether broadening participation in computing.", "authors": [{"name": "Yasmin B. Kafai", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Quinn Burke", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["tools", "networked commons", "novice programming"]}, {"title": "Accelerating K-12 computational thinking using scaffolding, staging, and abstraction", "link": "https://dl.acm.org/doi/10.1145/2445196.2445374", "abstract": "We describe a three-stage model of computing instruction beginning with a simple, highly scaffolded programming environment (Kodu) and progressing to more challenging frameworks (Alice and Lego NXT-G). In moving between frameworks, students explore the similarities and differences in how concepts such as variables, conditionals, and looping are realized. This can potentially lead to a deeper understanding of programming, bringing students closer to true computational thinking. Some novel strategies for teaching with Kodu are outlined. Finally, we briefly report on our methodology and select preliminary results from a pilot study using this curriculum with students ages 10-17, including several with disabilities.", "authors": [{"name": "David S. Touretzky", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Stephanie Ludi", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Lijun Ni", "affiliation": "TERC, Cambridge, MA, USA"}, {"name": "Daniela Marghitu", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Debra Bernstein", "affiliation": "TERC, Cambridge, MA, USA"}], "tags": ["robotics", "kodu", "computational thinking", "Alice"]}, {"title": "Session details: Paper - camps and mobile computing", "link": "https://dl.acm.org/doi/10.1145/3249882", "abstract": "No abstract available.", "authors": [{"name": "Jakita Thomas", "affiliation": "Spelman College"}], "tags": []}, {"title": "Girls on the go: a CS summer camp to attract and inspire female high school students", "link": "https://dl.acm.org/doi/10.1145/2445196.2445376", "abstract": "In this paper, we describe our experience running \"Girls on the Go: The Mobile Computing College Experience.\" We decided to do a residential summer camp for HS-age girls to achieve two goals: to encourage our campers to attend college and to interest them in computer science as a possible career option. We centered the camp around the design of a zoo-themed research tool where campers designed a mobile application to be used by researchers to document and study animal behavior. Post-camp surveys gave statistically significant results indicating that the camp increased the girls' confidence in performing computer science and understanding what computer scientists did.", "authors": [{"name": "Karen C. Davis", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}, {"name": "Maureen Doyle", "affiliation": "Northern Kentucky University, Highland Heights, KY, USA"}, {"name": "Gerald C. Gannod", "affiliation": "Miami University, Oxford, OH, USA"}, {"name": "Janet E. Burge", "affiliation": "Miami University, Oxford, OH, USA"}], "tags": ["recruiting women", "mobile application development", "summer camps"]}, {"title": "Using app inventor in a K-12 summer camp", "link": "https://dl.acm.org/doi/10.1145/2445196.2445377", "abstract": "Educators are often seeking new ways to motivate or inspire students to learn. Our past efforts in K-12 outreach included robotics and media computation as the contexts for teaching Computer Science (CS). With the deep interest in mobile technologies among teenagers, our recent outreach has focused on using smartphones as a new context. This paper is an experience report describing our approach and observations from teaching a summer camp for high school students using App Inventor (AI). The paper describes two separate methods (one using a visual block language, and another using Java) that were taught to high school students as a way to create Android applications. We observed that initiating the instruction with the block language, and then showing the direct mapping to an equivalent Java version, assisted students in understanding app development in Java. Our evaluation of the camp includes observations of student work and artifact assessment of student projects. Although the assessment suggests the camp was successful in several areas, we present numerous lessons learned based on our own reflection on the camp content and instruction.", "authors": [{"name": "Jonathan Corley", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "David Wolber", "affiliation": "University of San Francisco, San Francisco, CA, USA"}, {"name": "Amber Wagner", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["app inventor", "summer camp", "java bridge"]}, {"title": "No sensor left behind: enriching computing education with mobile devices", "link": "https://dl.acm.org/doi/10.1145/2445196.2445378", "abstract": "The use of mobile app development in pre-college computing education is rapidly gaining momentum due to the increasingly widespread use of mobile devices. To fully realize the learning potential of this technology in the classroom, however, one may need to re-examine traditional curricular approaches originating from desktop computing environments. In this work, we describe our experience with a new high-school computing camp designed from the ground up to engage students by taking full advantage of the specific benefits of mobile devices, such as built-in cameras, GPS, networking, and sensors measuring touch, sound, acceleration, and orientation. We describe the design of our camp including materials and examples used. We assess the effectiveness of this instructional approach by demonstrating a statistically significant increase in interest in future computing endeavors. We also comment on the use of MIT App Inventor to ease the transition, particularly for novice programmers, to more sophisticated Java-based apps.", "authors": [{"name": "Matthew H. Dabney", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Brian C. Dean", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Tom Rogers", "affiliation": "Southside High School, Greenville, SC, USA"}], "tags": ["mobile computing", "android", "app inventor"]}, {"title": "Panel: textbook pricing, present and future", "link": "https://dl.acm.org/doi/10.1145/2445196.2445380", "abstract": "Textbook pricing has become a hot-button issue in academe. Allegations are rife that textbook prices are increasing faster than tuition, and that some students spend even more on textbooks than on tuition. The matter is complicated by rapidly changing technology and the expectations that print textbooks may soon be obsolete. This panel brings together two textbook editors from major publishers and two authors with extensive experience in new media to discuss why textbooks are so expensive and how the market is likely to change in the foreseeable future.", "authors": [{"name": "Edward F. Gehringer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Beth Lang Golub", "affiliation": "John Wiley & Sons, Hoboken, NJ, USA"}, {"name": "Randi Cohen", "affiliation": "Taylor & Francis, Virginia Beach, VA, USA"}, {"name": "David M. Arnow", "affiliation": "Brooklyn College, Brooklyn, NY, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["textbooks", "e-books", "pricing"]}, {"title": "CS principles: development and evolution of a course and a community", "link": "https://dl.acm.org/doi/10.1145/2445196.2445382", "abstract": "No abstract available.", "authors": [{"name": "Owen Astrachan", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "R. Brook Osborne", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Lien Diaz", "affiliation": "College Board, Atlanta, GA, USA"}, {"name": "Amy Briggs", "affiliation": "Middlebury College, Middlebury, VT, USA"}], "tags": ["computational thinking", "cs principles", "k-12 curriculum", "computer science education", "outreach"]}, {"title": "Addressing 21st century skills by embedding computer science in K-12 classes", "link": "https://dl.acm.org/doi/10.1145/2445196.2445384", "abstract": "School districts across the country are embracing 21st century skills, and grappling with how to teach these to their K-12 students. At the same time, computer science educators are grappling with how to broaden participation. These two dilemmas are related, in that computer science can be used to teach many of the 21st century skills, and bringing computer science to all K-12 students can help broaden participation.\nFor computer scientists, key 21st century skills [4] include creativity & innovation, critical thinking and problem solving, communication & collaboration, information literacy, media literacy and information, communications and technology (ICT) literacy -- these skills go beyond traditional \"computational thinking\" skills because they include reflections on how computation affects social processes (such as the role of computational media in society).\nSince 2009, K-12 educators and computer science graduate students in the Engaging Computer Science in Traditional Education (ECSITE, pronounced \"excite\") project have developed curricular units that are embedded into non-computing K-12 classes [3]. These units collectively address many 21st century skills, and have been introduced into arts, geography, government, health, music, and science classes. In this special session, we will interactively share some of our successful curricular units that address different 21st century skills, initiate a broader discussion on embedding computer science into K-12 curriculum and discuss methods we are exploring to enhance the sustainability of such efforts.", "authors": [{"name": "Clayton Lewis", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Jessica Feld", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Debra Goldberg", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Kristin Donley", "affiliation": "Boulder Valley School District, Boulder, CO, USA"}, {"name": "Odette Edbrooke", "affiliation": "Boulder Valley School District, Boulder, CO, USA"}, {"name": "Dirk Grunwald", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["curriculum"]}, {"title": "Session details: Paper - classroom management", "link": "https://dl.acm.org/doi/10.1145/3249883", "abstract": "No abstract available.", "authors": [{"name": "Sarah Heckman", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "Git on the cloud in the classroom", "link": "https://dl.acm.org/doi/10.1145/2445196.2445386", "abstract": "Numerous CS faculty have demonstrated the benefits of using version control in courses other than software engineering. However, they maintained their own servers, and to the best of our knowledge, none published experiences with version control in CS1 courses for non-CS engineering majors. As a result, even faculty experienced with version control may hesitate to adopt it in some classes, fearing that it is too difficult, time consuming or distracting. In this paper, we describe how we adopted version control in a CS1 course for non-CS engineering majors, and how software hosting services facilitated its use. Our experience indicates that undergraduate engineering majors in CS courses can gain competence in version control, and software hosting services simplify class administration.", "authors": [{"name": "Seikyung Jung", "affiliation": "Bridgewater State University, Bridgewater, MA, USA"}, {"name": "Joseph Lawrance", "affiliation": "Wentworth Institute of Technology, Boston, MA, USA"}, {"name": "Charles Wiseman", "affiliation": "Wentworth Institute of Technology, Boston, MA, USA"}], "tags": ["course management", "software engineering", "version control"]}, {"title": "Creating effective student groups: an introduction to groupformation.org", "link": "https://dl.acm.org/doi/10.1145/2445196.2445387", "abstract": "Success in the computing industry often depends on an individual's ability to be a productive member of an effective study group or project team. In order to prepare students for successful careers, computer science curriculum often includes group projects. This paper discusses the challenges of forming effective student groups, discusses existing software for forming groups, and introduces groupformation.org, a new free and open source group formation service.", "authors": [{"name": "Tyson R. Henry", "affiliation": "California State University, Chico, Chico, CA, USA"}], "tags": ["team formation", "student groups", "grouping", "group fromation", "groupware", "student teams"]}, {"title": "The effectiveness of live-coding to teach introductory programming", "link": "https://dl.acm.org/doi/10.1145/2445196.2445388", "abstract": "Live-coding is defined as \"the process of designing and implementing a [coding] project in front of class during lecture period\". In this article we present our research design and results regarding the effectiveness of live-coding to teach introductory programming. The research design includes two experimental groups spread across four sections of an introductory C++ course at Colorado School of Mines. In the control group, students were taught using static code, meaning that instructors never typed, but instead viewed, compiled, and executed code examples. In the experimental or \"live-coding\" group, instructors started each lecture with a blank screen, and taught code examples by systematically typing, compiling, and testing code to solve example problems.\nTo assess the effectiveness of live-coding, we administered four surveys and analyzed final grades. Two of the surveys were given at the beginning of the course, and were used to measure baseline programming knowledge and student learning preferences (i.e., VARK). The other two surveys, given at the end of the course, were designed to measure the amount of programming knowledge obtained as well as preferences towards live coding. Lastly, final grades were analyzed in terms of its subcomponents: the assignments, exams, final project, and overall grade. Based on our results, we conclude that teaching via live-coding is as good as if not better than using static code examples.", "authors": [{"name": "Marc J. Rubin", "affiliation": "Colorado School of Mines, Golden, CO, USA"}], "tags": ["programming", "pedagogy", "live-coding", "introductory"]}, {"title": "Session details: Paper - music and computing education", "link": "https://dl.acm.org/doi/10.1145/3249884", "abstract": "No abstract available.", "authors": [{"name": "Laurie Murphy", "affiliation": "Pacific Lutheran University"}], "tags": []}, {"title": "Tackling engagement in computing with computational music remixing", "link": "https://dl.acm.org/doi/10.1145/2445196.2445390", "abstract": "In this paper, we describe EarSketch, an integrated curriculum, software toolset, and social media website, grounded in constructionist principles, that targets introductory high school computing education. We hypothesize that the use of collaborative computational music composition and remixing may avoid some of the engagement and culture-specific issues that other approaches, both in music and other media, have had. We discuss the design of EarSketch, its use in a pilot summer camp, and the evaluation results from that pilot.", "authors": [{"name": "Scott McCoid", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Elise Livingston", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Jason Freeman", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Brian Magerko", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Tom McKlin", "affiliation": "The Findings Group, LLC, Atlanta, GA, USA"}, {"name": "Tom Jenkins", "affiliation": "Georgia Tech, Atlanta, GA, USA"}], "tags": ["remixing", "music", "education", "computing principles", "collaboration"]}, {"title": "Computer science \"big ideas\" play well in digital sound and music", "link": "https://dl.acm.org/doi/10.1145/2445196.2445391", "abstract": "This paper reports the results of a four-year National Science Foundation CCLI grant that supported development and assessment of curricular material linking computer science (CS), digital audio, music, and sound design. A book and online learning aids were created and used in courses and summer workshops. The material was refined based on feedback from students and instructors. Learning was measured by pre- and post-tests. In this paper, we map the curricular material to the Big Ideas for CS Principles as well as to core CS courses. Objective and subjective assessment of the material over the course of the grant leads us to recommendations for purposeful, parallel, and convergent learning, concepts that are explained in the paper.", "authors": [{"name": "Jennifer Burg", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Eric Schwartz", "affiliation": "UNC School of the Arts, Winston-Salem, NC, USA"}, {"name": "Jason Romney", "affiliation": "University of North Carolina School of the Arts, Winston-Salem, NC, USA"}], "tags": ["digital sound and music", "digital media"]}, {"title": "Form, function and performances in a musical instrument MAKErs camp", "link": "https://dl.acm.org/doi/10.1145/2445196.2445392", "abstract": "This experience report presents the planning, execution and results of an exploratory 5-day musical instrument MAKErs camp for K-12 students. Students used various hardware sensors, a graphical programming environment and different physical prototyping techniques to create musical instruments. The design of a musical instrument introduces students to the full spectrum of the design process including form factor and function. Throughout the camp, students shared and performed in front of their peers to gain feedback as they iterated through the design of a musical instrument.", "authors": [{"name": "Dane Webster", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Blake Sawyer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Liesl Baum", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Brennon Bortz", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Taylor O'Connor", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Teri Finn", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Jason Forsyth", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Benjamin Knapp", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Ivica Ico Bukvic", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["GUI programming", "computer science education", "musical instrument design", "maker camp"]}, {"title": "Session details: Paper - security and secure programming", "link": "https://dl.acm.org/doi/10.1145/3249885", "abstract": "No abstract available.", "authors": [{"name": "David Stucki", "affiliation": "Otterbein University"}], "tags": []}, {"title": "Learning mobile security with android security labware", "link": "https://dl.acm.org/doi/10.1145/2445196.2445394", "abstract": "As smart mobile devices grow increasingly in popularity, so do the incentives for attackers. Recent surveys on mobile security describe the rapidly increasing number and sophistication of mobile attacks. Newer sources of risks are being introduced or explored in the mobile computing paradigm where traditional security threats are also evolving. The prevalence of mobile devices and the rapid growth of mobile threats have resulted in a shortage of mobile security personnel. Educational activities are needed to promote mobile security education and to meet the emerging industry and education needs. This paper presents our initial effort on exploring a learning approach to mobile security, which aims at taking advantages of the benefits of mobile devices and the best practices in learning information security, promoting students' interests, and improving students' self-efficacy. An Android security labware is designed to implement the environment and materials for the learning approach. We integrated the pilot modules of the labware into two security courses in two semesters. The majority of the students provided positive feedback and enjoyed the Android security practices.", "authors": [{"name": "Prabir Bhattacharya", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}, {"name": "Kai Qian", "affiliation": "Southern Polytechnic State University, Marietta, GA, USA"}, {"name": "Ming Yang", "affiliation": "Southern Polytechnic State University, Marietta, GA, USA"}, {"name": "Minzhe Guo", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}, {"name": "Li Yang", "affiliation": "University of Tennessee at Chattanooga, Chattanooga, TN, USA"}], "tags": ["android", "mobile security", "labware"]}, {"title": "A method for incorporating usable security into computer security courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445395", "abstract": "Since human factor security exploits are on the rise, ensuring Usable Security has become extremely important for the overall security of computer systems. However, traditional undergraduate computer security curriculum focuses heavily on technical aspects of security and generally ignores Usable Security. To address this problem, we developed a new 3P Learning Method that encourages students to view security problems from three different perspectives (i.e. 3P), namely: Defense, Offense, and Use. The 3P Method lets us incorporate Usable Security into the existing curriculum and helps students to consider Usable Security as an integral part of secure system design rather than an optional add-on.", "authors": [{"name": "Anna Valeva", "affiliation": "Western Illinois University, Macomb, IL, USA"}, {"name": "Martha Klems", "affiliation": "Western Illinois University, Macomb, IL, USA"}, {"name": "Binto George", "affiliation": "Western Illinois University, Macomb, IL, USA"}], "tags": ["3P learning method", "security", "computer security education", "usable security"]}, {"title": "Interactive support for secure programming education", "link": "https://dl.acm.org/doi/10.1145/2445196.2445396", "abstract": "Software flaws are a root cause of many of today's information security vulnerabilities. Current curricula emphasis on traditional information security issues does not address this root cause. We propose educating students on secure programming techniques through interactive tool support in the Integrated Development Environment (IDE). We believe this approach can complement other curricula efforts by teaching and providing continuous reinforcement of practices throughout programming tasks. In this paper, we evaluate our prototype tool, ASIDE, which provides instant security warnings, detailed explanations of vulnerabilities, and code generation. We report the results of an observational study on 20 students from an advanced Web programming course. The results provide early evidence that our tool could potentially help students learn about and practice secure programming in the context of their programming assignments.", "authors": [{"name": "Heather Richter Lipford", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Jun Zhu", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Bill Chu", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["IDE", "security education", "secure programming"]}, {"title": "Session details: Paper - capstones", "link": "https://dl.acm.org/doi/10.1145/3249886", "abstract": "No abstract available.", "authors": [{"name": "Haklin Kimm", "affiliation": "East Stroudsburg University"}], "tags": []}, {"title": "A case for course capstone projects in CS1", "link": "https://dl.acm.org/doi/10.1145/2445196.2445398", "abstract": "Research shows that domain mastery requires three phases: acquiring core component skills, practicing integrating these skills, and then applying these skills to solve real-world problems. Although achieving domain mastery is the overall goal of the Computer Science (CS) curriculum, I will make the case that it is important to expose students to all three phases of learning in the first programming course. Having a mini-capstone project on a relevant problem gives the students the deep understanding of why these core components are needed and how they integrate as the students are learning them. In the process, working with a real application excites the students about computer science and can provide them with the confidence to engage in more challenging projects. This paper reports on an experiment where students implement a vehicle license plate number recognition project. Initial results from this experiment indicate that students who worked on the project perform better in the course learning objectives.", "authors": [{"name": "Saquib Razak", "affiliation": "Carnegie Mellon University, Doha, Qatar"}], "tags": ["capstone project", "CS1", "license plate number detection"]}, {"title": "Empirical evaluation of periodic retrospective assessment", "link": "https://dl.acm.org/doi/10.1145/2445196.2445399", "abstract": "We propose the periodic retrospective assessment (PRA) technique for reflection-based evaluation of interdisciplinary, team-oriented learning experiences. PRA is characterized by two forms: an assessment at the end of each production iteration, followed by a summative assessment after production has ended. An empirical evaluation of PRA was conducted within a fifteen-week immersive studio--a student-driven, faculty-mentored learning experience in which all learner activity is directed toward a single project, undertaken in collaboration with a community partner. This evaluation reveals that students maintain primary focus on pragmatic production issues during the studio duration, although with secondary yet consistent focus on learning and development. PRA surfaces how the immersive studio produced positive learning outcomes with respect to interdisciplinary collaboration and lifetime learning.", "authors": [{"name": "Brian J. McNely", "affiliation": "University of Kentucky, Lexington, KY, USA"}, {"name": "Paul V. Gestwicki", "affiliation": "Ball State University, Muncie, IN, USA"}], "tags": ["studio", "immersive", "pedagogy", "assessment", "qualitative", "evaluation", "interdisciplinary", "ethnography", "scrum"]}, {"title": "Software security testing of an online banking system: a unique research experience for undergraduates and computer teachers", "link": "https://dl.acm.org/doi/10.1145/2445196.2445400", "abstract": "This paper presents a unique summer project for a group of undergraduate students and high school computer teachers to gain research experiences in the area of cybersecurity. The students and teachers were selected from the participants in the NSF REU and RET programs at the host institution. Through the research on security testing of a real-world online banking system, the students and teachers have not only learned about the cutting-edge security testing techniques, but also made publishable contributions to the research base. The two collaborating graduate assistants served as an immediate role model for the undergraduates and an indirect role model for high school students through the teachers. With the help from the graduate assistants, the students and teachers were able to work effectively toward achieving their research objectives. The internal competition helped the participants get a better sense of achievement and satisfaction. The research experiences also prepared the teachers with the necessary knowledge for introducing cybersecurity topics (e.g., secure programming) into future classroom activity. As such, the project described in this paper provides a model summer program for undergraduate and/or K-12 teachers to gain research experiences.", "authors": [{"name": "Dianxiang Xu", "affiliation": "Dakota State University, Madison, SD, USA"}], "tags": ["mutation analysis", "security attacks", "cybersecurity", "software testing", "security testing", "access control"]}, {"title": "Session details: Paper - educational research", "link": "https://dl.acm.org/doi/10.1145/3249887", "abstract": "No abstract available.", "authors": [{"name": "James Maher", "affiliation": "Colorado School of Mines"}], "tags": []}, {"title": "CE21--Maryland: the state of computer science education in Maryland high schools", "link": "https://dl.acm.org/doi/10.1145/2445196.2445402", "abstract": "The goals of UMBC's CE21-Maryland project are to build community and to increase the accessibility, diversity, and quality of high school CS education in Maryland. The ultimate objective is for all Maryland students to have access to high-quality, college preparatory CS courses. We present findings from a survey of high school computing teachers regarding the status of CS education in Maryland. Some findings of interest are that urban and rural students have less access to computing courses than suburban students; female teachers are more likely to attract female students and to have larger AP CS classes; and neither teacher race nor gender is correlated with the number of minority students enrolled in CS classes. We describe community building successes through two Google CS4HS workshops, a Maryland CSTA chapter, and statewide summit meetings for educators and administrators. We also discuss how our methodology can be used as a model for other states who are working towards CS education reform at the high school level.", "authors": [{"name": "Marie desJardins", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}, {"name": "Susan Martin", "affiliation": "University of Maryland, Baltimore County, Baltimore, MD, USA"}], "tags": ["professional development", "community", "high school teachers"]}, {"title": "How students estimate the effects of ICT and programming courses", "link": "https://dl.acm.org/doi/10.1145/2445196.2445403", "abstract": "The curricula for Computer Science Education (CSE) of many countries comprise both Programming and Information and Communication Technology (ICT); however these two areas have substantial differences, inter alia the attitudes and beliefs of the students regarding the intended learning content. In this study, variables from the Unified Theory of Acceptance and Use of Technology and Social Cognitive Theory were chosen as important factors in students' behavior and attitude towards CSE. This hybrid framework aims to measure the level of the selected key variables on CSE and identify potential differences among ICT and Programming courses. Responses from the total of 126 Greek students, (71 attending ICT courses and 55 attending Programming Courses) were used to measure the variables and to identify the differences between ICT and Programming students. The results revealed several differences in the measured variables. The overall outcomes are expected to contribute to the understanding of students' likelihood to pursue computing related careers and promote the acceptance of CSE.", "authors": [{"name": "Nikos Chrisochoides", "affiliation": "Old Dominion University, Norfolk, VA, USA"}, {"name": "Peter Hubwieser", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Garching, Germany"}, {"name": "Michail Giannakos", "affiliation": "Norwegian University of Science and Technology (NTNU), Trondheim, Norway"}], "tags": ["ICT courses", "students' beliefs", "programming courses", "secondary education", "informatics"]}, {"title": "Using a discourse-intensive pedagogy and android's app inventor for introducing computational concepts to middle school students", "link": "https://dl.acm.org/doi/10.1145/2445196.2445404", "abstract": "Past research on children and programming from the 1980s called for deepening the study of the pedagogy of programming in order to help children build better cognitive models of foundational concepts of CS. More recently, computing education researchers are beginning to recognize the need to apply the learning sciences to develop age- and grade-appropriate curricula and pedagogies for developing computational competencies among children. This paper presents the curriculum of an exploratory workshop that employed a discourse-intensive pedagogy to introduce middle school children to programming and foundational concepts of computer science through programming mobile apps in App Inventor for Android (AIA).", "authors": [{"name": "Roy Pea", "affiliation": "Stanford University, Stanford, California, USA"}, {"name": "Shuchi Grover", "affiliation": "Stanford University, Stanford, California, USA"}], "tags": ["android", "CS ed research", "computational thinking", "middle school", "experience report", "introductory programming", "K-12 instruction", "app inventor"]}, {"title": "A combat robotics course: programming meets computer-aided design and fabrication (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445406", "abstract": "I report on experiences teaching a Senior-level Special Topics course in Combat Robotics during the Fall 2012 semester. The surface goal of the course was for student teams to design and build a three-pound remote-control combat robot conforming to the Robot Battles rules (http://robotbattles.com/rules) and then to compete against their peer teams at semester's end. The higher-level goal was to expose students to physical design and fabrication techniques -- topics well outside our regular Computer Science curriculum -- and integrate those techniques with software development. Students were required to:\nDesign their robot using 3D Computer-Aided Design (CAD) software. The CAD model allowed students to experiment with design trade-offs, ensure proper fit and placement of parts, and to estimate the weight of the robot prior to build to ensure their design was under the limit.\nFabricate parts for their robot using a Computer Numerical Control (CNC) milling machine (similar to that used by machinists and product designers in industry).\nUnderstand tool, machine, and workshop safety.\nBuild and program a custom remote-control system using Arduino microcontrollers and Xbee wireless modules. This included soldering, obeying voltage and current limitations, serial communication, servo and motor control, and interfacing with other hardware (such as a Wii Nunchuck video game controller).", "authors": [{"name": "Lewis Baumstark", "affiliation": "University of West Georgia, Carrollton, GA, USA"}], "tags": ["computer numerical control", "robotics", "arduino", "computer-aided design", "xbee"]}, {"title": "Communication patterns: a tool for analyzing communication in emerging computer science educational practices (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445407", "abstract": "We introduce Communication Patterns (CPs) as a tool for rigorous qualitative analysis of project communication. Using our library of student capstone project case studies as a test bed, we describe our approach to communication analysis. We identify, analyze and compare the communication, at various granularities, that takes place in student projects. The patterns allow us to objectively describe the structure (what, how, who, where, when, why) of the different forms of communication that occur in a software project. Patterns range from strategic (choice of genre) to tactical (wording or tone). We use CPs to sensitize students to their communication choices as developers and users. The CP framework is familiar to students (akin to design patterns) and generative (readily extendible to new scenarios). In addition, we as researchers and instructors plan to use CPs to assess how new pedagogical practices, moving from traditional classroom communication towards more blended learning, are changing the student experience and assess the effectiveness of current software project communication practices. We use CPs to analyze the communication that occurs in teaching computer use to novice senior citizens. The examples illustrate how CPs can be used to study communication practices in many different contexts of software development or use.", "authors": [{"name": "Shreya Kumar", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Charles Wallace", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["education", "qualitative", "communication", "analytical tool", "case studies"]}, {"title": "Control-Alt-Hack\u2122: a card game for computer security outreach and education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445408", "abstract": "In this poster, we present Control-Alt-Hack\": White Hat Hacking for Fun and Profit--a card game for computer security outreach and education. A general lack of awareness about computer security contributes to the insecurity of new consumer technologies. We seek to increase people's prioritization of computer security and their understanding of the variety of attacks and technologies that can be vulnerable to compromise. We work towards this goal via a recreational tabletop card game where people play as white hat hackers, using their characters' skills to perform a variety of hacking Missions. We licensed a game mechanic from a hobbyist game company, worked with graphic designers and illustrators, and rewrote card text to make the game about working as a computer security professional. Visit www.controlalthack.com for supplementary educational materials and to request free educator copies.", "authors": [{"name": "Tamara Denning", "affiliation": "University of Washington, Seattle, USA"}, {"name": "Adam Shostack", "affiliation": "Adam Shostack, Seattle, USA"}, {"name": "Tadayoshi Kohno", "affiliation": "University of Washington, Seattle, USA"}], "tags": ["education", "security", "awareness", "computer security", "card game", "outreach"]}, {"title": "K12 outreach: motivating k12 school counselors to embrace the changing face of computing (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445409", "abstract": "K12 students have limited access to computer science curricula in United States' public schools. Individuals' perceptions of the field as a masculine, elite, and individualistic profession can restrict which K12 students are encouraged to pursue careers in computer science. The Counselors for Computing (C4C) campaign is designed to expand the profile of the \"future computer scientist\" by educating school counselors about the need for qualified professionals in this engaging, creative, collaborative, and rich field of study. This project is a collaboration with the American School Counselor Association (ASCA), the Computer Science Teachers' Association (CSTA) and more than thirty other members of NCWIT K-12 Alliance are partners in this campaign, developed to educate and equip academic school counselors to best advise students regarding computing careers. Advocates of computing who serve as academic school counselors can support student interest and aspirations towards computing through broadening course scheduling practices, linking students' current interest to computing (e.g., bioinformatics, media development), and considering multiple post-secondary paths in computer science. The C4C training program equips counselors to better inform youth about computing career paths, encourages counselors to focus on computing careers across pathways (e.g., for military, community college, and four year college/university bound students). In this poster presentation, the authors: a) describe the collaborative professional development approach taken in C4C, b) direct K12 computer science educators and stakeholders to free resources developed for C4C, and c) provide initial evidence of the program's effectiveness.", "authors": [{"name": "Jane Krauss", "affiliation": "National Center for Women & Information Technology, Boulder, CO, USA"}, {"name": "Sarah Hug", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["computational thinking", "k12 computer science education", "computing careers"]}, {"title": "Sustainability improves student learning (SISL) in computing (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445410", "abstract": "Sustainability has been defined variously as the perpetual maintenance of diverse and productive environments upon which all life depends (Renewable Natural Resources Foundation); the responsible use of resources over an indefinite period of time (National Association of Biology Teachers); or \"meet[ing] the needs of the present without compromising the ability of future generations to meet their own needs. (World Commission on Environment and Development)\" A sustainable future depends on a workforce of professionals knowledgeable about creating practices, processes, and infrastructure to optimize resource management, and on a community informed about the ethics and influence of human activity on the integrated environmental, economic and social aspects of sustainability. For these reasons we believe that STEM education, which includes computing, is key to developing the knowledge, the technology, the skills, the motivation and the policies needed for a sustainable future. SIGCSE is one of eleven professional societies involved in the Sustainability Improves Student Learning (SISL) project, which seeks to engage those who teach computing in an effort to include sustainability ideas throughout the computing curriculum. This poster presents the current status and future plans of the SISL project, highlighting where and how computing plays a significant role (with special thanks to the ITiCSE sustainability-related working groups for the where and how information).", "authors": [{"name": "Robert E. Beck", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Daniel T. Joyce", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["sustainability"]}, {"title": "Creation of interdisciplinary programs in computational science (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445411", "abstract": "We present the components of model undergraduate and graduate programs in computational science that have been developed as part of the XSEDE Education Program. The models serve as a template to assist institutions in creating formal programs in computational science that span multiple disciplines including the sciences and engineering, mathematics, computer science, and, more recently, social sciences. The aim of the services is to encourage more institutions to consider computational science as a part of their core curriculum and to reduce the time it takes to integrate new materials and programs. The services provided include campus visits to explore program creation in the context of the interests of the current faculty conducting research and instruction that includes computational modeling. XSEDE also sponsors professional development workshops for faculty and students. These include one day to full week workshops focusing on computational science education in various disciplinary areas as well as technical training that focusing on a variety of computational tools and methods. XSEDE has also created an index to sharable instructional materials focused on building a virtual community interested in computational science education. The index will allow faculty and students to find reviewed examples of models, exercises, and instructions that can be incorporated into current and future courses.", "authors": [{"name": "Steven I. Gordon", "affiliation": "Ohio Supercomputer Center, Columbus, OH, USA"}], "tags": ["computational science education", "simulation", "modeling"]}, {"title": "Curriculum collaboration, customization, and reuse: creating communities in digital repositories (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445412", "abstract": "With the proliferation of digital educational resources comes the requirement to provide educators with tools for collaboration, customization, and reuse of these resources. We describe our repository software built upon the Drupal content management system that allows educators to form curriculum-based online communities to create, share, and adapt educational resources and curricula. Teachers can create curricula from scratch, add to existing curricula, or clone and customize curricula to fit their teaching environment. We also show how our system can help educators see the usage contexts of their materials. The software is demonstrated in the STEMRobotics middle and high school robotics curricula repository and the MSScience middle school standards-based curriculum collaboration site.", "authors": [{"name": "Randy Steele", "affiliation": "Olympia School District, Olympia, WA, USA"}, {"name": "Lois Delcambre", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Scott Britell", "affiliation": "Portland State University, Portland, OR, USA"}, {"name": "Edward Fox", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["curriculum issues", "instructional technologies"]}, {"title": "Evaluation of the emerging scholars program at Columbia University (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445413", "abstract": "The Columbia Emerging Scholars Program (CESP) in Computer Science is a Peer Led Team Learning (PLTL) approach to bringing undergraduates new to the discipline together with peer mentors to work on computational problems, and to expose them to the broad array of disciplines within computer science. CESP demonstrates that computer science is necessarily a collaborative activity that focuses more on problem solving and algorithmic thinking than on programming. In spring 2012 the computer science department at Columbia University completed the 9th iteration of CESP, with 104 women and 36 men having completed the program to date. Female enrollment at Columbia during the past four years has increased from 9% to 23%, but did CESP play a part in this increase? This poster presents our evaluation data, which indicates that CESP increased enrollment in the computer science major, especially for women. Students who took CESP along with the introduction to computer programming course in 2009-10 were three times more likely to major in computer science the following year than the students who took introduction to programming without CESP. 47% of CESP students subsequently chose the computer science major. In addition, survey results indicated that a large majority of students intended to take another computer science course, were enthusiastic about the program, and found the workshop topics exciting and engaging. Participants reported that they learned more about computer science in CESP, and would recommend CESP to others.", "authors": [{"name": "Christian Murphy", "affiliation": "University of Pennsylvania, Philadelphia, USA"}, {"name": "Adam Cannon", "affiliation": "Columbia University, New York, USA"}, {"name": "Arthi Ramachandran", "affiliation": "Columbia University, New York, USA"}, {"name": "Rita Manco Powell", "affiliation": "University of Pennsylvania and The National Center for Women & IT, Philadelphia, USA"}, {"name": "Joshua Gordon", "affiliation": "Columbia University, New York, USA"}], "tags": ["recruiting", "peer led team learning", "emerging scholars program", "women in computer science", "computer science education"]}, {"title": "Classroom interventions to reduce failure & course withdrawal in CS1 (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445414", "abstract": "This poster reports on a set of classroom interventions at a public urban university to reduce the failure and withdrawal rate in CS1. Though unsuccessful in their original goal of reducing the number of students withdrawing from the course or receiving poor grades, the interventions provided valuable information suggesting contributors to poor course outcomes. These included concurrent full-time enrollment and full-time employment and lack of foundational skills. We also found that at-risk students could be identified with a one-page quiz the third week of the semester. We have made several course revisions going forward, including restructuring programming assignments and adding online practice problems, and revised our academic advising procedures.", "authors": [{"name": "Brian K. Hare", "affiliation": "University of Missouri - Kansas City, Kansas City, MO, USA"}], "tags": ["retention", "introductory programming", "cs1"]}, {"title": "Using an alternate reality game as a course backdrop (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445415", "abstract": "Education research has long borne that students who are the most successful are those that are intrinsically motivated. In the computer science education community there have been attempts to create intrinsic motivation in our students through the use of puzzles and games. At the same time, members of the community have advocated the use of storytelling to increase intrinsic motivation and student learning.\nIn an undergraduate computer science curriculum, large software projects and challenging lab assignments are necessary elements. While successful students thirst for these experiences, many students dread courses driven by large and challenging assignments.\nIn order to increase the intrinsic motivation of students in such a course, the assignments can be structured as elements of an alternate reality game (ARG) where successful participation in and completion of assignments advances a narrative set in the real world.\nThe advantage of using a ARG in an educational context is many-fold: its storytelling and puzzle elements increase student engagement, it generates a sense of excitement in the class, and it increase student motivation to complete assignments.\nIn an implementation of this course backdrop, student surveys indicate that students find the narrative element of the course fun, that they are more excited to do the lab assignments because of it, and that it makes them more excited about studying computer science. Furthermore, the excitement around the game helped to build community: interested students who completed the course helped in the preparation of the ARG for the next offering of the course.", "authors": [{"name": "Matthew A. Lang", "affiliation": "Moravian College, Bethlehem, PA, USA"}], "tags": ["active learning", "alternate reality games", "storytelling"]}, {"title": "Using sequential pattern mining to increase graph comprehension in intelligent tutoring system student data (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445416", "abstract": "Examining student interactions in multi-step problems from Intelligent Tutoring Systems currently involves examining thousands of interactions from hundreds of students. We designed and implemented a sequential pattern mining algorithm and a sequence rating algorithm that together recognize interesting student action sequences and display them to the user in the context of the larger graph system. With the added feature of our algorithms in the InVis system, we hope to allow teachers and tutoring system designers to better understand student action patterns and thus cater better to their learning.", "authors": [{"name": "Aaron Springer", "affiliation": "Eastern Mennonite University, Harrisonburg, USA"}, {"name": "Michael Eagle", "affiliation": "University of North Carolina Charlotte, Charlotte, USA"}, {"name": "Tiffany Barnes", "affiliation": "University of North Carolina Charlotte, Charlotte, USA"}, {"name": "Matthew Johnson", "affiliation": "University of North Carolina Charlotte, Charlotte, USA"}], "tags": ["graph comprehension", "pattern mining", "action mining", "intelligent tutoring systems"]}, {"title": "MyCS: middle-years computer science (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445417", "abstract": "MyCS (Middle-years Computer Science) is a one-semester CS curriculum that engages middle schoolers in computational skill-building. Scratch programming serves as a touchstone throughout the eighteen-week syllabus. Students punctuate that foundation with hands-on activities leveraged from excellent resources such as Exploring Computer Science, CS Principles, webdev tools, and CS unplugged. Over twenty classrooms and 700 students participated in MyCS's pilot years within the Pomona, CA and Lihue, HI school districts; 2013-15 will see an NSF-supported expansion of its summer workshops, academic-year classes, and program evaluation. This poster highlights our experiences developing MyCS, deploying it widely, and soliciting feedback on students' evolving computational identities.", "authors": [{"name": "Zachary Dodds", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Michael Erlinger", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["middle-school computer science"]}, {"title": "Cyberbulling and game models (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445418", "abstract": "The incidence of cyberbullying has been on the increase as more young people are spending time socializing online. Cyberbullying manifests itself through the sending of embarrassing pictures, mean-spirited text messages, emails and/or postings on social media. Technology has exacerbated the problem by allowing bullying to be accomplished easily and anonymously. The problem of cyberbulling has been brought at the forefront of many colleges and high schools because it is spreading. Indeed, studies show that 39% of social network users have been victims of cyberbulling, compared with 22% of online teens who do not use social networks. Additionally, 88% of teens using social media say they have witness an instance of cyberbulling. Victims of cyberbullying experience negative emotional, physical and social consequences, sometimes leading to the victim's suicide.\nThis module aims at increasing students' awareness of cyberbulling while introducing game theory. Game theory is used to model the bully and the victim and exposes the student to various 2-player models (zero-sum, predator-prey, Nash equilibrium) and strategies that produce the best outcome. This module will be 6 to 9 hours long and will present a definition of cyberbullying, statistics about its prevalence, and research done to prevent and deter cyberbullying. Next, concepts of game theory relevant to modeling a cyberbully and their victim, as 2x2 games, actions, payoffs will be introduced. As regards to learning objectives, it is anticipated that students, who complete this module, will be able to use simulation software to model various game strategies to represent a cyberbullying situation.", "authors": [{"name": "Rattikorn Hewett", "affiliation": "Texas Tech University, Lubbock, TX, USA"}, {"name": "Lila Ghemri", "affiliation": "Texas Southern University, Houston, TX, USA"}, {"name": "Colleen Livingston", "affiliation": "Bemidji State University, Bemidji, MN, USA"}], "tags": ["social media", "game theory", "cyberbullying"]}, {"title": "Enhance computer networks learning with hands-on mobile device based labware (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445419", "abstract": "Digital mobile devices, such as smart phones, have become an essential part of daily lives for the young generation, especially college students. The rapid growth of wireless and mobile technologies results in a huge demand on qualified professionals in this area. More and more schools started teaching wireless and mobile networking, but how to provide students with hands-on practice experience is still a challenge. The networking capabilities of smart mobile devices make it a perfect instructional tool for networking related course teaching. In this study, we have designed and developed a labware with Android smart phones that focuses on teaching and learning of fundamental data communications and networking concepts by making use of the mobile nature of smart phones and mobile devices. The goal of this labware is to provide students with hands-on experience with mobile devices to better understand networking concepts such as different layers of TCP/IP protocol, Bluetooth, Wi-Fi, and a wide range of networking methodologies/implementations in a easy-adoptable, affordable, and effective way.", "authors": [{"name": "Prabir Bhattacharya", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}, {"name": "Kai Qian", "affiliation": "Southern Polytechnic State University, Marietta, GA, USA"}, {"name": "Guillermo Francia", "affiliation": "Jacksonville State University, Jacksonville , AL, USA"}, {"name": "Ming Yang", "affiliation": "Southern Polytechnic State University, Marietta, GA, USA"}, {"name": "Minzhe Guo", "affiliation": "University of Cincinnati, Cincinnati, OH, USA"}, {"name": "Li Yang", "affiliation": "University of Tennessee at Chattanooga, Chattanooga, TN, USA"}], "tags": ["android", "mobile device", "labware", "mobile", "networking"]}, {"title": "Women in technology: an international collaborative celebration (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445420", "abstract": "The low numbers of female students in computing and computer science courses is still of concern. Initiatives to bring together women in technology to share their experiences, is an important aspect of increasing the numbers of female students entering the computing profession. A very successful celebration of Women in Technology was recently held in Australasia based on a tried and true US model. This model was adapted for the region and added to, other countries will be able to take the model and use it in their own environments and cultures. This poster will describe the recent event and give suggestions and models for other regions and countries to be able to replicate it.", "authors": [{"name": "Catherine Lang", "affiliation": "Swinburne University of Technology, Melbourne, Australia"}, {"name": "Annemieke Craig", "affiliation": "Deakin University, Geelong, Australia"}, {"name": "Alison Clear", "affiliation": "Christchurch Polytechnic Institute of Technology, Christchurch, New Zealand"}], "tags": ["women in technology"]}, {"title": "Creating an educational robot by embedding a learning agent in the physical world (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445421", "abstract": "One essential goal in education is to improve understanding of how humans acquire knowledge and how students vary in their abilities to learn. Building an intelligent agent that models student learning would be a significant achievement in the learning sciences. SimStudent is a state-of-the-art intelligent agent that simulates a human's learning process. However, SimStudent has only been living in the world of graphical user interfaces. To construct a more human-like learning agent, we integrate SimStudent with a cognitive robot, Calliope5KP, to create a physical agent that is able to learn skill knowledge by interacting with users in the physical world. We demonstrate the integration in a tic-tac-toe game, and show that the SimStudent robot is able to learn reasonably well with 12 games.", "authors": [{"name": "Kenneth R. Koedinger", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Apoorv Khandelwal", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Dave S. Touretzky", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Tung Phan", "affiliation": "Carleton College, Northfield, MN, USA"}, {"name": "Nan Li", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "William W. Cohen", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["educational robot", "agent learning"]}, {"title": "Teaching software engineering with an open-source humanitarian software project (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445422", "abstract": "A common criticism of undergraduate computer science is a disconnect from software development in the real world. To remedy this shortcoming, we introduced an actively developed open-source software project into a third-year software engineering course. We selected a humanitarian software project, Ushahidi, a crisis-mapping web application that is deployed worldwide to track events as diverse as election violence in developing countries, natural disasters and recently, Hurricane Sandy.\nThe primary learning outcome of working with open-source software is that communication skills are as important as programming skills when developing software on a large scale. Working with an active open-source project exposed students to interesting issues related to real-world software development and facilitated direct interaction with expert, professional developers. Positive experiences included successfully understanding, modifying and debugging software written by someone else -- a rare activity in most curricula. The students also had to work with Ushahidi's distributed development model, common to many open-source projects, which reinforced the importance of communication skills and associated tools. Students also experienced some negative realities such as non-existent or outdated documentation and inconsistent software interfaces.\nAside from the technical learning outcomes, an intangible benefit of our approach was the motivation students experienced from having someone other than their instructor interested in their progress. As well, the use of a humanitarian software project exposed students to the changing face of computing from its business and scientific roots into new application areas.", "authors": [{"name": "Cameron Macdonell", "affiliation": "Grant MacEwan University, Edmonton, AB, Canada"}], "tags": ["open source", "computer science education", "software engineering"]}, {"title": "Computing in context (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445423", "abstract": "As computing moves into its sixth decade as a formal field of study, a great deal of attention is focused on the breadth of relationships between computing and other disciplines. Descriptors of this relationship include computing in context, computing with a purpose, computing + X, computational X, interdisciplinary computing, multi-disciplinary computing, and trans-disciplinary computing. Regardless of the descriptor, the goals for exploring the relationship remain the same: students need to understand how the power of computing informs and shapes ideas throughout the academy and society. They need to learn appropriate concepts in computing and to see these applied to other areas of study. This learning will be most effective when approached through active participation of students, as they tackle questions and problems coming from society's ever-growing and ever-changing reliance on computing devices and modes of interaction. Our NSF-funded project, titled Computing in Context, fosters interdisciplinary computing education by creating exemplars of curricular materials, testing these materials in undergraduate computing courses, and disseminating the materials through computingportal.org. We focus our effort on four areas of applied computing: computational linguistics, computing and music intelligence and security informatics, and web science. Our materials will be designed for inquiry-based learning, whether this occurs in lecture as a brief conversation between pairs of students or in lab as loosely formulated problem or scenario or as a multi-week, team-based project.", "authors": [{"name": "Robert E. Beck", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Christine Nass", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Edward Carr", "affiliation": "North Carolina A&T, Greensboro, NC, USA"}, {"name": "Wingyan Chung", "affiliation": "Fayetteville State University, Fayetteville, NC, USA"}, {"name": "Edward Fox", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["computational linguistics", "web science", "intelligence and security informatics", "computing and music"]}, {"title": "Integrating computer science into middle school mathematics (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445424", "abstract": "Our project is part of the Adventures in Alice Programming project at Duke University. In particular, our project is integrating computer science into middle school math using Alice. We show several ways for students to improve their math skills while engaging their interest in programming. First, we have created Alice worlds for students to interact with to practice math concepts. Second, we have created tutorials to guide students on building such worlds. Third, we have created short challenge problems for students to focus on the math and the programming statements to complete a mostly built world. To encourage the use of Alice with projects we have developed many sample math projects. To encourage teachers to use Alice with math and computer science, we have been mapping our free curriculum materials to both the Commmon Core Math standards and the CSTA CS standards. Our curriculum materials are available at www.cs.duke.edu/csed/alice/aliceInSchools", "authors": [{"name": "Dwayne C. Brown", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Susan H. Rodger", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Michael Hoyle", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Michael Marion", "affiliation": "Duke University, Durham, NC, USA"}], "tags": ["k-12 education", "middle school", "virtual worlds", "introductory computer science", "alice", "mathematics"]}, {"title": "OpenDSA: using an active eTextbook to teach data structures and algorithms (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445425", "abstract": "We present a study to evaluate OpenDSA, an open source, online system combining textbook-quality content with algorithm visualizations and interactive exercises for data structures and algorithms courses. We hypothesize that answering many questions and exercises with immediate feedback allows students to know whether they are on track with their learning. In a quasi-experimental study, a control group received lecture and textbook for three weeks. The treatment section spent class time working through equivalent content and exercises in OpenDSA. A post-test compared the two. An opinion survey examined students' perception and opinions about the experience. Detailed interaction logs were used to analyze student use of the tutorials and exercises to understand how they used the system.", "authors": [{"name": "Eric Fouh", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Daniel Breakiron", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Mai Elshehaly", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Ville Karavirta", "affiliation": "Aalto University, Helsinki, Finland"}, {"name": "T. Simin Hall", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["automated assessment", "algorithm visualization", "etextbooks"]}, {"title": "Making images by hand and by code: motivating students with multi-language interactive media application scripting (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445426", "abstract": "Calls are growing for computer science faculty to build a citizenry who are fluent with information technology and able to think computationally. While one might hope that our students would naturally understand the importance of such knowledge, many do not. CS faculty must therefore find ways to motivate such students.\nIn this project, we explore interactive scripting, scripting done while working in an application. Scripting applications allows non-programmers to explore creative spaces and more efficiently accomplish many tasks. The interactive scripting model allows students to mix work they do normally (\"by hand\") with scripts that they write to better interact with the system (\"by code\"). Rather than focusing on one language or programming environment, we explore a multilingual approach that supports scripting in the environment the student (or their professor) considers appropriate. The success of the Media Computation approach leads us to focus on media applications, primarily image making and manipulation.\nWe describe our experience (1) developing and using libraries to support interactive scripting in a functional language and an object-oriented language; (2) extending two open-source graphics applications, the GNU Image Manipulation Program and Inkscape, to support interactive multilingual scripting and (3) building novice-friendly examples and procedures.", "authors": [{"name": "Prashanna Tiwaree", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Hart Russell", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Chukwunweike T. Abuah", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Sydney Ryan", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Zarni Htet", "affiliation": "Cornell College, Mount Vernon, IA, USA"}, {"name": "Katherine Ingersoll", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Rogelio Calderon", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Kimberly Spasaro", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Martin Estrada", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Adriana M. Hurley", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["open-source software", "computational thinking", "fitness", "media computation", "scripting languages", "functional programming"]}, {"title": "Selecting and using a parallel programming language (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445427", "abstract": "One promising approach to teaching parallel programming is to use high-level parallel programming languages, which handle some of the more mundane details of parallel programming and allow both instructors and students to focus on the main ideas. How does one go about selecting the language to use? We present short descriptions of a variety of languages (Chapel, Cilk, CUDA, Habanero Java, Hadoop, OpenACC, OpenMP and Scala), including our assessment of their strengths and weaknesses, plus some general considerations to keep in mind when teaching parallel programming.", "authors": [{"name": "Andrei Papancea", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "David Bunde", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Chris Mitchell", "affiliation": "CloudBolt Software, Rockville, MD, USA"}, {"name": "David Ely", "affiliation": "The Ohio State University, Columbus, OH, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Miriam Robinson", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Ben White", "affiliation": "Lewis & Clark College, Portland, OR, Uae"}, {"name": "David Lucas", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Michael Graf", "affiliation": "Knox College, Galesburg, IL, USA"}], "tags": ["parallel programming languages", "teaching parallel programming", "high-level languages"]}, {"title": "A comprehensive software engineering education program for grades 6 to 12 in NYC public schools (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445428", "abstract": "How do we best prepare middle and high school students for college and career pathways in software engineering? Current industry and academic trends suggest that students are best prepared for postsecondary success in new and emerging interdisciplinary fields through extensive training in higher-order thinking skills, such as creative thinking, problem solving, critical thinking, and computational thinking, as well as the development of advanced technical skills, such as applied computing and engineering. To address the urgent need to prepare students for postsecondary industry and educational pathways that utilize software engineering principles, the Office of Postsecondary Readiness (OPSR) within the NYC Department of Education has created a comprehensive curricular program in software engineering for students in grades 6 to 12 called the Software Engineering Pilot (SEP) program. OPSR seeks to improve college and career readiness for all students by placing the SEP program in twenty (20) NYC public schools --ten (10) middle schools and ten (10) high schools-- by the fall of 2013. In this poster session I will outline the various aspects of our comprehensive curriculum, including innovative approaches to teaching abstract concepts, and present the recommended overall curricular scope and sequence for introducing software engineering to students in grades 6 to 12.", "authors": [{"name": "Cameron L. Fadjo", "affiliation": "New York City Department of Education, New York, NY, USA"}], "tags": ["gender", "computing education", "instructional embodiment", "software engineering education", "college and career readiness", "constructionism", "curriculum design", "grounded embodied pedagogy"]}, {"title": "Teaching data structures with BeSocratic (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445429", "abstract": "Data structures are one of the fundamental concepts that all computer scientist students must learn if they are to succeed in their careers. Therefore, it is important to develop and assess questions targeted at improving the teaching of data structures. Unfortunately, research suggests that multiple choice or matching questions cannot be used to properly assess deep knowledge on a subject [1,2,3,4]. Students can often guess their way to the correct answer. We believe that students must construct these structures instead of simply identifying them. However, analyzing many hand-drawn data structures is time-consuming for large class sizes. This poster describes a web-based software tool, BeSocratic, designed to facilitate interactivity in a data structures course. BeSocratic allows students to build data structures intuitively using a combination of handwriting recognition and gestures. Using BeSocratic, instructors can create intelligent tutors that teach students to construct various data structures. These tutors are able to identify problems and provide multi-tiered feedback to students. Furthermore, BeSocratic records each action a student makes, so it may be replayed and visualized to gain deeper insights into how students construct data structures and complete algorithms. We have created and pilot-tested a BeSocratic activity, which teaches students how to construct splay trees.", "authors": [{"name": "Roy P. Pargas", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Sam Bryfczynski", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Michael Klymkowsky", "affiliation": "University of Colorado Boulder, Boulder, CO, USA"}, {"name": "Melanie M. Cooper", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Brian C. Dean", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["splay trees", "intelligent tutors", "feedback", "data structors"]}, {"title": "Robobuilder: a computational thinking game (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445430", "abstract": "RoboBuilder is a blocks-based, program-to-play game designed to introduce students to core aspects of computational thinking in a fun and engaging environment. The game employs a constructionist design to challenge players to invent and implement strategies to control an on-screen robot using a specially designed visual programming language. During the game, players' robots compete against a series of progressively more challenging opponents in one-on-one battles. Through playing the game, players construct working programs, providing learners with the experience of reifying their own ideas using a computational medium, a practice central to our notion of computational thinking. This poster presents the design rationale for RoboBuilder and discusses key aspects of the game that contribute to giving learners a positive, hands-on introduction to core computational thinking skills including computationally expressing ideas, algorithmic thinking, and debugging.", "authors": [{"name": "David Weintrop", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Uri Wilensky", "affiliation": "Northwestern University, Evanston, IL, USA"}], "tags": ["novice programming environments", "design", "computational thinking", "game-based learning"]}, {"title": "Modeling student programming with multimodal learning analytics (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445431", "abstract": "Understanding how students solve computational problems is central to computer science education research. This goal is facilitated by recent advances in the availability and analysis of detailed multimodal data collected during student learning. Drawing on research into student problem-solving processes and findings on human posture and gesture, this poster utilizes a multimodal learning analytics framework that links automatically identified posture and gesture features with student problem-solving and dialogue events during one-on-one human tutoring of introductory computer science. The findings provide new insight into how bodily movements occur during computer science tutoring, and lay the foundation for programming feedback tools and deep analyses of student learning processes.", "authors": [{"name": "Kristy Elizabeth Boyer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Joseph B. Wiggins", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric N. Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James C. Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Joseph F. Grafsgaard", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["nonverbal behavior", "posture", "tutoring", "computer science education research", "multimodal learning analytics", "computer programming", "gesture"]}, {"title": "Embracing the digital humanities: a course on computing in the humanities for undergraduate computer science minor students (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445433", "abstract": "A review of literature in the Digital Humanities field reveals ongoing research on curriculum development. Case studies highlight projects as a means of teaching humanities computing. From a computing perspective, a literature review reveals studies on building successful programming curricula across disciplines; implementing project-based learning ; the role of Computer Science departments in inter-disciplinary studies and the role of teaching web programming to non-majors. Students must fulfill two pre-requisites in order to attend our class: at least one semester each in web design and programming in a high-level language (e.g. Python or Java). CS majors are welcome to take this as an elective. This course was given for the fourth time in the fall, 2012 term. Topics in this course focus on the following subjects and projects: textual analysis by writing programs in Python; a text encoding project using XML with adherence to current Text Encoding Initiative standards (see TEI - http://www.tei-c.org/index.xml); building an on-line archive from primary source materials using xHTML/CSS, XML, XSLT and JavaScript; and creating works of software art using Processing /Java (http://processing.org/). Students are exposed to current research throughout the Digital Humanities by a series of guest lectures given by NYU faculty from the departments of English, History, Museum Studies, and Classics.", "authors": [{"name": "Deena Engel", "affiliation": "New York University, New York City, NY, USA"}], "tags": ["web-based techniques", "curriculum development", "multimedia", "non-majors"]}, {"title": "A cloud computing curriculum for undergraduate CS majors (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445434", "abstract": "We describe our approach in developing a Cloud Computing course for undergraduate CS majors. Teaching Cloud Computing can be a challenge, as there are many concepts that need to be covered within the limited time-frame of a three-credit hour semester course. Our approach focused on teaching the concepts and techniques for writing distributed client software using Cloud services, while covering other aspects of Cloud Computing at a higher-level using a story-telling approach. The core concepts were taught through a series of hands-on, scenario-driven, lectures and labs using Cloud services provided by Amazon.com. We share our experience in evaluating other Cloud Computing platforms for use in the class, and the challenges and false assumptions we encountered while teaching it.", "authors": [{"name": "Edward Walker", "affiliation": "Whitworth University, Spokane, WA, USA"}], "tags": ["undergraduate computer science education", "distributed computing", "curriculum development", "cloud computing"]}, {"title": "Using the atmel AVR (arduino microcontroller) as the foundation of beginning computer organization course (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445435", "abstract": "This poster describes our experiences, materials and plans using the Atmel AVR, a RISC microprocessor, for teaching beginning computer organization at the college level. In particular, we use this microprocessor, typically packaged into the Arduino, to give hands-on experience with: (1) Assembly language programming, including ISA (16 bit instructions), multiple types of branches, multiple addressing modes, (2) C language programming, (3) interrupt programming, (4) I/O programming, and (5) programming on-board components, e.g., timers/counters.\nBecause I/O pins are exposed, it is easy to use logic analyzer or oscilloscope to observe actual signals. Students are charmed and motivated by the physicality of the platform. It is an easy to use platform with a large and enthusiastic user community.", "authors": [{"name": "Susan Makrouhee Haynes", "affiliation": "Eastern Michigan University, Ypsilanti, MI, USA"}], "tags": ["device driver", "interfacing"]}, {"title": "Technovation challenge: teaching girls computer science & entrepreneurship (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445470", "abstract": "Technovation Challenge introduces computer science to high school girls in a dynamic learning environment that offers exciting, real-world challenges to conquer; fresh new ways of thinking and problem solving; and the support of hands-on female mentors drawn from academia and the tech industry. Over the course of 12 intensive weeks, students identify a problem drawn from their own real-life experiences and program a mobile phone application to solve it. They practice their pitch with experienced investors who give them feedback on their app and business plan. After some more polishing and practice, the girls then pitch their ideas to a panel of venture capitalists. The winning team receives funding to take their app to market.", "authors": [{"name": "AnnaLise Hoopes", "affiliation": "Iridescent, Los Angeles, CA, USA"}, {"name": "Dara Olmsted", "affiliation": "Iridescent, Los Angeles, CA, USA"}, {"name": "Tara Chklovski", "affiliation": "Iridescent, Los Angeles, CA, USA"}], "tags": ["girls"]}, {"title": "Making programming contest practice worthy of academic credit (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445437", "abstract": "The ACM Intercollegiate Programming Contest is probably the most prestigious competition of its kind. Decomposing problems into familiar algorithms; making tradeoffs between efficiency and complexity; working on a team under pressure; not only are these skills needed to compete successfully in such a contest, but are also highly valued in industry. The focus of this poster is to describe a course recently added to the curriculum at Vanderbilt University that centers on programming contest skills and yet, somewhat surprisingly, encompasses several significant learning objectives.\nBecause we already had a general idea of what the learning activities of a course like this would be, we were careful not to simply cobble together performance metrics and learning objectives to suit them. This common mistake leads to assessments that devolve into skills tests measuring basic knowledge instead of instruments that gauge a deeper understanding of the target learning objectives. To combat these pitfalls I broke down the learning activity by identifying the skills needed for success in such an exercise. I then classified each skill in two ways. (i) How could this ability play a part in the achievement of some broader, overarching concept and (ii) in what way might the learning and practice of this skill contribute to the deeper understanding of these larger concepts. Our goal is to inform faculty on how they might include a course like this in their programs and to demonstrate its value to the curriculum.", "authors": [{"name": "Julie L. Johnson", "affiliation": "Vanderbilt University, Nashville, TN, USA"}], "tags": ["course design", "programming contest"]}, {"title": "Interdisciplinary computing, successes and challenges (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445438", "abstract": "We summarize the results of our NSF funded exploration of interdisciplinary computing, including the following points: Interdisciplinary computing spans fields as diverse as visual art, music, the humanities and social sciences, health sciences, pure science, engineering, and mathematics. No field of inquiry in the 21st century extends its knowledge without the influence of computing.[1-4]; A bifurcation is occurring: at some institutions this climate of interdisciplinary work is nurtured, while at others it is thwarted by lack of motivation, resource limitations or simple inaccessibility.; Interdisciplinary computing is inherently collaborative between computing specialists and specialists in other fields. It is not merely pair-wise: computational-X or Y-informatics, but often the collaboration draws from a number of fields.; An important question is what is the breadth and depth of knowledge and skill required to engage in this work. Who needs to know what? What is the language of discourse? How is a methodology established and accepted, and how is subsequent work evaluated?; The mundane concerns of intellectual ownership, boundaries on the discipline (e.g. silos), professional advancement, financial support, and institutional buy-in can diminish the pure intellectual joy that is evident in existing interdisciplinary work.; Impediments are encountered in making the effective collaborations that are essential for the advancement of all the disciplines. The computing disciplines are essential to and also dependent on nearly all other branches of intellectual discovery. [5-6]", "authors": [{"name": "Lillian N. Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Ursula Wolz", "affiliation": "Montclair State University, Montclair, NJ, USA"}], "tags": ["computational thinking", "interdisciplinary computing"]}, {"title": "How students learn: ripples in computer science/software engineering curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445439", "abstract": "Learning cycle models have long offered structure and ideas for how to teach using a range of activities. Unfortunately recent studies have shown the models of learning styles and learning cycles are poorly supported by scientific evidence. In order to explore the answer to the question, how people learn, Race (2010) has put forward a model to simplify the terminology used in other learning models. The first two ripples are the Want ripple where the student has some want to learn, and the Need ripple where the learner has established that there is a need to learn the subject. These two ripples are considered the motivation aspects of the course. This poster describes the ripple model and the analyses the first two ripples in the context of Computer Science/Software Engineering students.", "authors": [{"name": "Michael Lance", "affiliation": "CPIT, Christchurch, New Zealand"}, {"name": "Amitrajit Sakar", "affiliation": "CPIT, Chrictchurch, New Zealand"}, {"name": "Alison Clear", "affiliation": "CPIT, Christchurch, New Zealand"}], "tags": ["education"]}, {"title": "Kodu, alice and lego robotics: a three-step model of effective introducing middle school students to computer programming and robotics (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445440", "abstract": "This poster describes a three-step ladder model of K 12 computing and robotics instruction beginning with a simpler programming environment (Kodu) and progressing to more challenging frameworks (Alice and Lego NXT). While moving between the three steps, students explore the similarities and differences in how concepts such as variables, conditionals, and looping are realized. Computer Science Unplugged activities are integrated and then implemented using Kodu, Alice and robots. This innovative model helps maintaining high levels of motivation, concentration, and fun during the entire six weeks of the camp. Feedback obtained from instructors, participants and participants' parents, reinforced by the results of the pre and post program evaluations, clearly indicated the program as a success.", "authors": [{"name": "Taha Ben Brahim", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "John Weaver", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Daniela Marghitu", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Yasmeen Rawajfih", "affiliation": "Auburn University, Auburn, AL, USA"}], "tags": ["computational thinking", "k12 inclusive outreach"]}, {"title": "A multi-level video game for teaching security (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445441", "abstract": "Video games can provide a secure and motivating active learning environment with practical scenarios. This video game project simulates a security competition where the player has to protect the system and keep the services running by reacting to injections that occur at random. The game has several modules (content areas) and levels. Modules have at least two levels. The first level requires installing and configuring hardware/software. For the second level players needs to respond to random events.\nIn the Network module, players install and configure network components such as a firewall/router, a WPA2 WIFI, a web filter/proxy, a spam filter and antivirus software. In the Database Module, players install Apache Web Server, the Data Management System (DBMS) and Database Applications. Players need to install the database and the web-server in a port different than their default port, disable default passwords and test for SQL injection before installing the database. In the Encryption Module, players will be given several scenarios and need to choose the best encrypting method perform the actions to ensure that the data is encrypted. The last module integrates content areas from all other modules.", "authors": [{"name": "Huwida Said", "affiliation": "Zayed University, Dubai, Uae"}, {"name": "Mario A.M. Guimaraes", "affiliation": "Zayed University, Dubai, Uae"}], "tags": ["prototypes", "sdlc", "video games", "ide"]}, {"title": "Computing foundations for the scientist (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445442", "abstract": "There is a need for a new style of supporting a computer course. Although it is widely recognized that computer technology provides essential tools for all current scientific work, few university curricula adequately ground science majors in the fundamentals that underlie this technology. Introducing science students to computational thinking in the areas of algorithms and data structures, data representation and accuracy, abstraction, performance issues, and database concepts can enable future scientists to become intelligent, creative and effective users of this technology. The intent is not to turn scientists into computer scientists, but rather to enhance their ability to exploit computing tools to greatest scientific advantage. This poster demonstrates one course doing this.", "authors": [{"name": "Larry Vail", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}, {"name": "Catherine Bareiss", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}], "tags": ["supporting course", "natural sciences"]}, {"title": "On the countably many misconceptions about #hashtables (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445443", "abstract": "From an ongoing research project on teaching hash tables using worked examples, we present four preliminary observations. First, that rather than there being a small set of common misconceptions, student misconceptions are diverse and often unique to the student. Second, that students' naive language about hash tables when given a pretest is influenced by words from the Internet (e.g. \"hashtag\"). Third, we observed that students' language on concept questions evolves with repeated testing, becoming more conceptually accurate but technically less precise. And finally, that students' code code correctness is not correlated to code style, but is correlated to how students performed on the concept questions.", "authors": [{"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Elizabeth Patitsas", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Steve Easterbrook", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["data structures", "cs2", "code style"]}, {"title": "Girls in IT: the facts - a comprehensive look at the latest research on gender and technology in K-12 contexts (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445444", "abstract": "Girls and women continue to be underrepresented in technology one of the fastest growing fields in the U.S. economy. This persistent underrepresentation inhibits innovation by ignoring the diverse perspectives and life experiences women bring to invention and problem solving. Furthermore, disregard for girls' and women's participation perpetuates and exacerbates existing economic disparities for women. In the last decade, considerable research into increasing girls' participation in computing has emerged, but an up-to-date, easy-to-access synthesis of this research is lacking. This gap makes it difficult for educators and advocates to easily access the data they need to make compelling arguments about increasing girls' participation or to offer recommendations based on the latest research. To fill this gap, the National Center for Women & IT (NCWIT) has released a new, ground-breaking report that brings together the best available research in gender, technology, and K-12 education in a one-stop, easy-to-access resource, Girls in IT: The Facts. This poster session will provide an overview of the report. Attendees will gain access to the latest information on 1) the current state of affairs for girls in computing and the key barriers to increasing girls' participation in these fields. Most importantly, attendees will also learn about key promising practices and practical resources educators, policymakers, parents, and others can use to address these barriers. The ultimate goal of this session is to enable attendees to more effectively use this research to advocate for more inclusive computing curriculum, practices, and environments in K-12 contexts.", "authors": [{"name": "Catherine S. Ashcraft", "affiliation": "University of Colorado, Denver, CO, USA"}], "tags": ["gender", "successful strategies", "broadening participation", "diversity"]}, {"title": "Introducing privacy in a data mining course (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445445", "abstract": "There has been a staggering increase in the volume of information exchanged over the Internet and the amount of personally identifiable information present online. Additionally, legislative mandates, such as the Sarbanes-Oxley Act of 2002, aim at monitoring organizational behavior and communication, and require organizations to safe keep all written corporate communication, thus creating huge repositories of information, most of which must be access-restricted. IT carries the primary responsibility for ensuring that private digital information does not become public, through the implementation of access-security measures, together with constant monitoring to ensure that even authorized users behave responsibly and ethically. This situation requires CS educators to introduce students to data privacy and the ways to protect users' privacy.\nWe designed a privacy module, consisting of three lessons incorporated into a data mining course. The module aims at introducing students to privacy issues and legislations and the methods and technologies currently in use to protect privacy. The intended audience for this module is senior CS majors, with a working knowledge of database systems and basic data mining techniques. The module first presents students with an overview of privacy concepts and laws and regulations to protect it. Students are then introduced to data privacy-enhancing data manipulation methods as well as secure privacy preserving computation. Upon completion of this module, it is anticipated that students will acquire a good understanding of the concept of privacy, privacy laws and regulations and will become knowledgeable of the computational techniques used for preserving privacy in data mining.", "authors": [{"name": "Lila Ghemri", "affiliation": "Texas Southern University, Houston, TX, USA"}, {"name": "Ping Chen", "affiliation": "University of Houston-Downtown, Houston, TX, USA"}], "tags": ["privacy", "data mining", "privacy laws"]}, {"title": "\"Dictionary Wars\" (abstract only): an inverted, leaderboard-driven project for learning dictionary data structures", "link": "https://dl.acm.org/doi/10.1145/2445196.2445446", "abstract": "We present a highly reusable \"inverted\" project in which students learn asymptotic and practical behaviour of dictionary data structures--linked-lists, arrays, balanced trees, and hash tables--in an atmosphere of mild competition. Much like David Levine's Nifty Assignment \"Sort Detective\", rather than implementing the dictionaries, students' programs generate input to our (unlabeled) implementations, and students use timing data to label the implementations. Much like Bryant and O'Halloran's computer architecture labs, students also compete to \"convince\" a web-based, automated system that their input generators distinguish the dictionaries based on trend-line behaviour. Initial assessment results suggest the project makes substantially improves students' understanding of practical performance of various dictionary data structures, particularly hash tables. UBC has used the project in three terms, and we plan to use it at UBC and U Toronto in coming terms.", "authors": [{"name": "Brendan Shillingford", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Joel Kitching", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Elizabeth Patitsas", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Kuba Karpierz", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Steven A. Wolfman", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["leaderboard", "dictionary adt", "inverted assignment", "map adt"]}, {"title": "Computer science-education outreach: an interdisciplinary collaboration (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445447", "abstract": "A recent focus in CS education has been at the K-12 level, developing CS and computational thinking skills. Oftentimes CS programs find it difficult to get into schools. At St. Scholastica a unique partnership exists between CS and Education. Together they sponsor workshops, write grants, conduct research and support a CSTA chapter. Activities have credibility with K-12 educators and involve subject matter experts. CS programs are able to reach their target audience, encouraging more teachers to include CS in their curriculum and to support their students in pursuing technical careers. Education programs have another way to partner with teachers and provide continuing education. The poster will share benefits for each program, collaborative activities, logistics and results.", "authors": [{"name": "Chery Takkunen", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}, {"name": "Jennifer Rosato", "affiliation": "College of St. Scholastica, Duluth, MN, USA"}], "tags": ["computational thinking", "k-12 outreach"]}, {"title": "Improving hispanic high school student perceptions of computing (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445448", "abstract": "A research study measuring perceptions of computing held by Hispanic high school students has been conducted using two visual programming interfaces. Undergraduates conducted regular weekend classes using both Alice and App Inventor lessons to provide computing instruction to the students enrolled in an enrichment program. The goal of this research was to identify and measure high school student perceptions of computing after being introduced computing using drag-drop programming interfaces. The results of this work demonstrates how student interest in computing increases once exposed to computing, but the interest increment is not enough for them to major in a computing area, highlighting the importance of ongoing engagement in computing throughout the high school years.", "authors": [{"name": "Farah Zabe", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Patricia Morreale", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Yerika Jimenez", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Lauren Aguilera", "affiliation": "Kean University, Union, NJ, USA"}, {"name": "Marvin Andujar", "affiliation": "Kean University, Union, NJ, USA"}], "tags": ["high school minority students", "computing perception", "hispanic students", "app inventor", "alice"]}, {"title": "Developing game-like instructional modules to enhance student learning in lower level core computer science courses (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445449", "abstract": "Statistics have shown that fewer African Americans are pursuing Computer Science (CS) degrees relative to their proportion of the overall population and among those who do major in CS very few are employed as programmers. Struggling with the lower level core CS courses is the main barrier preventing students from declaring CS major and retaining students in the program. In this poster, we present our project of developing game-like instructional modules to enhance student learning in those gatekeeper courses namely Computer Programming I, Computer Programming II and Data Structures. The project involves implementing three components: Education, Assessment and Dissemination. The education component includes developing game-like instructional modules for those three courses, which will allow students to learn the difficult concepts in a gaming context. The assessment component includes establishing an advisory board for the project and implementing the evaluation plan. The advisory board, which consists of experienced CS faculty, education faculty and professionals from the game industry, assists in project development and the evaluation process. The dissemination component includes disseminating results through national conferences, outreach programs, computer science HBCU consortiums, publications and an HBCU faculty workshop. Several modules have been developed and evaluated in the computer programming classes at Winston-Salem State University. Initial assessment results show that game-like instructional modules had a positive impact on student learning.", "authors": [{"name": "Mustafa Atay", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Jinghua Zhang", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Elva J. Jones", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Rebecca Caldwell", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["cs education", "programming", "data structures", "game-like modules"]}, {"title": "Geospatial intelligence as a context for computing education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445450", "abstract": "We present Geospatial Intelligence (GEOINT) as a context for computing education. GEOINT is a rich source of ideas for programming projects, algorithm design and use of databases. Students are interested in GEOINT due to its inherently visual subject matter and its strong ties with crime, espionage and social changes and upheavals. In short we are motivating computation as a subject that can provide solutions and insights into crime mysteries and complex events that unfold over time and space. In addition to keeping Computer Science majors interested, we also seek to attract students of other disciplines into computing. GEOINT and computing knowledge can provide initial preparation for certain jobs that are in demand and also for graduate school. Our assignments and programming projects that are inspired by GEOINT can be used in an introductory programming course or a more advanced course. These materials derive from well known case studies and also fundamentals concepts in computing. Some programming projects are based on exploration of chronologies and timelines as tools that enable the geographical display of information as an order sequence of events. In general these geospatial displays can correlate information to help correct for possible gaps and inconsistencies in knowledge. These materials use multiple layered techniques of presenting information that use time, geographical location, weather conditions and static features of the earth's surface.", "authors": [{"name": "Rakesh Malhotra", "affiliation": "Fayetteville State University, Fayetteville, NC, USA"}, {"name": "Bogdan Czejdo", "affiliation": "Fayetteville State University, Fayetteville, NC, USA"}, {"name": "Sambit Bhattacharya", "affiliation": "Fayetteville State University, Fayetteville, NC, USA"}], "tags": ["algorithm design", "programming projects", "geospatial intelligence", "timelines", "databases"]}, {"title": "CloudCoder: building a community for creating, assigning, evaluating and sharing programming exercises (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445451", "abstract": "Automatically-tested online programming exercises can be useful in introductory programming courses as self-tests to accompany readings, for in-class assessment, for skills development, and to provide additional practice for students who need it. CloudCoder (http://cloudcoder.org) is an effort to build a community based on an open-source programming exercise system (currently supporting C, Java, and Python) tightly integrated with a repository of freely-redistributable programming exercises written and used by members of the community. The goal of the project is to make programming exercises easy and free to incorporate into any programming course.", "authors": [{"name": "Andrei Papancea", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "David Hovemeyer", "affiliation": "York College of Pennsylvania, York, PA, USA"}, {"name": "Jaime Spacco", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Matthew Hertz", "affiliation": "Canisius College, Buffalo, NY, USA"}, {"name": "Kelly Rivers", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "John Stamper", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["cs1", "automated testing", "cloudcoder"]}, {"title": "DISSECT: integrating computational thinking in the traditional K-12 curricula through collaborative teaching (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445452", "abstract": "The goal of the DISSECT program is to integrate computational thinking lessons into general education K-12 classrooms via graduate student/teacher partnerships. The idea of combining the teaching of CT with other disciplines is not new and it has taken shape in a variety of recent efforts in the formal education of youth. What is promising and innovative is the approach as it is implemented in K12 DISSECT classrooms. Through a collaborative teaching partnership, teachers gain a new perspective regarding computer science, and in cooperation with graduate students well-versed in computer science concepts, develop lessons and course modules that serve two purposes: 1.) Address K-12 content standards in core disciplines (e.g., language arts, life science) and 2.) Introduce CT concepts, such as abstraction, algorithms, data analysis and modeling. This poster describes ways computational thinking (CT) is taught in general K-12 classrooms in New Mexico through cooperative teaching. Along with their potential to stimulate interest in computing, these pilot modules were viewed by K12 teachers as enhancing disciplinary course content that teachers are charged with teaching (e.g., middle school science, language arts), deemed vital for sustainability in K12 schools by participating teachers. Preliminary data indicate graduate student and teacher satisfaction with cooperative teaching of CT. Next steps for research will involve student level data collection and analysis.", "authors": [{"name": "Sarah Hug", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Ryan Vordermann", "affiliation": "New Mexico State University, Las Cruces, NM, USA"}, {"name": "Josh Sandry", "affiliation": "New Mexico State University, Las Cruces, NM, USA"}, {"name": "Ben Wright", "affiliation": "New Mexico State University, Las Cruces, NM, USA"}, {"name": "Enrico Pontelli", "affiliation": "New Mexico State University, Las Cruces, NM, USA"}], "tags": ["k12 outreach", "computational thinking"]}, {"title": "Ant colony simulation as an engaging, extendable, and easily gradable programming project(abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445453", "abstract": "Simulations offer an engaging way to learn about decomposition of complex systems. Here I describe a project where the goal is to build a simulation of an ant colony consisting of five different ant behaviors in a 2D environment. Students design and build their simulations with no code provided except for the required GUI. Design issues include choice of appropriate data structures; traversal issues; and using inheritance to model ant behaviors. Students also learn about emergence, as characterized by the development of organized foraging trails by ants that respond only to their immediate surroundings. The visualization requirement enables students to quickly determine whether or not requirements have been met, and provides a way to rapidly grade a moderately large and complex assignment.", "authors": [{"name": "Roger West", "affiliation": "University of Illinois at Springfield, Springfield, USA"}], "tags": ["gui", "data structures", "simulation", "algorithms", "object-oriented programming", "grading", "ant colony", "emergence"]}, {"title": "An experiment to test bug density in students' code (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445454", "abstract": "A normal industry standard measure, bug density (bugs per thousand non-commented source line of code), is a through mechanism to assess code quality. If it is used for evaluating students' code, students will realize their ability to write bug free code from professional context. The main issues of using bug density for object oriented languages are creating a comprehensive test suit, and running them against all solutions as the test cases are written as part of solutions may fail to compile against other codes. We provide a novel four phase Java specific solution: 1) developing a comprehensive master test suit by collecting all the students written valid test cases; 2) transforming the test cases to use late binding so that they can run against any solution; 3) running the entire tests against all the programs and removing redundant test suits; and 4) estimating bugs/KSLOC by determining the relationship between test case failures in the master suite and latent bugs hidden in student programs. The first two phases of this ongoing research are applied to two programming assignments in two different courses encompassing 147 student programs and 240,158 individual test cases. Experimental results show that we have indeed removed compile-time dependencies from test cases using late binding and thus, have resolved the main technical challenge of using bug density for accessing students' code. Our experimental results will help students to realize the quality of their code in terms of industry standard.", "authors": [{"name": "Zalia Shams", "affiliation": "Virginia Tech, Blacksburg, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, USA"}], "tags": ["programming assignments", "automated assessment", "bytecode transformation", "test-driven development", "software testing", "reflection", "test coverage"]}, {"title": "A project spine framework for software engineering education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445455", "abstract": "Software engineering (and by extension software engineering education) is a fast-paced and still emerging discipline (by historical comparison to traditional engineering), yet still immature. We argue this immaturity shows in software engineering education in two ways. First, significant efforts in the software engineering and computer science communities focus on content taxonomies or bodies of knowledge (BOKs), whereas BOKs are more established in traditional engineering disciplines. Second, project experiences are not viewed as a central integrating feature of a degree program's curricular implementation. Project experiences tend to be disjoint; there may be a \"freshman project\" or a \"capstone\" or an \"undergraduate research experience\" or merely a semester project undertaken by the individual initiative of an instructor. The Software Enterprise at Arizona State University uses project experiences as the contextual teaching and learning vehicle throughout the Bachelor of Science in Software Engineering degree program. Students engage in classroom learning, group-oriented lab exercises, implementation on scalable projects, and reflective assessment co-located in time for each concept. The result is a student who not only acquires a new skill, but also immediately understands how to put that skill in practice. The Software Enterprise, now in its 9th year, has evolved from an upperclassmen experience to the full-fledged project spine in the Software Engineering program. In a project spine, content is de-emphasized; foundational concepts are tied to project work throughout the undergraduate program. The Enterprise provides over 40 curricular modules (with labs), assessment tools, and pedagogical guidance on project-centered learning to computing educators.", "authors": [{"name": "Srividya K. Bansal", "affiliation": "Arizona State University, Mesa, AZ, USA"}, {"name": "Kevin A. Gary", "affiliation": "Arizona State University, Mesa, AZ, USA"}, {"name": "Arbi Ghazarian", "affiliation": "Arizona State University, Mesa, AZ, USA"}], "tags": ["student capstones", "cs ed research", "new curriculum/program/degree initiatives"]}, {"title": "Student development of board game strategies in a web-based graphical infrastructure (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445456", "abstract": "We describe the design for a distributed game-playing environment suitable for student software development of player strategies. The framework has three main components: the game server, which runs as a RESTful web service on the Internet, the game client, which runs on the student's computer, and the graphical interface, which runs inside a web browser on the student's computer. Our earlier framework ran all components locally, and in a single programming language. The new framework supports single-user sessions, in which the student-implemented player plays against another, possibly faculty-supplied, software player, or against a human player. It also supports multi-user sessions, in which student players on two or more separate computers can play against each other in a single game. Supported by the NSF, award ID 1044721.", "authors": [{"name": "James E. Heliotis", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Ivona Bez\u00e1kov\u00e1", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Adam M. Oest", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Sean P. Strout", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["introductory computer science", "basic data structures and algorithms", "open-ended project", "learning in context"]}, {"title": "Green computing in the introductory curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445457", "abstract": "Green computing is a catchall phrase that includes efforts to improve sustainability both within the IT industry and outside of it. The green IT movement seeks to reduce energy use, waste, and toxic substances by the IT industry. In many other industries, mobile and computing devices connected to the network enable sustainability through automation, virtualization, and reduced travel. Green computing is a topic of increasing importance within the IT industry. There are few green computing courses for undergraduates, and most are for advanced students. I present a \"CS1 Lite\" course centered on the theme of green computing. The course integrates programming activities with readings, discussion and online research. The first course module examined how the Internet and mobile networks enable sustainable practices, such as: the virtualization of goods and services, telecommuting and virtual meetings, and cloud computing. The second module examined the \"Green IT\" movement, including sustainability across the computer life cycle, and increasing energy efficiency, from individual computers up to data centers. The third module focused on \"Smart Technology,\" where network-connected computing devices drive improvements. Topics included the smart energy grid, smart buildings, and applications in health care and agriculture. Throughout the course, programming assignments were tailored to problems relevant to the green computing topics. Students implemented simulations of green computing systems. Students exhibited increased interest and motivation for these projects, and learned naturally about data abstraction and computer networks.", "authors": [{"name": "Susan Eileen Fox", "affiliation": "Macalester College, Saint Paul, MN, USA"}], "tags": ["green computing", "theme-based introductory course", "computer science 1", "sustainable computing"]}, {"title": "Interactive exploration of Huffman coding (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445458", "abstract": "We present interactive software designed to support students' exploration of concepts involving Huffman coding. This software illustrates the association between binary codewords and paths in a Huffman tree, the greedy algorithm that is used to construct an optimal tree, and the use of the tree in the decoding process. It allows the user to control the input upon which the code is built, to step forward and backward through an animation of the algorithm process for constructing a tree, and to choose data to encode or decode. We have used this software with students in an introductory computing principles course, a first-year data structures course, and an upper-level algorithms course. The software is publicly available as a Java applet at http://cs.slu.edu/~goldwasser/demos/huffman.", "authors": [{"name": "Michael H. Goldwasser", "affiliation": "Saint Louis University, St. Louis, MO, USA"}, {"name": "Nicholas Brown", "affiliation": "Saint Louis University, St. Louis, MO, USA"}], "tags": ["active learning", "huffman coding", "algorithm animation"]}, {"title": "Teaching computer science principles with digital sound and music (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445460", "abstract": "High school and CS0 computer science students often begin class having no computing education beyond studying office suite programs. Teaching digital audio, a ubiquitous application, allows an authentic and engaging context for the teaching of computer science principles as outlined at http://www.csprinciples.org. In particular, it demonstrates the interconnection of computer science with physics, mathematics, and audio engineering. Do you teach digital audio or music technology? Are you interested in teaching these subjects? In this BOF we will discuss digital audio in computer science CS0 classes.", "authors": [{"name": "Susan Reiser", "affiliation": "UNC Asheville, Asheville, NC, USA"}, {"name": "Jennifer Burg", "affiliation": "Wake Forest University, Winston Salem, NC, USA"}], "tags": ["audio programming", "digital audio", "CS0"]}, {"title": "Test-first Java for beginners (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445461", "abstract": "Test-First Design is well-regarded process among software developers. Practitioner report that it encourages better program design, improves the testability and reliability, and reduces the stress.\nWe have used the test-first design approach in introductory Java-based programming courses for the past ten years. With the support of our tester library, students learn to design tests without any additional syntactic or structural overhead. A number of colleagues at other universities sued the tester library in a variety of courses.\nJoin us for a discussion on how you can help your students learn to design programs in the test-first style.\nThis work is sponsored by two NSF DUE CCLI grants: Redesigning Introductory Computing: The Design Discipline, Grant #00618543, and Integrating Test Design into Computing Curriculum from the Beginning, Grant #0920182.", "authors": [{"name": "Viera K. Proulx", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["cs1/2", "curriculum issues", "object-oriented issues", "k-12 instruction"]}, {"title": "Where is computing in general education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445462", "abstract": "Have you been through a general education review, taught a general education computing course, or provided a service course in computing? Are computing skills and knowledge a college entrance requirement, upper level discipline specific tool, graduation goal, or knowledge for citizens in a free society? Sample computing courses include: Computer Applications in Business, Writing Process using Microsoft Word, Quantitative Social Science using SPSS, Computing equals Programming, AP CS Principles, Computer Ethics, Computers and Society, Computational Thinking, or Introduction to Computer Science. What has and hasn't worked? What should computing offer to the university? Come hear what others are doing and share your insights.", "authors": [{"name": "Larry Vail", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}, {"name": "Catherine Bareiss", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}], "tags": ["general education"]}, {"title": "Automated generation and grading of programming assignments (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445463", "abstract": "A problem with teaching large classes of introductory programming students is that students need copious practice but instructors do not have time to grade thousands of student programs. Large classes might require the instructor to restrict the graded programs to a handful. However, students need much more practice than this, and experience shows that if an assignment is not being graded then many students will not do it. Also, if the same problem is assigned to all students, copying of answers will occur. Programs that generate unique assignments and automatically grade submissions have been developed. Beginning with a brief example, this session will focus on experiences attendees have had with such approaches, and what an idealized system might look like, including exemplar use cases.", "authors": [{"name": "Steven C. Shaffer", "affiliation": "Penn State University, University Park, PA, USA"}, {"name": "Cliff Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["assignments", "computer science education", "grading", "assessment"]}, {"title": "CSTA CS K-12 instructional standards and CS curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445464", "abstract": "In December 2011, CSTA published their new student learning standards for K-12 Computer Science. The current climate in K-12 schools is one of high stakes accountability with a strong focus on instructional standards. As a result, teachers, computer science education researchers, and K-12 outreach providers are increasingly being pressed to tie their content to national standards. The CSTA K-12 Computer Science Standards provide de facto national standards for all of these purposes. In addition, they help promote K-12 computer science as an essential academic discipline and allow educators and researchers alike to share a common understanding of what students should be learning throughout their K-12 experience.", "authors": [{"name": "Deborah W. Seehorn", "affiliation": "North Carolina Department of Public Instruction, Raleigh, NC, USA"}, {"name": "Tammy Randall Pirmann", "affiliation": "School District of Springfield Township, Warrington, PA, USA"}, {"name": "Kelly Powers", "affiliation": "Advanced Math and Science Academy Charter School, Marlborough, MA, USA"}, {"name": "Chris Stephenson", "affiliation": "Computer Science Teachers Association, Eugene, OR, USA"}], "tags": ["national standards", "cs instructional standards", "accountability", "cs curriculum", "cs standards", "csta standards"]}, {"title": "Birds of a feather: teaching with Alice (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445465", "abstract": "This session is for anyone currently using Alice 3.x and / or Alice 2.x, or exploring the possibility of using Alice in his or her curriculum. The discussion leaders and experienced Alice instructors will share teaching strategies, tips, and tricks with each other and those new to Alice. The session provides an arena for sharing Alice instructional materials and ideas for courses at all educational levels. This is an opportunity to share assignments and pointers to web sites where collections of instructional materials, such as syllabi, student projects, exams, and other resources are available.", "authors": [{"name": "Steve Cooper", "affiliation": "Stanford University, Palo Alto, California, USA"}, {"name": "Donald J. Slater", "affiliation": "Carnegie Mellon University, Pittsburgh, Pennsylvania, USA"}, {"name": "Wanda P. Dann", "affiliation": "Carnegie Mellon University, Pittsburgh, Pennsylvania, USA"}], "tags": ["mediated transfer of learning", "alice", "animation", "java", "3d graphics"]}, {"title": "Nifty computing in society case studies (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445466", "abstract": "This session is being organized by ACM SIGCAS (Computers and Society) for those with an interest in addressing the social and ethical consequences of computing in our society within their curricula. This year we will share case studies as a means to teaching a variety of issues resulting from the impact of computing in our society. Our discussion leaders will introduce briefly favorite case studies in their fields of interest and will encourage all participants to share examples of their own. Ways for dealing and solving current problems will be tackled. We will provide a plan of how to incorporate the case studies presented into our classes along with a handout of how to do so. Topics of interest include legal issues, social media, privacy, and sustainability.", "authors": [{"name": "Dee Weikle", "affiliation": "Eastern Mennonite, Harrisonburg, WV, USA"}, {"name": "Jim Huggins", "affiliation": "Kettering University, Flint, MI, USA"}, {"name": "Netiva Caftori", "affiliation": "Northeastern Illinois University, Chicago, IL, USA"}, {"name": "Alfreda Dudley", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Karla Carter", "affiliation": "Bellevue University, Bellevue, NE, USA"}], "tags": ["computer ethics", "sustainability", "social media", "legal issues", "privacy", "society", "case studies"]}, {"title": "Integrating communication skills into the computer science curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445467", "abstract": "The fact that employers regularly list communication skills among their top requirements for graduates of Computer Science programs and that communication skills are specifically included in ABET program outcomes attests to their significance for Computer Science educators. To prepare students, Computer Science programs typically require students to take a course in technical communications or writing intensive courses. A recent trend emerging from the communication specialist suggests that integrating communication skills with content across the Computer Science curriculum is more effective strategy. The three-year NSF-funded CPATH II project (CCF-0939122 and CCF-0939081) \"Incorporating Communication Skills into the Computer Science Curriculum\" brought together 40 Computer Science educators and communications specialists to develop assignments and communications supports that implement content and communication skills integration. The results are available on the project website (http://cs-comm.lib.muohio.edu/). Computer Science educators who seek to provide graduates of Computer Science programs with excellent communication skills will find this approach relevant and valuable. Those who have developed integrated materials will be encouraged to contribute to the project repository. Those who are interested in increasing the amount of communication taught in their curriculum will be encouraged to adapt assignments from the repository to their needs.", "authors": [{"name": "Mladen Vouk", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Janet Burge", "affiliation": "Miami University, Oxford, OH, USA"}, {"name": "Mark E. Hoffman", "affiliation": "Quinnipiac University, Hamden, CT, USA"}, {"name": "Jerry Gannod", "affiliation": "Miami University, Oxford, OH, USA"}], "tags": ["; computer science curriculum", "communication skills", "integrate communication skills"]}, {"title": "The future of the ABET computer science program criteria (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445468", "abstract": "The ABET Computing Accreditation Commission and CSAB (made up of representatives from ACM and IEEE-CS) are currently considering the next generation of changes to the computing accreditation criteria, with emphasis on the program criteria for the various disciplinary areas, including computer science. This Birds-of-A-Feather session will provide a platform for discussion of the types of changes that are currently under consideration, with a view toward obtaining feedback on those changes, as well as obtaining new ideas for revisions from the audience.The ABET Computing Accreditation Commission and CSAB (made up of representatives from ACM and IEEE-CS) are currently considering the next generation of changes to the computing accreditation criteria, with emphasis on the program criteria for the various disciplinary areas, including computer science. This Birds-of-A-Feather session will provide a platform for discussion of the types of changes that are currently under consideration, with a view toward obtaining feedback on those changes, as well as obtaining new ideas for revisions from the audience.", "authors": [{"name": "Allen Parrish", "affiliation": "The University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Cary Laxer", "affiliation": "Rose-Hulman Institute of Technology, Terra Haute, IN, USA"}], "tags": ["accreditation"]}, {"title": "Bringing security into traditional computer science courses: challenges and support (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445469", "abstract": "In today's world, it is critical that our students get exposure to security education as part of their Computer Science (CS) curriculum. The lack of security consciousness in digital workforce is costing businesses, government, and citizens severely every year. A significant reason behind this problem stems from the fact that the majority of higher education institutions do not have adequate resources to educate CS students in information assurance (IA) and security. While security is not required in the current CS curriculum, IA has been designated as a knowledge area in the proposed ACM/IEEE-CS CS Curricula 2013. Also, the absence of security topics in core CS subject matters not only leaves students security oblivious, but also prevents higher education institutions from applying for National Centers of Academic Excellence in Information Assurance Education Programs (CAE/IAE) accreditation, which provides access to government scholarships and grants. In this session, we will discuss challenges CS faculty face in integrating security topics in traditional CS courses and call attention to existing government funded supports that faculty can leverage in doing so. To share ideas and resources, we hope to bring together security educators who are active in this field with a community of CS educators who may not have any background in teaching security but recognize the need for it and are interested in teaching security topics as part of their regular course curriculum.", "authors": [{"name": "Ambareen Siraj", "affiliation": "Tennessee Tech University, Cookeville, TN, USA"}, {"name": "Stephen Cooper", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}], "tags": ["security integration", "acm/ieee-cs cs curricula 2013", "information asusrance knowledge area", "security education"]}, {"title": "Replicating exploring computer science (ECS) (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445471", "abstract": "Exploring Computer Science (ECS) is engaging, hands-on high school curriculum and associated professional development that is being implemented at a systemic level in the Los Angeles Unified School District and is now being replicated in Chicago Public Schools and elsewhere. Unlike many introductory CS courses that are mostly programming, the ECS curriculum paired with the required professional development (PD) equips teachers and school districts for successful guided inquiry experiences across the breadth of CS for every student. Over 85 teachers across the country experienced this PD during the summer of 2012.\nThe key to success in Chicago has been establishing an active partnership. Connections to area public and private high school teachers were initiated through the 120-member Chicago CSTA. This active partnership connects Chicago and Los Angeles (UCLA), multiple Chicago universities (DePaul, UIC, Loyola) and Chicago Public Schools administrators. This model for replication is being explored in other states.\nThis session is designed for high school teachers and university faculty currently partnering in implementing ECS, as well as those wanting to replicate ECS in their own cities. We'll begin with a brief activity coupled with small group discussion to give a very brief taste of ECS. This will be followed by discussion of what is special about this guided-inquiry curriculum as well as strategies for replication. The ECS course is a natural precursor to the proposed new AP CS Principles course.", "authors": [{"name": "Don Yanek", "affiliation": "Northside College Prep High School, Chicago, IL, USA"}, {"name": "Dale Reed", "affiliation": "University of Illinois Chicago, Chicago, IL, USA"}, {"name": "Gail Chapman", "affiliation": "UCLA, Los Angeles, CA, USA"}], "tags": ["professional development", "ecs", "guided inquiry", "exploring computer science"]}, {"title": "Teaching track faculty in CS (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445472", "abstract": "Many computer science departments have chosen to hire faculty to teach in a teaching-track position that parallels the standard tenure-track position. These teaching-track positions include the possibility for promotion, longer-term contracts and greater pay as demonstrated by excellence in teaching, educational material development, and service. Since this type of position is relatively new in CS departments, the expectations and responsibilities for such faculty varies from one university to another, but they certainly differ from the traditional tenure-track positions. This birds-of-a-feather is designed to gather educators who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information. In past sessions, we have laid the groundwork for keeping this community together through online discussions and consolidating information about teaching-track positions at various universities together into an online database.", "authors": [{"name": "Jody Paul", "affiliation": "Metropolitan State University at Denver, Denver, CO, USA"}, {"name": "Daniel Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Mark Sherriff", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["non-tenure track faculty", "teaching faculty"]}, {"title": "Starting and sustaining an undergraduate research program in computer science (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445473", "abstract": "The number of REU programs funded in Computer & Information Science and Engineering has increased from 6--12 per year prior to 2007 to a current level of 12--20 per year [www.nsf.gov]. Participation in research broadens students' experience base, increases their readiness for graduate school and the workforce, and develops their critical problem solving and communication skills. Research experiences are particularly effective at increasing the retention and success of women and minorities in computing fields [Cuny & Aspray, SIGCSE Bulletin 2002; Russell et al., Science 2007]. Despite the importance and prevalence of undergraduate research, many faculty are expected to involve undergraduates in research without having any direct experience or mentoring. Meanwhile, a growing interest in experiential learning at many institutions has led to a recent development of institutional environments in which undergraduate research is strongly supported. In many disciplines, such an environment naturally supports basic research programs that are inclusive of both under- and upperclassmen. However, computer science research at the undergraduate level presents a major challenge: most students who have the requisite knowledge to complete a novel research project are already close to graduation, which can make it difficult to involve undergraduates in longer-term research projects. In this bof, we hope to gather both experienced and novice research advisers to discuss strategies for running a continuous research effort across several graduating classes.", "authors": [{"name": "Adam Anthony", "affiliation": "Baldwin Wallace University, Berea, OH, USA"}, {"name": "Marie desJardins", "affiliation": "University of Maryland Baltimore County, Baltimore, MD, USA"}], "tags": ["undergraduate research"]}, {"title": "Technology that educators of computing hail (TECH): come, share your favorites (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445474", "abstract": "The pace of technology for use in computing education is staggering. In the last five years, the following tools / websites have completely transformed our teaching: Piazza, Google Docs, YouTube, Doodle and whenisgood.net, Skype and Google Hangout, and Khan Academy among others. Hardware has also played a part -- we love our Zoom H2 digital voice recorder (for recording CD-quality lecture audio), Blue Yeti USB mike (for audio/videoconferences), and iClickers (for engaging students in class).\nDo you wish you could easily share your favorites? Want to find out what the others know that you don't? Have a tool you've built and want to get some users? Come to this BOF! We'll also show the TECH website (part of the ensemble computing portal) we've built that attempts to collect all of these tools in one place. A laptop is recommended if the tool you wish to share is more involved than simply visiting a website.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Daniel Armendariz", "affiliation": "UC Berkeley, Berkeley, CA, USA"}], "tags": ["technologies for computer science education", "ensemble", "tech"]}, {"title": "Brainstorming CS principles big idea III: data and information (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445475", "abstract": "Data and information facilitate the creation of knowledge\" is Big Idea III in the Computer Science Principles effort. The June issue of ACM Inroads spotlighted some of the pilot offerings of CS Principles, which included spreadsheets, database structure, and XML as coverage of this big idea. The implementation of the CS Principles framework is quite flexible, as illustrated by these pilots. An article in the subsequent September ACM Inroads specifically mentioned the importance of big data and \"Data Science.\" What concepts do you think should be included as part of data and information? The goal of this Birds-of-a-Feather session is to bring database educators together with those interested in teaching CS Principles to brainstorm this big idea.", "authors": [{"name": "Don Goelman", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Suzanne W. Dietrich", "affiliation": "Arizona State University, Phoenix, AZ, USA"}], "tags": ["information", "cs principles", "data"]}, {"title": "A town meeting: SIGCSE committee on expanding the women-in-computing community (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445476", "abstract": "In January 2004, we organized the second SIGCSE Committee (\"Expanding the Women-in-Computing Community\"). Our annual Town Meeting provides dissemination of information concerning successful gender issues projects, along with group discussion and brainstorming, in order to create committee goals for the coming year. We select projects to highlight through listserv communication and through our connections with NCWIT, ABI, ACM-W, CRA-W, etc. This year we will highlight ACM-W Chapters and ACM-W Regional Celebrations.", "authors": [{"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Spencer, IN, USA"}], "tags": ["underrepresentation", "gender issues"]}, {"title": "Trends in CS enrollment at small, liberal arts institutions (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445478", "abstract": "Enrollments in CS have been climbing dramatically in recent years at large schools, especially those in the top-tier for CS. This type of growth is part of the normal cycle for CS and is expected anytime that the public perceives that the job market for computing related fields is strong. It is unclear how much of this growth is currently seen on other campuses. The purpose of this BoF session is to discuss what educators at smaller campuses, and particularly liberal arts schools, are currently seeing in regards to enrollment in CS. This information could be of particular interest for those at schools considering cutting programs for economic reasons or those adjusting the number of faculty lines.", "authors": [{"name": "Lisa Bender", "affiliation": "Concordia College, Moorhead, MN, USA"}, {"name": "Barbara Anthony", "affiliation": "Southwestern University, Georgetown, TX, USA"}, {"name": "Christine Chung", "affiliation": "Connecticut College, New London, CT, USA"}, {"name": "Mark Lewis", "affiliation": "Trinity University, San Antonio, TX, USA"}], "tags": ["education", "liberal arts"]}, {"title": "Logistics of moving from computer fluency to computational thinking (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445479", "abstract": "As the theme of the conference indicates, computing is changing and so is its pedagogy. In the meantime, many computer science departments teach computer fluency service courses required by their universities, colleges, or other departments, in which the content of the course becomes highly challenged by institutional constraints (e.g. class size, university computer literacy requirement, etc.). This birds-of-a-feather is designed to gather educators who have been teaching fluency courses or may be teaching such courses in the future, so that they can share their experiences, learn from one another, and discuss the most effective ways of affecting change and delivering the content they deem most appropriate.", "authors": [{"name": "Monika Sobolewska", "affiliation": "Michigan State University, East Lansing, MI, USA"}], "tags": ["computational thinking", "non-majors", "curriculum issues", "computer fluency", "computer literacy"]}, {"title": "Computer scientists put the informatics into bio, health, and medical informatics education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445480", "abstract": "There has been an explosion of interest in bioinformatics, medical informatics, and healthcare informatics in the past decade. As a result, many computer science departments are developing courses or degree programs in bioinformatics and/or health informatics. This session is aimed at faculty who are teaching, or developing courses that tie together computer science and biology, medicine, or healthcare. The discussion leaders all have experience teaching courses in healthcare informatics and/or bioinformatics within computer science departments. We will share our expertise and experience on such issues as effectively team teaching interdisciplinary courses, developing case studies and projects, and developing links with biologists and clinicians. Some of the questions we might tackle: What types of courses should be included in degree programs? What role do curricular standards, especially in healthcare, play? What topics belong in interdisciplinary bioinformatics courses? How do we cope with students who may have differing backgrounds and prerequisites? The hope is that we can create an informal network for sharing ideas which will persist after the session. To this end, we will also discuss ways for maintaining a community, perhaps as a mailing list, blog, or website.", "authors": [{"name": "Bonnie K. MacKellar", "affiliation": "St John's University, Queens, NY, USA"}, {"name": "Margaret Menzin", "affiliation": "Simmons College, Boston, MA, USA"}, {"name": "Marc L. Smith", "affiliation": "Vassar College, Poughkeepsie, NY, USA"}, {"name": "Tammy VanDeGrift", "affiliation": "University of Portland, Portland, OR, USA"}], "tags": ["bioinformatics education", "healthcare informatics education"]}, {"title": "Encouraging faculty & student involvement in humanitarian free and open source software (HFOSS)(abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445481", "abstract": "Humanitarian Free and Open Source Software (HFOSS) projects provide a real-world application with an approachable and welcoming community for both faculty and students. Many faculty members are excited by the prospect of their students contributing to HFOSS. They perceive it as an opportunity to engage students, regardless of race or gender, in projects that have societal impact. However trying something new in the classroom though can be daunting, and many barriers to entry exist. Locating an appropriate project, trying to figure out how to incorporate a dynamic, real-world project into the curriculum and learning how to interact with the project's community each present their own set of challenges. This BOF provides a gathering place for faculty who are interested in student participation in FOSS or HFOSS. The discussion will include an overview of an NSF-funded project, OpenFE. The goal of OpenFE is to develop faculty expertise in working with HFOSS projects and to develop curriculum materials that support faculty members in bringing this approach into their classrooms. The members of the OpenFE team will discuss plans for this grant and welcome both novices and experienced contributors to join us and provide feedback.", "authors": [{"name": "Stoney Jackson", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Heidi J.C. Ellis", "affiliation": "Western New England University, Springfield, MA, USA"}, {"name": "Darci Burdge", "affiliation": "Nassau Community College, Long Island, NY, USA"}, {"name": "Gregory W. Hislop", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Sean Goggins", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Lori Postner", "affiliation": "Nassau Community College, Long Island, NY, USA"}], "tags": ["open source software", "computing education research", "faculty development"]}, {"title": "CSTA chapters: supporting your local computer science educators (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445482", "abstract": "As part of its commitment to developing a strong community of computer science educators, the Computer Science Teachers Association (CSTA) supports the development of regional CSTA chapters. A CSTA chapter is a local branch of CSTA designed to facilitate discussion of local issues, provision of member services at the local level, and to promote CSTA membership on the national level[1]. This BOF will provide a platform for the discussion of CSTA chapter formation and for the sharing of new resources to help chapters create dynamic and meaningful chapter activities.", "authors": [{"name": "Tammy Pirmann", "affiliation": "Springfield High School, Springfield, PA, USA"}, {"name": "Frances P. Trees", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "David Reed", "affiliation": "Creighton University, Omaha, NE, USA"}], "tags": ["k-12 computer science education", "outreach"]}, {"title": "How PhD students at research universities can prepare for a career at a liberal arts college (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445483", "abstract": "We will discuss how to better organize as graduate students and postdoctoral researchers seeking a career in liberal arts colleges (LACs). The BoF will bring together those who are interested in a career path to a LAC but do not have reliable advice and mentorship in their home departments and often turn out to be the only person in their department with such a career choice. Additionally, several people who have recently made a successful transition from graduate school to new faculty positions will attend the BoF.", "authors": [{"name": "Darakhshan Mir", "affiliation": "Rutgers University, New Brunswick, NJ, USA"}, {"name": "Michael Hay", "affiliation": "Colgate University, Hamilton, NY, USA"}, {"name": "Ann Irvine", "affiliation": "Johns Hopkins University, Baltimore, MD, USA"}], "tags": ["professional development", "liberal arts colleges", "graduate students"]}, {"title": "Computer science principles: necessary for ALL students' success (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445484", "abstract": "Computing pervades students' academic and personal lives. Increasingly the core concepts of computational thinking are required for success in other fields. Should CS Principles become a general education requirement for all freshmen? This BOF will provide a platform for the discussion of whether or not the various courses taught as CS-0, Introduction to CS, or CS Principles have clearly defined a set of core competencies that should be required of all undergraduates. Do the national initiatives around computational thinking and CS 10K herald consensus or controversy around those core competencies? Discussion will include a look at one course that has been adopted as a general education requirement; its core concepts, textbooks and documented learning outcomes; and the institutional rationale for its acceptance as a general education requirement-filling course.\nRelated to this question is a proposed new CS Principles AP exam that is currently in development. The BoF will describe how the course above relates to the CS Principles AP Exam and the core competencies described through the CS Principles project. Discussion leaders will describe the value of the CS Principles AP initiative in gaining political and administrative support for introducing the course into high schools. They will share some initial data illustrating the wide variety of challenges encountered while introducing the same course as a pre-AP course into regional high schools.", "authors": [{"name": "Diane A. Baxter", "affiliation": "University of California San Diego, La Jolla, California, USA"}, {"name": "Elizabeth Simon", "affiliation": "University of California San Diego, La Jolla, California, USA"}], "tags": ["workforce", "advanced placement", "education", "computational thinking skills", "principles", "requirements", "cs10k"]}, {"title": "Broadening mathematical reasoning in computing (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445485", "abstract": "The pending revision of the ACM/IEEE CS curriculum guidelines for computer science, and the continuing broadening of the computing disciplines, among other considerations, make now a good time to review the role of mathematical reasoning in computing education. This birds-of-a-feather session provides an opportunity for people interested in mathematics and its role in computing education to reflect on and discuss the future of mathematical reasoning in our curricula, guided by the question of whether it should be broader than it has been, narrower, or if it is just right as it is.", "authors": [{"name": "Douglas Baldwin", "affiliation": "SUNY Geneseo, Geneseo, NY, USA"}], "tags": ["mathematical thinking", "computing education"]}, {"title": "Using version control in the classroom (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445486", "abstract": "Professional software developers depend on version control every day and that dependency will continue to grow as advances in version control technology continue. Students with experience using version control are more prepared and qualified to work in industry. We should expose students to version control early in their training not only as an additional skill but also as a tool to improve the learning experience. Version control can be leveraged to greatly improve assignment submission, grading, and feedback systems. In this session we will discuss strategies for incorporating the use of version control in the classroom as well as best practices for individual and group work submission, grading and feedback.", "authors": [{"name": "Tim Berglund", "affiliation": "Trainer at GitHub, Denver, CO, USA"}, {"name": "John Britton", "affiliation": "Education Liason at GitHub, New York, NY, USA"}], "tags": ["industry tools", "git", "software development", "collaboration", "version control"]}, {"title": "Including HCI and user experience (UX) methodologies in computing curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445487", "abstract": "With a growing awareness of the importance of Human Computer Interaction (HCI) and User Experience (UX) Design and Research in industry, many departments are examining ways to integrate this topic into their curriculum. What are the best ways to do this? Should HCI and UX be integrated into existing courses such as event-driven programming or mobile computing? Or should it be a separate course that integrates visual design, psychology and ergonomics? How important is this topic to students looking for internships and entry-level jobs? At what levels should these topics be taught in the curriculum? This is important as there is a growing demand in industry for User Experience specialists due to an increased focus on software quality and product success. A major complaint of employers is that this skill is lacking in many college graduates. Teaching computing students how to incorporate UX into the design and development process helps to address this critical need. This BOF will let participants share their ideas and learn from their peers. This is particularly relevant as the HCI Knowledge Area of the IEEE/ACM CS Curriculum 2013 is currently being developed. In fact, the chair of the HCI Knowledge Area (Sally Fincher) is seeking real examples of how HCI is taught in curricula across a variety of institutions and settings. After the BOF, we will share a summary of our BOF discussion with the chair.", "authors": [{"name": "Matt Jadud", "affiliation": "Berea College, Berea, KY, USA"}, {"name": "Janet Davis", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Debra Lee Davis", "affiliation": "Florida International University, Miami, FL, USA"}, {"name": "Brian Dorn", "affiliation": "University of Hartford, West Hartford, CT, USA"}, {"name": "Kip Irvine", "affiliation": "Florida International University, Miami, FL, USA"}, {"name": "Dave Berque", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["user experience", "curriculum issues", "hci", "ux", "human-computer interaction", "computing instruction", "computing curriculum"]}, {"title": "Taking studio-based learning online (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445488", "abstract": "Studio-based learning (SBL), the centerpiece of architecture and fine arts education for over a century, has become increasingly attractive to computing educators. SBL can be conceptualized as an iterative process of solution refinement that relies heavily on shared physical space and design critiques. This session will explore ways in which CS educators can transition aspects of traditional or face-to-face SBL to an online learning environment. We will discuss the potential for online studios, how they might look and function, and how their effectiveness in promoting student learning might be gauged. As more and more CS courses assume an online presence, we seek to understand both the opportunities and the limitations associated with conducting critical studio work in a digital medium.", "authors": [{"name": "Phillip Conrad", "affiliation": "University of California, Santa Barbara, USA"}, {"name": "Christopher Hundhausen", "affiliation": "Washington State University, Pullman, USA"}, {"name": "Yolanda Jacobs Reimer", "affiliation": "University of Montana, Missoula, USA"}], "tags": ["studio-based learning", "online studio", "design crits"]}, {"title": "Using POGIL activities in computer science classes (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445489", "abstract": "POGIL activities are carefully designed to guide students to discover and explore concepts while encouraging students to practice process skills (e.g., team work, leadership and problem solving). Many college instructors have written POGIL activities for CS 1, CS 2, Software Engineering and other upper division CS classes (http://www.cspogil.org). High school teachers are also writing POGIL activities for the AP Principles course. This BOF is an opportunity for educators to share POGIL activities and ideas for improving group dynamics and encouraging reflection. We welcome everyone interested in learning more about POGIL and will provide information on regional POGIL workshops.", "authors": [{"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Matthew Lang", "affiliation": "Moravian College, Bethlehem, PA, USA"}, {"name": "Clifton Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}], "tags": ["inquiry based learning", "active learning", "POGIL", "process oriented guided inquiry learning", "process skills"]}, {"title": "Teaching security using hands-on exercises (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445490", "abstract": "We see teaching cybersecurity through hands-on, interactive exercises as a way to engage students. Some of the exercises that we have seen require significant preparation on the part of the instructor. Having a community makes it easier to share exercises, knowing what works and what problems students and instructors have encountered. The purpose of this BOF is to bring together instructors who have used hands-on exercises and those who would like to. We recognize that few CS programs can afford new required courses, so we would be discussing ways to integrate security-related exercises into existing ones. This could include networking, OS, computer architecture, programming languages, software engineering and algorithms.\nRecent hiring forecasts indicate that there is a tremendous need for skilled information security experts. This was evident at the last National Initiative for Cybersecurity Education (NICE) conference at NIST, and from sponsors of the Collegiate Cybersecurity CCDC. Security will be one of the core areas in the ACM/IEEE COMPUTER SCIENCE 2013 Curricula.\nWe think that it is particularly important to share stories from the classroom (what worked and what didn't), discuss ethical hacking, and discuss how to teach analytical skills. We also plan to discuss our own experiences, practices and ongoing efforts (e.g., our teaching experiences, the SISMAT program, Security Injections, EDURange and the dissemination of infosec interactive exercises). SISMAT includes a two-week summer intensive program based on the \"Hacker Curriculum\" and a combination of research and internship in cyberbersecurity for undergraduates.", "authors": [{"name": "Elizabeth Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Jens Mache", "affiliation": "Lewis and Clark College, Portland, OR, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}, {"name": "Michael E. Locasto", "affiliation": "The University of Calgary, Calgary, ON, Canada"}], "tags": ["information assurance", "cybersecurity", "security", "laboratory exercises", "network security", "teaching"]}, {"title": "Computational literacy for everyone: opening a dialogue between STEM and the digital arts and humanities (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445491", "abstract": "Much has been said about the need to teach computer programming and the fundamental ideas of computer science in STEM education. Initiatives aimed at this audience propose new requirements, curricula, tools, and teaching methodologies to encourage widespread computational literacy. But what is being done in non-STEM disciplines to promote literacy? The goal of this panel is to open a discussion about advancing computer science education within the digital arts and humanities and how this might relate or combine with similar efforts in STEM. What can members of the digital arts and humanities community learn from each other about starting new curricula and teaching these subjects, and what can be learned and borrowed from STEM education? To begin the discussion, we will present a report on a computational methods course we developed for beginning architecture students and how this has led to an ongoing collaboration with our computer science department.", "authors": [{"name": "Nick Senske", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["computational literacy", "digital humanities", "cs fundamentals", "digital arts"]}, {"title": "Dual degree tracks for computer science majors (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445492", "abstract": "Many institutions offer either a Bachelor of Science or a Bachelor of Arts degree program to computer science majors, often depending on what type of college or department houses the major. However, an increasing number of institutions have created dual degree tracks wherein students may choose to pursue either a BS or a BA, with a different set of requirements for each and possibly different credentialing as well. This BOF provides a forum for educators and administrators who currently offer dual degree options to share their experiences with those who are considering adding a second track. Issues of interest such as requirements within and outside the major, enrollment, accreditation, student outcomes, and possibly different career options may be discussed.", "authors": [{"name": "Joanne F. Selinski", "affiliation": "Johns Hopkins University, Baltimore, MD, USA"}, {"name": "Kathie A. Yerion", "affiliation": "Gonzaga University, Spokane, WA, USA"}], "tags": ["degree tracks"]}, {"title": "Universal access to computing education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445493", "abstract": "Approximately 10% of computer science and engineering majors have a disability of some kind. Those with disabilities are more likely to drop out of the major than those without disabilities. This BOF will bring together those who are interested in improving the success of these students. Strategies will be shared among the participants of the BOF to help each other do a better job of including these students in our classes and research projects.", "authors": [{"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["disability", "universial access"]}, {"title": "Multi-course approaches to curriculum 2013's parallel and distributed computing (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445494", "abstract": "The emerging CS2013 Curriculum recommendations call for greatly expanded emphasis on parallel and distributed computing (PDC), in response to recent industry changes. CS2013's PDC knowledge units relate to many undergraduate courses. Participants in this BOF will consider responses to CS2013 PDC recommendations that involve multiple undergraduate CS courses at an institution, as opposed to approaches that concentrate PDC topics primarily within a single course. This sharing and brainstorming session will bring together: people having experience with a multi-course or multi-level approach to teaching PDC; people contemplating a multi-course approach to introducing PDC material; and people wishing to provide and/or hear rationale for a multi-course strategy for teaching PDC.", "authors": [{"name": "Paul F. Steinberg", "affiliation": "Intel Corporation, Hillsboro, Oregon, USA"}, {"name": "Michael A. Smith", "affiliation": "Intel Corporation, Hillsboro, Oregon, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, Minnesota, USA"}, {"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, Michigan, USA"}, {"name": "David P. Bunde", "affiliation": "Knox College, Galesburg, Illinois, USA"}, {"name": "Matthew Wolf", "affiliation": "Georgia Tech, Atlanta, Georgia, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, Oregon, USA"}, {"name": "Richard A. Brown", "affiliation": "St. Olaf College, Northfield, Minnesota, USA"}], "tags": ["paralleli", "education", "curriculum", "parallel computing", "curricular recommendations", "distributed computing"]}, {"title": "The joy of word games: or, putting the text back into context (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445495", "abstract": "We have heard much discussion, in recent years, about various contexts for teaching Computer Science. One that does not get a lot of attention, but frankly deserves more, is the notion of using word games -- in which language plays a predominant role -- to teach Computer Science. There is a plethora of clever and simply fun games that can be used to illustrate almost any concept that arises in CS1 and CS2. We would like to start a conversation with other SIGCSE attendees who are interested in these very entertaining, algorithmically stimulating games, and see what techniques they use, and what successes they have had, in incorporating them into the classroom.", "authors": [{"name": "Michael P. Rogers", "affiliation": "Northwest Missouri State University, Maryville, Missouri, USA"}], "tags": ["word games", "linguistics", "introductory programming", "cs1", "programming context", "cs2"]}, {"title": "ROS at every level: using the robot operating system in CS 0, 1, 2, and beyond (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445497", "abstract": "After many years, the robotics research community has settled on standard middleware: the Robot Operating System (ROS). This standard presents a great opportunity for educational robotics. This hands-on workshop will engage participants in ROS-based curricula for CS 02 and advanced undergraduates. The workshop will highlight how ROS has simplified, enabled, and expanded flipped robotics curricula in CS 02. Our advanced materials show how ROS enables easy access to the robotics research community, permitting larger and more research-representative projects. This workshop is two long hands-on sessions punctuated with short reports from the presenters' experience. Participants will implement the first two assignments of our CS 2 curriculum. http://www.cs.hmc.edu/dodds/ROSatSIGCSE2013.", "authors": [{"name": "Zachary Dodds", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "William D. Smart", "affiliation": "Oregon State University, Corvallis, OR, USA"}, {"name": "Julian Mason", "affiliation": "Duke University, Durham, NC, USA"}], "tags": ["CS2", "robotics", "ROS", "CS1", "CS0", "robotics curricula"]}, {"title": "Making mathematical reasoning fun: web-integrated, collaborative, and \"Hands-On\" Techniques (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445498", "abstract": "Is it possible to excite students about learning the mathematical principles that underlie high-quality software? Can they use a development environment for \"hands-on\" experimentation with reasoning? Is this possible without displacing existing content? The answer is a resounding yes \"from the experiences of professors at several institutions\" but it takes the right set of pedagogical principles, reasoning tools, and hands-on exercises. This laboratory will help educators transfer the excitement of learning how to apply mathematical reasoning in building high quality software, by adopting one reasoning concept at a time.\nThe workshop will introduce a series of independent content modules that can be introduced in any course where mathematical reasoning might be taught -- from introductory programming and software engineering to data structures and algorithms. They are designed to supplement, rather than replace, existing course materials.\nFees for this workshop will be covered for a limited number of attendees through an NSF award; limited travel support is also available. All participants are required to bring a laptop to participate in the computer-assisted exercises.", "authors": [{"name": "Joe Hollingsworth", "affiliation": "Indiana University Southeast, New Albany, IN, USA"}, {"name": "Jason O. Hallstrom", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Joan Krone", "affiliation": "Denison University, Granville, OH, USA"}, {"name": "Murali Sitaraman", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["mathematical reasoning", "software development", "verification", "specification", "web-based tools", "hands-on exercises"]}, {"title": "Alice 3.1 (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445499", "abstract": "This workshop is designed to offer a hands-on introduction to Alice 3.1 (now out of beta), as used in introductory courses in high school and early college levels. The focus of this workshop is on using program visualization for introducing fundamental concepts of programming. The introductory features of Alice 3.1 will be presented in an active-learning style. Although some comparisons between Alice 2.x and 3.1 will be included, the content of the workshop does not assume familiarity with Alice 2.x. Participants will receive latest 3.1 update and sneak peek at early textbook chapters. Attendees are expected to bring their own standard (no netbooks or tablets, please) laptop with a mouse (2-button).", "authors": [{"name": "Wanda Dann", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Stephen Cooper", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Donald Slater", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["alice", "introductory programming", "visualization"]}, {"title": "Creative computing: introductory programming concepts with processing.js (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445500", "abstract": "Khan Academy recently announced that they will soon be teaching introductory Computer Science topics with the Processing.js language and an interactive, web-based code editor. At UNC Asheville, we have been using a similar pedagogical approach for over a year. Specifically, we have integrated Processing.js into our introductory course for non-majors by building an open-source, web-based editor which makes it easy for students to edit, save and share their Processing.js sketches. This workshop offers a hands-on introduction to Processing.js and our editor. Participants will also be given an overview of the programming module in Creative Computing, our recently re-imagined CS0 course. Curious individuals with a laptop, a modern web-browser and some basic programming experience are welcome.", "authors": [{"name": "Semmy Purewal", "affiliation": "University of North Carolina at Asheville, Asheville, NC, USA"}], "tags": ["processing.js", "computer science education", "cs0", "processing"]}, {"title": "Computer science unplugged, robotics, and outreach activities (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445501", "abstract": "You've been asked to talk to an elementary or high school class about Computer Science, but how can you ensure that the talk is engaging? Or perhaps you're trying to introduce a concept from Computer Science to a school group, but you want a fun way to get the class engaged. This workshop is a hands-on introduction to Computer Science Unplugged (www.csunplugged.org), a widely used set of kinesthetic, fun activities that cover many core areas of computer science without using high technology. We will explore how to use the activities in a variety of situations, including using them with robotics activities, school outreach, and computer clubs. Attendees will receive a CD with a copy of a handbook for teachers and a collection of videos demonstrating the activities. Laptops are optional.", "authors": [{"name": "Lynn Lambert", "affiliation": "Christopher Newport University, Newport News, VA, USA"}, {"name": "Daniela Marghitu", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Paul Curzon", "affiliation": "Queen Mary University of London, London, United Kingdom"}, {"name": "Tim Bell", "affiliation": "University of Canterbury, Christchurch, New Zealand"}], "tags": ["computational thinking", "k-12 outreach"]}, {"title": "Making the most of undergraduate research (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445502", "abstract": "Involving undergraduates in Computer Science research has many benefits. It's an exciting way for students to gain independent problem solving skills. It exposes them to interesting projects and the research process, thereby keeping them in computer science, even encouraging them to go to graduate school. And especially in primarily teaching institutions, it's a rewarding way for faculty to remain engaged in their own research. In this workshop we will (1) present best practices for mentoring undergraduate research, (2) equip participants with resources for mentoring their own students, and (3) further develop (1) and (2) through breakout sessions on concerns of interest to attendees. For more, please see www.cs.williams.edu/~andrea/SIGCSE2013. This workshop is intended for all college level computer science educators. Laptop Optional.", "authors": [{"name": "Ran Libeskind-Hadas", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}, {"name": "Andrea Danyluk", "affiliation": "Williams College, Williamstown, MA 01267, MA, USA"}, {"name": "Susan Rodger", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Nancy Amato", "affiliation": "Texas A&M University, College Station, TX, USA"}, {"name": "Lori Pollock", "affiliation": "University of Delaware, Newark, DE, USA"}], "tags": ["undergraduate research"]}, {"title": "Learn about effective proposal writing via the review process (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445503", "abstract": "This interactive workshop focuses on the National Science Foundation grant proposal review process. By a close examination of the review process, participants gain an understanding of how to write good reviews and how to improve their own proposal writing. The topics for the workshop include: the proposal review process from submission to award or decline; elements of a good review; NSF merit criteria (intellectual merit and broader impacts); elements of good proposals; the format of the typical review panel process; how to volunteer to review.\nThe workshop uses a structured guided-interactive approach to lead participants through each topic by introducing related issues, engaging participants in group exercises designed to explore and share their understanding of the issues, and then providing some expert opinion on these issues.\nFaculty members who wish to better understand the NSF review process or seek funding in support of undergraduate computing education are encouraged to attend. Participants will include novice proposal writers and those with more experience who seek to improve their proposal writing or reviewing skills.", "authors": [{"name": "Suzanne Westbrook", "affiliation": "National Science Foundation, Arlington, VA, USA"}, {"name": "Guy-Alain Amoussou", "affiliation": "National Science Foundation, Arlington, VA, USA"}], "tags": ["writing proposals", "reviewing grant proposals", "computing education", "national science foundation", "funding", "outreach"]}, {"title": "CSinParallel: using map-reduce to teach parallel programming concepts across the CS curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445504", "abstract": "Map-reduce, the cornerstone computational framework for cloud computing applications, has star appeal to draw students to the study of parallelism. Participants will carry out hands-on exercises designed for students at CS1/intermediate/advanced levels that introduce data-intensive scalable computing concepts, using WebMapReduce (WMR), a simplified open-source interface to the widely used Hadoop map-reduce programming environment. These hands-on exercises enable students to perform data-intensive scalable computations carried out on the most widely deployed map-reduce framework, used by Facebook, Microsoft, Yahoo, and other companies. WMR supports programming in a choice of languages (including Java, Python, C++, C#, Scheme); participants will be able to try exercises with languages of their choice. Workshop includes brief introduction to direct Hadoop programming, and information about access to cluster resources supporting WMR. Workshop materials will reside on csinparallel.org, along with WMR software. Intended audience: CS instructors. Laptop required (Windows, Mac, or Linux).", "authors": [{"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, Minnesota, USA"}, {"name": "Joel Adams", "affiliation": "Calvin College, Grand Rapids, Michigan, USA"}, {"name": "Richard A. Brown", "affiliation": "St. Olaf College, Northfield, Minnesota, USA"}], "tags": ["data-intensive scalable computing", "csinparallel", "map-reduce computing", "wmr", "education", "curriculum", "cs1", "distributed computing", "webmapreduce", "hadoop", "introductory course"]}, {"title": "Hands-on cybersecurity exercises and the rave virtual environment (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445505", "abstract": "This workshop is intended for anyone who would like to use hands-on exercises in cybersecurity for a variety of classes including Networking, OS, Computer Security and Software Engineering. It has received increased attention nationally in the proposed ACM/IEEE CS2013 Curricula Guidelines. The goal of this workshop is to provide faculty with varied backgrounds (including none) in this area with some tools and interactive exercises to facilitate incorporating this knowledge area into their curriculum. We believe that it is important that students develop analytical skills, thus we include an introduction to EDURange1 and the Hacker Curriculum principles: (1) understanding failure modes and (2) seeing across or through layers of abstraction according to a particular scenario. We will guide attendees through exercises tailored to their level and interests. The exercises will include port scanning and setting up a firewall. These can be done at a range of levels from beginner to advanced. We will include an introduction to tools for packet inspection, which is an important part of analysis. Attendees will receive accounts on the RAVE2 with exercises that they can take back and use immediately with their classes. RAVE provides a number of VMs pre-configured for the exercises. RAVE is also a general purpose technology for other hands-on exercises. Laptop required.", "authors": [{"name": "Jens Mache", "affiliation": "Lewis and Clark College, Portland, OR, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}, {"name": "Vincent Nestler", "affiliation": "California State University at San Bernadino, San Bernadino, CA, USA"}, {"name": "Brian Hay", "affiliation": "The University of Alaska, Fairbanks, Fairbanks, AK, USA"}, {"name": "Michael E. Locasto", "affiliation": "The University of Calgary, Calgary, ON, Canada"}], "tags": ["information assurance", "laboratory exercise", "cybersecurity", "security", "firewall"]}, {"title": "Re-imagining CS1/CS2 with Android using the Sofia framework (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445506", "abstract": "Android has seen increased use in introductory CS courses to motivate and excite students about their programming assignments, but using the standard Android libraries as a GUI platform in CS2 presents numerous challenges and using it in CS1 is nearly impossible. This workshop introduces participants to Sofia, the Simplified Open Framework for Innovative Android Applications, developed by the Web-CAT team at Virginia Tech. Sofia abstracts out many of the advanced concepts normally required to develop interesting applications, using a unique approach to event handling, binding GUI elements to Java code, and user interaction. The goal is to allow students to focus entirely on using Java programming skills to solve problems in the application domain, instead of writing monotonous glue code typically required to construct an Android application. Laptop optional.", "authors": [{"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["gui", "graphical user interface", "Android", "game", "app", "cs1", "greenfoot", "mobile", "framework", "library", "cs2", "java", "Sofia"]}, {"title": "SNAP! (build your own blocks) (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445507", "abstract": "This workshop is for high school and college teachers of general-interest (\"CS 0\") CS courses. It presents the programming environment used in two of the five initial AP CS Principles pilot courses.\nSNAP! (Build Your Own Blocks) is a free, graphical, drag-and-drop extension to the Scratch programming language. Scratch, designed for 8-14 year olds, models programs as \"scripts\" without names, arguments, or return values. SNAP! adds support for older learners (14-20) by adding named procedures (thus recursion), procedures as data (thus higher order functions) structured lists, and sprites as first class objects with inheritance.\nParticipants will learn SNAP! through discussion, programming exercises, and exploration. See http://snap.berkeley.edu for details. Laptop required.", "authors": [{"name": "Brian Harvey", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Sean Morris", "affiliation": "Albany High School, Albany, CA, USA"}, {"name": "Nathaniel Titterton", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Josh Paley", "affiliation": "Henry M. Gunn High School, Palo Alto, CA, USA"}, {"name": "Daniel Armendariz", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Eugene Lemon", "affiliation": "Ralph J Bunche High School, Oakland, CA, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Daniel D. Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Luke Segars", "affiliation": "Google, Inc., Mountain View, CA, USA"}], "tags": ["snap! programming language", "cs 0"]}, {"title": "Incorporating version control into programming courses (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445508", "abstract": "This workshop, aimed at instructors of introductory or intermediate courses, introduces participants to version control via two popular source code management (SCM) tools: SVN and Git. Not only is proficiency with SCM tools an invaluable skill for aspiring software developers, but version control also allows students to collaborate effectively on projects. Participants will complete hands-on activities using distributed and centralized SCM tools, learn how to integrate version control into curricula, and discuss the pros and cons of various hosting solutions. Participants will also be introduced to version50, an open-source abstraction layer that provides a common, simplified interface for SCM tools aimed at making version control accessible to novice programmers. Laptop required.", "authors": [{"name": "Tommy MacWilliam", "affiliation": "Harvard University, Cambridge, MA, USA"}], "tags": ["DVCS"]}, {"title": "Computational art and creative coding: teaching CS1 with processing (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445510", "abstract": "This workshop showcases a new approach to teaching CS1 using computational art as a context. Participants will be introduced to the Processing programming language and environment, designed for the construction of 2D and 3D visual forms. Its IDE is light-weight, but well-suited for the rapid proto-typing needed for dynamic visual work. We hope to bring the excitement, creativity, and innovation fostered by Processing into the computer science education community. Instructors of all experience levels are welcome. Hands-on portion of the workshop will enable participants to explore Processing and create visual effects on the fly. Course materials and handouts detailing the software, curriculum, and teaching resources will be given out. All participants will need to bring their own laptops. Supported by NSF Awards DUE-0942626 and CCF-0939370.", "authors": [{"name": "Dianna Xu", "affiliation": "Bryn Mawr College, Bryn Mawr, Pennsylvania, USA"}, {"name": "Ira Greenberg", "affiliation": "Southern Methodist University, Dallas, Texas, USA"}, {"name": "Deepak Kumar", "affiliation": "Bryn Mawr College, Bryn Mawr, Pennsylvania, USA"}], "tags": ["creative computation", "generative art", "cs1", "processing"]}, {"title": "AP CS principles and the beauty and joy of computing curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445511", "abstract": "The Beauty and Joy of Computing (BJC) is an introductory computer science curriculum developed at UC Berkeley (and adapted at the University of North Carolina, Charlotte), intended for high school juniors through university non-majors. It was used in two of the five initial pilot programs for the AP CS Principles course being developed by the College Board and the National Science Foundation. Our overall goal is to support the CS10K project by preparing instructors to teach the AP CS Principles course through the BJC curriculum. In this workshop, we will share our experiences as instructors of the course at the university and high school level, provide a glimpse into a typical week of the course, and share details of NSF-funded summer professional development opportunities.", "authors": [{"name": "Sean Morris", "affiliation": "Albany High School, Albany, CA, USA"}, {"name": "Brian Harvey", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Nathaniel Titterton", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Josh Paley", "affiliation": "Henry M. Gunn High School, Palo Alto, CA, USA"}, {"name": "Daniel D. Garcia", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Eugene Lemon", "affiliation": "Ralph J Bunche High School, Oakland, CA, USA"}, {"name": "Dan Armendariz", "affiliation": "UC Berkeley, Berkeley, CA, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Luke Segars", "affiliation": "Google, Inc., Mountain View, CA, USA"}], "tags": ["beauty and joy of computing", "build your own blocks", "byob", "snap!", "bjc", "ap cs principles"]}, {"title": "Introducing secure coding in CS0 and CS1 (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445512", "abstract": "The CS 2013 curriculum draft includes Information Assurance and Security as a pervasive knowledge area. However, introducing security in CS0 and CS1 is challenging because of lack of appropriate teaching resources and training. This workshop will provide a well-tested strategy for introducing secure coding concepts in CS0 and CS1. We will introduce attendees to secure coding through hands-on exercises, and provide self-contained, lab-based modules designed to be injected into CS0/CS1 with minimal impact on the course (www.towson.edu/securityinjections). Participants will be encouraged to bring in their own syllabus and labs to modify to include secure coding concepts. The first 15 participants will be reimbursed for the workshop cost on attendance. Laptop recommended.", "authors": [{"name": "Diana Burley", "affiliation": "The George Washington University, Washington, D.C., USA"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, New Jersey, USA"}, {"name": "Siddharth Kaza", "affiliation": "Towson University, Towson, Maryland, USA"}, {"name": "Blair Taylor", "affiliation": "Towson University, Towson, Maryland, USA"}, {"name": "Matt Bishop", "affiliation": "University of California at Davis, Davis, California, USA"}], "tags": ["security injections", "cs1", "cs0", "secure coding"]}, {"title": "Experimenting with and integrating Alice 2.3 into many disciplines (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445513", "abstract": "This interactive workshop will present the new features of Alice 2.3, and show how to integrate Alice 2.3 into multiple disciplines in middle school and high school. Participants will get hands-on experience with working with new Alice models and creating Alice projects. The workshop will also review curriculum materials and discuss mapping Alice to CSTA computer science standards. The curriculum materials presented could be used in middle school or high school in a variety of disciplines, or in college in a pre-CS 1 course. The target audience is middle school and high school teachers, and college faculty providing outreach to K-12 or teaching a pre-CS 1 course. Alice is available for free at www.alice.org. Curriculum materials are available at www.cs.duke.edu/csed/alice/aliceInSchools and at www.alice.org. Laptop required, and two-button mouse recommended.", "authors": [{"name": "Jacobo Carrasquel", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Dwayne C. Brown", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Wanda Dann", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Susan H. Rodger", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Steve Cooper", "affiliation": "Stanford University, Palo Alto, CA, USA"}], "tags": ["K-12 education", "middle school", "virtual worlds", "introductory computer science", "Alice", "high school"]}, {"title": "How to plan and run computing summer camps for 4th-12th grade students (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445514", "abstract": "This workshop will provide details on how to plan and run non-residential computing summer camps for 4th -- 12th grade students. Georgia Tech has been offering computing summer camps since 2004. These camps are financially self-sustaining and effective. Items used in the camps include: CS Unplugged, LightBot, Scratch, Alice, LEGO robots (WeDo, NXT, and Tetrix), EarSketch, and App Inventor. Georgia Tech has also helped start other computing camps at eleven other colleges and universities in Georgia.\nThe workshop will include forms, a timeline, sample agendas, sample flyers, budget plans, a planning checklist, suggested projects, surveys, pre and post-tests, evaluation results, lessons learned, and more.\nLaptop Recommend.", "authors": [{"name": "Barbara J. Ericson", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Krishnendu Roy", "affiliation": "Valdosta State University, Valdosta, GA, USA"}, {"name": "Christopher Michaud", "affiliation": "Marist School, Atlanta, GA, USA"}, {"name": "Nannette Napier", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}], "tags": ["camps", "education", "k-12"]}, {"title": "Pedagogy for engaging diverse students in computing: four effective methods (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445515", "abstract": "Four research-supported teaching methods can make your computing courses more effective through improved student learning, comprehension, and motivation.\nThis workshop introduces and provides experience with those four methods: 1. Collaborative learning, e.g., pair programming or peer led team learning; 2. Examples and exercises in contexts that appeal to a broad range of students; 3. Computing skills developed through practice; 4. Developing spatial rotation abilities.\nThe presenters are among leading researchers and award-winning practitioners.\nJ. McGrath Cohoon: Senior Research Scientist at the National Center for Women & IT (NCWIT); Associate Professor of Science, Technology, and Society at the University of Virginia; conducts nationwide empirical studies of gender and computing.\nJim Cohoon: Computer Science professor at the University of Virginia; IEEE Computer Science highest education award recipient, and author of award-winning introductory textbooks.\nSusan Horwitz: Professor of Computer Sciences at the University of Wisconsin - Madison; lead PI on an NSF grant that pioneered and evaluated use of Peer-Led Team Learning in introductory Computer-Science courses; recipient of University teaching awards.\nSeth Reichelson: award-winning high school Computer Science teacher; nationally recognized for his approach to high school computing courses in general and AP Computer Science in particular.\nLaura Jones: teaches in a public elementary school, writes frequently about girls and STEM careers, founded and directed the GEMS clubs (Girls Excelling in Math and Science) in 1995.\nWorkshop participants will learn from these presenters how to employ the pedagogical methods for engaging and retaining diverse students in computer science courses. .A laptop is optional.", "authors": [{"name": "Laura Reasoner Jones", "affiliation": "Fairfax County public school, Fairfax County, VA, USA"}, {"name": "Joanne McGrath Cohoon", "affiliation": "University of Virginia & NCWIT, Charlottesville, VA, USA"}, {"name": "Seth Reichelson", "affiliation": "Lake Brantley High School, Lake Brantley, FL, USA"}, {"name": "James P. Cohoon", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Susan Horwitz", "affiliation": "University of Wisconsin - Madison, Madison, WI, USA"}], "tags": ["spatial rotation", "exercises and examples", "pedagogy", "PLTL", "teaching methods", "collaborative learning"]}, {"title": "Teaching the CS principles curriculum with App Inventor (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445516", "abstract": "The CS Principles Project is an NSF-funded initiative to develop a breadth-first advanced placement (AP) course in computer science. App Inventor is a visual, blocks-based programming language that makes sophisticated computing concepts accessible to a broad range of students. This hands-on workshop, aimed at high school and undergraduate teachers, will introduce participants to lessons, homework exercises, project assignments, and assessment materials (quizzes, grading rubrics) that can be used in an App Inventor-based CS0 course. Participants will develop simple Android apps, using devices provided by the workshop, and will use them in the context of lessons and assignments that fit within the CS Principles framework. A laptop is required. For further details see: http://is.gd/sigcse2013appinv.", "authors": [{"name": "Ralph Morelli", "affiliation": "Trinity College, Hartford, CT, USA"}, {"name": "David Wolber", "affiliation": "University of San Francisco, San Francisco, CA, USA"}, {"name": "Franklyn Turbak", "affiliation": "Wellesley College, Wellesley, MA, USA"}, {"name": "Shaileen Pokress", "affiliation": "Massachusetts Institute of Technology, Cambridge, MA, USA"}, {"name": "Fred Martin", "affiliation": "University of Massachusetts Lowell, Lowell, MA, USA"}], "tags": ["ap/ib courses and curricula", "active learning", "instructional technologies", "non-majors"]}, {"title": "Using Scala strategically across the undergraduate curriculum (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445517", "abstract": "Various hybrid-paradigm languages, designed to balance compile-time error detection, conciseness, and performance, have emerged. Scala, e.g., is interoperable with Java and has become an early leader in adoption, especially in the start-up and open-source spaces. Workshop participants experience Scala's value as a teaching language in the CS curriculum through four lecture-lab modules: In CS1, the read-eval-print loop and simple, uniform syntax aid programming in the small. In CS2, higher-order methods allow concise, efficient manipulation of collections. Advanced topics include domain-specific languages, concurrency, web apps/services, and mobile apps. Laptop recommended with Scala installed.", "authors": [{"name": "Konstantin L\u00e4ufer", "affiliation": "Loyola University Chicago, Chicago, IL, USA"}, {"name": "George K. Thiruvathukal", "affiliation": "Loyola University Chicago, Chicago, IL, USA"}, {"name": "Mark C. Lewis", "affiliation": "Trinity University, San Antonio, TX, USA"}], "tags": ["scala", "cs1", "cs2", "advanced programming courses"]}, {"title": "NetLogo: teaching with turtles and crossing curricular boundaries (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445518", "abstract": "This workshop, intended for CS educators from middle school through undergrad, will introduce participants to NetLogo. NetLogo is an easy-to-learn multi-agent language and integrated modeling environment in widespread use in classrooms (and research labs) globally. This hands-on tutorial will highlight computational modeling in the natural and social sciences, tie in core computer science concepts, and discuss how to promote student thinking about decentralized systems. The workshop will draw on the presenters' own experiences teaching courses on computational science, computational art, theory of computation, and educational outreach events. Participants will learn first-hand how NetLogo can enrich a variety of computing courses. NetLogo runs on Mac/Linux/Windows. Laptop required.", "authors": [{"name": "David Weintrop", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Forrest Stonedahl", "affiliation": "Centre College, Danville, KY, USA"}, {"name": "Christine Shannon", "affiliation": "Centre College, Danville, KY, USA"}, {"name": "Paulo Blikstein", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["computational science", "programming languages", "netlogo", "computer science education", "agent-based modeling"]}, {"title": "Implementing the inverted classroom (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445519", "abstract": "The Inverted Classroom is an exciting pedagogical technique where more passive information assimilation activities (e.g. lectures) are assigned as homework and class time is reserved for active applied problem solving and group activities. With current technology, instructors wishing to implement inverted classroom have a variety of options to create engaging and accessible learning modules. In this workshop, we will provide an overview of inverted classroom philosophy and some initial data from successful pilots of the inverted classroom. Participants will work in small groups to develop small inverted classroom activities using software and technology provided by the presenters. We will wrap up with presentations from the groups and a discussion about assessment. Laptop Recommended.", "authors": [{"name": "Kate Lockwood", "affiliation": "Cal State, Monterey Bay, Seaside, CA, USA"}, {"name": "Marc Oehlman", "affiliation": "Cal State, Monterey Bay, Seaside, CA, USA"}, {"name": "Jeff McCall", "affiliation": "Cal State, Monterey Bay, Seaside, CA, USA"}, {"name": "Barbara Beckmeyer", "affiliation": "Cal State, Monterey Bay, Seaside, CA, USA"}], "tags": ["flipped classroom", "inverted classroom", "instructional technology"]}, {"title": "LittleFe buildout workshop (parts 1 & 2): hardware, software, and curriculum for parallel and distributed education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445520", "abstract": "LittleFe buildout events are training and infrastructure opportunities for teams of accepted faculty and students from educational institutions across the United States to assemble LittleFe educational appliances (http://littlefe.net) and learn to use them in the classroom to teach parallel programming, cluster computing, and computational/data enabled science & engineering (CDESE). The buildout consists of participants assembling their LittleFe unit from a kit; installing the Bootable Cluster CD (BCCD, http://bccd.net) software on it; learning about the curriculum modules available for teaching parallel programming, High Performance Computing (HPC) and CDESE; and learning how to develop new curriculum modules for the LittleFe/BCCD platform.", "authors": [{"name": "Charles Peck", "affiliation": "Earlham College, Richmond, IN, USA"}, {"name": "Aaron Weeden", "affiliation": "Shodor Education Foundation, Inc, Durham, NC, USA"}, {"name": "Tom Murphy", "affiliation": "Contra Costa College, San Pablo, CA, USA"}, {"name": "Skylar Thompson", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["parallel computing", "distributed computing", "education"]}, {"title": "Peer instruction in CS: introduction and recent developments (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445521", "abstract": "We introduce participants to Peer Instruction (PI): an active learning technique shown to be effective across the CS curriculum. In PI, Students work together to exchange perspectives and answer challenging conceptual questions, and are supported by short teaching segments. We will introduce and motivate PI, demonstrate its use in combination with a clicker system, and describe ways to encourage student preparation for PI classes. Pre-lecture preparation may include reading quizzes or exploratory homeworks, two topics of recent interest in the computing research literature. We will explore this literature as part of our tour of a complete PI course: from pre-lecture, to lecture, to the course at large.\nParticipants will work in groups to develop new PI questions addressing challenges to their students' learning, and discuss numerous pedagogical benefits conferred through PI.\nInstructors interested in increasing engagement in any CS course may attend. Participants are encouraged to bring current lecture materials. Laptop optional.", "authors": [{"name": "Leo Porter", "affiliation": "Skidmore College, Saratoga Springs, NY, USA"}, {"name": "Cynthia Bailey Lee", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "John Glick", "affiliation": "University of San Diego, San Diego, CA, USA"}, {"name": "Beth Simon", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["active learning", "reading quizzes", "peer instruction", "clickers"]}, {"title": "Android+Sphero: teaching mobile computing and robotics in a single course (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445523", "abstract": "Implications of using robotics and mobile computing in the curriculum extend far beyond motivation and engagement because skills in these areas can help students be more successful at the workplace. Our approach to teaching both subjects in one course focuses on using Sphero, a small ball-shaped wireless robot that can be controlled and programmed using an Android or iOS device via a Bluetooth link. Workshop participants will experience several hands-on projects that are offered to student in an Android+Sphero course, which culminates in a robot racing competition. This workshop is intended for high school and college faculty interested in mobile computing and/or robotics courses, projects, or activities. More information is available at http://www.cs.ccsu.edu/~stan/sigcse13/. Laptop recommended.", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["robotics", "sphero", "android", "mobile computing"]}, {"title": "Computer science via digital sound and music: a hands-on introduction to open source tools and new curriculum material to introduce computer science concepts (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445524", "abstract": "In this workshop, participants will create and manipulate digital audio using open source software (Audacity, PureData, Processing's Minim Beta, Octave, and C/C++). The cross-disciplinary digital audio content links music, engineering, physics, mathematics, and computer science and was developed for and test-taught in computer science courses. Additionally, participants will access and use the freely available online videos, tutorials, and textbook that can be incorporated into their classrooms. The online content's development was funded by the National Science Foundation CCLI Grant, \"Linking Science, Art, and Practice Through Digital Sound.\" Exercises that engage students in creative computational problem solving for sound and music applications will also be discussed. Laptops equipped with the open source applications mentioned above are strongly recommended but not required.", "authors": [{"name": "Jennifer Burg", "affiliation": "Wake Forest University, Winston--Salem, NC, USA"}, {"name": "Susan Reiser", "affiliation": "University of North Carolina Asheville, Asheville, NC, USA"}], "tags": ["digital sound and music"]}, {"title": "Test-first design in introductory Java programming (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445525", "abstract": "While professional programmers report on the advantages of test-first design discipline, typical introductory programming courses do not require that students design comprehensive test suites for their programs. For the past ten years we (and a number of our adopters in a variety of settings) have used our tester library to support novice programmers in adopting test-first design.\nThis workshop illustrates hands-on the benefits of test-first pedagogy on a series of typical introductory programming assignments and shows how the focus on testing fosters a deeper understanding of fundamental concepts of object-oriented program design. The workshop prepares the participants to adopt test-first design approach in their introductory (and advanced) Java-based courses.\nThe tester library with tutorials, samples, and all downloads is available at: http://www.ccs.neu.edu/javalib/Tester and https://github.com/TesterViera/JavaLibTester/", "authors": [{"name": "Viera K. Proulx", "affiliation": "Northeastern University, Boston, MA, USA"}], "tags": ["test-first design", "java programming"]}, {"title": "Experiments with network security threats in a safe, easy sandbox (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445526", "abstract": "Computer and network security are important topics discussed in many places in the Computer Science curriculum. Security issues are difficult to experiment on in experiential based courses. Attacks on system security cannot be demonstrated on live campus networks. This workshop will demonstrate and experiment with several security attacks in a safe, sandbox-based virtual environment. We will begin two easy demonstrations and allow each participant to choose from six laboratory experiments. We will wrap up with an ethics discussion. Each experiment includes discussion of the area involved and tips on how to protect against the particular exploit under scrutiny. Each participant will be given a DVD with all exercise materials on it as a takeaway. This workshop is designed for instructors from all levels who want to add security experiments to classes. A laptop is mandatory. Each participant will receive copies of all experiments in the series. These experiments include discussion materials -- introduction to the subject area, exploitation methods, and ways to avoid exploitation -- as well as the procedures used to experience each activity", "authors": [{"name": "Matthew Koster", "affiliation": "Calvin College, Grand Rapids, MI, USA"}, {"name": "Michael J. Jipping", "affiliation": "Hope College, Holland, MI, USA"}, {"name": "Acshi Haggenmiller", "affiliation": "Yale University, New Haven, CT, USA"}, {"name": "Eric Ostrowski", "affiliation": "Grand Valley State University, Allendale, MI, USA"}], "tags": ["computer security", "sandboxing", "experimentation", "network security"]}, {"title": "Developing a hands-on undergraduate parallel programming course with pattern programming (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445527", "abstract": "Parallel programming has been taught for many years but has recently taken on greater significance with introduction of multicore and many-core processors. Still, most teaching has followed a traditional path of focusing on learning low-level tools such as MPI. This workshop introduces a new educational approach based upon first selecting a computational pattern and then using higher-level tools to create parallel executable code. A pattern programming framework has been developed to create a distributed application that avoids the need to use low-level routines. The framework self-deploys on distributed computers, clusters, and individual multicore computers. Several patterns have been implemented including workpool, pipeline, synchronous and iterative all-to-all, and stencil. The first pattern covered is the widely applicable workpool pattern and other patterns will be introduced. The workshop will describe how the approach can be used in the undergraduate curriculum and will provide hands-on experiences to participants. In our approach, students focus upon computational strategies. Programming is much easier and less likely to be flawed. Each workshop participant will receive a flash drive with all software and documentation pre-loaded for use in the workshop and afterwards in their classes. Laptop required.", "authors": [{"name": "Clayton Ferner", "affiliation": "University of North Carolina Wilmington, Wilmington, NC, USA"}, {"name": "Barry Wilkinson", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}], "tags": ["undergraduate education", "pattern programming"]}, {"title": "LINQ from a database perspective: querying relations and XML (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445528", "abstract": "LINQ is a declarative language that provides a uniform paradigm for querying relations, objects, and XML. LINQ has from-where-select clauses, similar to SQL, but the clause order is based on its underlying formalism of functional programming. This workshop introduces LINQ from a database perspective with hands-on exercises over relational and XML data using a lightweight IDE for formative feedback. Participants will learn LINQ by experiencing sample exercises for incorporating LINQ into the database curriculum. The intended audience includes anyone with the knowledge of SQL who wants to learn LINQ. After learning LINQ to query relational data, participants will be introduced to XML and how LINQ can also be used to return, query, and transform XML data. Laptop recommended.", "authors": [{"name": "Suzanne W. Dietrich", "affiliation": "Arizona State University, Phoenix, AZ, USA"}], "tags": ["linq", "relations", "xml", "query languages", "database"]}, {"title": "Catalyzing & sustaining change in computing education (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445529", "abstract": "Why is change in academia so difficult? What risks and pitfalls await? How can we approach change so that it does not depend solely on our efforts or end when we are no longer there to maintain it? In this collaborative, interactive workshop, we will explore these questions and craft strategies to create sustainable change in computing curricula. This workshop is for those who want to create curricular change in their home departments, catalyze interdisciplinary curricula, or otherwise inspire innovation in teaching and learning at a scale that goes beyond a single classroom. Prereading (available online) will be expected. The workshop will end with the creation of concrete action plans. Laptop optional.", "authors": [{"name": "Lynn Andrea Stein", "affiliation": "Franklin W. Olin College of Engineering, Needham, MA, USA"}], "tags": ["curriculum", "academia", "organizational change"]}, {"title": "Drawing machines: exploring embedded system programming and hardware with an artistic flair (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445530", "abstract": "This workshop introduces embedded programming and hardware using Arduino in a creative context to make machines that make drawings. This is a powerful way to introduce programming and physical computing concepts to students from high school to undergraduate and to students who might not normally be intrigued by a computing course. Participants experience this curriculum first hand by using breadboards and electronic components to create circuits that they control programmatically. Using the Arduino C-based software, participants modify and develop code to control light sensors, range finders, pressure sensors, and servos. Provided art materials turn the circuits into mesmerizing contraptions that draw. Laptop required. Arduino and electronic components provided during the workshop. Additional information and materials at www.buildingsteam.org", "authors": [{"name": "Erik Brunvand", "affiliation": "University of Utah, Salt Lake City, Utah, USA"}, {"name": "Jennifer (Ginger) Reynolds Alford", "affiliation": "Trinity Valley School, Fort Worth, Texas, USA"}, {"name": "Paul Stout", "affiliation": "University of Utah, Salt Lake City, Utah, USA"}], "tags": ["drawing machine", "microcontroller", "education", "kinetic art", "art and engineering collaboration"]}, {"title": "Using POGIL to help students discover CS concepts and develop process skills (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445531", "abstract": "This workshop is for anyone who teaches CS, and introduces process-oriented guided inquiry learning (POGIL) in computer science. POGIL is based on learning science, and shares characteristics with other forms of active, discovery, and inquiry learning. In a POGIL classroom, teams of 3-5 learners work on instructor-facilitated activities. Through scripted inquiry and investigation, learners discover concepts and construct their own knowledge. Using assigned team roles and meta-cognition, learners develop process skills and individual responsibility. Studies show that POGIL can significantly improve student performance. POGIL has particular potential for CS education. Software development is largely a team-based problem-solving activity, and POGIL helps students to learn from each other and develop problem-solving abilities as well as important team process skills. POGIL has been developed and validated over the last 15 years in a range of STEM disciplines.\nThe workshop consists primarily of hands-on team activities. Participants will work through CS activities and a set of meta-activities to explore POGIL practices and activity structures. Participants will also begin to draft parts of their own activities. More information and materials are available at http://cspogil.org and http://pogil.org, including sample activities for topics in a variety of CS courses. Laptops optional. This material is based upon work supported by the National Science Foundation under grant DUE-1044679.", "authors": [{"name": "Matthew Lang", "affiliation": "Moravian College, Bethlehem, PA, USA"}, {"name": "Helen Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Clifton Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}], "tags": ["active learning", "pogil", "guided inquiry", "communication", "teams", "process skills"]}, {"title": "Augmenting introductory computer science classes with GameMaker and mobile apps (abstract only)", "link": "https://dl.acm.org/doi/10.1145/2445196.2445532", "abstract": "Students often take computing classes because they are eager to create games, to learn to create meaningful and useful software, or both. Connecting computing to real, cutting-edge applications has been shown to increase engagement of women and minorities. The new CS Principles curriculum, a pilot Advanced Placement course, seeks to broaden the participation in computing to a larger and more diverse audience. This curriculum emphasizes that computing is a creative activity where people work together to solve relevant problems. In this workshop, we introduce free software and curricula to enable novice high school and college students in a first computing course to learn basic game and mobile phone development. We discuss how these activities facilitate teaching high school and non-major (CS0) course topics, but they can also be used to illustrate more advanced topics. Participants will learn GameMaker and mobile phone programming using AppInventor, and/or Touch Develop. These tools allow students to create and have fun with computing while teaching object-oriented and event-driven programming and game architectures. If possible, Windows 7 phones will be provided for use during the workshop. We will provide links to curricular modules for the CS Principles: Beauty and Joy of Computing course, as well as links to the GameMaker, AppInventor, and Touch Develop platforms and tutorials. Participants must bring a network-connected laptop with a modern browser, and the latest version of Java (ideally with AppInventor installed), and may optionally bring an Android or Windows 7 phone.", "authors": [{"name": "Acey Boyce", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Leslie Keller", "affiliation": "NC Virtual Public School, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Katelyn Doran", "affiliation": "Microsoft, Redmond, WA, USA"}, {"name": "Andrew G. Hicks", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Veronica Catete", "affiliation": "NC State University, Raleigh, NC, USA"}], "tags": ["introductory course", "mobile applications", "broadening participation", "game development"]}]