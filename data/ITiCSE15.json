[{"title": "From Algorithmic to Computational Thinking: On the Way for Computing for all Students", "link": "https://dl.acm.org/doi/10.1145/2729094.2742582", "abstract": "Computational thinking, as coined by Jeannette Wing, is a fundamental skill for all to be able to live in today's world, a mode of thought that goes well beyond computing and provides a framework for reasoning about problems and methods of their solution. It has a long tradition as algorithmic thinking which within computer science is a competence to formulate a solution of a problem in the form of an algorithm and then to implement the algorithm as a computer program. Computational thinking is not an adequate characterization of computer science as claimed by Peter Denning and he is right -- it is a collection of key mental tools and practices originated in computing but addressed to all areas far beyond computer science. As an extension of algorithmic thinking, it includes thinking with many levels of abstraction as a problem solving approach inherently connected to computer science and addressed to all students to use computers and computing skills in solving problems in various school subjects coming from various scientific and applied areas. Computational thinking involves concepts, skills and competences that lie at the heart of computing, such as abstraction, decomposition, generalization, approximation, heuristics, algorithm design, efficiency and complexity issues and therefore it is clear that basic computer science knowledge helps to systematically, correctly, and efficiently process information, perform tasks, and solve problems. Although coming from computer science, computational thinking is not only the study of computer science, though computers play an essential role in the design of problems' solutions. It is a very important and useful mode of thinking in almost all disciplines and school subjects as an insight into what can and cannot be computed.\nIn this talk we shall discuss a new computing curriculum addressed to ALL students in K-12 in Poland which motivates them to use computational thinking in solving problems in various school subjects. Moreover its goal is to encourage and prepare students from early school years to consider computing and related fields as disciplines of their future study and professional career. To this end, the curriculum allows teachers and schools to personalize learning and teaching according to students' interests, abilities, and needs.\nThe new computing curriculum benefits a lot from our experience in teaching informatics in our schools for almost 30 years -- the first curriculum was approved by the ministry of education in 1985, 20 years after the first regular classes on informatics were held in two high schools in Wroc\u0142aw and in Warsaw. Today, informatics is an obligatory subject in middle school (grades 7-9) and high school (grades 10-12) and it will replace computer lessons (mainly on ICT) in elementary schools (grades 1-6). The new curriculum is also addressed to vocational education.", "authors": [{"name": "Maciej M. Sys\u0142o", "affiliation": "Nicolaus Copernicus University, University of Wroc\u0142aw, Wroc\u0142aw, Poland"}], "tags": ["computational thinking", "algorithmic thinking", "k-12 computing curriculum"]}, {"title": "In Defense of Programming", "link": "https://dl.acm.org/doi/10.1145/2729094.2742581", "abstract": "The activity of programming is often seen to be the epitome of all that is boring in computer science. The response of some educators is to attempt to show that programming is not the only and not even the primary activity of those engaged in CS. There is design, management, interaction with users, and so on. I would like to defend the (perhaps controversial) position that programming is the fundamental activity of CS and therefore shouldn't be swept under the rug. The position is based upon a broad view of what it means to program, so that whatever one's job title, almost everyone is programming, almost all the time. Furthermore, since the program is where \"the rubber meets the road\" (from a jingle used in ads for the Firestone tire company), any CS activity must be carried out with a primary focus on its contribution to the fitness of the end-product, the program. Finally, to carry out higher-level activities such as marketing and management, one must have extensive programming experience in order to successfully negotiate feasible specifications, deadlines and budgets for software development. The talk will conclude with the curricular consequences that can be drawn from this position.", "authors": [{"name": "Mordechai Ben-Ari", "affiliation": "Weizmann Institute of Science, Rehovot, Israel"}], "tags": ["programming"]}, {"title": "The JaeOS Project and the \u03bcARM Emulator", "link": "https://dl.acm.org/doi/10.1145/2729094.2742596", "abstract": "As operating systems evolve, so must operating systems projects. Most operating systems courseware systems are based on the significantly out of date MIPS architecture, and only one of these supports multiprocessors. This paper introduces \u03bcARM, a pedagogically undergraduate-appropriate ARM7tdmi-based system emulator/architecture. Furthermore, we present JaeOS, a specification for a multi-layer OS supporting multiprocessing, VM, thread synchronization, external devices (disks, terminals, tape, printers, and network interfaces) and a file system. Traditional OS projects like Nachos[5] or OS/161[10] provide students with a significant starting code base. Students then modify existing OS modules or add new ones. With \u03bcARM/JaeOS students undergo a pedagogically different experience of starting only with a hardware emulator and ending with a completely student written OS capable of running student written C programs.", "authors": [{"name": "Renzo Davoli", "affiliation": "Universita' di Bologna, Bologna, Italy"}, {"name": "Marco Melletti", "affiliation": ", Bologna, Italy"}, {"name": "Michael Goldweber", "affiliation": "Xavier University, Cincinnati, OH, USA"}], "tags": ["accessibility", "arm emulation", "os courseware"]}, {"title": "A Teaching Assistant for Algorithm Construction", "link": "https://dl.acm.org/doi/10.1145/2729094.2742588", "abstract": "This paper describes a method and a tool that allows a teacher to interactively explain and construct basic algorithms to novice programmers by direct manipulations of variables, indexes and arrays. The method consists in gradually creating a program with the assistance of a tool that captures the teachers actions on the fly. The system offers possibilities for recording a sequence of actions and replaying them. Moreover it is able to take care of conditional statements, as well as loops and macro operations. The tool generates the corresponding program code. As a result, a complete algorithm can be designed and executed without writing a single line of code.", "authors": [{"name": "Patrice Frison", "affiliation": "Universit\u00e9 de Bretagne Sud, Vannes, France"}], "tags": ["novice programming environment", "programming by demonstration", "algorithm visualization", "direct manipulation"]}, {"title": "FrenchPress Gives Students Automated Feedback on Java Program Flaws", "link": "https://dl.acm.org/doi/10.1145/2729094.2742622", "abstract": "We created an Eclipse plug-in called FrenchPress that partially automates the task of giving students feedback on their Java programs. It is designed not for novices but for students taking their second or third Java course: students who know enough Java to write a working program but lack the judgment to recognize bad code when they see it. FrenchPress does not diagnose compile-time or runtime errors, or logical errors that produce incorrect output. It targets silent flaws, flaws the student is unable to identify for himself because nothing in the programming environment alerts him. FrenchPress diagnoses flaws characteristic of programmers who have not yet assimilated the object-oriented idiom. Such shortcomings include misuse of the public modifier, fields that should have been local variables, and instance variables that should have been class constants. Other rules address the all too common misunderstanding of the boolean datatype. FrenchPress delivers explanatory messages in a vocabulary appropriate to the student's current level.\nThis paper reports preliminary results of a formative evaluation of FrenchPress conducted in a Fall 2014 data structures and algorithms course. User satisfaction survey responses indicate that among the students who received substantive diagnostic suggestions from FrenchPress, the percentage who were motivated to modify their program varied from 36% to 64% on four different assignments.", "authors": [{"name": "J. Eliot B. Moss", "affiliation": "University of Massachusetts, Amherst, MA, USA"}, {"name": "Hannah Blau", "affiliation": "University of Massachusetts, Amherst, MA, USA"}], "tags": ["eclipse plug-in", "static analysis", "program analysis", "educational technology"]}, {"title": "Questions on Spoken Language and Terminology for Teaching Computer Science", "link": "https://dl.acm.org/doi/10.1145/2729094.2742600", "abstract": "Spoken and written language are key factors for communication, especially for teaching and learning in general and for all subjects. In K-12 schools, 'being fluent with information technology', 'CS fluency and competency', 'computer literacy' and 'computational literacy' are terms for learning objectives of ICT, computer science courses that refer to skills in CS as well as to reading and speaking. But in most cases, the term 'language' in the context of CS refers to programming languages or formal languages. This paper is neither on programming languages nor on students' knowledge or (their wrong) usage of certain terms. We would like to raise awareness for the problem area of spoken language and proper terminology for teaching and learning CS. As a first step, we provide definitions of terms and aspects of theory related to this problem domain to start a meta-discourse on spoken language for teaching CS. We present some observations from different perspectives as examples for the need of further research. We then derive a list of research questions to open the research area of 'CS classroom language', structuring it from different perspectives.", "authors": [{"name": "Juliana Goschler", "affiliation": "Carl von Ossietzky University, Oldenburg, Germany"}, {"name": "Ira Diethelm", "affiliation": "Carl von Ossietzky University, Oldenburg, Germany"}], "tags": ["CS classroom language", "terminology", "meta-discourse"]}, {"title": "How Challenging are Bebras Tasks?: An IRT Analysis Based on the Performance of Italian Students", "link": "https://dl.acm.org/doi/10.1145/2729094.2742603", "abstract": "This paper analyses the results of the 2014 edition of the Italian Bebras/Kangourou contest, exploiting the Item Response Theory statistical methodology in order to infer the difficulty of each of the proposed tasks starting from the scores attained by the participants. Such kind of analysis, enabling the organizers of the contest to check whether or not the difficulty perceived by pupils was substantially different from that estimated by those who proposed the tasks, is important as a feedback in order to gain knowledge to be used both in ranking participants and in organizing future editions of the contest. We show how the proposed analysis essentially highlights that the 63% of tasks was perceived at the same level of difficulty estimated by those who proposed them, but a 37% of tasks were either easier or more difficult than expected.", "authors": [{"name": "Anna Morpurgo", "affiliation": "Universit\u00e0 degli Studi di Milano, Milan, Italy"}, {"name": "Mauro Torelli", "affiliation": "Universit\u00e0 degli Studi di Milano, Milan, Italy"}, {"name": "Violetta Lonati", "affiliation": "Universit\u00e0 degli Studi di Milano, Milan, Italy"}, {"name": "Carlo Bellettini", "affiliation": "Universit\u00e0 degli Studi di Milano, Milan, Italy"}, {"name": "Dario Malchiodi", "affiliation": "Universit\u00e0 degli Studi di Milano, Milan, Italy"}, {"name": "Mattia Monga", "affiliation": "Universit\u00e0 degli Studi di Milano, Milan, Italy"}], "tags": ["learning contests", "kangourou of informatics", "informatics and education", "bebras"]}, {"title": "Changing Culture: Educating the Next Computer Scientists", "link": "https://dl.acm.org/doi/10.1145/2729094.2742610", "abstract": "Since 2012 the United Kingdom has fundamentally reformed its computing teaching: the subject matter, the reliance on university specialists, even the subject name has changed. We describe the response at Sheffield Hallam University, which has been to involve academic staff from both the Department of Education and the Department of Computing, forming the Centre for Computing Education. The aim of our integrated approach is to help support the transformation from 'ict' to `Computing'. Through the Centre's work, a new generation of young teachers and trainees are being supported to embrace the cultural change. The growing use of tools and resources we provide, the visits, events, and teacher support network is strengthening the curricular shift in many schools. However, the challenge remains to reach schools who, so far, struggle to engage with the depth of change in the curriculum. Whilst still young, we believe that our integrated approach can continue to make a strong contribution to the teaching of computing at K-12 level in the uk.", "authors": [{"name": "Phil Spencer", "affiliation": "Sheffield Hallam University, Sheffield, United Kingdom"}, {"name": "Charles Boisvert", "affiliation": "Sheffield Hallam University, Sheffield, United Kingdom"}, {"name": "David Love", "affiliation": "Leeds Beckett Unversity, Leeds, United Kingdom"}, {"name": "Deborah Adshead", "affiliation": "Sheffield Hallam University, Sheffield, United Kingdom"}], "tags": ["computing at schools", "secondary education", "k-12 teacher training", "computer science education"]}, {"title": "Semi-Automatic Assessment of Unrestrained Java Code: A Library, a DSL, and a Workbench to Assess Exams and Exercises", "link": "https://dl.acm.org/doi/10.1145/2729094.2742615", "abstract": "Automated marking of multiple-choice exams is of great interest in university courses with a large number of students. For this reason, it has been systematically implanted in almost all universities. Automatic assessment of source code is however less extended. There are several reasons for that. One reason is that almost all existing systems are based on output comparison with a gold standard. If the output is the expected, the code is correct. Otherwise, it is reported as wrong, even if there is only one typo in the code. Moreover, why it is wrong remains a mystery. In general, assessment tools treat the code as a black box, and they only assess the externally observable behavior. In this work we introduce a new code assessment method that also verifies properties of the code, thus allowing to mark the code even if it is only partially correct. We also report about the use of this system in a real university context, showing that the system automatically assesses around 50% of the work.", "authors": [{"name": "Josep Silva", "affiliation": "Universitat Polit\u00e8cnica de Val\u00e8ncia, Valencia, Spain"}, {"name": "David Insa", "affiliation": "Universitat Polit\u00e8cnica de Val\u00e8ncia, Valencia, Spain"}], "tags": ["java programming", "teaching", "assessment"]}, {"title": "Planting Bugs: A System for Testing Students' Unit Tests", "link": "https://dl.acm.org/doi/10.1145/2729094.2742631", "abstract": "Automated marking of student programming assignments has long been a goal of IT educators. Much of this work has focused on the correctness of small student programs, and only limited attention has been given to systematic assessment of the effectiveness of student testing. In this work, we introduce SAM (the Seeded Auto Marker), a system for automated assessment of student submissions which assesses both program code and unit tests supplied by the students. Our central contribution is the use of programs seeded with specific bugs to analyse the effectiveness of the students' unit tests. Beginning with our intended solution program, and guided by our own set of unit tests, we create a suite of minor variations to the solution, each seeded with a single error. Ideally, a student's unit tests should not only identify the presence of the bug, but should do so via the failure of as small a number of tests as possible, indicating focused test cases with minimal redundancy. We describe our system, the creation of seeded test programs and report our experiences in using the approach in practice. In particular, we find that students often fail to provide appropriate coverage, and that their tests frequently suffer from their poor understanding of the limitations imposed by the abstraction.", "authors": [{"name": "Richard N. Thomas", "affiliation": "Queensland University of Technology, Brisbane, Australia"}, {"name": "Colin Fidge", "affiliation": "Queensland University of Technology, Brisbane, Australia"}, {"name": "Samuel A. Brian", "affiliation": "Queensland University of Technology, Brisbane, Australia"}, {"name": "James M. Hogan", "affiliation": "Queensland University of Technology, Brisbane, Australia"}], "tags": ["automated assessment", "technology in education", "unit testing"]}, {"title": "Evaluation of Source Code with Item Response Theory", "link": "https://dl.acm.org/doi/10.1145/2729094.2742619", "abstract": "The analysis of source code produced by novice programmers could provide interesting insights into their learning progress, particularly in introductory programming courses. Yet, as the programming ability of a person is assumed to be quite complex, it is not likely that it would be observable directly in its total. Instead, we regard those abilities as latent psychometric constructs and apply the methodology of item response theory (IRT) to assess their manifestations. In preparatory work, we had identified a list of items that represent the central concepts of object-oriented programming. In this paper we propose a methodology that allows the evaluation of coding abilities by analyzing the application of those concepts. We demonstrate this methodology by exemplarily analyzing source code that was produced during programming projects. The results provide interesting information about the difficulty of the concepts' application and the distribution of the respective coding abilities among the students.", "authors": [{"name": "Peter Hubwieser", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Munich, Germany"}, {"name": "Marc Berges", "affiliation": "Technische Universit\u00e4t M\u00fcnchen, Munich, Germany"}], "tags": ["item-response theory", "programming novices", "code analysis"]}, {"title": "Design and Preliminary Results From a Computational Thinking Course", "link": "https://dl.acm.org/doi/10.1145/2729094.2742593", "abstract": "This paper describes the design and initial assessment of a general education course in computational thinking for non-computer science majors. The key elements of the course include multidisciplinary cohorts to achieve learning across contexts, multiple languages/tools, including block-based and textual programming languages, repeated exposure to the underlying computational ideas in different forms, and student-defined projects using real world (\"big\") data to heighten motivation through self-directed contextualized learning. The preliminary multi-methods assessment shows that the course engendered high levels of motivation, achieved key objectives for learning in and across contexts, largely affirmed the choice of languages/tools, and supported, though less strongly than anticipated, the motivational effects of real-world data", "authors": [{"name": "Bushra Chowdhury", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Austin Cory Bart", "affiliation": "Virginnia Tech, Blacksburg, VA, USA"}, {"name": "Dennis Kafura", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["student engagement", "big data", "interdisciplinary cohorts", "computational thinking"]}, {"title": "Using Unity to Teach Game Development: When You've Never Written a Game", "link": "https://dl.acm.org/doi/10.1145/2729094.2742591", "abstract": "Video games are ubiquitous and our students want to learn how to make them. As computer science professors we see incorporating games into our curricula as a great way of increasing student excitement, increasing retention, and teaching communication skills. The problem many of us face though is how to teach game development when you have never written a game. Searches of articles and course offerings from other colleges does not provide a lot of clarification on what is the best environment for teaching such a course. The solution that we have found after many attempts is to build a game development course around the Unity game engine, and in this paper we describe how we arrived at this decision. Unity is easy to learn, free, cross-platform, a real game engine, and known in the field of game development but not discussed in computer science literature with regard to this type of course.", "authors": [{"name": "Paul E. Dickson", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["unity game engine", "game programming", "computer science education", "game development"]}, {"title": "An Experimental Project Course to Prepare Students for Agile Web Application Development", "link": "https://dl.acm.org/doi/10.1145/2729094.2742636", "abstract": "Commercial software development today is dominated by the dramatic growth of Web/Internet-delivered information, combined with development techniques that feature rapid creation of reliable, maintainable application software. Staying current with these technologies is a constant challenge in any computer science curriculum. This paper reports on a pilot project course for six computer science fourth-year undergraduates that addressed this challenge in a synergistic way, to the benefit both of the participating students and of a government sponsor. The project created a new, open-source implementation of the Common Map API (CMAPI). It was accomplished using agile development techniques, intensive team activities, and advice from an industry CMAPI expert. Three one-month \"sprints\" resulted in a working, open-source system that met the needs of the sponsor and provided an excellent learning experience for all concerned. The approach used should be considered for inclusion in every undergraduate computer science curriculum.", "authors": [{"name": "Nicholas K. Clark", "affiliation": "George Mason University, Fairfax, VA, USA"}, {"name": "John Mark Pullen", "affiliation": "George Mason University, Fairfax, VA, USA"}, {"name": "Christopher D. Bashioum", "affiliation": "Defense Intelligence Information Enterprise (DI2E) Framework, Herndon, VA, USA"}], "tags": ["management", "reliability", "economics", "design", "verification."]}, {"title": "Teaching Git on the Side: Version Control System as a Course Platform", "link": "https://dl.acm.org/doi/10.1145/2729094.2742608", "abstract": "The ability to use version control systems is a highly desired skill in the software industry and the need to teach it has been recognized in the literature. Git, and other version control systems, have previously been used by instructors in classrooms to distribute exercises, to facilitate assessment, and as a platform for project collaboration and teamwork. Using version control brings benefits to instructors, e.g. by lowering the need for administrative tasks, as well as to students, e.g. by providing experience with standard software industry tools. We describe how to incrementally present features of Git and incorporate them into the course workflow. We present a case study of running a large (ca. 200 students) course utilizing Git and evaluate the results both from instructor's and learner's point of view. Our evaluation shows, that a distributed version control system can be used successfully to disseminate course materials and facilitate exercise submissions.", "authors": [{"name": "Teemu Lehtinen", "affiliation": "Aalto University, School of Science, Espoo, Finland"}, {"name": "Lassi Haaranen", "affiliation": "Aalto University, School of Science, Espoo, Finland"}], "tags": ["software engineering", "course management", "version control", "GIT"]}, {"title": "A Game Engine in Pure Python for CS1: Design, Experience, and Limits", "link": "https://dl.acm.org/doi/10.1145/2729094.2742590", "abstract": "Games are being increasingly used to create compelling assignments for students learning programming, and Python is often used as an initial programming language. To that end, we present a game engine written in pure Python. Not only does the engine integrate seamlessly with what students already know about Python, but the game engine code itself is not a \"black box\" -- it is readable and approachable for beginning students. We report on two years' worth of experience using our game engine in CS1 for both regular assignments as well as \"master classes,\" the engine's design, and its limits.", "authors": [{"name": "Etienne Pitout", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "John Aycock", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "Sarah Storteboom", "affiliation": "University of Calgary, Calgary, AB, Canada"}], "tags": ["python", "games", "game engines", "education", "turtle graphics"]}, {"title": "Facilitating Programming Success in Data Science Courses through Gamified Scaffolding and Learn2Mine", "link": "https://dl.acm.org/doi/10.1145/2729094.2742597", "abstract": "This paper discusses the learning strategies adopted in a publically available, cloud-based learning environment, Learn2Mine, which facilitates student-progress as they solve data science programming problems. The learning system has been evaluated over three consecutive terms. Learn2Mine was initially introduced in an introductory course and pilot-tested for usability and effectiveness in Fall 2013. Students reported positive opinions on usability and effectiveness of the system in their completion of programming assignments. In Spring 2014, Learn2Mine was evaluated in an upper-level data mining course by comparing student submission rates and amount of programming accomplished for a group with access to the tool versus one without access. The group with access to Learn2Mine had an average assignment submission rate of 84%, while the group without had an average submission rate of only 48% (difference significant at p < 0.01). In Fall 2014, a controlled experiment was conducted in an introductory data science course: one group of students worked on a multi-part programming task with support of scaffolding and gamification as implemented in Learn2Mine, while the other section did not. The group with access performed significantly better in overall task completion (p < 0.01).", "authors": [{"name": "Paul E. Anderson", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Thomas Nash", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Ren\u00e9e McCauley", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["gamification", "python", "programming", "data science", "data mining", "R"]}, {"title": "Applied Computer History: Experience Teaching Systems Topics through Retrogames", "link": "https://dl.acm.org/doi/10.1145/2729094.2742583", "abstract": "Computing history need not be dry, useless, or boring. We describe a computer science course we taught, Retrogames, that used old computer games' implementation throughout to explain techniques and systems topics that modern students are not typically exposed to in any depth, ideas that are still applicable in both game and non-game settings. As a side effect, students also learned about how development was done and problems were solved in highly-constrained environments, which gave them useful tools to add to their toolbox.", "authors": [{"name": "John Aycock", "affiliation": "University of Calgary, Calgary, AB, Canada"}], "tags": ["retrogames", "system design", "programming techniques", "history", "games"]}, {"title": "Gender Gap in Academia: Perceptions of Female Computer Science Academics", "link": "https://dl.acm.org/doi/10.1145/2729094.2742595", "abstract": "Despite increased attention from Universities and Industry, the low representation of female students in Computer Science undergraduate degrees remains a major issue. Recognising this issue, leading tech companies have established strong and committed diversity initiatives but have only reached up to 17\\% female representation in their tech departments. The causes of the reduced attraction and retention of female students are varied and have been widely studied, advancing the understanding of why female students do not take up or leave Computer Science. However, few analyses look at the perceptions of the females that have stayed in the field. In this paper, we explore the viewpoints of female academics and postgraduate students in Computer Science with various undergraduate backgrounds and pathways into academia. Our analysis of their interviews shows the influence of family, exposure, culture, sexism and gendered thought on their perceptions of the field, and of themselves and their peers. We identify that perceptions of identity conflict and a lack of belonging to the discipline persist even for these high-performing professionals.", "authors": [{"name": "Anna Szorenyi", "affiliation": "University of Adelaide, Adelaide, SA, Australia"}, {"name": "Shantel Thyer", "affiliation": "University of Adelaide, Adelaide, SA, Australia"}, {"name": "Dee Michell", "affiliation": "University of Adelaide, Adelaide, SA, Australia"}, {"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, SA, Australia"}, {"name": "Claudia Szabo", "affiliation": "University of Adelaide, Adelaide, SA, Australia"}], "tags": ["gender diversity", "computer science education"]}, {"title": "Gender Differences in Factors Influencing Pursuit of Computer Science and Related Fields", "link": "https://dl.acm.org/doi/10.1145/2729094.2742611", "abstract": "Increasing women's participation in computer science is a critical workforce and equity concern. The technology industry has committed to reversing negative trends for women in computer science as well as engineering and information technology \"computing\" fields. Building on previously published research, this paper identifies factors that influence young women's decisions to pursue computer science-related degrees and the ways in which these factors differ for young men. It is based on a survey of 1,739 high school students and recent college graduates. Results identified encouragement and exposure as the leading factors influencing this critical choice for women, while the influence of these factors is different for men. In particular, the influence of family is found to play a critical role in encouragement and exposure, and outreach efforts should focus on ways to engage parents.", "authors": [{"name": "Jason Ravitz", "affiliation": "Google Inc., Mountain View, CA, USA"}, {"name": "Jennifer Wang", "affiliation": "Google Inc., Mountain View, CA, USA"}, {"name": "Hai Hong", "affiliation": "Google Inc., Mountain View, CA, USA"}, {"name": "Marielena Ivory", "affiliation": "Google Inc., Zurich, Switzerland"}], "tags": ["college", "k-12 education", "encouragement", "high school", "perceptions", "gender differences", "factors", "self-confidence"]}, {"title": "A Computer Science Linked-courses Learning Community", "link": "https://dl.acm.org/doi/10.1145/2729094.2742621", "abstract": "Previous work has shown that factors such as student engagement and involvement can impact progress for computer science majors. One promising approach for improving student engagement is learning communities, which have a long history in academia but are relatively uncommon in computing. In this article we describe a linked-courses learning community for women and men of color majoring in development-focused computing degrees. We provide logistical information about the first offering of the learning community and assess the effectiveness of the community via a student survey. Our results show that students in the learning community are more likely to report that they have support for success in computer science courses and that they are a part of a community of programmers.", "authors": [{"name": "Amber Settle", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "John Lalor", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Theresa Steinbach", "affiliation": "DePaul University, Chicago, IL, USA"}], "tags": ["engagement", "community", "python", "programming", "confidence", "attitudes", "CS1"]}, {"title": "VIGvisual: A Visualization Tool for the Vigen\u00e8re Cipher", "link": "https://dl.acm.org/doi/10.1145/2729094.2742589", "abstract": "This paper describes a visualization tool VIGvisual that helps students learn and instructors teach the Vigen\u00e8re cipher. The software allows the user to visualize both encryption and decryption through a variety of cipher tools. The demo mode is useful and efficient for classroom presentation. The practice mode allows the user to practice encryption and decryption. VIGvisual is quite versatile, providing support for both beginners learning how to encrypt and decrypt, and also for the more advanced users wishing to practice cryptanalysis in the attack mode. Classroom evaluation of the tool was positive.", "authors": [{"name": "Jun Tao", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Jun Ma", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Melissa Keranen", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Ching-Kuang Shene", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Can Li", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Chaoli Wang", "affiliation": "University of Notre Dame, Notre Dame, IN, USA"}], "tags": ["visualization", "cryptography"]}, {"title": "The Impact of Learning Style Adaptivity in Teaching Computer Security", "link": "https://dl.acm.org/doi/10.1145/2729094.2742614", "abstract": "Teaching computer security is one of the most challenging tasks in computer science, because of the need to successfully integrate abstract concepts and practical applications. Several e-learning systems have been developed to address this issue. However, they usually provide the same material in the same sequence irrespective of the characteristics of the students, such as their knowledge level and learning style. In this paper, an approach to learning style adaptivity is proposed for the teaching of computer security. An e-learning system was developed to provide more personalised and adaptive learning, based on the information perception style of the Felder-Silverman model. This is the dimension of learning style, which has received the least attention in published research. In the approach, a personalised sequence of learning material is generated based on an individual learning style. The approach is evaluated in order to determine its effectiveness in learning provision. An experiment conducted with sixty subjects produced significant results. They indicate that matching computer security learning material, according to the learning style of the students, yields significantly better learning gain and student satisfaction than without matching.", "authors": [{"name": "Robert J. Hendley", "affiliation": "University of Birmingham, Birmingham, United Kingdom"}, {"name": "Rachid Anane", "affiliation": "Coventry University, Coventry, United Kingdom"}, {"name": "Mohammad Alshammari", "affiliation": "University of Birmingham, Birmingham, United Kingdom"}], "tags": ["adaptivity", "computer security education", "e-learning systems", "learning style"]}, {"title": "RBACvisual: A Visualization Tool for Teaching Access Control using Role-based Access Control", "link": "https://dl.acm.org/doi/10.1145/2729094.2742627", "abstract": "This paper presents RBACvisual, a user-level visualization tool designed to facilitate the study and teaching of the role-based access control (RBAC) model, which has been widely used in companies to restrict access to authorized users. RBACvisual provides two graphical abstractions of the underlying specification. Policies can be input and modified graphically or using text-based files. Students can use an embedded Query system to answer commonly asked questions and to test their understanding of a given policy. A Practice subsystem is also provided for instructors to assign quizzes to students; the answers can be sent to the instructor via email. We also present the results of an evaluation of RBACvisual within a senior-level course on information security. The student feedback was positive and indicated that RBACvisual helped students understand the model and enhanced the course.", "authors": [{"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Thomas Lake", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}, {"name": "Ching-Kuang Shene", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Man Wang", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Chaoli Wang", "affiliation": "University of Notre Dame, Notre Dame, IN, USA"}, {"name": "Steve Carr", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}], "tags": ["visualization", "security"]}, {"title": "The Exploring Computer Science Course, Attendance and Math Achievement", "link": "https://dl.acm.org/doi/10.1145/2729094.2742598", "abstract": "Exploring Computer Science (ECS) is a high school curriculum that was designed to be more inclusive and engaging for all students, especially women and students of color who have typically been under-represented in the discipline. The course uses an inquiry-based approach that is expected to improve students' problem solving skills. Students who enrolled in ECS at ten high schools in San Jose, California were monitored over a three-year period to investigate possible relationships between participation in ECS, attendance rates, and scores on standardized math tests. Results show a statistically significant difference between ECS participants and their peers in both areas for two of three project years. Additional study is recommended to explore whether there is a causal relationship.", "authors": [{"name": "Daniel W. Lewis", "affiliation": "Santa Clara University, Santa Clara, CA, USA"}, {"name": "Timothy Mechlinski", "affiliation": "SmartStart Evaluation & Research, Irvine, CA, USA"}, {"name": "Mariana Schmalstig", "affiliation": "SmartStart Evaluation & Research, Irvine, CA, USA"}, {"name": "Lisa Kohne", "affiliation": "SmartStart Evaluation & Research, Irvine, CA, USA"}], "tags": ["pre-college", "pre-ap", "math", "high school", "curricula", "attendance"]}, {"title": "Enhancing Robot Programming with Visual Feedback and Augmented Reality", "link": "https://dl.acm.org/doi/10.1145/2729094.2742585", "abstract": "In our previous research, we showed that students using the educational robot Thymio and its visual programming environment were able to learn the important computer-science concept of event-handling. This paper extends that work by integrating augmented reality (AR) into the activities. Students used a tablet that displays in real time the event executed on the robot. The event is overlaid on the tablet over the image from a camera, which shows the location of the robot when the event was executed. In addition, visual feedback (FB) was implemented in the software. We developed a novel video questionnaire to investigate the performance of the students on robotics tasks. Data were collected comparing four groups: AR+FB, AR+non-FB, non-AR+FB, non-AR+non-FB. The results showed that students receiving feedback made significantly fewer errors on the tasks. Those using AR made fewer errors, but this improvement was not significant, although their performance improved. Technical problems with the AR hardware and software showed where improvements are needed.", "authors": [{"name": "Severin Klinger", "affiliation": "ETH Zurich, Z\u00fcrich, Switzerland"}, {"name": "St\u00e9phane Magnenat", "affiliation": "Disney Research Zurich, Z\u00fcrich, Switzerland"}, {"name": "Morderchai Ben-Ari", "affiliation": "Weizmann Inst. Sci., Rehovot, Israel"}, {"name": "Robert W. Sumner", "affiliation": "Disney Research Zurich, Z\u00fcrich, Switzerland"}], "tags": ["aseba", "event-actions pair", "vpl", "robotics in education", "thymio", "augmented reality"]}, {"title": "A Comparison of Preschool and Elementary School Children Learning Computer Science Concepts through a Multilanguage Robot Programming Platform", "link": "https://dl.acm.org/doi/10.1145/2729094.2742599", "abstract": "This paper describes a school intervention to teach fundamental Computer Science (CS) concepts to 3-11 year old students with a multilanguage robot programming platform (using drag and drop, Python and C++ languages) in Argentina. We analyze students' performance and learning process based on multiple choice test and classroom observations. Data show that all students can intuitively learn sequence, conditional, loops and parameters and that girls performed slightly better than boys. Older students can easily combine these concepts to write a program. The multilanguage platform promotes student spontaneous exploration of more sophisticated CS concepts and languages. These findings imply that introducing CS in mandatory schooling from an inquiry based approach is both achievable and beneficial.", "authors": [{"name": "Luciana Benotti", "affiliation": "Universidad Nacional de Cordoba / CONICET, Cordoba, Argentina"}, {"name": "Cecilia Martinez", "affiliation": "Universidad Nacional de Cordoba/CONICET, Cordoba, Argentina"}, {"name": "Marcos J. Gomez", "affiliation": "Universidad Nacional de Cordoba, Cordoba, Argentina"}], "tags": ["computer science k-7 outreach", "robots", "experimental evaluation", "iconic programming language"]}, {"title": "Using Learning Analytics to Visualise Computer Science Teamwork", "link": "https://dl.acm.org/doi/10.1145/2729094.2742613", "abstract": "Industry has called upon academia to better prepare Computer Science graduates for teamwork, especially in developing the soft skills necessary for collaborative work. However, the teaching and assessment of teamwork is not easy, with instructors being pressed for time and a lack of tools available to efficiently analyse student teamwork, where large cohorts are involved. We have developed a teamwork dashboard, founded on learning analytics, learning theory and teamwork models that analyses students' online teamwork discussion data and visualises the team mood, role distribution and emotional climate. This tool allows educators to easily monitor teams in real-time. Educators may use the tool to provide students with feedback about team interactions as well as to identify problematic teams. We present a case study, trialing the dashboard on one university Computer Science course and include reflections from the course lecturer to determine its utility in monitoring online student teamwork.", "authors": [{"name": "Claudia Szabo", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Katrina Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Rebecca Vivian", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Nickolas Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Hamid Tarmazdi", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["computer science education", "collaboration", "learning analytics"]}, {"title": "Question-Posing strategies used by students for exploring Data Structures", "link": "https://dl.acm.org/doi/10.1145/2729094.2742635", "abstract": "Question posing by students is a valuable mechanism for learning. In this paper we demonstrate how student generated questions can result in unfolding of knowledge. We conducted field studies in Data Structures courses, where we provided a semi-structured question-posing situation to students. We analyzed the questions generated by students using inductive qualitative data analysis. We found that students pose exploratory questions and unfold knowledge using seven strategies, viz., Apply, Organize, Probe, Compare, Connect, Vary, and Implement. These strategies were validated within the data structures domain and were also found to be valid in another CS application domain (Artificial Intelligence). The content analysis of the questions has shown that students tend to unfold more conceptual knowledge than procedural knowledge.", "authors": [{"name": "Sridhar Iyer", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}, {"name": "Shitanshu Mishra", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}], "tags": ["knowledge unfolding", "question-posing", "question-posing strategies", "data structures", "inductive qualitative analysis"]}, {"title": "Enhancements to Support Functions of Distributed Pair Programming Based on Action Analysis", "link": "https://dl.acm.org/doi/10.1145/2729094.2742616", "abstract": "Pair programming is a practice of software development where two programmers work together to create programs. It is important for students to understand and learn effective pair programming in software engineering. A pair of programmers at distributed sites can program in pairs by using a support system including text chats or synchronized editors. It is important to enable effective communication in distributed pair programming as well as in collocated human dialogue. We conducted experiments to collect information about students' activities, communications, and answers to questionnaires. These collected data were analyzed to clarify functions that enhanced distributed pair programming. The analysis revealed that it is important for support systems to facilitate easy communication in pairs and for them to have functions that enable appropriate partner changes and role switching.", "authors": [{"name": "Takeshi Umezawa", "affiliation": "Chiba University, Chiba, Japan"}, {"name": "Tomoyuki Urai", "affiliation": "Chiba University, Chiba, Japan"}, {"name": "Noritaka Osawa", "affiliation": "Chiba University, Chiba, Japan"}], "tags": ["action analysis", "communication method", "pair programming", "collaborative work"]}, {"title": "Using the Readiness Assurance Process and Metacognition in an Operating Systems Course", "link": "https://dl.acm.org/doi/10.1145/2729094.2742594", "abstract": "There is significant evidence that active learning techniques facilitate superior learning outcomes when compared to traditional lecture-based techniques. However, adopting an entirely new pedagogy is a time-consuming endeavor that requires considerable effort. In this work, we describe simple transitional steps that we used to increase the amount of active learning in our Operating Systems (OS) course. After introducing these techniques in the Fall 2013 offering of this course, we observed dramatic improvements in a variety of measures of student outcomes, including withdraw-D-failure (WDF) rates and final exam performance. We also observed marked improvement in project completion rates. Our results suggest that adopting components of active learning pedagogies can contribute to positive outcomes with modest investments in time and effort.", "authors": [{"name": "Michael S. Kirkpatrick", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Samantha Prins", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["active learning", "pedagogy", "metacognition", "education"]}, {"title": "Combining Challenge-Based Learning and Scrum Framework for Mobile Application Development", "link": "https://dl.acm.org/doi/10.1145/2729094.2742602", "abstract": "The market for mobile applications has been growing dramatically, as has the complexity of the applications and the speed of the development process. These changes require a rethinking of the development process and of how developers are trained. In order to better prepare faculty and students for the emerging mobile application market, this study presents a new learning and software development framework that combines Agile methodologies with the Challenge-Based Learning (CBL) framework. CBL provides a student-centered learning framework that mirrors the modern workplace. Agile methodologies address the changing landscape of mobile development environments. A combination of the CBL learning framework and Agile methodologies can better prepare students for the development market. This paper presents an empirical study applying CBL and Scrum in a mobile application development course evaluated through a series of post surveys. The results indicate that a teaching and learning environment based on practical experience combining the CBL framework with the Scrum process is an eective model to promptly teach undergraduates how to be successful mobile application developers.", "authors": [{"name": "Alan R. Santos", "affiliation": "PUCRS, Porto Alegre, Brazil"}, {"name": "Paulo Fernandes", "affiliation": "PUCRS, Porto Alegre, Brazil"}, {"name": "Afonso Sales", "affiliation": "PUCRS, Porto Alegre, Brazil"}, {"name": "Mark Nichols", "affiliation": "The Challenge Institute, Chandler, AZ, USA"}], "tags": ["CBL", "scrum", "mobile application development"]}, {"title": "Teaching Pervasive Computing to CS Freshmen: A Multidisciplinary Approach", "link": "https://dl.acm.org/doi/10.1145/2729094.2742584", "abstract": "Pervasive Computing is a growing area in research and commercial reality. Despite this extensive growth, there is no clear consensus on how and when to teach it to students. We report on an innovative attempt to teach this subject to first year Computer Science students. Our course combines computer science, engineering and social disciplines, such as: data acquisition, signal processing, control theory, machine learning, quality control and ethics. This unusual mix of disciplines is induced by a project-based learning approach. The project challenges the students to develop an assistive pervasive computing system that infers its context by using pattern recognition. This course is yearly taught to approximately 200 freshmen, and receives positive evaluations. Its main strength is that it motivates both non CS major strugglers, as well as top students. This paper describes the course design and its teaching artifacts, and shares our teaching experiences. We are confident that this teaching formula can be applied to other target groups, such as computer engineering, or even liberal arts.", "authors": [{"name": "Natalia Silvis-Cividjian", "affiliation": "VU University, Amsterdam, Netherlands"}], "tags": ["assistive intelligent systems", "differentiation", "project-based learning", "matlab\u00ae", "LEGO\u00ae Mindstorms NXT", "pervasive computing", "undergraduate cs education"]}, {"title": "A Quantitative Study of the Relative Difficulty for Novices of Writing Seven Different Types of SQL Queries", "link": "https://dl.acm.org/doi/10.1145/2729094.2742620", "abstract": "This paper presents a quantitative analysis of data collected by an online testing system for SQL \"select\" queries. The data was collected from almost one thousand students, over eight years. We examine which types of queries our students found harder to write. The seven types of SQL queries studied are: simple queries on one table; grouping, both with and without \"having\"; natural joins; simple and correlated sub-queries; and self-joins. The order of queries in the preceding sentence reflects the order of student difficulty we see in our data.", "authors": [{"name": "Julia Prior", "affiliation": "University of Technology, Sydney, Sydney, Australia"}, {"name": "Raymond Lister", "affiliation": "University of Technology, Sydney, Sydney, Australia"}, {"name": "Alireza Ahadi", "affiliation": "University of Technology, Sydney, Sydney, Australia"}, {"name": "Vahid Behbood", "affiliation": "University of Technology, Sydney, Sydney, Australia"}], "tags": ["online assessment", "SQL queries", "databases"]}, {"title": "Tangible Media Approaches to Introductory Computer Science", "link": "https://dl.acm.org/doi/10.1145/2729094.2742612", "abstract": "Computing is an increasingly important component of many jobs and demand for computing skills is far outpacing the number of computationally literate workers available. Non-majors, adult learners, and other non-traditional students can potentially fill some of these positions. However, traditional CS education pathways do not currently address the unique needs of these students. New approaches to CS education that fit with the goals and lifestyles of non-traditional CS students are needed. In line with Computational Media approaches known to be successful with non-majors, we designed and implemented two graduate- level courses, one using a Pixelsense and the other using Arduino, to teach computational thinking, programming, and design skills. We compare findings from these two courses with specific focus on non-major graduate students, but including topics relevant for traditional CS educators, such as, the importance of choice of platform, structure of assignments, maintaining student motivation, and the impact of self-guided final projects.", "authors": [{"name": "Stevie Chancellor", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Evan Barba", "affiliation": "Georgetown University, Washington, DC, USA"}], "tags": ["tangible media", "physical computing", "non-majors", "computational media", "introductory computer science", "late bloomers"]}, {"title": "Teaching Software Engineering with LEGO Serious Play", "link": "https://dl.acm.org/doi/10.1145/2729094.2742604", "abstract": "LEGO Serious Play (LSP) is a methodology that helps people brainstorm and discuss complex ideas through storytelling and metaphors. LSP has been successfully applied in higher education as a mechanism for team building and promoting creativity. In this paper, we discuss using LSP to teach several core software engineering topics through hands-on case studies. Initial results suggest that LSP has a positive impact on student learning, while also improving student engagement with the course material. This paper describes the details of two LSP-based case studies along with many practical aspects of using LSP to teach software engineering.", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["software engineering", "case studies", "LEGO serious play"]}, {"title": "A TUI-based Programming Tool for Children", "link": "https://dl.acm.org/doi/10.1145/2729094.2742630", "abstract": "TanPro-Kit 2.0 is a programming tool for children aged 6 to 8, which is based on tangible user interface (TUI). It consists of programming blocks and a LED pad. The pad presents visual and audible feedback according to the arrangement of programming blocks with which children construct programs to play a maze game. Based on TanPro-Kit, we expanded three important programming concepts: parameters, Boolean logic and branch, and improved the system to support two-dimensional connection, which aims to make the program structure clearer. To realize these new features, we added three kinds of programming blocks accordingly, improved the process of block sequence in Arduino, and modified the infrared and wireless communications of the Single-Chip Microcomputer (SCM). A lab-based user study with 15 children was conducted, and the results show that the children can use the system to complete tasks easily and have a basic understanding of the related programming concepts.", "authors": [{"name": "Lan Zhang", "affiliation": "Institute of Software, Chinese Academy of Sciences, Beijing, China"}, {"name": "Fang Sun", "affiliation": "Liaoning Normal University, Dalian, China"}, {"name": "Yunfeng Qi", "affiliation": "Institute of Software, Chinese Academy of Sciences, Beijing, China"}, {"name": "Danli Wang", "affiliation": "Institute of Software, Chinese Academy of Sciences, Beijing, China"}], "tags": ["tangible user interfaces", "learning", "children", "programming languages"]}, {"title": "Reflections on Teaching Refactoring: A Tale of Two Projects", "link": "https://dl.acm.org/doi/10.1145/2729094.2742617", "abstract": "Teaching refactoring effectively while making students realize the importance and benefits of refactoring is a challenge. In this direction, an experiment was carried out while conducting the course project for the Refactoring and Design Patterns course. This paper discusses the results of the experiment that involved two different project schemes to carry out refactoring activities on the same code base. One scheme was post-enhancement refactoring and the other was pre-enhancement refactoring. The aim of the experiment was to decide which scheme was beneficial in terms of better understanding, appreciation, and implementation of refactoring.", "authors": [{"name": "Naveed Arshad", "affiliation": "Lahore University of Management Sciences, Lahore, Pakistan"}, {"name": "Hamid Abdul Basit", "affiliation": "Lahore University of Management Sciences, Lahore, Pakistan"}, {"name": "Shamsa Abid", "affiliation": "Lahore University of Management Sciences, Lahore, Pakistan"}], "tags": ["teaching refactoring", "refactoring course project", "student survey", "software refactoring"]}, {"title": "Teacher Perspectives on Web Design Instruction", "link": "https://dl.acm.org/doi/10.1145/2729094.2742606", "abstract": "Web development is an inherently interdisciplinary field that offers a unique introductory path to computing prior to more traditional programming courses. While significant earlier work has investigated the challenges that novice web developers encounter, little research is available about teaching while coping with the field's considerable breadth. This paper reports findings from interviews with practicing web design instructors in secondary and post-secondary teaching environments. We present emergent themes related to recruitment strategies, student expectations, teaching techniques, and common challenges. We find significant effort is needed to cope with mismatches between students' expectations of what web design is and the HTML/CSS syntax-oriented view of the discipline often emphasized by teachers. We conclude with implications for new teaching tools that would help better sustain student motivation while equipping them with fundamental skills in web development.", "authors": [{"name": "Hauwa Muibi", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}, {"name": "Thomas Park", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Brian Dorn", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}], "tags": ["web design", "web development", "k-12 teaching"]}, {"title": "Academic Integrity and Professional Integrity in Computing Education", "link": "https://dl.acm.org/doi/10.1145/2729094.2742633", "abstract": "Certain practices, such as unauthorised collaboration with other students and unreferenced copying from external sources, are generally considered in the educational context to be breaches of academic integrity. This paper explores whether there are differences between the perceptions of the acceptability of these practices in the academic context and in the professional context. From focus groups of computing academics and students, and an online survey, we find that there are indeed differences in perceptions: that many practices considered unacceptable in the academic context are considered significantly more acceptable in the professional context. This raises questions concerning the roles of summative assessment and the possibilities of authentic assessment. The paper concludes that in much of programming education there is an unbreachable rift between the goal of authentic assessment, which necessarily entails collaborative work, and the need for summative assessment of individual effort, which typically requires work in isolation. The findings of our research have implications for computing education programs, particularly in regard to preparation of students for the workforce.", "authors": [{"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, Australia"}], "tags": ["academic integrity", "professional integrity", "computing education"]}, {"title": "Measures of Student Engagement in Computer Science", "link": "https://dl.acm.org/doi/10.1145/2729094.2742586", "abstract": "Data relating to university students' engagement is collected internationally via several large-scale student surveys such as the North American National Survey of Student Engagement. The instruments employed measure the extent to which students put their efforts into activities associated with effective learning. It is claimed that these process measures act as a reliable proxy for student attainment, and there appears to be some evidence to support this. So far, there has been little work done to investigate engagement instruments and the data they generate from a subject perspective. This paper brings together data relating to Computer Science (CS) across the range of major engagement surveys. The results of this meta-analysis appear to indicate that CS rates lower than average on many of the major engagement benchmarks and in some cases, considerably so. Particular benchmark areas giving cause for concern are identified prompting questions as to how these results should be interpreted and used in the context of a particular learning domain. We also critique aspects of the surveys themselves, suggesting that further research is needed to better understand their appropriateness for individual subjects or for groups of subjects with shared traits. The paper argues that more qualitative data is required and that other measures (such as student expectation and some subject-specific measures) are needed for a greater understanding of the CS student experience.", "authors": [{"name": "Matthew Butler", "affiliation": "Monash University, Monash, Australia"}, {"name": "Michael Morgan", "affiliation": "Monash University, Monash, Australia"}, {"name": "Sara Kalvala", "affiliation": "University of Warwick, Coventry, United Kingdom"}, {"name": "Jane Sinclair", "affiliation": "University of Warwick, Coventry, United Kingdom"}], "tags": ["student experience", "international measures", "CS"]}, {"title": "Predicting Success in University First Year Computing Science Courses: The Role of Student Participation in Reflective Learning Activities and in I-clicker Activities", "link": "https://dl.acm.org/doi/10.1145/2729094.2742623", "abstract": "Educators find that many students have difficulty succeeding in first-year university Computing Science (CS) courses. Initiatives are pursued to address this challenge and to support students' academic success. Instructors and institutions have reported providing different forms of academic support with programs where learning strategies are discussed with students, such as the Academic Enhancement Program (AEP). The AEP is a student focused proactive intervention developed and run by the School of Computing Science and the Student Learning Commons at Simon Fraser University, providing opportunities for self-reflection and exposure to study strategies activities, incorporated within and tailored to selected first year CS university courses, since 2006. To further enhance the students' learning experience, instructors also incorporate novel activities in class, such as peer instruction and active learning aided with the use of audience response systems (i-clickers). Experimental studies to determine whether the incorporation of these activities in a course cause a variation in some outcome measures (such as final exam scores) may be not feasible to do. In this paper we present instead results from performing statistical studies on course evaluation data, which even if they cannot prove causality, they may allow to determine if these activities are statistically significant predictors of course success.", "authors": [{"name": "Diana Cukierman", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}], "tags": ["i-clickers", "cs education research", "study strategies", "experience report", "predictors of course success", "class active participation"]}, {"title": "Examining Classroom Interventions to Reduce Procrastination", "link": "https://dl.acm.org/doi/10.1145/2729094.2742632", "abstract": "Procrastination is a common problem for students. Many believe procrastination may keep otherwise competent students from succeeding. However, the most effective interventions for procrastination are resource-intensive---providing supplemental training or courses in study skills and self-regulation. These techniques do not scale to large courses. This paper investigates three new classroom interventions designed to be low-cost and low-effort to implement. Reflective writing assignments ask students to reflect on how their time management choices affect their work. Project schedule sheets require students to plan out and schedule specific tasks on their projects. E-mail situational awareness alerts give students feedback on how their progress compares to others, and to expectations. 353 students over two semesters of a junior-level advanced data structures course participated in a study where these interventions were investigated. While neither reflective writing assignments nor schedule sheets produced any significant effect, e-mail alerts were associated with both significantly reduced rates of late program submissions, and increased rates of early program submissions. As a result, this intervention shows promise for further investigation as a potential strategy for reducing late submissions among students.", "authors": [{"name": "Clfford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Joshua Martin", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["self-regulation", "scheduling", "procrastination", "e-mail alerts", "schedule sheets", "self-efficacy"]}, {"title": "A Teaching System to Learn Programming: the Programmer's Learning Machine", "link": "https://dl.acm.org/doi/10.1145/2729094.2742626", "abstract": "The Programmer's Learning Machine (PLM) is an interactive exerciser for learning programming and algorithms. Using an integrated and graphical environment that provides a short feedback loop, it allows students to learn in a (semi)-autonomous way. This generic platform also enables teachers to create specific programming microworlds that match their teaching goals. This paper discusses our design goals and motivations, introduces the existing material and the proposed microworlds, and details the typical use cases from the student and teacher point of views.", "authors": [{"name": "Martin Quinson", "affiliation": "Universit\u00e9 de Lorrain, Inria, CNRS, Nancy, France"}, {"name": "G\u00e9rald Oster", "affiliation": "Universit\u00e9 de Lorraine, Inria, CNRS, Nancy, France"}], "tags": ["education", "microworlds", "tools", "programming"]}, {"title": "Introducing Formal Methods via Program Derivation", "link": "https://dl.acm.org/doi/10.1145/2729094.2742628", "abstract": "Existing attempts towards including formal methods in introductory programming courses focus on introducing program verification tools. When using the verification tools, there is no structured help available to the students in the actual task of implementing the program, except for the hints provided by the failed proof obligations. In contrast, in the correct-by-construction programming methodology, programs are incrementally derived from their specifications. By restricting our attention to program derivation, we have identifed a small core of the formal method concepts that can easily be taught in the first two years of a computing curricula. Based on our learning from multiple years of paper and pencil based teaching, we have developed a programming assistant tool that addresses several of the issues faced by the students in the manual program derivation. The tool ensures that the most common students' error of performing incorrect proofs does not happen.", "authors": [{"name": "Om Damani", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}, {"name": "Dipak L. Chaudhari", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}], "tags": ["calculational style", "correct by construction", "teaching formal methods"]}, {"title": "Task-Adapted Concept Map Scaffolding to Support Quizzes in an Online Environment", "link": "https://dl.acm.org/doi/10.1145/2729094.2742634", "abstract": "This paper investigates the effect of different forms of concept maps as scaffolding techniques to support answering quizzes in an online learning environment. Concept maps which represent a course topic have being utilised as a scaffolding technique for learning the subject matters and problem solving. However, due to the typical amount of information presented in the topic concept maps, learners might feel overwhelmed, reducing their motivation and increasing the learners' disorientation. In order to overcome this issue, a study was conducted with 59 undergraduates of a Software Engineering course to measure the effect of different forms of concept maps on learning. The study obtained statistically significant results when using concept maps adapted to given quizzes (known as task-adapted concept maps). Students' reflections collected through a questionnaire were very positive towards task-adapted concept maps as a scaffolding technique.", "authors": [{"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Thushari Atapattu", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Nickolas Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}], "tags": ["lecture slides", "concept map", "scaffolding", "quizzes", "meaningful learning"]}, {"title": "A New Approach To Teaching Red Black Tree", "link": "https://dl.acm.org/doi/10.1145/2729094.2742624", "abstract": "Red black trees are considered an important data structure and students can find it to be challenging and difficult to learn. This paper describes our new approach, the granularity approach, to teaching the top-down insertion algorithm for red black trees. Past approaches have focused on teaching the mechanics of applying the rules (color flip, single rotation and double rotation). The new approach is based on the hypothesis that students have more difficulty selecting the correct rule than in applying a selected rule. Our approach focuses on helping students learn how to correctly select focuses on helping students learn how to correctly select the rules to be applied. We supplement classroom lectures with an intelligent tutoring system that incorporates our approach. The approach and the tutoring system were used and evaluated in a small data structures class in the fall semester of 2014. The early results indicate that our approach and tutoring system are effective at helping students learn the top-down insertion algorithm.", "authors": [{"name": "Franceska Xhakaj", "affiliation": "Lafayette College, Easton, PA, USA"}, {"name": "Chun W. Liew", "affiliation": "Lafayette College, Easton, PA, USA"}], "tags": ["balanced trees", "red black trees"]}, {"title": "Enriching a Course with Web Resources: a Case Study", "link": "https://dl.acm.org/doi/10.1145/2729094.2742601", "abstract": "The web offers a lot of resources that might be useful in higher education. This paper describes the experiences with a course that offers a lot of links to web resources. These resources are meant as enriching existing content and are announced as optional. The context is distance education. Through a survey we gained insight into the actual use of the web resources and in the appreciation of the different types of resources. Findings indicate that students differed greatly in their actual use of resources and also in their preferences. Many students preferred resources that could make them study efficiently, such as videos with summaries of subject matter or explanations of hard topics. Students benefitted from links to web resources that go together with relevant information about the resource, in order to be able to make sensible decisions whether to access a resource or not.", "authors": [{"name": "Herman Koppelman", "affiliation": "University of Twente, Enschede, Netherlands"}], "tags": ["open educational resources (OER)", "web resources", "massive open online course (MOOC)", "distance learning"]}, {"title": "Classroom Versus Screencast for Native Language Learners: Effect of Medium of Instruction on Knowledge of Programming", "link": "https://dl.acm.org/doi/10.1145/2729094.2742618", "abstract": "Students, who study in their native language in K-12 and go on to do their undergraduate education in English, have difficulty in acquiring programming knowledge. Solutions targeted towards improving their English proficiency take time, while those that continue with native language in the classroom limit the students' ability to compete in a global market. Another solution could be the use of video-based instructional material to empower a student for self-paced learning. In this paper, we present a comparative study of classroom instruction versus self-paced screencasts for native language learners' acquisition of programming concepts. We conducted four introductory programming workshops, each of six days duration. Two workshops were classroom based, one having Hindi (native language) as the medium of instruction and other in English. Two other workshops were screencast based, again one in Hindi and one in English. We measured differences between the groups using a post-test, across different content types such as fact, concepts and process. We found that when medium of instruction is different from language of K-12 instruction, there is an adverse impact on learning. However, when self-paced screencast is used instead of classroom environment, there is a statistically significant improvement in performance. Our work informs the choice of MoI and choice of environment for native language learners.", "authors": [{"name": "Yogendra Pal", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}, {"name": "Sridhar Iyer", "affiliation": "Indian Institute of Technology Bombay, Mumbai, India"}], "tags": ["native language instruction", "computer programming education", "screencast"]}, {"title": "Supporting Diverse Novice Programming Cohorts through Flexible and Incremental Visual Constructivist Pathways", "link": "https://dl.acm.org/doi/10.1145/2729094.2742609", "abstract": "Novice programmers rely mainly on formative assignments to develop their problem solving skills. Such assignments can be made more engaging by structuring them into visual tasks with instant feedback. Constructivist theory however, suggests such tasks can facilitate learning only if they are designed considering student mental models. Designing such tasks is difficult given the diversity of students in introductory programming courses. This paper presents a flexible and incremental visual constructivist model that enables different pathways for individual students. Formative and summative evaluations based on assignment tasks suggest such an approach can help improve learning outcomes and student satisfaction significantly even when students have varying cognitive abilities.", "authors": [{"name": "Margaret Hamilton", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Charles Thevathayan", "affiliation": "RMIT University, Melbourne, Australia"}], "tags": ["constructivism", "visualisation", "motivation", "diversity in the classroom", "learning programming"]}, {"title": "Perseverance Measures and Attainment in First Year Computing Science Students", "link": "https://dl.acm.org/doi/10.1145/2729094.2742625", "abstract": "We investigate the link between concepts of perseverance such as conscientiousness and grit, and the academic attainment of first year computing students. We review the role that perseverance plays in learning models, as well as describing the trait of conscientiousness in the Five Factor Model of personality. We outline research that links this trait with academic success, before focussing on more recent, narrower conceptualisations of perseverance such as academic tenacity and grit. We describe one of the questionnaire tools that have been used to assess the construct of grit. We give details of an investigation that looked for correlations between student responses to Duckworth's Grit Survey, the Big Five Inventory (BFI) Personality Survey and summative attainment scores in a first year programming course. The results suggest a weak but significant correlation between conscientiousness, grit and programming achievement. We discuss these results as well as the limitations of the method used. Finally, we make some observations about the importance of these concepts in Computer Science education and outline further work in this area.", "authors": [{"name": "Roger McDermott", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "\u00c5sa Cajander", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "Mats Daniels", "affiliation": "Uppsala University, Uppsala, Sweden"}], "tags": ["personality traits", "programming", "conscientiousness", "grit", "perseverance"]}, {"title": "Initiatives to Increase Engagement in First-Year ICT", "link": "https://dl.acm.org/doi/10.1145/2729094.2742629", "abstract": "There is widespread concern about lack of student engagement in Information and Communication Technology (ICT) courses and the influence of this on learning outcomes, retention, and the student experience overall. Lack of engagement is particularly concerning for first-year students, who are developing their study behaviours for the remainder of their degree programs. This study seeks to report on the myriad of current initiatives in Australian universities to increase ICT student engagement. This is explored for both in-class teaching innovations and the support structures with which students interface academically and administratively. The study draws upon data collected from interviews of 30 academics involved with the design and delivery of the first-year learning experience of ICT students in 25 Australian universities. Analysis of this data has provided a comprehensive overview of current initiatives to address student engagement. These covered a range of academic and non-academic aspects of the student experience. Our findings highlight the unique challenges that our first-year ICT students face and we recommend areas for further investigation.", "authors": [{"name": "Amali Weerasinghe", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Matthew Butler", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Katrina Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Michael Morgan", "affiliation": "Monash University, Melbourne, Australia"}], "tags": ["student engagement", "CS"]}, {"title": "Solving Code-tracing Problems and its Effect on Code-writing Skills Pertaining to Program Semantics", "link": "https://dl.acm.org/doi/10.1145/2729094.2742587", "abstract": "An earlier study had found that solving code tracing problems helped improve code writing skills of students. But, given the instruments used in the earlier study, the improvement in code writing pertained primarily to language syntax. A follow-up within-subjects controlled study was conducted to investigate whether solving code tracing problems could help improve code writing skills pertaining to the semantics of a program. In the study, students were asked to write code for a control and a test problem both before and after a problem-solving session on code tracing. Increase in the score from pre-quiz to post-quiz was treated as improvement in code writing attributable to code tracing. Repeated measures ANOVA was used to analyze the data collected over four semesters. A statistically significant improvement in code writing skills pertaining to program semantics was observed on the test problems, but not on control concepts in the control problems. The improvement in code-writing skills as they pertain to program semantics accrued to the students who scored 90% or more on code-tracing problems in this study. Finally, the transfer in learning from code-tracing activities to code-writing skills may be near as well as far.", "authors": [{"name": "Amruth N. Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["code-reading", "code-tracing", "problem-solving", "code-writing"]}, {"title": "An Incremental Hint System For Automated Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/2729094.2742607", "abstract": "The advent of Massive Open Online Courses makes it essential to develop tools and techniques that automatically support computer science students in solving programming assignments. Complementing existing tools for automatically checking the correctness of students' programs, we have developed and evaluated an incremental hint system for programming exercises. The hint system displays, upon request from a student, a series of hints on how to approach a solution. The hints are created in advance from the source code of the exercise's reference solution using our hint generation tool. This tool can run in fully automatic mode, where hints reveal more and more parts of the solution code; in manual mode, where teachers can customize hints by annotating the input source code; and in a combination of the two modes. We evaluated the hint system throughout our Introduction to Programming course which provides a companion online course. The findings suggest that students who needed assistance with an exercise used the hint system and found it helpful to guide them through the process of building a solution.", "authors": [{"name": "Marco Piccioni", "affiliation": "ETH, Zurich, Switzerland"}, {"name": "Durica Nikoli\u0107", "affiliation": "ETH, Zurich, Switzerland"}, {"name": "Bertrand Meyer", "affiliation": "ETH, Zurich, Switzerland, and Politecnico di Milano, Italy, and Innopolis University, Kazan, Russia "}, {"name": "Paolo Antonucci", "affiliation": "ETH, Zurich, Switzerland"}, {"name": "Christian Estler", "affiliation": "ETH, Zurich, Switzerland"}], "tags": ["pedagogy", "MOOC", "spoc", "CS1"]}, {"title": "Global Perspectives on Assessing Educational Performance and Quality", "link": "https://dl.acm.org/doi/10.1145/2729094.2754843", "abstract": "Educational performance indicators are being considered or implemented in different ways by institutions and governments in different countries. What impact is this likely to have on computing education?", "authors": [{"name": "Alison Clear", "affiliation": "Eastern Institute of Technology, Auckland, New Zealand"}, {"name": "Cary Laxer", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, USA"}, {"name": "Ernesto Cuadros-Vargas", "affiliation": "San Pablo Catholic University, Arequipa, Peru"}, {"name": "Amruth Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, USA"}, {"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Janet Carter", "affiliation": "University of Kent, Canterbury, United Kingdom"}], "tags": ["quality assurance", "educational performance indicators"]}, {"title": "Using Personal Robots and Myro/Java in the First Computer Science Course", "link": "https://dl.acm.org/doi/10.1145/2729094.2754864", "abstract": "Myro/Java is an implementation of the Python-based Myro API for controlling personal robots used in introductory Computer Science courses. This paper describes the author's experience using Myro/Java in his Computer Science 1 courses over eight semesters.", "authors": [{"name": "Douglas E. Harms", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["java", "personal robots", "IPRE", "CS1 curricula"]}, {"title": "A Numpy-First Approach to Teaching CS1 to Natural Science Students", "link": "https://dl.acm.org/doi/10.1145/2729094.2754861", "abstract": "Numpy (Numerical Python) and Scipy (Scientific Python) are Python libraries for doing numerical/scientific work that are popular with research scientists, as they allow for matrix-based computation in Python. I report on my initial experiences teaching a CS1 in Python to natural/social science students using a \"numpy-first\" approach. Students were taught about numpy arrays and matrix manipulations before learning lists and loops. I found this approach helped this audience appreciate the relevance of CS to their own fields, and possibly better learn topics such as logic and file I/O.", "authors": [{"name": "Elizabeth Patitsas", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["CS1", "non-majors", "computer science education"]}, {"title": "RAPT: Relational Algebra Parsing Tools", "link": "https://dl.acm.org/doi/10.1145/2729094.2754862", "abstract": "Many database courses rely on relational algebra (RA) to provide a theoretical foundation for database query languages such as SQL. However, few tools exist to support students in learning RA. To fill this need, we created RAPT. RAPT uses a syntactic and semantic understanding of RA to transform input statements into a variety of outputs, including LATEX formatted queries, parse tree diagrams, and executable SQL statements. The translation to SQL is particularly important, as it enables the creation of automatically tested exercises and allows students to view the result of executing an RA statement. RAPT-supported exercises have been integrated into PCRS, a system for creating online learning modules, and deployed to a third year databases course with over 350 students.", "authors": [{"name": "Diane Horton", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Noel D'Souza", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Olessia Karpova", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}], "tags": ["courseware", "SQL", "relational algebra"]}, {"title": "Websheets: A Templated Online Coding Exercise System", "link": "https://dl.acm.org/doi/10.1145/2729094.2754863", "abstract": "Websheets is an online exercise system providing rigorous \"fill-in-the-blank\" programming exercises. It allows an instructor to quickly create exercises by writing a correct reference solution and indicating the parts to be blanked out. It is open-source and has been used successfully in Java and C++ by a half-dozen instructors and over 1000 students.", "authors": [{"name": "David Alexander Griffith Pritchard", "affiliation": "University of Southern California, Los Angeles, CA, USA"}], "tags": ["C++", "open source", "automatic assessment", "java", "CS1"]}]