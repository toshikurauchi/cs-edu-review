[{"title": "Statistical Modeling to Better Understand CS Students", "link": "https://dl.acm.org/doi/10.1145/2899415.2925470", "abstract": "While educational data mining has often focused on modeling behavior at the level of individual students, we consider developing statistical models to give us insight into the dynamics of student populations. In this talk, we consider two case studies in this vein. The first involves analyzing the evolution of gender balance in a college computer science program, showing that focusing on percentages of underrepresented groups in the overall population may not always provide an accurate portrayal of the impact of various program changes. We propose a new statistical model based on Fisher's Noncentral Hypergeometric Distribution that better captures how program changes are impacting the dynamics of gender balance in a population, especially in the case where the overall population is rapidly increasing (as has been the case in CS in recent years). Our second study looks at the performance of student populations in an introductory college programming course during the past eight years to better understand the evolving mix of students' abilities given the rapid growth in the number of students taking CS courses. Often accompanying such growth is a concern from faculty that the additional students choosing to pursue computing may not have the same aptitude for the subject as was seen in prior student populations. To directly address this question, we present a statistical analysis of students' performance using mixture modeling. Importantly, in this setting many variables that would normally confound such a study are directly controlled for. We find that the distribution of student performance during this period, as reflected in their programming assignment scores, remains remarkably stable despite the large growth in course enrollments. The results of this analysis also show how conflicting perceptions of students' abilities among faculty can be consistently explained.\nThe presentation includes work done jointly with Sarah Evans, Chris Piech, and Katie Redmond.", "authors": [{"name": "Mehran Sahami", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["gender balance", "student performance", "introductory courses", "educational data mining"]}, {"title": "Professional Competencies for Real?: A Question about Identity!", "link": "https://dl.acm.org/doi/10.1145/2899415.2925471", "abstract": "How students develop professional competencies has been an interest for me for decades. There are several aspects to this issue that I have addressed, e.g. what are professional competencies, how can their development of them be supported in educational settings, what motivates a student to put in an effort towards developing a competency, how can they be assessed, how can progression of professional competencies be handled in education curricula, and how can development of professional competencies be specified in a course description. These are among the more prominent issues that have been on my mind. In this work I have noticed a huge \"gap\" between how professional competencies are expressed as important learning outcomes of degree programs and the almost zero link to how this development should be done at the course instance level. This \"gap\" is frustrating for me and a source for thoughts regarding how to bridge that \"gap\". Work in our research group UpCERG (Uppsala Computing Education Research Group, www.it.uu.se/research/group/upcerg) has lately included studying issues related to identity, initially mostly the identity of different student cohorts, but now also that of teachers and education leaders. This research provides valuable insights towards causes for the \"gap\". That is, the slow closing of the \"gap\" can be understood by placing this in the context of the identity of the teachers (especially) and the students. It is how professional competencies are valued in relation to \"pure\" subject knowledge among these identities that provides severe obstacles to inclusion of development of professional competencies in a meaningful way at the course instance level. This is despite much of the previous work regarding issues related to developing professional competencies in educational settings, as those mentioned above.\nI will address how I view the identities of teachers and students interfering with integration of development of professional competencies in degree programs. I will give examples from our research and my experience that illustrates the difficulties and outline some potential interventions that might lead to changes. My hope is that this talk will result in many fruitful discussions, both at the talk and afterwards.", "authors": [{"name": "Mats Daniels", "affiliation": "Uppsala University, Uppsala, Sweden"}], "tags": ["student competencies", "student and teacher identities"]}, {"title": "The best Way to Unblock the Pipeline in CS is by Getting Everyone to Code in Schools: A debate", "link": "https://dl.acm.org/doi/10.1145/2899415.2899418", "abstract": "Many believe that the push to increase the number of skilled computer scientists must be a multi-pronged approach and be institutionalized at all levels of education. Some federal and local governments are requiring that all students become proficient in technical areas in primary and secondary schooling. Will the call for all schools to teach every student coding be the magic bullet that unblocks the computing pipeline? Is adding another core subject to an already crowded curricula the answer? Are schools ready? It is noted that there is no universal computer science/coding curriculum for teachers to follow, some teachers don't have the skills or the enthusiasm to do this, not all students can think logically so why try to force them? In the words of Einstein \"Everybody is a genius. But if you judge a fish by its ability to climb a tree, it will live its whole life believing that it is stupid\".", "authors": [{"name": "Catherine Lang", "affiliation": "La Trobe Unversity, Melbourne, Australia"}, {"name": "Reyyan Ayfer", "affiliation": "Bilkent University, Ankara, Turkey"}, {"name": "MaryAnne Egan", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Annemieke Craig", "affiliation": "Deakin University, Geelong, Australia"}], "tags": ["computing curricula", "teacher technical self-efficacy", "gender diversity"]}, {"title": "Seven Semesters of Android Game Programming in CS2", "link": "https://dl.acm.org/doi/10.1145/2899415.2899470", "abstract": "Mobile game development is a topic that interests many computer science students. The author included an open-ended Android game development project as the final project in a CS2 course for four years. Over 7 semesters, 141 students produced 87 different mobile games, of which 29 were published on the Google Play store. This paper discusses the experience of how this Android project was integrated with the course, as well as the projects themselves, and examines the factors that led to successful student submissions.", "authors": [{"name": "Michael David Black", "affiliation": "Bridgewater State University, Bridgewater, MA, USA"}], "tags": ["cs2", "android"]}, {"title": "Using Interactive Exercise in Mobile Devices to Support Evidence-based Teaching and Learning", "link": "https://dl.acm.org/doi/10.1145/2899415.2899467", "abstract": "To improve student's class experience, the use of mobile devices has been steadily increasing. However, such use of mobile learning environments in the class is mostly static in nature through content delivery or multiple choice and true/false quiz taking. In CS courses, we need learning environments where students can interact with the problem in a hands-on-approach and instructor can assess their learning skills in real-time with problems having different degree of difficulty. To facilitate such interactive problem solving and real-time assessment using mobile devices, a comprehensive backend system is necessary. This paper presents one such system, named Mobile Response System (MRS) software, associated interactive problem-solving activities, and lessons learned by using it in the CS classrooms. MRS provides instructor with the opportunity of evidence-based teaching by allowing students to perform interactive exercises in their mobile devices with different learning outcomes and by getting an instant feedback on their performance and mental models. MRS is easy-to-use, extensible and can render interactive exercises developed by third-party developers. The student performance data shows its effectiveness in increasing student understanding of difficult concepts and the overall perception of using the software was very positive.", "authors": [{"name": "Clay Gloster", "affiliation": "NC A&T State University, Greensboro, NC, USA"}, {"name": "James Etim", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Debzani Deb", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Mohammad Muztaba Fuad", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}], "tags": ["stem learning", "improving classroom teaching", "mobile technology.", "interactive learning environments", "educational technology system"]}, {"title": "Student Concerns Regarding Transition into Higher Education CS", "link": "https://dl.acm.org/doi/10.1145/2899415.2909581", "abstract": "This paper discusses a study where 249 students from 18 secondary schools around Scotland who were on the verge of applying to study Computing Science at a higher education institution were surveyed on their concerns about the upcoming transition. Preliminary conclusions from this work point to the fact that this transition process is one that seems to evolve with the student as they progress through their education, and as such, should be treated differently at various stages within that process.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Angela A. Siegel", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}], "tags": ["student concerns", "student transitions", "computer science education", "secondary schools", "student issues", "higher education", "quantitative survey"]}, {"title": "Interdisciplinary and International Game Projects for Creative Learning", "link": "https://dl.acm.org/doi/10.1145/2899415.2899448", "abstract": "In traditional computer science courses, students do not often get the chance to experience an entire project cycle, starting from the idea development stage and ending with the final release of a product together with collaborators from different disciplines. Developing a game gives learners the possibility to experience an entire development cycle, to learn how to work in a team, and to learn new skillsets required to create games. Students can profit even more from an interdisciplinary and international setup. In this paper, we describe a first pilot of an interdisciplinary and international student game project, during which students from different backgrounds, and with different nationalities and different learning expectations can work together to develop games. We report on a first pilot with 24 students studying different subjects, such as computer science, law, or biology, in two different countries. First results show that such programs are highly engaging for students, can boost their employability, have a high learning outcome, and raise their interest in international collaborations.", "authors": [{"name": "Johanna Pirker", "affiliation": "Graz University of Technology, Graz, Austria"}, {"name": "Daphne Economou", "affiliation": "University of Westminster, London, United Kingdom"}, {"name": "Christian G\u00fctl", "affiliation": "Graz University of Technology, Graz, Austria"}], "tags": ["collaborative learning", "game development", "computer science education", "creative learning"]}, {"title": "Teaching Programming: Understanding Lecture Capture YouTube Analytics", "link": "https://dl.acm.org/doi/10.1145/2899415.2899421", "abstract": "The proliferation in the use of video lecture capture in universities worldwide presents an opportunity to analyse video watching patterns in an attempt to quantify and qualify how students engage and learn with the videos. It also presents an opportunity to investigate if there are similar student learning patterns during the equivalent physical lecture. The goal of this action based research project was to capture and quantitatively analyse the viewing behaviours and patterns of a series of video lecture captures across several university Java programming modules. It sought to study if a quantitative analysis of viewing behaviours of Lecture Capture videos coupled with a qualitative evaluation from the students and lecturers could be correlated to provide generalised patterns that could then be used to understand the learning experience of students during videos and potentially face to face lectures and, thereby, present opportunities to reflectively enhance lecturer performance and the students' overall learning experience. The report establishes a baseline understanding of the analytics of videos of several commonly used pedagogical teaching methods used in the delivery of programming courses. It reflects on possible concurrences within live lecture delivery with the potential to inform and improve lecturing performance.", "authors": [{"name": "Neil Anderson", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}, {"name": "Philip Hanna", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}, {"name": "Aidan McGowan", "affiliation": "Queen's University Belfast, Belfast, United Kingdom"}], "tags": ["youtube analytics", "programming", "java", "video lecture capture"]}, {"title": "Towards a Systematic Review of Automated Feedback Generation for Programming Exercises", "link": "https://dl.acm.org/doi/10.1145/2899415.2899422", "abstract": "Formative feedback, aimed at helping students to improve their work, is an important factor in learning. Many tools that offer programming exercises provide automated feedback on student solutions. We are performing a systematic literature review to find out what kind of feedback is provided, which techniques are used to generate the feedback, how adaptable the feedback is, and how these tools are evaluated. We have designed a labelling to classify the tools, and use Narciss' feedback content categories to classify feedback messages. We report on the results of the first iteration of our search in which we coded 69 tools. We have found that tools do not often give feedback on fixing problems and taking a next step, and that teachers cannot easily adapt tools to their own needs.", "authors": [{"name": "Hieke Keuning", "affiliation": "Open University, Heerlen, Netherlands"}, {"name": "Bastiaan Heeren", "affiliation": "Open University, Heerlen, Netherlands"}, {"name": "Johan Jeuring", "affiliation": "Utrecht University, Utrecht, Netherlands"}], "tags": ["systematic literature review", "programming tools", "automated feedback", "learning programming"]}, {"title": "Automatic Grading of Programming Exercises using Property-Based Testing", "link": "https://dl.acm.org/doi/10.1145/2899415.2899443", "abstract": "We present a framework for automatic grading of programming exercises using property-based testing, a form of model-based black-box testing. Models are developed to assess both the functional behaviour of programs and their algorithmic complexity. From the functional correctness model a large number of test cases are derived automatically. Executing them on the body of exercises gives rise to a (partial) ranking of programs, so that a program A is ranked higher than program B if it fails a strict subset of the test cases failed by B. The model for algorithmic complexity is used to compute worst-case complexity bounds. The framework moreover considers code structural metrics, such as McCabe's cyclomatic complexity, giving rise to a composite program grade that includes both functional, non-functional, and code structural aspects. The framework is evaluated in a course teaching algorithms and data structures using Java.", "authors": [{"name": "John Hughes", "affiliation": "Chalmers University of Technology and Quviq AB, G\u00f6teborg, Sweden"}, {"name": "Lars-\u00c5ke Fredlund", "affiliation": "Universidad Polit\u00e9cnica de Madrid, Madrid, Spain"}, {"name": "Clara Benac Earle", "affiliation": "Unversidad Polit\u00e9cnica de Madrid, Madrid, Spain"}], "tags": ["automated assessment", "java", "testing"]}, {"title": "Automated Feedback Framework for Introductory Programming Courses", "link": "https://dl.acm.org/doi/10.1145/2899415.2899440", "abstract": "Using automated grading tools to provide feedback to students is common in Computer Science education. The first step of automated grading is to find defects in the student program. However, finding bugs in code has never been easy. Comparing computation results using a fixed set of test cases is still the most common way to determine correctness among current automated grading tools. It takes time and effort to design a good set of test cases that can test the student code thoroughly. In practice, tests used for grading are often insufficient for accurate diagnosis.\nIn this paper, we present our utilization of industrial automated testing on student assignments in an introductory programming course. We implemented a framework to collect student codes and apply industrial automated testing to their codes. Then we interpreted the results obtained from testing in a way that students can understand easily. We deployed our framework on five different introductory C programming assignments here at the University of Illinois at Urbana-Champaign.The results show that the automated feedback generation framework can discover more errors inside student submissions and can provide timely and useful feedback to both instructors and students. A total of 142 missed bugs were found within 446 submissions. More than 50% of students received their feedback within 3 minutes of submission.", "authors": [{"name": "Steven S. Lumetta", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Bei Pang", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Jianxiong Gao", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}], "tags": ["concolic testing", "computer science education", "auto grader"]}, {"title": "A \"Multiple Executions\" Technique of Visualization", "link": "https://dl.acm.org/doi/10.1145/2899415.2899451", "abstract": "Algorithm visualizations can be structured or presented in different ways: animation, multiple algorithms, etc. In this paper, we present a presentation format that has hardly been explored, namely to display simultaneously visualizations of a given algorithm for several test cases. By similarity with other presentation formats, we call it the \"multiple executions\" technique. We illustrate this presentation format with a history-preserving graphical representation, namely recursion trees. Multiple executions composed of recursion trees provide at a glance a view of the behavior of an algorithm in different situations. We illustrate their application to a number of issues in algorithm courses. We also report on two evaluations conducted on the effects of structured multiple executions on students' comprehension of complex recursive algorithms. The results show some statistically significant differences on students' skills for some design tasks.", "authors": [{"name": "Antonio P\u00e9rez-Carrasco", "affiliation": "Universidad Rey Juan Carlos, Madrid, Spain"}, {"name": "Isidoro Hern\u00e1n-Losada", "affiliation": "Universidad Rey Juan Carlos, Madrid, Spain"}, {"name": "J. \u00c1ngel Vel\u00e1zquez-Iturbide", "affiliation": "Universidad Rey Juan Carlos, Madrid, Spain"}], "tags": ["srec system", "multiple executions", "program visualization"]}, {"title": "Algorithms + Organization = Systems", "link": "https://dl.acm.org/doi/10.1145/2899415.2899458", "abstract": "Even though a computer science or computing-oriented de- gree is unavoidably broken into semesters and courses, we always hope that our students form a holistic picture of the discipline by the time they graduate. Yet we do not have too many opportunities to make this point in a convincing manner. This paper reports our e?orts to point out the connections between a seemingly (in the eyes of students) disconnected subset of courses in our degree requirements. In particular, we report on how we have used research papers as the glue between topics covered in our algorithms and sys- tems oriented courses (such as Organization and Computer Networks). Our assessment of the course has shown that students have not only made gains in their understanding and appreciation of meaningful intra-disciplinary connec- tions, but have also advanced in designing empirical experi- ments (mimicking the methodologies observed in the chosen papers) and reading/writing technical papers.", "authors": [{"name": "Ali Erkan", "affiliation": "Ithaca College, Ithaca, NY, USA"}, {"name": "John Barr", "affiliation": "Ithaca College, Ithaca, NY, USA"}], "tags": ["algorithms", "networks", "operating systems", "education"]}, {"title": "Systematic Development of Dynamic Programming Algorithms Assisted by Interactive Visualization", "link": "https://dl.acm.org/doi/10.1145/2899415.2899450", "abstract": "Dynamic programming is an algorithm design technique that is very difficult to learn. In this paper, we introduce an extension of the recursion visualization system SRec, intended to support some phases of the systematic development of dynamic programming algorithms: generation of recursion trees, checking redundancy in an adequate recursion tree, generation of the dependency graph associated to that recursion tree, and matching the graph to a table. These facilities require high degree of interactivity to be effective. We have successfully applied the new version of SRec to a number of dynamic programming algorithms in an algorithm course. We have also evaluated the performance of two groups of students in a recursion removal task: an experimental group using SRec and a control group using traditional means. Many of the results were similar for both groups. However, the experimental group did the task with higher confidence and was more efficient in some issues, while the control group was more persistent in one task.", "authors": [{"name": "Antonio P\u00e9rez-Carrasco", "affiliation": "Universidad Rey Juan Carlos, Madrid, Spain"}, {"name": "J. \u00c1ngel Vel\u00e1zquez-Iturbide", "affiliation": "Universidad Rey Juan Carlos, Madrid, Spain"}], "tags": ["srec", "recursion", "program visualization", "dynamic programming."]}, {"title": "Lessons Learned on Computer Science Teachers Professional Development", "link": "https://dl.acm.org/doi/10.1145/2899415.2899460", "abstract": "This paper describes an introductory Computer Science (CS) Professional Development (PD) course for K-12 teachers in Argentina that integrates pedagogical content knowledge and teacher classroom practice. We analyzed teachers' learning of what CS entails and the implementation of inquirybased programming lessons in their schools. Based on pre and post teachers surveys and classroom observations, we found that most teachers learned about the CS object of study and about fundamental programming concepts such as conditionals, loops, variables, etc. Teachers were more likely to replicate the same activities they experienced during PD workshops in their classrooms than to produce their own. Teachers who had a previous background on CS provided in-depth explanations of CS concepts to their students while other teachers superficially introduced the content knowledge. We describe PD activities and characteristics that could explain teachers' learning and incorporation of programming lessons. Findings imply that a PD program that integrates pedagogical content knowledge and teachers classroom practice can effectively improve inquiry-based CS teaching, but may be insufficient preparation for teachers with no previous background on CS.", "authors": [{"name": "Mar\u00eda Cecilia Martinez", "affiliation": "Universidad Nacional de C\u00f3rdoba, Cordoba, Argentina"}, {"name": "Marco Moresi", "affiliation": "Universidad Nacional de C\u00f3rdoba, Cordoba, Argentina"}, {"name": "Luciana Benotti", "affiliation": "Universidad Nacional de C\u00f3rdoba, Cordoba, Argentina"}, {"name": "Marcos J. Gomez", "affiliation": "Universidad Nacional de C\u00f3rdoba, Cordoba, Argentina"}], "tags": ["experimental evaluation", "computer science (cs) professional development (pd)", "computer science k-12 outreach"]}, {"title": "Out of the Comfort Zone: Embedding Entrepreneurship in a Cohort of Computer Science Doctoral Students", "link": "https://dl.acm.org/doi/10.1145/2899415.2899469", "abstract": "The study of entrepreneurship, and widening debate on providing Computer Science (CS) students with skills for employment, has led to a rise in programmes offering additional skills including entrepreneurship, presentation skills and communication skills. This paper provides an early stage reflection of the design, development and delivery of a bespoke entrepreneurship module, designed to empower students and provide them with skills to build successful startup businesses. This course was designed specifically for Computer Science and Mathematics students, within a cohort-learning environment. Students were guided through the principles of the Ostervalder Business Model Canvas, allocated into groups and asked to devise a business idea, iterating this throughout an eight week period. Students were provided with support from teaching staff alongside weekly coaching from successful entrepreneurs and flipped classroom tuition. The teaching methods employed in the Professional Skills course are not traditionally used in Computer Science education and students reported a number of challenges in completing the module. These included team dynamics, time and investment required and the requirement for engagement with stakeholders. All of these issues highlight the unique nature and practical application of the course material, presenting the opportunity for reflection of the success and impact of the module. In addition, the tutors of the course reflect on their experience of delivering the course for the first time, and their response to student feedback. We also provide advice on reproducing the course.", "authors": [{"name": "Matthew Forshaw", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}, {"name": "Oonagh McGee", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}, {"name": "Steve Caughey", "affiliation": "Arjuna Technologies Ltd, Newcastle upon Tyne, United Kingdom"}, {"name": "Barry Hodgson", "affiliation": "Newcastle University, Newcastle upon Tyne, United Kingdom"}], "tags": ["startups", "industry engagement", "entrepreneurship"]}, {"title": "Using a Student Consultant in a Computer Science Course: An Experience Report", "link": "https://dl.acm.org/doi/10.1145/2899415.2899434", "abstract": "This paper describes the experience of using a student consultant in a sophomore level computer science course. A student consultant is a student who is not enrolled in the course, but attends selected class sessions and provides feedback on the in-class experience to the instructor, with the goal of improving some aspect of the course. In this paper we describe our experience with such a program from the point of view of both the instructor and the student consultant. We provide our views of the experience with the dual goals of making student consultant programs better known within the computer science education community, and to provide guidance and insight to those who may wish to use such a program themselves.", "authors": [{"name": "Eli Rose", "affiliation": "Oberlin College, Oberlin, OH, USA"}, {"name": "Cynthia Taylor", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["instructor feedback", "student consultant"]}, {"title": "Using Student Performance to Assess CS Unplugged Activities in a Classroom Environment", "link": "https://dl.acm.org/doi/10.1145/2899415.2899465", "abstract": "Computer Science Unplugged activities have been shown to be successful in increasing student interest in computer science when used in outreach and after school events. There is less research available on adapting these extra-curricular activities for use in a classroom setting, where there are more students and the activities must support educational goals, not just changes in attitude. We describe our work in updating several existing CS Unplugged activities as well as introducing some new activities for use in an American middle school classroom. One challenge when using CS Unplugged activities is to determine what, if anything, students are learning. In this paper we detail one approach that links the updated activities to computational thinking skills, then incorporates worksheets where students illustrate their understanding.", "authors": [{"name": "Cyndi Rader", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Tracy Camp", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Brandon Rodriguez", "affiliation": "Colorado School of Mines, Golden, CO, USA"}], "tags": ["classroom assessment", "computational thinking", "cs unplugged"]}, {"title": "Interactive Exercises for Teaching Logic Circuits", "link": "https://dl.acm.org/doi/10.1145/2899415.2899445", "abstract": "Logic circuits are a central concept in understanding how computers and electronics work underneath. While there are educational, web-based systems for visualizing and building circuits, few systems exist which are capable of providing automatically assessed exercises with visual feedback on the topic. In this paper, we describe the lechef library for providing exercises on logic circuits. The library supports two types of exercises: 1) giving students a logic circuit and the input to the circuit asking them to give the input and output values for each gate in the circuit, and 2) giving students a truth table of the wanted circuit and requiring them to construct a circuit fulfilling the requirements. Furthermore, we explain how we integrated it into the ViLLE learning environment and used it on our introductory computer science course. We also report on our initial findings on student experiences on using the exercises as well as their results. We believe the system and our experiences provide valuable feedback to other members of the community on how and why to use such exercises.", "authors": [{"name": "Mikko-Jussi Laakso", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Ville Karavirta", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Rolf Lind\u00e9n", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Einari Kurvinen", "affiliation": "University of Turku, Turku, Finland"}], "tags": ["educational technology", "logic circuits", "automatic assessment"]}, {"title": "An Empirical Analysis of Video Viewing Behaviors in Flipped CS1 Courses", "link": "https://dl.acm.org/doi/10.1145/2899415.2899468", "abstract": "Video-enabled education is becoming increasingly popular in support of active learning in CS education. Although present work on both video based learning and flipped classrooms emphasize the necessity for students to view the materials, there is a lack of detailed, objective data on student viewing behaviors. This article aims to use fine grain student log data from TrACE, an asynchronous media platform, to understand student viewing behaviors in three sections of a flipped CS1 course taught by the same instructor. We find that students often have low compliance with video viewing expectations in one section, and that re-watching course content does not often occur. Watching course content earlier has a significant correlation to course performance, and other behaviours correlate when compliance is not enforced via course requirements. These findings highlight concerns for flipped classroom researchers and suggest methods instructors can use to improve student viewing behaviors.", "authors": [{"name": "Nicholas R. Stepanek", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}, {"name": "Robert Fulkerson", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}, {"name": "Suzanne L. Dazo", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}, {"name": "Brian Dorn", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}], "tags": ["online video usage", "flipped courses"]}, {"title": "Introducing Computational Thinking to K-5 in a French Context", "link": "https://dl.acm.org/doi/10.1145/2899415.2899439", "abstract": "Computational Thinking (CT) is beginning to be accepted as one of the fundamental 21st century skills for everyone. Curricula and environments are being developed for different group ages, from kindergarten to university, in several countries. As part of this global tendency, France has recently taken political decisions to integrate CT Education (CTE) in the mandatory national curriculum. However, many challenges remain until a full implementation is achieved. In this paper we report on a partnership between a university, local elementary schools and the county Ministry of Education (MoE), and on an exploratory project of introducing CT to K-5 students. This project has provided us with valuable feedback on the specifics of integrating CT in a national curriculum and the creation of a partnership and a community. These lessons will be used in the following stage of scaling up to more elementary schools in the entire county, but also addressing other school levels such as kindergarten, middle school and high school.", "authors": [{"name": "Vanea Chiprianov", "affiliation": "University of Pau & Pays Adour, Mont de Marsan, France"}, {"name": "Laurent Gallon", "affiliation": "University of Pau & Pays Adour, Mont de Marsan, France"}], "tags": ["elementary school", "computer science education", "teacher training", "community of practice", "curriculum"]}, {"title": "Back to School: Computer Science Unplugged in the Wild", "link": "https://dl.acm.org/doi/10.1145/2899415.2899442", "abstract": "We report on case studies of using Computer Science Unplugged material as an alternative teaching method for computer science. The scope and target audiences for these studies were determined based upon reported classroom use of \"unplugged\" material by teachers. Our studies revalidate previous findings across multiple institutions and a broader student population and shows that, at least for the scenarios studied, \"unplugged\" activities are equally efficient compared to teaching using textbooks or interactive methods.", "authors": [{"name": "Renate Thies", "affiliation": "Cusanus-Gymnasium Erkelenz, Erkelenz, Germany"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}], "tags": ["computer science unplugged", "teaching methodology"]}, {"title": "From Alice to Python. Introducing Text-based Programming in Middle Schools", "link": "https://dl.acm.org/doi/10.1145/2899415.2899462", "abstract": "In this paper, we present our experience in designing computing curriculum for Middle School students. Computing education is becoming an important part of STEM education and several national curriculums are incorporating computing education in their core curriculums. We design a curriculum that uses Alice -- an interactive drag-and-drop interface that provides a simple interface to learn programming concepts. Once the students are comfortable in these concepts, they take Python in higher classes to learn computing concepts in the context of a text-based programming language. This study attempts to provide \"mediated transfer\" for applying concepts learned in Alice, to programming in Python. We present the results of our study in applying this curriculum in a local school.", "authors": [{"name": "Hanan Alshikhabobakr", "affiliation": "Carnegie Mellon University, Doha, Qatar"}, {"name": "Nour Tabet", "affiliation": "Al-Arqam Academy for Girls, Doha, Qatar"}, {"name": "Saquib Razak", "affiliation": "Carnegie Mellon University, Doha, Qatar"}, {"name": "Huda Gedawy", "affiliation": "Carnegie Mellon University, Doha, Qatar"}], "tags": ["computational thinking", "alice", "k-12", "computing curriculum", "python"]}, {"title": "Competition and Feedback through Automated Assessment in a Data Structures and Algorithms Course", "link": "https://dl.acm.org/doi/10.1145/2899415.2899454", "abstract": "We have investigated competitive elements and different forms of feedback through automated assessment in a Data Structures and Algorithms course. It is given at the start of the second year and has about 140 students. In 2011 we investigated the effects of introducing competitive elements utilizing automated assessment. In 2012 we investigated how feedback through automated assessment on the labs influences student's ways of working, their performance, and their relations to the examining staff. The students get immediate feedback concerning correctness and efficiency. When judged correct the assistants make sure the program also fulfill requirements such as being well structured. After the course, we investigated the students attitudes to, and experiences from, using automated assessment via a questionnaire. 80% of the students are positive and it positively influenced their ways of working. 50% said they put in more effort because of automated judging. Moreover, assessment is seen as more objective as it is executed in the exact same manner for everyone. Both of these statements are confirmed by assessing the labs from 2011 using the same automated tool as was used in 2012. Our conclusions are that feedback through automated assessment gives wanted positive effects and is perceived as positive by the students.", "authors": [{"name": "Tommy F\u00e4rnqvist", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}, {"name": "Fredrik Heintz", "affiliation": "Link\u00f6ping University, Link\u00f6ping, Sweden"}], "tags": ["competition", "automated assessment", "feedback", "data structures and algorithms"]}, {"title": "A Generic Framework for Engaging Online Data Sources in Introductory Programming Courses", "link": "https://dl.acm.org/doi/10.1145/2899415.2899437", "abstract": "This paper presents work on a code framework and methodology to facilitate the introduction of large, real-time, online data sources into introductory (or advanced) Computer Science courses. The framework is generic in the sense that no prior scaffolding or template specification is needed to make the data accessible, as long as the source uses a standard format such as XML, CSV, or JSON. The implementation described here maintains minimal syntactic overhead while relieving novice programmers from low-level issues of parsing raw data from a web-based data source. It interfaces directly with data structures and representations defined by the students themselves, rather than predefined and supplied by the library. Together, these features allow students and instructors to focus on algorithmic aspects of processing a wide variety of live and large data sources, without having to deal with low-level connection, parsing, extraction, and data binding. The library, available at http://cs.berry.edu/big-data, has been used in an introductory programming course based on Processing.", "authors": [{"name": "Nadeem Abdul Hamid", "affiliation": "Berry College, Mount Berry, GA, USA"}], "tags": ["open data", "web services", "library", "xml", "introductory cs"]}, {"title": "A STEM Incubator to Engage Students in Hands-on, Relevant Learning: A Report from the Field", "link": "https://dl.acm.org/doi/10.1145/2899415.2899461", "abstract": "This paper describes the development of a STEM Incubator program to engage students in hand-on, relevant projects that draw student interest toward computer science and other STEM fields. The program is implemented via one-credit courses allowing students to collaborate on projects in various areas (such as digital sound and music, 3D design, robotics, digital image processing, bioinformatics, and mobile and pervasive computing) and around multiple application domains (e.g. internet of things and security, apps for college campus life, 3D printing and art, wearable sensors for disabilities, and sensors and unmanned vehicles for conservation). An apprentice/leader learning environment is created to sustain student involvement in ongoing projects. The evolution of the program is reviewed, including successes and challenges. We report on the demographics of students who have participated in the program so far, and on the success in attracting enthusiastic interest, notably among female students. The STEM Incubator program, like other similar programs described in this paper, attempts to put into practice the evidence-based teaching practices in active learning that have gained credence over the past decade. The paper is of interest to those considering a similar program or wishing to compare other programs to their own.", "authors": [{"name": "V. Paul Pauca", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Pete Santago", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Jennifer Burg", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "William Turkett", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}], "tags": ["hands-on learning", "collaboration", "situated learning"]}, {"title": "ERSP: A Structured CS Research Program for Early-College Students", "link": "https://dl.acm.org/doi/10.1145/2899415.2899436", "abstract": "Research experiences for undergraduates (REUs) have many positive outcomes on students' perception of and retention in Computer Science (CS). Yet nearly all REUs are aimed at late-college students, well into a CS program. We present the Early Research Scholars Program (ERSP), a 4 quarter program designed to engage early-college (first or second year) CS students in high-quality research experiences in active research groups at a large research university. ERSP's structured course-supported group-apprentice model and its unique dual advising structure make it possible to vastly increase number of early-career CS students who participate in high-quality research experiences with little additional burden on individual faculty mentors. ERSP's focus on community building and support makes it particularly appropriate for students from groups who are traditionally underrepresented in CS. This paper reports the structure of the program and observations and learning thus-far with ERSP, with the goal of enabling others to implement this program at other large research-focused universities.", "authors": [{"name": "Shelby Thomas", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Michael Barrow", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Christine Alvarado", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}], "tags": ["diversity", "undergraduate research"]}, {"title": "Benchmarking Introductory Programming Exams: How and Why", "link": "https://dl.acm.org/doi/10.1145/2899415.2899473", "abstract": "Ten selected questions have been included in 13 introductory programming exams at seven institutions in five countries. The students' results on these questions, and on the exams as a whole, lead to the development of a benchmark against which the exams in other introductory programming courses can be assessed. We illustrate some potential benefits of comparing exam performance against this benchmark, and show other uses to which it can be put, for example to assess the size and the overall difficulty of an exam. We invite others to apply the benchmark to their own courses and to share the results with us.", "authors": [{"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, San Diego, USA"}, {"name": "Judy Sheard", "affiliation": "Monash University, Melbourne, Australia"}, {"name": "Daryl D'Souza", "affiliation": "RMIT University, Melbourne, Australia"}, {"name": "Peter Klemperer", "affiliation": "Mount Holyoke College, South Hadley, USA"}, {"name": "Juha Sorva", "affiliation": "Aalto University, Helsinki, Finland"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto Mississauga, Toronto, Canada"}, {"name": "Martijn Stegeman", "affiliation": "University of Amsterdam / Open University of the Netherlands, Ansterdam, Netherlands"}], "tags": ["benchmarking", "introductory programming", "examination"]}, {"title": "Typing Patterns and Authentication in Practical Programming Exams", "link": "https://dl.acm.org/doi/10.1145/2899415.2899472", "abstract": "In traditional programming courses, students have usually been at least partly graded using pen and paper exams. One of the problems related to such exams is that they only partially connect to the practice conducted within such courses. Testing students in a more practical environment has been constrained due to the limited resources that are needed, for example, for authentication.\nIn this work, we study whether students in a programming course can be identified in an exam setting based solely on their typing patterns. We replicate an earlier study that indicated that keystroke analysis can be used for identifying programmers. Then, we examine how a controlled machine examination setting affects the identification accuracy, i.e. if students can be identified reliably in a machine exam based on typing profiles built with data from students' programming assignments from a course. Finally, we investigate the identification accuracy in an uncontrolled machine exam, where students can complete the exam at any time using any computer they want.\nOur results indicate that even though the identification accuracy deteriorates when identifying students in an exam, the accuracy is high enough to reliably identify students if the identification is not required to be exact, but top k closest matches are regarded as correct.", "authors": [{"name": "Juho Leinonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Alireza Ahadi", "affiliation": "University of Technology Sydney, Sydney, Australia"}, {"name": "Arto Klami", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Vihavainen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Krista Longi", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["machine exam", "programmer identification", "authentication", "source code snapshots"]}, {"title": "Latin American Perspectives and the IT2017 Curricular Guidelines", "link": "https://dl.acm.org/doi/10.1145/2899415.2899419", "abstract": "The term \"information technology\" has many meanings for various stakeholders and continues to evolve. This discussion presents an overview of the developing curricular guidelines for rigorous, high quality, bachelor's degree programs in information technology (IT), called IT2017. Panel participants will focus on Latin American academic and industry perspectives on IT undergraduate education. Discussion will seek to ascertain commonalities and differences between the current draft IT2017 report and perspectives from Latino/a professional and academic communities. It also addresses ways in which this endeavor contrasts with current practices in Latin America industry and academia.", "authors": [{"name": "Gonzalo Begazo Escobedo", "affiliation": "Chazki Corporation, Chacarilla, Surco, Lima, Peru"}, {"name": "Ernesto Cuadros-Vargas", "affiliation": "San Pablo Catholic University, Arequipa, Peru"}, {"name": "Mihaela Sabin", "affiliation": "University of New Hampshire, Manchester, NH, USA"}, {"name": "Barbara Viola", "affiliation": "Viotech Solutions Inc, Farmingdale, NY, USA"}, {"name": "John Impagliazzo", "affiliation": "Hofstra University, Hempstead, NY, USA"}, {"name": "Juan Jos\u00e9 Miranda del Solar", "affiliation": "APESOFT/Magia.Digital, Miraflores, Lima, Peru"}], "tags": ["it in latin america", "it industry and academic perspectives", "international it curriculum"]}, {"title": "Using Fast Model-Based Fault Localisation to Aid Students in Self-Guided Program Repair and to Improve Assessment", "link": "https://dl.acm.org/doi/10.1145/2899415.2899433", "abstract": "Computer science instructors need to manage the rapid improvement of novice programmers through teaching, self-guided learning, and assessment. Appropriate feedback, both generic and personalised, is essential to facilitate student progress. Automated feedback tools can also accelerate the marking process and allow instructors to dedicate more time to other forms of tuition and students to progress more rapidly. Massive Open Online Courses rely on automated tools for both self-guided learning and assessment.\nFault localisation takes a significant part of debugging time. Popular spectrum-based methods do not narrow the potential fault locations sufficiently to assist novices. We therefore use a fast and precise model-based fault localisation method and show how it can be used to improve self-guided learning and accelerate assessment. We apply this to a large selection of actual student coursework submissions, providing more precise localisation within a sub-second response time. We show this using small test suites, already provided in the coursework management system, and on expanded test suites, demonstrating scaling. We also show compliance with test suites does not predictably score a class of \"almost correct'' submissions, which our tool highlights.", "authors": [{"name": "Geoff Birch", "affiliation": "University of Southampton, Southampton, United Kingdom"}, {"name": "Michael Poppleton", "affiliation": "University of Southampton, Southampton, United Kingdom"}, {"name": "Bernd Fischer", "affiliation": "Stellenbosch University, Matieland, South Africa"}], "tags": ["assessment", "debugging", "self-training", "model-based fault localisation", "student code submissions"]}, {"title": "Teaching DevOps and Cloud Computing using a Cognitive Apprenticeship and Story-Telling Approach", "link": "https://dl.acm.org/doi/10.1145/2899415.2899426", "abstract": "DevOps is a new way of developing software that is challenging from a teaching perspective. In this paper, we outline these challenges and propose teaching methods that focus on skill acquisition and technical practices that focus on performant virtualization to overcome them. We describe central elements from our course Cloud Computing and Architecture that has been designed and executed upon these methods and practices and report our experiences and lessons learned.", "authors": [{"name": "Henrik B\u00e6rbak Christensen", "affiliation": "Aarhus University, Aarhus, Denmark"}], "tags": ["programming education", "devops", "course design", "cloud computing", "virtualization"]}, {"title": "Software Engineering Education in Chile - Status Report", "link": "https://dl.acm.org/doi/10.1145/2899415.2899459", "abstract": "Although most computer science graduates develop their professional careers as software engineers, there are no academic program with a specific focus on software engineering in Chile. Considering ACM/IEEE Software Engineering 2014 Curriculum Guidelines as a starting point, we analyzed the curricula of the CS Engineering and CS Technology programs offered by the most traditional Chilean universities, in order to establish to what extent they address the knowledge areas included in that recommendation. We also gathered information about theoretical and/or practical approaches of their courses, their types of evaluations and temporality. The results of this status report indicate that most knowledge areas of the ACM/IEEE curricula are covered but not all with the same emphasis. Programs count on three or four mandatory software engineering courses, most of them have a practical approach, are evaluated through exams and projects and start between the seventh and eight semesters. These results let us learn that some knowledge areas are not emphasized as they deserve. For example, Software Quality or Software Process are skills that industry often requires but academia does not seem to take into account. Similarly, it might be necessary to have students learn about software engineering earlier during their career. Knowing the actual status, actions can be taken.", "authors": [{"name": "Ma\u00edra Marques", "affiliation": "Universidad de Chile, Santiago, Chile"}, {"name": "Mar\u00eda Cecilia Bastarrica", "affiliation": "Universidad de Chile, Santiago, Chile"}, {"name": "Sergio F. Ochoa", "affiliation": "Universidad de Chile, Santiago, Chile"}], "tags": ["chile", "software engineering education"]}, {"title": "Results from a Survey of Faculty Adoption of Process Oriented Guided Inquiry Learning (POGIL) in Computer Science", "link": "https://dl.acm.org/doi/10.1145/2899415.2899471", "abstract": "This paper presents an analysis of CS faculty perceptions of the benefits of POGIL, the obstacles to POGIL adoption, and opportunities for professional development. Participants strongly agreed that with POGIL, students are more engaged and active, develop communication and teamwork skills, and have better learning outcomes. The largest perceived obstacle was lack of preparation time; other obstacles included availability of relevant POGIL activities and pressure to cover more content. Participants expressed a desire for further training and mentoring beyond workshops. Our data analysis also considers bivariate associations and interactions. The results should help to improve professional development for CS faculty adopting evidence-based strategies, and thereby help more CS students to be successful.", "authors": [{"name": "Brian Knaeble", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}, {"name": "Chris Mayfield", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}, {"name": "Clifton Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}], "tags": ["faculty adoption", "guided inquiry", "pogil"]}, {"title": "The Effectiveness of Visualization for Learning Expression Evaluation: A Reproducibility Study", "link": "https://dl.acm.org/doi/10.1145/2899415.2899427", "abstract": "A study was conducted to reproduce the results of an earlier study on the effectiveness of visualization for learning expression evaluation in a problem-solving software tutor on arithmetic expressions. In the current reproducibility study, data was collected from a software tutor on assignment expressions over six semesters. ANOVA analysis of the amount and speed of learning was conducted with treatment, sex and racial groups as fixed factors. Results include that visualization helped the students learn significantly more concepts, whether the students needed to use the tutor or benefited from using the tutor. However, it only benefited the less-prepared students. It did not help the students learn faster. It benefited both the sexes and traditionally represented as well as underrepresented groups. The current study confirmed almost all the results from the previous study, albeit for a harder topic. One reason why visualization was found to be effective in both these studies may be that the same visualization scheme was used by the students to both view feedback and construct their answers.", "authors": [{"name": "Amruth N. Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["reproducibility", "visualization", "evaluation"]}, {"title": "Investigating Factors Influencing Students' Intention to Dropout Computer Science Studies", "link": "https://dl.acm.org/doi/10.1145/2899415.2899455", "abstract": "Research in the area of Computer Science (CS) education, has focused on identifying the reasons that students do not finish their studies in CS. Although there is increasing demand for CS professionals, there is not enough knowledge to explain the high dropout rates in CS education. This study aims to empirically examine how students' intention to complete their studies (retention) in CS is affected by variables playing a key role in higher education. By identifying which variables contribute to dropout in CS studies, we will be able to focus on how to improve aspects related with them in order to reduce dropout rates. To do so we identified the following variables: Year of studies, Gender, Age, Students' Effort, Absence from Classes, Expected Grade point average (GPA), and Current GPA, and tested their effect on retention, based on the responses collected from 241 CS student. Year of studies and Effort have positive effects on students' intention to finish their studies in CS. Interestingly, the expected GPA has a negative effect on students' intentions to finish their studies. The findings contribute to theory and practice, as they offer CS educators and policy makers insights that may aid towards increased student retention and reduced dropout rates.", "authors": [{"name": "Michail N. Giannakos", "affiliation": "Norwegian University of Science and Technology (NTNU), Trondheim, Norway"}, {"name": "Letizia Jaccheri", "affiliation": "Norwegian University of Science and Technology (NTNU), Trondheim, Norway"}, {"name": "Ilias O. Pappas", "affiliation": "Norwegian University of Science and Technology (NTNU), Trondheim, Norway"}], "tags": ["dropout", "computer science education", "higher education.", "retention"]}, {"title": "Global Perspectives on the Role of Two-Year/Technical/Junior Colleges in Computing Education", "link": "https://dl.acm.org/doi/10.1145/2899415.2899420", "abstract": "This panel presents varying global perspectives on the role of community colleges and 2- or 3-year technical schools (collectively called junior colleges here) in computing education. In some countries, students interested in a career in computing can obtain a 2- or 3-year degree instead of, or as a precursor to, a traditional Bachelor's degree. With representatives from five different countries and four different continents, the panel discusses the variety of pathways in computing education around the world, and in particular the role of community colleges and 2- or 3-year technical schools in these pathways.", "authors": [{"name": " Simon", "affiliation": "University of Newcastle, Newcastle, Australia"}, {"name": "Ernesto Cuadros-Vargas", "affiliation": "San Pablo Catholic University, Arequipa, Peru"}, {"name": "Ming Zhang", "affiliation": "Peking University, Beijing, China"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Diana Cukierman", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}, {"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Cindy S. Tucker", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}], "tags": ["two-year college", "computing education", "community college", "junior college", "computing programs", "institute of technology", "technical school", "post-secondary", "global perspectives", "further education"]}, {"title": "Motivation, Optimal Experience and Flow in First Year Computing Science", "link": "https://dl.acm.org/doi/10.1145/2899415.2899474", "abstract": "We examine the concept of motivation from the perspective of Self Determination Theory and give a brief overview of relevant results. We also consider the optimal state known as \"Flow\" and give an account of its conceptualisation in the theory due to Csikszentmihalyi. After discussion of ways in which these concepts can be measured, we describe a set of preliminary studies that investigate motivation and flow in the context of a first year computing class. We analyse student responses to enquiries about perceptions of motivation and flow experiences and look at links between them. We also discuss intrinsic motivation within the subject.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Tony Clear", "affiliation": "AUT University, Auckland, New Zealand"}, {"name": "Roger McDermott", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Mats Daniels", "affiliation": "Uppsala University, Uppsala, Sweden"}, {"name": "\u00c5sa Cajander", "affiliation": "Uppsala University, Uppsala, Sweden"}], "tags": ["self determination theory", "motivation", "optimal experience", "flow"]}, {"title": "Where You Sit Matters How Classroom Seating Might Affect Marks", "link": "https://dl.acm.org/doi/10.1145/2899415.2899444", "abstract": "In this article we perform a detailed statistical analysis of a large experiment that was carried out in two engineering schools at Universitat Polit\u00e8cnica de Val\u00e8ncia. The goal of the study is to quantify how the distance of students to the professor affects their marks. In the experiment, we collected and processed data about the exact students' position in the lecture hall and in the computer lab for two academic years, their changes of position along the course, and their marks in various degrees, courses, and terms, for both lectures and practicals. Our experiments provide quantitative data that is analyzed using advanced statistical methods such as ANOVA, the TukeyHSD post-hoc test, and the Mantel test based on Pearson product-moment correlation coefficient.", "authors": [{"name": "David Insa", "affiliation": "Universitat Polit\u00e8cnica de Val\u00e8ncia, Valencia, Spain"}, {"name": "Josep Silva", "affiliation": "Universitat Polit\u00e8cnica de Val\u00e8ncia, Valencia, Spain"}, {"name": "Salvador Tamarit", "affiliation": "Universitat Polit\u00e8cnica de Val\u00e8ncia, Valencia, Spain"}], "tags": ["classroom", "seat", "mark"]}, {"title": "On the Number of Attempts Students Made on Some Online Programming Exercises During Semester and their Subsequent Performance on Final Exam Questions", "link": "https://dl.acm.org/doi/10.1145/2899415.2899452", "abstract": "This paper explores the relationship between student performance on online programming exercises completed during semester with subsequent student performance on a final exam. We introduce an approach that combines whether or not a student produced a correct solution to an online exercise with information on the number of attempts at the exercise submitted by the student. We use data collected from students in an introductory Java course to assess the value of this approach. We compare the approach that utilizes the number of attempts to an approach that simply considers whether or not a student produced a correct solution to each exercise. We found that the results for the method that utilizes the number of attempts correlates better with performance on a final exam.", "authors": [{"name": "Arto Vihavainen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Raymond Lister", "affiliation": "University of Technology, Sydney., Sydney, Australia"}, {"name": "Alireza Ahadi", "affiliation": "University of Technology, Sydney., Sydney, Australia"}], "tags": ["programming", "learning analytics", "educational data mining"]}, {"title": "Making Formal Methods More Relevant to Software Engineering Students via Automated Test Generation", "link": "https://dl.acm.org/doi/10.1145/2899415.2899424", "abstract": "The use of formal methods in software engineering has been advocated for a long time, by a lot of people. Unfortunately, advocates of formal methods remain a distinct minority among software engineering educators, as well as industrial practitioners. A number of reasons have been cited for the lack of acceptance of formal methods. Popular among these reasons is that formal methods lack relevance and utility to the everyday work of software engineers.\nThis paper presents a tool intended to increase the practical value of formal methods for software engineering students. The tool, called \"Spest'', generates unit testing code from a formal program specification. There have been other such tools developed in the past, but all have been difficult for us to use in our educational setting. With Spest, we hope to overcome some of the difficulties with a tool that is easy to use and which generates readable and extendible testing code. Initial results of using Spest in our classes are promising and we are planning continued development.", "authors": [{"name": "Gene Fisher", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Corrigan Johnson", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["software testing", "automated test generation", "software engineering education", "formal methods"]}, {"title": "AESvisual: A Visualization Tool for the AES Cipher", "link": "https://dl.acm.org/doi/10.1145/2899415.2899425", "abstract": "This paper describes a visualization tool AESvisual that helps students learn and instructors teach the AES cipher. The software allows the user to visualize all the major steps of AES encryption and decryption. The demo mode is useful and efficient for classroom presentation and the practice mode provides the user with an environment to practice AES encryption with error checking. AESvisual is quite versatile, providing support for both beginners learning how to encrypt and decrypt, and also for the more advanced users wishing to see all the details, including the GF(28) addition and multiplication operations. Classroom evaluation of the tool was positive.", "authors": [{"name": "Jun Ma", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Melissa Keranen", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Ching-Kuang Shene", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Chaoli Wang", "affiliation": "University of Notre Dame, Notre Dame, IN, USA"}, {"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Jun Tao", "affiliation": "Michigan Technological University, Houghton, MI, USA"}], "tags": ["visualization", "cryptography"]}, {"title": "Can Interaction Patterns with Supplemental Study Tools Predict Outcomes in CS1?", "link": "https://dl.acm.org/doi/10.1145/2899415.2899428", "abstract": "Recent research suggests that one-third of the students enrolled in CS1 courses typically end up failing. Several studies have demonstrated how learning tools can assist struggling students. This work presents the evolution of a practice tool co-designed with student input. BitFit was developed to (1) provide students with an environment to practice weekly material and receive support when needed; and (2) collect student usage data as students progress through programming exercises. Our analysis of 652 students over three semesters highlights a number of predictors for success. Our findings support recent studies that suggest that at-risk students can be identified as early as two weeks into the semester; this group accounted for almost 30% of the students who failed the course in our study. Our results also reveal that interaction patterns with BitFit, in particular with hint features requested by students, allow the identification of another 52% of students who eventually fail. Throughout the semester, students who failed the course used hint features four times as often as top students, while only attempting to compile code one-third as often. The combination of early indicators and interaction patterns identify 81% of students who failed the course during our study.", "authors": [{"name": "Anthony Estey", "affiliation": "University of Victoria, Victoria, BC, Canada"}, {"name": "Yvonne Coady", "affiliation": "University of Victoria, Victoria, BC, Canada"}], "tags": ["student study behavior", "educational data mining", "cs1", "programming practice tool", "predictors of success"]}, {"title": "Evidence-based Teaching with the Help of Mobile Response System (MRS)", "link": "https://dl.acm.org/doi/10.1145/2899415.2925498", "abstract": "Over the past couple of years, evidence-based teaching and learning methods are brought into focus from the experience gained in clinical psychology and their use of Evidence-Based Practices. Different authors have discussed the advantages of using such evidence-based methods for teaching and learning in academia. Measuring real-time impact of traditional pedagogical approaches used in STEM disciplines are not easy and do not provide faculty an instant evidence about student learning. This paper will present Mobile Response System (MRS) software, which facilitate anonymous communication, interaction and evaluation of in-class interactive problem solving activities using mobile devices. MRS facilitates a feedback-driven and evidence-based teaching methodology, which is important to enhance student learning.", "authors": [{"name": "Mohammad Muztaba Fuad", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}, {"name": "Debzani Deb", "affiliation": "Winston-Salem State University, Winston Salem, NC, USA"}], "tags": ["interactive problem solving", "active learning", "mobile technology"]}, {"title": "Teaching the First Programming Course with Python's Turtle Graphic Library", "link": "https://dl.acm.org/doi/10.1145/2899415.2925499", "abstract": "How to keep students interested in a CS1 course is not new to those who teach the subject. This work describes our experience in the use of Python with its Turtle Graphic Library in a game-oriented approach that seeks to increase the interest and motivation of students. We present the assignment for branch, loops and functions: the simulation of a basic game with a spaceship that can shoot a bullet to the enemy. Our experience has shown us that students get engaged and motivate themselves with the graphical component. We have found an improvement in students' grades.", "authors": [{"name": "Elizabeth Vidal Duarte", "affiliation": "Universidad La Salle, Arequipa, Peru"}], "tags": ["specific assignments", "motivation", "game-oriented", "pedagogical tool", "first programming course", "teaching"]}, {"title": "A LEGO-based Approach to Introducing Test-Driven Development", "link": "https://dl.acm.org/doi/10.1145/2899415.2925500", "abstract": "Test-driven development (TDD) is an important software engineering technique that requires writing tests before writing the code to be tested. We describe an approach to introduce the main ideas and practices of TDD using an engaging hands-on activity where students write test cases and construct testable tangible objects with LEGO bricks.", "authors": [{"name": "Stan Kurkovsky", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["software engineering", "active learning", "test-driven development", "refactoring", "lego"]}, {"title": "An Improved Approach for Interactive Ebooks", "link": "https://dl.acm.org/doi/10.1145/2899415.2925502", "abstract": "Motivated by widespread changes to how technology is used in education, perceived high costs of traditional textbooks, and a desire to incorporate interactivity into materials, the fundamental nature of the textbook is changing. We present our ebook approach in the form of an interactive Java resource that can fully replace a course textbook or be used as a supplementary resource. We will demonstrate a platform and approach to the interactive textbook that improves on the significant and ongoing efforts by others in this area and that uses higher degrees of interactivity to increase student engagement while maintaining the pedagogical value of a textbook as both a learning tool and a trusted reference.", "authors": [{"name": "Thomas Way", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["online exercises", "interactive pedagogy", "animations.", "multimedia content", "electronic textbook", "textbook replacement"]}, {"title": "Collaborative Content Creation among All Students in a Class through a Literature Review Activity (and an Informal Introduction to Machine Learning)", "link": "https://dl.acm.org/doi/10.1145/2899415.2925501", "abstract": "A research literature review activity leading to the creation of a word cloud is described. The word cloud is an emergent result from submissions from all students in the class, and it is used as further learning material. The collaborative nature of this exercise, and in particular considering that all the students in the class participate adds a sense of ownership and belonging to the class and also expectation and enthusiasm to discover the emergent result. The process to obtain the emergent result is at the same time an example illustrating later topics in the course. Further, the activity includes reflection discussions providing further opportunities to learn from both, the process and the result itself. While the activity was developed for an Artificial Intelligence course, it can be used in other courses where research and exploration is encouraged, as well as in classes or varied sizes.", "authors": [{"name": "Diana Cukierman", "affiliation": "Simon Fraser University, Burnaby, BC, Canada"}], "tags": ["computer science education", "collaborative content creation", "student engagement", "wikis", "word cloud", "machine learning introduction"]}, {"title": "Employing Multiple-Answer Multiple Choice Questions", "link": "https://dl.acm.org/doi/10.1145/2899415.2925503", "abstract": "Increasing enrollments and adoption of online resources have encouraged the use of multiple choice questions as a means of providing scalable assessment. However, in contexts where formative feedback is desired, standard multiple choice questions may lead students to a false sense of confidence -- a result of their small solution space and the temptation to guess. We propose the use of multiple-answer multiple choice questions in situations where formative feedback is desired and present evidence that these questions are well suited for that role.", "authors": [{"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto, Mississauga, ON, Canada"}, {"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["assessment", "formative feedback", "multiple choice"]}, {"title": "Learning Computer Science Languages in Enki", "link": "https://dl.acm.org/doi/10.1145/2899415.2925504", "abstract": "This paper presents an overview and main features of Enki, a web-based learning environment for computer science languages. Enki was designed to be a sort of entry level IDE, aggregating tools for navigating and viewing course materials, for solving exercises and receiving automated feedback, as well as promoting the learning process. Enki uses services from several other systems, namely for content sequencing and recommendation, exercise assessment, and gamification.", "authors": [{"name": "Jos\u00e9 Paulo Leal", "affiliation": "CRACS & INESC-Porto LA & DCC - Faculty of Sciences, University of Porto, Porto, Portugal"}, {"name": "Jos\u00e9 Carlos Paiva", "affiliation": "CRACS -- INESC-Porto LA & DCC -- Faculty of Sciences, University of Porto, Porto, Portugal "}, {"name": "Ricardo Alexandre Queir\u00f3s", "affiliation": "CRACS & INESC-Porto LA & DI/ESEIG/IPP, Porto, Portugal"}], "tags": ["learning", "educational resources", "integration", "exercises", "sequencing", "programming languages", "gamification"]}, {"title": "Teaching Abstraction, Function and Reuse in the first class of CS1: A Lightbot Experience", "link": "https://dl.acm.org/doi/10.1145/2899415.2925505", "abstract": "Educators have long been trying to motivate students in their introductory programming courses. There are key concepts that are not easy to teach like abstraction, function and reuse. We believe that the visual nature of game-oriented approach to teaching anything is more effective for students. This work describes our experience in the use of Lightbot to introduce students to these concepts. This approach has been implemented in two Universities in CS1: Universidad Nacional de San Agust\u00edn and Universidad La Salle, from Arequipa -- Per\u00fa. One of them uses Java and the other one uses Python as first programming languages. Lightbot has been used in both of them since 2015 in the first laboratory session", "authors": [{"name": "Alfredo Paz Valderrama", "affiliation": "Universidad Nacional de San Agust\u00edn, Arequipa, Peru"}, {"name": "Eveling Castro Gutierrez", "affiliation": "Universidad Nacional de San Agust\u00edn, Arequipa, Peru"}, {"name": "Marco Aedo Lopez", "affiliation": "Universidad Nacional de San Agust\u00edn, Arequipa, Peru"}, {"name": "Elizabeth Vidal Duarte", "affiliation": "Universidad La Salle, Arequipa, Peru"}], "tags": ["game-oriented", "specific assignments", "pedagogical tool.", "cs1"]}, {"title": "Instructional Module Development System (IMODS)", "link": "https://dl.acm.org/doi/10.1145/2899415.2925506", "abstract": "To ensure that future generations of engineering, science, and other technological practitioners are equipped with the required knowledge and skills to continue to innovate solutions to solve societal challenges, effective courses or instructional modules that incorporate best pedagogical and assessment practices must be designed and delivered. Science, technology, engineering and mathematics (STEM) educators typically come from STEM backgrounds and have little or no formal STEM education training. Their approaches to learning, instruction, and assessment mimic the experiences they were exposed to as students and are not necessarily informed by scholarship in the area of how people learn. The road to effective STEM instruction starts with a well-conceived and constructed plan or curriculum that includes the tight alignment of content, pedagogical approaches and assessments, around the learning objectives, and draws upon best-practices in each of these areas. An information technology (IT) tool that can guide STEM educators through the complex task of course design development, ensure tight alignment between various components of an instructional module, and provide relevant information about research-based pedagogical and assessment strategies will be of great value. This demonstration presents a Web-based software tool called the Instructional Module Development System (IMODS) that supports these ventures and broadens the impact and reach of professional development in the scholarship of teaching and learning, particularly to STEM faculty.", "authors": [{"name": "Odesma Dalrymple", "affiliation": "University of San Diego, San Diego, CA, USA"}, {"name": "Srividya K. Bansal", "affiliation": "Arizona State University, Mesa, AZ, USA"}], "tags": ["accreditation", "computer science education", "information systems education", "curriculum"]}, {"title": "Data-Driven Test Case Generation for Automated Programming Assessment", "link": "https://dl.acm.org/doi/10.1145/2899415.2899423", "abstract": "Building high-quality test cases for programming problems is an important part of any well-built Automated Programming Assessment System. Traditionally, test cases are created by human experts or using machine auto-generation methods based on the problem definition and sample solutions. Unfortunately, the human approach can not anticipate the numerous ways that programmers can construct erroneous solutions. The machine auto-generation methods are complex, problem-specific, and time-consuming.\nThis paper proposes a fast, simple method for generating high-quality test sets for a programming problem from an existing collection of student solutions for that problem. This paper demonstrates the effectiveness of the proposed method in online programming course assessments. The experiments showed that, when applied to large collections of such programs, the method produces concise, human-understandable test sets that provide better coverage than test sets built by experts with rich teaching experience.", "authors": [{"name": "Scott Rixner", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Joe Warren", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Rebecca Smith", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Terry Tang", "affiliation": "Rice University, Houston, TX, USA"}], "tags": ["mooc", "data-driven", "automatic test case generation", "automated programming assessment system"]}, {"title": "Integrating the Learning Objectives and Syllabus into a Domain Ontology for Data structures Course", "link": "https://dl.acm.org/doi/10.1145/2899415.2899453", "abstract": "The design of an assessment instrument (AI) is one of the major components of assessment process. The teachers have to generate AI aligned with the course learning objectives (LOs) within the boundary of topics defined by the syllabus of that course. When the instrument covers the LO fairly, it covers the subject matter defined by the syllabus fairly. This paper discusses an approach towards integrating both the contents and cognitive level defined in the LOs into the domain ontology for a Data structures course. This forms the first step towards building an automated system to measure the alignment of AI to course LOs. In the proposed approach, the notion of domain ontology is introduced on which the LOs are overlaid. Concepts and cognitive levels from LOs are extracted using Natural Language Processing. Mapping these to the nodes of the ontology also involves complex processes to take decisions about selection of nodes and traversal of links. For each of these, issues and challenges are discussed in detail and a solution is proposed. We have done a prototype implementation of the system to test our design. The effectiveness of this framework was tested by comparing the manually generated results by the experienced teachers to the system generated results and obtained an average accuracy of 90%. The examples are taken from Data Structures course of second year engineering curriculum.", "authors": [{"name": "Sridhar Iyer", "affiliation": "Indian Institute of Technology Bombay, Mumbai, Mumbai, India"}, {"name": "Rekha Ramesh", "affiliation": "Indian Institute of Technology Bombay, Mumbai, Mumbai, India"}, {"name": "Sasikumar M.", "affiliation": "Centre for Studies in Advanced Computing, Mumbai, India"}], "tags": ["learning objectives", "domain ontology", "ontology based knowledge representation.", "alignment", "syllabus", "data structures", "assessment instrument"]}, {"title": "Students' Semantic Mistakes in Writing Seven Different Types of SQL Queries", "link": "https://dl.acm.org/doi/10.1145/2899415.2899464", "abstract": "Computer science researchers have studied extensively the mistakes of novice programmers. In comparison, little attention has been given to studying the mistakes of people who are novices at writing database queries. This paper represents the first large scale analysis of students' semantic mistakes in writing different types of SQL SELECT statements. Over 160 thousand snapshots of SQL queries were collected from over 2300 students across nine years. We describe the most common semantic mistakes that these students made when writing different types of SQL statements, and suggest reasons behind those mistakes. We mapped the semantic mistakes we identified in our data to different semantic categories found in the literature. Our findings show that the majority of semantic mistakes are of the type \"omission\". Most of these omissions happen in queries that require a JOIN, a subquery, or a GROUP BY operator. We conclude that it is important to explicitly teach students techniques for choosing the appropriate type of query when designing a SQL query.", "authors": [{"name": "Vahid Behbood", "affiliation": "University of Technology, Sydney., Sydney, Australia"}, {"name": "Julia Prior", "affiliation": "University of Technology, Sydney., Sydney, Australia"}, {"name": "Raymond Lister", "affiliation": "University of Technology, Sydney., Sydney, Australia"}, {"name": "Alireza Ahadi", "affiliation": "University of Technology, Sydney., Sydney, Australia"}], "tags": ["sql queries", "online assessment", "databases"]}, {"title": "Introductory Programming: Let Us Cut through the Clutter!", "link": "https://dl.acm.org/doi/10.1145/2899415.2899430", "abstract": "Introductory programming courses often leave students unimpressed. We feel this is because teaching approaches (a) overemphasize the syntactic aspects of the programming language being taught instead of using programming to do interesting things, (b) do not respect the computational maturity/intellectual leanings of the students, and (c) are simply not fun enough. We have developed an approach which we believe addresses these issues in the context of teaching introductory programming to college students majoring in science and engineering.\nWe use the C++ programming language augmented with a graphics library and some linguistic devices we have developed. We believe that our approach enables interesting material to be handled from day one and generally garners more student interest.", "authors": [{"name": "Abhiram G. Ranade", "affiliation": "IIT Bombay, Mumbai, India"}], "tags": ["pedagogy", "graphics", "introductory programming", "c++"]}, {"title": "Learning to Program is Easy", "link": "https://dl.acm.org/doi/10.1145/2899415.2899432", "abstract": "The orthodox view that \"programming is difficult to learn\" leads to uncritical teaching practices and poor student outcomes. It may also impact negatively on diversity and equity within the Computer Science discipline. But learning to program is easy --- so easy that children can do it. We make our introductory courses difficult by establishing unrealistic expectations for novice programming students. By revisiting the expected norms for introductory programming we may be able to substantially improve outcomes for novice programmers, address negative impressions of disciplinary practices and create a more equitable environment.", "authors": [{"name": "Andrew Luxton-Reilly", "affiliation": "University of Auckland, Auckland, New Zealand"}], "tags": ["computer science education", "expectations", "cs1", "novice", "learning outcomes", "programming", "standards", "curriculum"]}, {"title": "Developing a Rubric for a Creative CS Principles Lab", "link": "https://dl.acm.org/doi/10.1145/2899415.2899449", "abstract": "The \"Beauty and Joy of Computing\" Computer Science Principles class has inspired many new teachers to learn to teach creative computing classes in high schools. However, new computer science teachers feel under-prepared to grade open-ended programming assignments and support their students' successful learning. Rubrics have widely been used to help teaching assistants grade programs and are a promising way to support new teachers to learn how to grade BJC programs. In this paper, we adapt general coding criteria from auto-graders to a lab where students write code to draw a brick wall. We tested the rubric on student assignments and showed that we can achieve high inter-rater agreement with the refined rubric.", "authors": [{"name": "Tiffany Barnes", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Erin Snider", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Veronica Catet\u00e9", "affiliation": "NC State University, Raleigh, NC, USA"}], "tags": ["its", "rubrics", "cs principles"]}, {"title": "A New Metric to Quantify Repeated Compiler Errors for Novice Programmers", "link": "https://dl.acm.org/doi/10.1145/2899415.2899463", "abstract": "Encountering the same compiler error repeatedly, particularly several times consecutively, has been cited as a strong indicator that a student is struggling with important programming concepts. Despite this, there are relatively few studies which investigate repeated errors in isolation or in much depth. There are also few data-driven metrics for measuring programming performance, and fewer for measuring repeated errors. This paper makes two contributions. First we introduce a new metric to quantify repeated errors, the repeated error density (RED). We compare this to Jadud's Error Quotient (EQ), the most studied metric, and show that RED has advantages over EQ including being less context dependent, and being useful for short sessions. This allows us to answer two questions posited by Jadud in 2006 that have until now been unanswered. Second, we compare the EQ and RED scores using data from an empirical control/intervention group study involving an editor which enhances compiler error messages. This intervention group has been previously shown to have a reduced overall number of student errors, number of errors per student, and number of repeated student errors per compiler error message. In this research we find a reduction in EQ, providing further evidence that error message enhancement has positive effects. In addition we find a significant reduction in RED providing evidence that this metric is valid.", "authors": [{"name": "Brett A. Becker", "affiliation": "University College Dublin, Dublin, Ireland"}], "tags": ["error quotient", "error messages", "eq", "syntax errors", "cs1", "debugging", "compiler errors", "novice", "errors", "feedback", "programming", "java", "repeated errors", "consecutive errors"]}, {"title": "Reading Hierarchies in Code: Assessment of a Basic Computational Skill", "link": "https://dl.acm.org/doi/10.1145/2899415.2899435", "abstract": "One of the skills that comprise computational thinking is the ability to read code and reason about the hierarchical relationships between different blocks, expressions, elements, or other types of nodes, depending on the language. In this study, we present three new instruments for assessing different aspects of reading hierarchies in code, including vocabulary, reasoning, and fluency. One of these instruments is Nester, an interactive tool we have designed to elicit mental models about the hierarchical structure of code in computing languages ranging from HTML, CSS, and LaTeX to JavaScript and Lisp. We describe a lab study in which we administered these instruments to 24 participants with varying degrees of web development experience. We report findings from this study, including participants' ability to define, reason about, and manipulate hierarchies in code, and the errors and misconceptions that relate to them. Finally, we discuss avenues for future work.", "authors": [{"name": "Meen Chul Kim", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Thomas H. Park", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Sukrit Chhabra", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Brian Lee", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Andrea Forte", "affiliation": "Drexel University, Philadelphia, PA, USA"}], "tags": ["program comprehension", "assessment", "web development", "computational thinking"]}, {"title": "Programming Misconceptions in an Introductory Level Programming Course Exam", "link": "https://dl.acm.org/doi/10.1145/2899415.2899447", "abstract": "Learning to program is known to be a difficult task, as the students typically lack the intrinsic motivation and find the new skills required difficult to master. It is hence typical for the educators to try to constantly improve their teaching methods to enhance the quality and outcome of the courses. We have developed an educational tool called ViLLE, which allows us to create interactive and automatically assessed programming exercises easily. In these exercises, the students have a near-to-authentic programming environment with compiler output and error messages provided. The same tool was used in our university's introductory programming course's final exam. In this paper, we analyze students' answers to three different coding exercises in this final exam. Since ViLLE automatically stores the program code when compiled, we have an access to previously unseen amounts of iterations of the exercise instead of just the final submission. The data is analyzed to identify typical misconceptions in programming exercises, and to show how the students gradually improve their answers based on the results and error messages. Finally, we discuss how the results of the analysis can be utilized to tackle these misconceptions during the course.", "authors": [{"name": "Niko Hellgren", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Erkki Kaila", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Mikko-Jussi Laakso", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Tapio Salakoski", "affiliation": "University of Turku, Turku, Finland"}, {"name": "Einari Kurvinen", "affiliation": "University of Turku, Turku, Finland"}], "tags": ["automatic assessment", "programming", "misconceptions"]}, {"title": "Design and Use of Static Scaffolding Techniques to Support Java Programming on a Mobile Phone", "link": "https://dl.acm.org/doi/10.1145/2899415.2899456", "abstract": "Most learners in resource-constrained environments own mobile phones that they could use to learn programming while outside the classroom. However, limitations of mobile phones, such as small screens and small keypads, impede their use as typical programming environments. This study proposed that programming environments on mobile phones could include scaffolding techniques specifically designed for mobile phones, and designed based on learners' needs. Scaffolding should be designed with some essential techniques that are mandatory for learners to use. Hence, one type of scaffolding technique that was designed to support programming on the mobile phone is static scaffolding that does not fade. Experiments were conducted with 64 learners of programming from three universities in Kenya and South Africa in order to investigate how they used the designed static scaffolding techniques to construct Java programs on a mobile phone. The results show that programming on mobile phones can be supported by providing scaffolding techniques that never fade, in order to address the limitations of mobile phones and to meet learners' needs.", "authors": [{"name": "Hussein Suleman", "affiliation": "University of Cape Town, Cape Town, South Africa"}, {"name": "Chao Mbogo", "affiliation": "Kenya Methodist University, Nairobi, Kenya"}, {"name": "Edwin Blake", "affiliation": "University of Cape Town, Cape Town, South Africa"}], "tags": ["mobile phone", "scaffolding", "programming", "static", "java"]}, {"title": "Factors for Success in Online CS1", "link": "https://dl.acm.org/doi/10.1145/2899415.2899457", "abstract": "Enrollment in post-secondary online courses has been increasing, but several studies have found that the drop rates in online courses are higher than in face-to-face. In our previous study comparing an online section of CS1 with a face-to-face flipped section, we also found the drop rate higher in the online section. Given that we plan to continue offering online options for our students, we aim to identify factors associated with success in online CS1. In this paper, we examine factors that are under students' own control such as how fully they participate in ungraded but important learning activities, and other factors that we may be able to manipulate and improve, such as students' skills for self-regulated learning, and their sense of community in the course. We found important differences between the online and flipped sections regarding what behaviours and attributes were associated with success. While completion of unmarked practice exercises was a factor for both sections, test anxiety and self-efficacy were factors only for the online section, and intrinsic goal orientation was a factor only for the flipped section.", "authors": [{"name": "Diane Horton", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Jennifer Campbell", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["self-regulated learning", "novice programming", "cs1", "online"]}, {"title": "Applying Validated Pedagogy to MOOCs: An Introductory Programming Course with Media Computation", "link": "https://dl.acm.org/doi/10.1145/2899415.2899429", "abstract": "Significant advances have been made in the learning and teaching of Introductory Programming, including the integration of active and contextualised learning pedagogy. However, Massively Open Online Courses (MOOCs), where Computer Science and, more specifically, introductory programming courses dominate, do not typically adopt such pedagogies or lessons learned from more traditional learning environments. Moreover, the improvement of learning within the MOOC context in terms of discipline-specific pedagogy, and the improvement of student learning outcomes and processes have not been studied in depth.\nThis paper reports findings from a foundation programming skills MOOC that supports the learning of fundamental Computer Science concepts and the development of programming skills through a media computation approach, based upon digital artworks and animations. In this paper, we explore the course activity data as well as a sample of students' source code submissions to investigate their engagement with the course and the quality and development of their programming skill over the six weeks of the course duration.", "authors": [{"name": "Katrina Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Rebecca Vivian", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Claudia Szabo", "affiliation": "The University of Adelaide, Adelaide, Australia"}, {"name": "Nickolas Falkner", "affiliation": "The University of Adelaide, Adelaide, Australia"}], "tags": ["online learning", "cs101", "introductory programming", "massively open online course (mooc)"]}]