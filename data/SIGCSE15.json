[{"title": "Educating for Both Art and Technology", "link": "https://dl.acm.org/doi/10.1145/2676723.2694804", "abstract": "Universities have traditionally drawn firm lines between classes in art and those in technology based fields such as computer science, placing them in separate departments, schools, and colleges. Human resources departments of companies have drawn similar lines between their \"creative\" and their \"tech\" employees, recruiting from different universities and creating different job titles and pay structures. In this talk, I will argue that the leaders of the next generation are going to be \"hybrids\" who each contribute to both sides of the art and tech divide and find it natural to interact and collaborate with co-workers with varied and mixed educational and work backgrounds. As an example of this style of education, I will report on an interdisciplinary course entitled Animation Art and Technology, which I have co-taught with Professor James Duesing in the School of Art for the past ten years at Carnegie Mellon University. The students are an interdisciplinary mix drawn from the traditional majors of art, computer science as well as a computer science and art bachelors degree program. The class produces four or five animations each semester, most of which have a substantive technical component, and the students are challenged to consider content innovation as equal to the technical aspects of their projects. Building on this style of education, Carnegie Mellon has recently created a program called IDeATE (Integrative Design, Arts and Technology Network) that offers a variety of minors and concentrations to students interested in blending art and technology in a variety of ways. 120 students enrolled in the first year indicating that the students recognize the need for these \"hybrid\" skill sets. As an example of the success of these efforts in industry, I will report on several research projects completed at Disney Research that would not have been possible without the highly collaborative efforts of teams of creative and techies.", "authors": [{"name": "Jessica Hodgins", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["animation", "education"]}, {"title": "Paying Back and Paying Forward", "link": "https://dl.acm.org/doi/10.1145/2676723.2694802", "abstract": "This talk will discuss the value and benefits of volunteering - to one's career, to one's profession, and to one's life.", "authors": [{"name": "Frank H. Young", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, IN, USA"}], "tags": ["volunteering"]}, {"title": "Data Structures Courses: Past, Present, and Future", "link": "https://dl.acm.org/doi/10.1145/2676723.2694801", "abstract": "The \"Data Structures\" course is arguably one of the most important for computer science majors. In this talk, I will discuss how this course has evolved over the last three decades, and discuss some topics we might want to start thinking about in the next decade.", "authors": [{"name": "Mark Allen Weiss", "affiliation": "Florida International University, Miami, FL, USA"}], "tags": ["data structures", "algorithms", "programming"]}, {"title": "Connected, Committed and Social?: The Consequences of Computing for Relationships", "link": "https://dl.acm.org/doi/10.1145/2676723.2694803", "abstract": "Digital technologies are increasingly an ubiquitous part of everyday communication. These technologies offer contact with friends and family that is both persistent and pervasive. Social ties that at one time would have gone dormant, or vanished entirely, are now made persistent through social media. As we transition through different jobs, neighborhoods, schools, and communities our social ties remain. Contact is no longer reliant on the occasional phone call and holiday card, but has a persistent presence on our screens and through our mobile devices. What are the benefits and the consequences of being connected? Are our relationships more committed? What impact will these emerging developments in computing have for society? It has been said that these technologies offer new opportunities for democratic participation, that they support collective action, and give marginalized individuals a voice. Social capital, once lost through the dormancy of ties, hidden as a result of infrequent contact, can be made visible through the persistent and pervasive nature of these new media. Yet, the practice of social media may not live up to its hype; they may contribute to social isolation, stress, and disengagement. Based on a series of large-scale studies of where people connect, who they connect with, and what they discuss, this presentation explores contradictory evidence of how digital technologies are related to social capital, democratic engagement, and the fear and joy that we may all be missing out.", "authors": [{"name": "Keith N. Hampton", "affiliation": "Rutgers University, New Brunswick, NJ, USA"}], "tags": ["deliberation", "cost of caring", "stress", "social capital", "social support"]}, {"title": "Session details: Demonstration Session", "link": "https://dl.acm.org/doi/10.1145/3251181", "abstract": "No abstract available.", "authors": [{"name": "Michael E. Caspersen", "affiliation": "Aarhus University"}], "tags": []}, {"title": "EarSketch: A Web-based Environment for Teaching Introductory Computer Science Through Music Remixing", "link": "https://dl.acm.org/doi/10.1145/2676723.2691869", "abstract": "EarSketch (http://earsketch.gatech.edu) is a free integrated curriculum, software toolset, audio loop library, and social sharing site that teaches computing principles through digital music composition and remixing. EarSketch students write code in either Python or JavaScript to make music, with a focus on popular genres such as hip hop and dubstep, while learning computing concepts such as variables, iteration, conditionals, strings, lists, functions, and recursion. Attendees to this demonstration session will be introduced to a new web-based version of EarSketch that integrates a code editor, digital audio workstation (DAW) music production interface, curriculum browser, and sharing service into a single integrated browser-based learning environment. This demo is of interest to secondary and early post secondary CS educators and to computing education researchers interested in STEAM and/or broadening participation. No prior musical knowledge or experience is expected and no prior programming experience with Python or JavaScript is required.", "authors": [{"name": "Jason Freeman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Regis Verdin", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Brian Magerko", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["music composition", "broadening participation", "education", "music production", "remixing", "computer science principles", "steam"]}, {"title": "Blockly Language Creation and Applications: Visual Programming for Media Computation and Bluetooth Robotics Control", "link": "https://dl.acm.org/doi/10.1145/2676723.2691871", "abstract": "Over the past decade, an increased interest has emerged in block-based languages that have been used to support initial exposure of programming concepts to new learners (children or adult). Such languages can shield initial-learners from some of the frustrations of learning the syntax of a programming language, and allow them to focus on the core computational idea being taught. Blockly is a type of visual block language development kit that allows the rapid construction of new block-based visual programming languages to address a specific pedagogical or content focus. This demo provides a brief tutorial on the steps used to create a new Blockly environment, along with two case studies demonstrating the power of Blockly. The two environments introduced have two different contexts: the manipulation of images via operations on pixels (Pixly), and programmatic control of a Sphero robot (Spherly). Pixly and Spherly serve as a context for introducing how new Blockly languages are created, as well as showcasing the opportunity to use these languages as new educational environments in the context of media computation and robotics. More information can be found at http://outreach.cs.ua.edu/pixly/ and http://outreach.cs.ua.edu/spherly/. This work is supported by an NSF CE21 project and a Google CS4HS award.", "authors": [{"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Jake Trower", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["blockly", "media computation", "robotics programming"]}, {"title": "Session details: Paper Session: CS Education Research", "link": "https://dl.acm.org/doi/10.1145/3251165", "abstract": "No abstract available.", "authors": [{"name": "Sohum Sohoni", "affiliation": "Arizona State University"}], "tags": []}, {"title": "Student Response to Teaching of Memory Cues and Resumption Strategies in Computer Science Classes", "link": "https://dl.acm.org/doi/10.1145/2676723.2677234", "abstract": "Programming is a creative process that requires the ability to concentrate and juggle multiple concepts simultaneously in one's mind. Existing research shows there is a tangible cost when a programmer is interrupted as the programmer must recover the context of his work and refocus on the task at hand. However, CS students are rarely taught about interruptions and how to manage them. Instead, teaching tends to focus only on technical concepts. In addition, there is little research on interruptions with respect to CS students. Therefore, our research examines what happens when CS students are taught about interruptions and how to cope with them.\nThe objective of this paper is to determine if CS students are affected by interruptions, what knowledge CS students possess regarding memory cues and resumption strategies, and what their opinion is of this material. We conducted a study with approximately two-hundred undergraduate CS students to answer these questions. Our study was comprised of an initial questionnaire, a seminar on memory cues and resumption strategies, and a follow-up questionnaire. Our results demonstrate that CS students are affected by interruptions, but 73% of students report not knowing methods to mitigate them. After learning about memory cues and resumption strategies, students report that the material was useful and that they want to study it. Their most significant feedback is that they have a strong desire to include these techniques in CS curriculums, reporting a mean score of 7.78 out of 10, where 0 signifies strong disagreement and 10 signifies strong agreement.", "authors": [{"name": "Jaime Ruiz", "affiliation": "Colorado State University, Fort Collins, CO, USA"}, {"name": "Noah John", "affiliation": "Colorado State University, Fort Collins, CO, USA"}], "tags": ["teaching", "task resumption", "students", "cues", "interruptions"]}, {"title": "Closing The Cyberlearning Loop: Enabling Teachers To Formatively Assess Student Programming Projects", "link": "https://dl.acm.org/doi/10.1145/2676723.2677269", "abstract": "Teachers are increasingly integrating game design and simulation creation projects as part of their classroom curricula. These projects have many benefits including motivating students in STEM activities and exposing students to computational thinking - a key part of upcoming science standards. However, barriers still exist to project-based computer science in a lab environment. One major issue is that, as students are creating their projects, it is extremely difficult for teachers to know how every student is progressing through a given activity and how to keep every student engaged. This paper introduces a Cyberlearning system entitled REACT (Real-Time Evaluation and Assessment of Computational Thinking) that is an initial step towards giving teachers quickly discernible real-time data corresponding to each student project. REACT provides teachers with a sortable dashboard, consisting of data from each student, that shows the characters students created and used to populate their game or simulation world as well as the semantic meaning behind what students have programmed. A feasibility test with four middle school classrooms shows that REACT helps teachers formatively assess students and provide targeted instruction to struggling individuals. Furthermore, teachers showed excitement at the summative and student self-assessment capabilities of REACT, and every teacher independently stated they would use the REACT system in subsequent end-user programming units.", "authors": [{"name": "Ashok Ram Basawapatna", "affiliation": "AgentSheets Inc., Boulder, CO, USA"}, {"name": "Kyu Han Koh", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Alexander Repenning", "affiliation": "AgentSheets Inc., Boulder, CO, USA"}], "tags": ["k-12 computer science education", "cyberlearning", "formative assessment", "summative assessment", "end-user game and simulation design", "assessment tools", "computational thinking"]}, {"title": "Analyzing Student Work Patterns Using Programming Exercise Data", "link": "https://dl.acm.org/doi/10.1145/2676723.2677297", "abstract": "Web-based programming exercises are a useful way for students to practice and master essential concepts and techniques presented in introductory programming courses. Although these systems are used fairly widely, we have a limited understanding of how students use these systems, and what can be learned from the data collected by these systems.\nIn this paper, we perform a preliminary exploratory analysis of data collected by the CloudCoder programming exercise system from five introductory courses taught in two programming languages across three colleges and universities. We explore a number of interesting correlations in the data that confirm existing hypotheses. Finally, and perhaps most importantly, we demonstrate the effectiveness and future potential of systems like CloudCoder to help us study novice programmers.", "authors": [{"name": "Paul Denny", "affiliation": "University of Auckland, Auckland, New Zealand"}, {"name": "David Hovemeyer", "affiliation": "York College of Pennsylvania, York, PA, USA"}, {"name": "Jaime Spacco", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "James Moscola", "affiliation": "York College of Pennsylvania, York, PA, USA"}, {"name": "Robert Duvall", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "David Babcock", "affiliation": "York College of Pennsylvania, York, PA, USA"}, {"name": "Brad Richards", "affiliation": "University of Puget Sound, Tacoma, WA, USA"}], "tags": ["student work patterns", "programming exercises", "outcomes"]}, {"title": "Session details: Paper Session: Curriculum", "link": "https://dl.acm.org/doi/10.1145/3251127", "abstract": "No abstract available.", "authors": [{"name": "Henry Walker", "affiliation": "Grinnell College"}], "tags": []}, {"title": "Teaching Computing as Science in a Research Experience", "link": "https://dl.acm.org/doi/10.1145/2676723.2677231", "abstract": "Many instructors and institutions offer research experiences and training in computing research methods. However, in a national survey, we find that undergraduate students rate their computing research experiences lower than students in other STEM fields. To address this learning gap, we have offered summer undergraduate research experiences in computing that include not only instruction in the important mechanics of research but also grounding in a philosophy of computing science that emphasizes generalized explanation of behavior as a means for control and prediction. After five years, survey results indicate the experience helps close the gap between CS and other STEM fields in benefits gained.", "authors": [{"name": "Jerod Weinman", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "David Jensen", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}, {"name": "David Lopatto", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["survey of undergraduate research experiences (sure)", "situated learning", "undergraduate research", "research methods", "ergalics"]}, {"title": "Backward Design: An Integrated Approach to a Systems Curriculum", "link": "https://dl.acm.org/doi/10.1145/2676723.2677264", "abstract": "This paper summarizes our experiences restructuring a core portion of our required courses for majors. Internal and external reviews of our program highlighted areas of concern in our \"systems core,\" including inconsistent student outcomes, missing required material, and inadequate opportunities for programmatic assessment. To fix these problems, we initiated a curricular review to redesign these courses. Our novel approach employed a process known as backward course design that starts with desired student outcomes and works backward toward defining content coverage. By extending this design approach to our curriculum as a whole, we have defined a new systems core structure that has tightly integrated curriculum assessment opportunities. The result is a new systems core that changes almost 1/3 of the required courses for the major. This new structure provides increased student control over their learning goals while defining a consistent foundation of systems fundamentals; it also has tightly integrated program objectives and assessments. Applying the backward design philosophy to the curriculum, rather than to a single, pre-defined course, is both a rewarding and challenging experience. In this paper, we describe this approach, summarize the results of the process, and map the outcomes to the ACM 2013 curriculum. We also provide advice and lessons learned for others who may consider such an undertaking.", "authors": [{"name": "Sharon Simmons", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Michael S. Kirkpatrick", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Mohamed Aboutabl", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "David Bernstein", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["acm curriculum", "systems fundamentals", "backward design"]}, {"title": "A Module-based Approach to Adopting the 2013 ACM Curricular Recommendations on Parallel Computing", "link": "https://dl.acm.org/doi/10.1145/2676723.2677270", "abstract": "The widespread deployment of multicore systems over the last decade has brought about major changes in the software and hardware landscape. The resulting importance of parallel computing is reflected in the 2013 Curriculum Guidelines developed by the joint ACM/IEEE taskforce. The document recommends increased coverage of parallel computing and describes a new Knowledge Area on this topic. These recommendations have already been adopted by several universities in the form of new parallel programming courses. Implementing the recommendations in a complete curriculum, however, poses many challenges, including deciding on existing material to be removed, complying with administrative and ABET requirements, and maintaining caps on graduation credit hours. This paper describes an alternative approach for adopting the 2013 curricular recommendations on parallel computing. Specifically, we use a module based approach that introduces parallel computing concepts and re-iterates them through a series of short, self-contained modules taught across several lower-division courses. Most of these concepts are then combined into a new senior-level capstone course on parallel programming. Each module covers parallelism aspects in the context of a conventional computer science topic, thus enabling us to include parallel computing without a major overhaul of the curriculum. Evaluations conducted during the first year show encouraging results for this early-and-often approach in terms of learning outcomes, student interest, and confidence gains.", "authors": [{"name": "Wuxu Peng", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Dan Tamir", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Heather Thiry", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Martin Burtscher", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Hongchi Shi", "affiliation": "Texas State University, San Marcos, TX, USA"}, {"name": "Apan Qasem", "affiliation": "Texas State University, San Marcos, TX, USA"}], "tags": ["pedagogy", "parallel computing", "module-based instruction"]}, {"title": "Session details: Paper Session: CS1/CS2: Focus on CS1", "link": "https://dl.acm.org/doi/10.1145/3251128", "abstract": "No abstract available.", "authors": [{"name": "Valerie Summet", "affiliation": "Emory University"}], "tags": []}, {"title": "Creating a Computer Simulator as a CS1 Student Project", "link": "https://dl.acm.org/doi/10.1145/2676723.2677210", "abstract": "This paper presents experiences with creating a computer simulator as a student project in a CS1 course. Each student writes the simulator using C++ during the last ten weeks of the course. The project consists of a simulated memory, and simple CPU simulator including a machine language. Additionally, students implement an assembly language and a simple high-level language with associated compiler. The course has no programming prerequisite and can be taken to fulfill a general education requirement or as the first course for students majoring in computer science or information systems. Integrating such a project in an entry level course has a number of benefits as well as challenges. The project acts as a vehicle that engages students in a breadth of computer science topics, leading into discussions of theoretical considerations, languages, and computing devices. The project components provide an active learning environment. Students are introduced to numbering systems, number conversions, and numeric representations. The computer architecture components include introductions to main memory, CPU, and memory access techniques. The transition from and motivations for, the utilization of machine languages, assembly languages and high-level languages are demonstrated with the implementation of the project. Beginning students are given opportunity to practice programming and problem solving on a project of significant complexity. The biggest challenge is organization. Management of such a project requires a well-defined plan.", "authors": [{"name": "Kian L. Pokorny", "affiliation": "McKendree University, Lebanon, IL, USA"}], "tags": ["active learning", "architecture", "compiler", "computer simulator", "CS1"]}, {"title": "Program Decomposition and Complexity in CS1", "link": "https://dl.acm.org/doi/10.1145/2676723.2677219", "abstract": "Inexperienced and novice programmers in CS 1 are often faced with the expectation that they will be able to decompose a problem into subproblems, solve these subproblems independently, and then recompose these solutions. As with programming in general, decomposition is a skill that benefits from explicit instruction and that must be practiced to see improvement. This paper introduces a term-long project approach to CS 1 that emphasizes program decomposition. Existing software quality metrics are used to assess student decomposition progression through the project and to compare the decomposition skills of students in courses using the term-long project approach against those in courses using a more typical \"stand-alone\" project approach.", "authors": [{"name": "Kurt Mammen", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Aaron Keen", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["introductory programming", "complexity", "software quality", "program decomposition"]}, {"title": "Supporting Creativity and User Interaction in CS 1 Homework Assignments", "link": "https://dl.acm.org/doi/10.1145/2676723.2677250", "abstract": "In this paper, we describe CS 1 programming assignments that encourage design creativity and that utilize user testing. All course assignments allowed for some student-defined specifications; some assignments required user tests to encourage interaction with other people. The open-ended nature of the assignments supported students' creativity and motivation to learn. The user tests provided a platform for students to share their creations and knowledge about computing with others. Both the creative aspect and sharing aspect of the assignments led to students taking ownership of their work. Overall, 41 of 44 (93.2%) students enjoyed the open-ended nature of the assignments and sharing programs with users also enhanced their understanding of their programs and computing concepts.", "authors": [{"name": "Tammy VanDeGrift", "affiliation": "University of Portland, Portland, OR, USA"}], "tags": ["creativity", "motivation", "user interaction", "novice programmers"]}, {"title": "Session details: Paper Session: Beyond CS2: Miscellaneous Topics", "link": "https://dl.acm.org/doi/10.1145/3251129", "abstract": "No abstract available.", "authors": [{"name": "Carsten Kleiner", "affiliation": "University of Applied Sciences Hannover"}], "tags": []}, {"title": "Embedding Secure Coding Instruction into the IDE: A Field Study in an Advanced CS Course", "link": "https://dl.acm.org/doi/10.1145/2676723.2677280", "abstract": "Many of the security vulnerabilities common in today's software can be prevented with standard secure coding practices. Computer science students who will become the developers of that software need to learn about those practices so they can prevent such vulnerabilities. Many computing programs are addressing this need through additional lectures, elective courses, or more holistic approaches to integrate security across curriculums. We are exploring a complementary approach, integrating secure coding education into the IDE to provide a learning opportunity in the context of writing code. In this paper, we report on two field studies using an IDE tool in an advanced Web programming course. Our results indicate that the tool can increase students' awareness and knowledge of secure programming, but to be most effective, instructors may need to incentivize its use through in-class methods and careful timing of its introduction.", "authors": [{"name": "Bill Chu", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Heather Lipford-Richter", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Jun Zhu", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}, {"name": "Michael Whitney", "affiliation": "University of North Carolina Charlotte, Charlotte, NC, USA"}], "tags": ["ide", "security education", "secure programming"]}, {"title": "Augmenting Undergraduate Computer Science Education With Programmable Smartwatches", "link": "https://dl.acm.org/doi/10.1145/2676723.2677285", "abstract": "Smartwatches are emerging as wrist-based computers capable of complex calculation and communication, and the computer science curriculum should reflect the challenges and opportunities that they provide in the education domain. This paper puts forth an experience report focused on efforts to incorporate smartwatches in an upper-level undergraduate mobile application development class during two academic terms. Lectures, in-class activities, homeworks, and projects were tailored toward providing rich design and implementation experiences for the students that engaged them in developing for the smartwatch and a paired mobile device. Our experiences highlighted how incorporating smartwatches into a mobile app development class adds a valuable dimension in terms of design and implementation challenges and allowed students to exercise some of the fundamental computer science topics.", "authors": [{"name": "Shuo Niu", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "D. Scott McCrickard", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Andrey Esakia", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["pebble", "android", "mobile", "multi-platform", "smartwatch"]}, {"title": "Simulating IBM Watson in the Classroom", "link": "https://dl.acm.org/doi/10.1145/2676723.2677287", "abstract": "IBM Watson exemplifies multiple innovations in natural language processing and question answering. In addition, Watson uses most of the known techniques in these two domains as well as many methods from related domains. Hence, there is pedagogical value in a rigorous understanding of its function. The paper provides the description of a text analytics course focused on building a simulator of IBM Watson, conducted in Spring 2014 at UNC Charlotte. We believe this is the first time a simulation containing all the major Watson components was created in a university classroom. The system achieved a respectable (close to) 20% accuracy on Jeopardy! questions, and there remain many known and new avenues of improving performance that can be explored in the future. The code and documentation are available on GitHub. The paper is a joint effort of the teacher and some of the students who were leading teams implementing component technologies, and therefore deeply involved in making the class successful.", "authors": [{"name": "Walid Shalaby", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Wlodek W. Zadrozny", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Adarsh Avadhani", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Sean Gallagher", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["student research", "qa", "ibm watson", "question answering"]}, {"title": "Session details: Special Session", "link": "https://dl.acm.org/doi/10.1145/3251188", "abstract": "No abstract available.", "authors": [{"name": "Nick Parlante", "affiliation": "Stanford University"}], "tags": []}, {"title": "Tutorial: Concurrency with Alice 3 and Java", "link": "https://dl.acm.org/doi/10.1145/2676723.2677316", "abstract": "In this special session, attendees will learn about techniques for teaching concepts of concurrency with Alice 3's latest release of a Java IDE plugin. The new plugin makes use of Java 8's lambda expression to provide a Do together control structure with simpler syntax. Using this technique and Java 8 plugin, students in early-level programming courses can make use of Alice's Do together control structure to create concurrent threads in their Java code.", "authors": [{"name": "Wanda Dann", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Don Slater", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Dennis Cosgrove", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["concurrency", "programming", "alice"]}, {"title": "Session details: Panel Session", "link": "https://dl.acm.org/doi/10.1145/3251187", "abstract": "No abstract available.", "authors": [{"name": "Katie Apone", "affiliation": "Code.org"}], "tags": []}, {"title": "Booming Enrollments: Good Times?", "link": "https://dl.acm.org/doi/10.1145/2676723.2677333", "abstract": "This panel will discuss the enrollment boom, as well as potential effective practice strategies to respond to the increasing demand for computing education. Does the current enrollment \"boom\" represent the \"third bubble\", or is it here to stay? Is there a difference in what's happening at universities that offer Ph.D. degrees or what's happening at 4-year universities and colleges? What 'best practice' strategies exist (if any) to handle the demand? And, importantly, will this \"boom\" have a positive or negative effect on underrepresented students' Join us for a lively discussion on the recent student interest in computing education at our universities and colleges.", "authors": [{"name": "Stu Zweben", "affiliation": "The Ohio State University, Columbus, OH, USA"}, {"name": "Ellen Walker", "affiliation": "Hiram College, Hiram, OH, USA"}, {"name": "Tracy Camp", "affiliation": "Colorado School of Mines, Golden, CO, USA"}, {"name": "Lecia Barker", "affiliation": "University of Texas at Austin, Austin, TX, USA"}], "tags": ["enrollment"]}, {"title": "Integrating Live Projects Into Computing Curriculum", "link": "https://dl.acm.org/doi/10.1145/2676723.2677320", "abstract": "It is well understood and has been well documented that there is much to gain by using live projects in the computer science classroom [1-13]. Live projects include those that serve a real client with a real problem as well as those those that integrate live datasets. However, the use of live projects has always come with a variety of challenges including supporting the project once it is complete, providing secure and safe access to large data sets, adjusting live client expectations, and limiting the scope of a project to the context of a single term and within the learning outcomes. The purpose of this special session is to provide attendees an introduction to and examples of the way that live projects have been integrated throughout the computing curriculum at Radford University.", "authors": [{"name": "J. D. Chase", "affiliation": "Radford University, Radford, VA, USA"}, {"name": "Jeff Pittges", "affiliation": "Radford University, Radford, VA, USA"}, {"name": "Prem Uppuluri", "affiliation": "Radford University, Radford , VA, USA"}, {"name": "Ian Barland", "affiliation": "Radford University, Radford, VA, USA"}, {"name": "Tracy Lewis", "affiliation": "Radford University, Radford, VA, USA"}], "tags": ["live projects", "computer science education"]}, {"title": "Session details: Paper Session: Automated Assessment", "link": "https://dl.acm.org/doi/10.1145/3251133", "abstract": "No abstract available.", "authors": [{"name": "Sarah Heckman", "affiliation": "North Carolina State University"}], "tags": []}, {"title": "WebWolf: Towards a Simple Framework for Automated Assessment of Webpage Assignments in an Introductory Web Programming Class", "link": "https://dl.acm.org/doi/10.1145/2676723.2677217", "abstract": "Grading student submissions of webpage assignments is difficult and time-consuming because it involves reading and evaluating source code for compliance with assignment specifications. In addition, the pages must be examined in a browser to check for required functionality such as working links. As a result fewer assignments tend to be given, or instructors spend significant time grading at the expense of working with students or other necessary activities. There is thus a need for automated assessment of webpage assignments. This paper describes WebWolf, a simple framework for automated assessment of assignments in an introductory web programming class. A WebWolf program can load web pages, find and inspect elements, click links and make assertions about expected results. WebWolf was evaluated with assignments from three different classes and on a set of assignment submissions with injected errors. WebWolf correctly identified errors in the submissions. Manual grading of a four page assignment took an average of 17 minutes, while the WebWolf program took 35 seconds.", "authors": [{"name": "Antonio Carvalho Siochi", "affiliation": "Christopher Newport University, Newport News, VA, USA"}, {"name": "William Randall Hardy", "affiliation": "Christopher Newport University, Newport News, VA, USA"}], "tags": ["web programming", "computer science education", "automated assessment"]}, {"title": "The Role of Automation in Undergraduate Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/2676723.2677226", "abstract": "Increasing enrollments in undergraduate computer science courses are overloading faculty, teaching assistants, labs, and other resources. To cope with resource problems, many universities have automated key processes such as program grading. Before replacing a manual process with an automated tool, we believe that two questions should be answered. First and most importantly, does the proposed automation contribute to or detract from student learning? Second, do the benefits outweigh the costs of the automation? In this paper we present results from an introductory programming course in which we have incorporated high levels of automation. We find that carefully designed and managed automation can improve student performance while realizing a significant savings of scarce teaching resources.", "authors": [{"name": "Chris Wilcox", "affiliation": "Colorado State University, Fort Collins, CO, USA"}], "tags": ["automated grading", "peer instruction", "automated assessment"]}, {"title": "Mechanical TA: Partially Automated High-Stakes Peer Grading", "link": "https://dl.acm.org/doi/10.1145/2676723.2677278", "abstract": "We describe Mechanical TA, an automated peer review system, and report on our experience using it over three years. Mechanical TA differs from many other peer review systems by involving human teaching assistants (TAs) as a way to assure review quality. Human TAs both evaluate the peer reviews of students who have not yet demonstrated reviewing proficiency and spot check the reviews of students who have. Mechanical TA also features \"calibration\" reviews, allowing students to quickly gain experience with the peer-review process. We used Mechanical TA for weekly essay assignments in a class of about 70 students, a course design that would have been impossible if every assignment had had to be graded by a TA. We show evidence that it helped to support student learning, leading us to believe that the system may also be useful to others.", "authors": [{"name": "Chris Thornton", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Kevin Leyton-Brown", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "James R. Wright", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["peer grading", "scalability", "peer review", "calibration", "computer science education"]}, {"title": "Session details: Paper Session: Gender & Diversity", "link": "https://dl.acm.org/doi/10.1145/3251142", "abstract": "No abstract available.", "authors": [{"name": "Lina Battestilli", "affiliation": "NCSU"}], "tags": []}, {"title": "Are Females Disinclined to Tinker in Computer Science?", "link": "https://dl.acm.org/doi/10.1145/2676723.2677296", "abstract": "Our study explores the use of tinkering strategies across genders in undergraduate students of Computer Science. We present a definition and a framework for tinkering as it applies to this context, and use these to investigate how students across genders tinker with hardware and software. Our goal is to examine gender-based differences in tinkering behaviour and to discuss the meaning and implications of these differences on teaching and learning in Computer Science. We gathered data via interviews and a questionnaire and used both qualitative and quantitative methods for analysis. Our work is preliminary and suggests further areas of research in this domain.", "authors": [{"name": "Meghan Allen", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Catherine Rawn", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Samantha Krieger", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}], "tags": ["tinkering", "gender", "computer science education", "programming"]}, {"title": "The Emerging Role of Self-Perception in Student Intentions", "link": "https://dl.acm.org/doi/10.1145/2676723.2677305", "abstract": "Recruitment and retention of women has been a persistent problem in the field of computer science. With a growing number of jobs that require a computer science degree, this problem does not only affect computer science departments with low enrollment, but also impacts industry. There is still no universally accepted explanation for the underrepresentation of women in the computing field. Various solutions have been implemented in an attempt to resolve this problem and yet gender imbalance in fields related to computer science persists.\nIn this paper we study how perceptions held by students influence their intention to pursue computer science. Through a descriptive study, using a survey given out to first semester students in a computer science class, we measure perceptions, attitudes, self-efficacy, and identity, then we study the correlations between them and students' intentions to further pursue computer science. Our goal is to understand how determinative these constructs are to having students continue in the major.\nInterestingly, self-perception, in terms of self-efficacy (does the student feel they are able to use computer science techniques to solve a problem) and identity (does the student see themselves as a computer scientist), emerged as the primary driver for differences in intention. Many other aspects turned out not to exhibit statistically significant gender differences. Understanding at a detailed level what factors influence students to pursue computer science is critical in devising effective interventions that may increase participation in computer science.", "authors": [{"name": "Isabel Kishi", "affiliation": "University of Arizona, Tucson, AZ, USA"}, {"name": "Allison Titcomb", "affiliation": "University of Arizona, Tucson, AZ, USA"}, {"name": "Richard T. Snodgrass", "affiliation": "University of Arizona, Tucson, AZ, USA"}, {"name": "Jennifer Dempsey", "affiliation": "University of Arizona, Tucson, AZ, USA"}], "tags": ["student intentions", "perceptions", "gender differences"]}, {"title": "StitchFest: Diversifying a College Hackathon to Broaden Participation and Perceptions in Computing", "link": "https://dl.acm.org/doi/10.1145/2676723.2677310", "abstract": "While coding competitions and hackathons have steadily increased in number, few women participate. Because these public events present viable opportunities to broaden participation in computing, we designed the theme to focus on \"Wear & Care\" and collaborative arrangements in a hardware hackathon, called StitchFest, in which 33 undergraduate and graduate students used the LilyPad Arduino to design wearables. Our analysis focused on the interviews conducted with eight female and seven male college participants to understand how targeted recruitment, thematic framing, space arrangements, kinds of materials and material distribution impacted participation and perception. We discuss what we learned about setting a thematic focus and fostering collaborative learning in coding competitions for broadening participation in computing.", "authors": [{"name": "Gabriela T. Richard", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Yasmin B. Kafai", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Orkan Telhan", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Barrie Adleberg", "affiliation": "E-Line Media, New York, NY, USA"}], "tags": ["gender", "hackathons", "broadening participation", "coding competitions", "wearable computing"]}, {"title": "Session details: Paper Session: Non-majors/Interdisciplinary", "link": "https://dl.acm.org/doi/10.1145/3251175", "abstract": "No abstract available.", "authors": [{"name": "Evan Barba", "affiliation": "Georgetown University"}], "tags": []}, {"title": "Computer Scientists at the Biology Lab Bench", "link": "https://dl.acm.org/doi/10.1145/2676723.2677246", "abstract": "We present the development, implementation and evaluation of a new team-taught introductory computer science course focused on the topic of bioinformatics. Our course is unique when compared to other bioinformatics and interdisciplinary (biology and computer science) courses taught to undergraduates. Instead of analyzing data provided to them, students collect their own data at the biology lab bench and then analyze their data utilizing various bioinformatics tools in the computer lab. In addition, while other bioinformatics classes focus on programming, our course introduces other computer science topics relevant to the biological problems under investigation such as artificial intelligence, networks and databases. Our approach resulted in students acquiring an appreciation for how biology and computer science function synergistically.", "authors": [{"name": "Andrea Tartaro", "affiliation": "Furman University, Greenville, SC, USA"}, {"name": "Renee J. Chosed", "affiliation": "Furman University, Greenville, SC, USA"}], "tags": ["genetics", "bioinformatics"]}, {"title": "Data Journalism: Lessons Learned While Designing an Interdisciplinary Service Course", "link": "https://dl.acm.org/doi/10.1145/2676723.2677263", "abstract": "We present the design and implementation of an interdisciplinary service course on data journalism, a first-ever collaboration between the computer science department and college of journalism at our institution. The course covered the basics of dataset acquisition, cleaning, and analysis, and taught key programming and web development concepts. Students created an online portfolio of exercises, culminating in a news story and data visualization. The course was well received by students coming from a variety of backgrounds. We provide recommendations for future iterations of this course.", "authors": [{"name": "Lindsey R. Cook", "affiliation": "U.S. News & World Report, Washington, DC, USA"}, {"name": "Christopher Plaue", "affiliation": "The University of Georgia, Athens, GA, USA"}], "tags": ["visualization", "data journalism", "curriculum", "non-majors"]}, {"title": "Introducing Computing Concepts to Non-Majors: A Case Study in Gothic Novels", "link": "https://dl.acm.org/doi/10.1145/2676723.2677308", "abstract": "This paper presents an approach to integrating computer science and quantitative literacy concepts in an undergraduate English Literature course. We show how students with no prior background in computer science can engage in computing activities directly related to their topic of interest and gain a deeper understanding of their topic as well as a better appreciation and understanding of computer science and quantitative literacy in the process. Students work in an interdisciplinary learning environment focusing on literary analysis and quantitative literacy with computing concepts acting as the bridge between the two areas.", "authors": [{"name": "Dennis Brylow", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Heather Bort", "affiliation": "Marquette University, Milwaukee, WI, USA"}, {"name": "Mimi Czarnik", "affiliation": "Alverno College, Milwaukee, WI, USA"}], "tags": ["network analysis", "computer science education"]}, {"title": "Session details: Paper Session: CS1/CS2: Themed Approaches", "link": "https://dl.acm.org/doi/10.1145/3251136", "abstract": "No abstract available.", "authors": [{"name": "Suzanne Matthews", "affiliation": "United States Military Academy"}], "tags": []}, {"title": "Statistics-infused Introduction to Computer Science", "link": "https://dl.acm.org/doi/10.1145/2676723.2677218", "abstract": "The ability to use computational tools to collect, organize, visualize, and analyze data is a valuable skill both inside and outside of computer science. In this paper we describe the design and implementation of a statistics-infused introduction to computer science, developed in collaboration with statistics faculty, at St. Olaf College. We propose that there exists a growing demographic of 'data-centric' students who expect to write small amounts of code in the context of work in other fields, and who are eager to take a CS course adapted to their needs. This particular data-centric CS1 course has been a catalyst for collaboration between faculty in multiple fields and multiple institutions.", "authors": [{"name": "Olaf A. Hall-Holt", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Kevin R. Sanft", "affiliation": "St. Olaf College, Northfield, MN, USA"}], "tags": ["data science", "cs1", "computer science education", "statistics"]}, {"title": "Building Worlds: Bridging Imperative-First and Object-Oriented Programming in CS1-CS2", "link": "https://dl.acm.org/doi/10.1145/2676723.2677249", "abstract": "When teaching introductory computing courses, we are often guilty of writing rudimentary programming assignments - those meant to illustrate one simple language feature, comprised mostly of code that will never be used beyond the assignment. Admittedly, first-year computing students must navigate a myriad of challenges, sometimes learning both imperative and object-oriented programming, in addition to mastering syntax, logic,debugging, and testing. To tackle the difficulties of developing CS 1 and CS 2 courses that engage students in learning while addressing the numerous course objectives, we chose to challenge students to create virtual worlds in one large comprehensive two-quarter long programming project. Students were granted creative freedom within a framework that gradually introduced many programming skills and that required the mastery of object-oriented programming and some engaging algorithms. We present the curriculum, performance comparisons, and observations. Overall, we consider the experimental courses a success that will have an impact on our department's future curricular offerings.", "authors": [{"name": "Aaron Keen", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}, {"name": "Zo\u00eb Wood", "affiliation": "California Polytechnic State University, San Luis Obispo, CA, USA"}], "tags": ["introductory programming", "object-oriented programming"]}, {"title": "A Data Programming CS1 Course", "link": "https://dl.acm.org/doi/10.1145/2676723.2677309", "abstract": "This paper reports on our experience teaching introductory programming by means of real-world data analysis. We have found that students can be motivated to learn programming and computer science concepts in order to analyze DNA, predict the outcome of elections, detect fraudulent data, suggest friends in a social network, determine the authorship of documents, and more. The approach is more than just a collection of \"nifty assignments\"; rather, it affects the choice of topics and pedagogy.\nThis paper describes how our approach has been used at four diverse colleges and universities to teach CS majors and non-majors alike. It outlines the types of assignments, which are based on problems from science, engineering, business, and the humanities. Finally, it offers advice for anyone trying to integrate the approach into their own institution.", "authors": [{"name": "Ben Tribelhorn", "affiliation": "Seattle University, Seattle, WA, USA"}, {"name": "Ruth E. Anderson", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Robert Ord\u00f3\u00f1ez", "affiliation": "Southern Adventist University, Collegedale, TN, USA"}, {"name": "Michael D. Ernst", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Paul Pham", "affiliation": "The Evergreen State College, Olympia, WA, USA"}], "tags": ["data programming", "cs1", "introductory computing", "data processing"]}, {"title": "Session details: Paper Session: Beyond CS2: Programming Languages/Compilers", "link": "https://dl.acm.org/doi/10.1145/3251137", "abstract": "No abstract available.", "authors": [{"name": "Monisha Pulimood", "affiliation": "The College of New Jersey"}], "tags": []}, {"title": "A Descent into the Maelstrom: Teaching Legacy Programming and Re-engineering", "link": "https://dl.acm.org/doi/10.1145/2676723.2677213", "abstract": "Computer science is a discipline which has swiftly evolved since its inception in the 1950s. This has invariably meant that new courses introduced into a curriculum are often of the bleeding-edge sort: genetic algorithms, parallel processing, mobile-based applications. Programming languages too have changed as progress ensues. Yet little is discussed of the darker side of computer science - the huge repositories of what some term legacy software running our financial, scientific and engineering systems. This paper looks at the introduction of a course which teaches legacy languages and the process of re-engineering with the aim to instill a reverence for the role legacy software plays in the modern world.", "authors": [{"name": "Michael Wirth", "affiliation": "University of Guelph, Guelph, ON, Canada"}], "tags": ["legacy software", "fortran", "cobol", "reengineering", "ada"]}, {"title": "A Framework for Teaching Programming Languages", "link": "https://dl.acm.org/doi/10.1145/2676723.2677245", "abstract": "This paper provides a description of a framework for programming language implementation that is accessible to students in a one semester course focused on programming languages. Rather than concentrating solely on language features, this paper describes a framework where imperative, functional, and logic programming languages are all used to develop a compiler for a non-trivial subset of a functional programming language. Provided by the framework are a virtual machine, a disassember of Python programs, a partial implementation of a Standard ML compiler with suggested tests, and a partial implementation of a type inference system implemented using Prolog, again with suggested tests. Classroom experience gained while using this framework is also shared. A suggested fourteen week sequence is provided. Real reactions from students and reflections on coverage of the ACM 2013 Curricula guildelines conclude the paper.", "authors": [{"name": "Kent D. Lee", "affiliation": "Luther College, Decorah, IA, USA"}], "tags": ["virtual machines", "type checking", "programming languages", "compilers", "type inference"]}, {"title": "The Interpreter In An Undergraduate Compilers Course", "link": "https://dl.acm.org/doi/10.1145/2676723.2677314", "abstract": "An undergraduate compilers course poses significant challenges to students, in both the conceptual richness of the major components and in the programming effort necessary to implement them. In this paper, I argue that a related architecture, the interpreter, serves as an effective conceptual framework in which to teach some of the later stages of the compiler pipeline. This framework can serve both to unify some of the major concepts that are taught in a typical undergraduate course and to structure the implementation of a semester-long compiler project.", "authors": [{"name": "John H.E. Lasseter", "affiliation": "Hobart and William Smith Colleges, Geneva, NY, USA"}], "tags": ["partial evaluation", "design patterns", "abstract interpretation", "compilers education"]}, {"title": "Panel on Flipped Classrooms", "link": "https://dl.acm.org/doi/10.1145/2676723.2677328", "abstract": "Flipped classrooms are a new twist on an old idea: homework. The basic formula is simple: do the prep work before coming to class and come to class ready to discuss that work, do an activity to reinforce what you learned, or even take a quiz on the reading or research that was assigned. But as with all approaches to teaching, the reality is never that simple. This panel will report the experiences of four \"flippers\" and explore the pros and cons of those experiences. Educators who are considering flipping all or part of their courses will gain insight into how to do so to their and, more importantly, their students'-advantage, while those who have used this technique may gain new insights into approaches that might help them be more successful if they faced any issues similar to those of the panelists.", "authors": [{"name": "Kate Lockwood", "affiliation": "University of St. Thomas, St. Paul, MN, USA"}, {"name": "Jeff L. Popyack", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Jesse M. Heines", "affiliation": "Univ. of Massachusetts Lowell, Lowell, MA, USA"}, {"name": "Briana Morrison", "affiliation": "Southern Polytechnic State University, Marietta, GA, USA"}, {"name": "Doug Baldwin", "affiliation": "SUNY Geneseo, Geneseo, NY, USA"}], "tags": ["flipped classrooms"]}, {"title": "Computer Science Principles Curricula: On-the-ground; adoptable; adaptable; approaches to teaching", "link": "https://dl.acm.org/doi/10.1145/2676723.2677323", "abstract": "No abstract available.", "authors": [{"name": "Owen Astrachan", "affiliation": "Duke University, Durham, USA"}, {"name": "Bennett Brown", "affiliation": "Project Lead The Way, Indianapolois, USA"}, {"name": "Bradley Beth", "affiliation": "University of Texas at Austin, Austin, USA"}, {"name": "Marie desJardins", "affiliation": "University of Maryland Baltimore County, Baltimore, OH, USA"}, {"name": "Ralph Morelli", "affiliation": "Trinity College, Hartford, USA"}, {"name": "Calvin Lin", "affiliation": "University of Texas at Austin, Austin, USA"}, {"name": "Nigmanath Sridhar", "affiliation": "Cleveland State University, Cleveland, USA"}, {"name": "Daniel D. Garcia", "affiliation": "University of California, Berkeley, Berkeley, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, USA"}], "tags": ["advanced placement", "computer science principles", "broadening participation", "professional development"]}, {"title": "A Classroom Tested Accessible Multimedia Resource for Engaging Underrepresented Students in Computing: The University of Maryland Curriculum In A Box", "link": "https://dl.acm.org/doi/10.1145/2676723.2691870", "abstract": "In 2012, women earned 18% of computer science degrees; African American and Hispanic students made up less than 20% of computing degree holders that year. Research shows that relatable role models and engaging curriculum are required to engage underrepresented students in computing. There is a need for engaging and relatable curriculum to be delivered to students at the middle school level, when these students first begin to lose interest in computing. Thus, based on the results of a survey of current and former middle school computing teachers and a comprehensive literature review, we developed the University of Maryland Curriculum In A Box (CIAB). The CIAB includes profiles of relatable computing role models, accessible video and text curriculum and challenge projects for HTML/CSS. To simulate a \"real world\" programming environment, the CIAB guides students through programming within open source social media frameworks and Github. The CIAB also includes teacher enablement resources such as assessments and a week-by-week implementation guide. The CIAB was successfully implemented with a group of 6th and 7th grade students in Prince Georges (PG) County, a majority minority county in Maryland. Our demo will provide a walk-through of the CIAB assets, accessibility features and design process, as well as implementation advice informed by our CIAB implementation in PG County.", "authors": [{"name": "Sean Kross", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Isabella Coronado", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Elissa Redmiles", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Mary Allison Abad", "affiliation": "University of Maryland, College Park, MD, USA"}, {"name": "Amelia Malone", "affiliation": "University of Maryland, College Park, MD, USA"}], "tags": ["accessible", "active learning", "middle school", "curriculum", "web-based"]}, {"title": "Using BlueJ to Code Java on the Raspberry Pi", "link": "https://dl.acm.org/doi/10.1145/2676723.2691872", "abstract": "The Raspberry Pi is an affordable and powerful (for its size) credit-card sized computer that has become very popular since its launch two years ago. It functions as a desktop machine but with easy access to peripheral hardware, such as buttons, sensors and LEDs, via its GPIO pins. Using a Java IDE like Eclipse or NetBeans is out of the question as the Pi is not powerful enough to run those. However, the beginners' Java IDE BlueJ is ideal in this situation: lightweight enough to run on the Pi, but well-featured and designed for education. This demo will show how BlueJ's features such as the object bench allow easy exploration and manipulation of the Pi's GPIO pins, and how easy it can be to write some Java to interact with peripherals connected to the Pi. More information on BlueJ and the Raspberry Pi is available at http://bluej.org/raspberrypi/", "authors": [{"name": "Michael K\u00f6lling", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Amjad Altadmri", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Neil C.C. Brown", "affiliation": "University of Kent, Canterbury, United Kingdom"}], "tags": ["bluej", "raspberry pi"]}, {"title": "Session details: Paper Session: Block Languages", "link": "https://dl.acm.org/doi/10.1145/3251141", "abstract": "No abstract available.", "authors": [{"name": "Sen Zhang", "affiliation": "SUNY Oneonta"}], "tags": []}, {"title": "DBSnap: Learning Database Queries by Snapping Blocks", "link": "https://dl.acm.org/doi/10.1145/2676723.2677220", "abstract": "A significant amount of recent research in Computer Science Education has focused on studying block-based programming. In this approach, computer programs are created by connecting blocks and the blocks' shapes determine the permitted connections. The focus is on the program's logic instead of its syntax. This paper introduces DBSnap, a web-based application to build database queries, particularly relational algebra queries, by snapping blocks. DBSnap fully supports the construction of intuitive database query trees, which is one of the most effective approaches to teach database queries. DBSnap is also highly dynamic and shows the query results as the query is being built. The user can also inspect, at any time, the intermediate results of any query node. This paper presents DBSnap's design and implementation details, an evaluation of its effectiveness as a learning environment, and a thorough comparison with alternative ways to teach query languages. DBSnap is publicly available and aims to have the same transformational effect on database learning as previous block-based systems had on traditional programming learning.", "authors": [{"name": "Jaime Chon", "affiliation": "Arizona State University, Glendale, AZ, USA"}, {"name": "Yasin N. Silva", "affiliation": "Arizona State University, Glendale, AZ, USA"}], "tags": ["databases curricula", "query languages", "relational algebra"]}, {"title": "Language Migration in non-CS Introductory Programming through Mutual Language Translation Environment", "link": "https://dl.acm.org/doi/10.1145/2676723.2677230", "abstract": "In the past decade, improvements have been made to the environments used for introductory programming education, including by the introduction of visual programming languages such as Squeak and Scratch. However, migration from these languages to text-based programming languages such as C and Java is still a problem. Hence, using the OpenBlocks framework proposed at the Massachusetts Institute of Technology, we developed a system named BlockEditor, which can translate bidirectionally between Block (the block language used here) and Java. We conducted an empirical study of this system in an introductory programming course taken by approximately 100 university students not majoring in computer science. When students were given opportunities to select the language to solve their programming assignments, we traced their selection by tracking working time with BlockEditor or Java for each individual student. The results illustrate the nature of the seamless migration from Block to Java, and show that there is great diversity in the timing and speed of migration to Java by each individual. Additionally, we found that students with low self-evaluation of their skill chose to use Block at a significantly higher rate than did students with high self-evaluation. This suggests that BlockEditor can act as scaffolding for students by promoting mixed programming between Block and Java in their migration phase.", "authors": [{"name": "Takashi Ohata", "affiliation": "Shizuoka University, Shizuoka, Japan"}, {"name": "Manabu Sugiura", "affiliation": "Keio University, Kanagawa, Japan"}, {"name": "Yoshiaki Matsuzawa", "affiliation": "Shizuoka University, Shizuoka, Japan"}, {"name": "Sanshiro Sakai", "affiliation": "Shizuoka University, Shizuoka, Japan"}], "tags": ["visual programming", "programming education", "scaffolding", "language migration"]}, {"title": "Scratch: A Way to Logo and Python", "link": "https://dl.acm.org/doi/10.1145/2676723.2677256", "abstract": "There is concern amongst teachers about how to support all pupils in making the transition from popular graphical languages like Scratch to text-based languages like Python. In a new subject, not taught widely before at both primary and secondary education in England, there is inevitably a lack of tuned-in pedagogical expertise. In this paper, the authors address the transition process by exploring established pedagogy in Computer Science, and other subjects including Mathematics, Science and Languages, and by sharing and testing their findings with pupils and teachers in the classroom. Teaching the fundamentals of programming is well served by applying sequential solutions in both graphical and text-based languages. This practitioner action research paper focuses on scaffolding support for pupils when making the transition from graphical to text-based languages. In an approach which uses graphical languages in conjunction with, not in place of, text-based programming languages, the authors discuss ways to tackle the difficulties presented to pupils by text-based languages, and propose a tested strategy for teachers to enable pupils to undertake the transition successfully.", "authors": [{"name": "Mark Dorling", "affiliation": "Computing at School and Network of Excellence, Swindon, United Kingdom"}, {"name": "Dave White", "affiliation": "Computing at School and Network of Excellence, Swindon, United Kingdom"}], "tags": ["python", "transition process", "logo", "text-based programming language", "unplugged activity", "scratch", "computer science education", "graphical programming language", "computational thinking"]}, {"title": "An Effective Alternative to the Grace Hopper Celebration", "link": "https://dl.acm.org/doi/10.1145/2676723.2677233", "abstract": "Motivated by the significance and the consequences of women's underrepresentation in computing, researchers evaluated the effectiveness of a project linking ACM-W's (Association for Computing Machinery's Women in Computing) Celebrations of Women in Computing (conferences) with projects sponsored by two additional organizations in the United States, the Anita Borg Institute's Grace Hopper Celebration of Women in Computing (GHC) and the National Center of Women & IT's Annual Summit. The collaborative project, funded by the National Science Foundation and titled, the Grace Hopper Regional Consortium, featured twelve new regional Celebrations of Women in Computing (Celebrations). An external assessment agency surveyed conference organizers and participants. The paper analyzes data derived from the surveying, demonstrating the impact of the conferences on Celebration attendees, and shows for the first time a comparison of identical survey items from separate GHC and Celebrations assessments.", "authors": [{"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Spencer, IN, USA"}, {"name": "Kay Sloan", "affiliation": "Rockman et al, Bloomington, IN, USA"}], "tags": ["gender issues", "broadening participation in computing", "acm-w"]}, {"title": "Improving Undergraduate Student Performance in Computer Science at Historically Black Colleges and Universities (HBCUs) through Industry Partnerships", "link": "https://dl.acm.org/doi/10.1145/2676723.2677277", "abstract": "While computer science (CS) continues to permeate every aspect of society, the number of high-school students that are adequately prepared to enroll in university computer science programs is declining. To address the nation's needs it is clear that the retention rates of underrepresented minorities in CS programs across the country must increase, including the instruction and retention of students at Historically Black Colleges and Universities (HBCUs). At the university, a multi-phased program was developed that first partnered the department with Google to develop a unique program that incorporated Google software developers and undergraduate students, as well as course restructuring to better prepare underclassmen in their first three courses of study. First-year results indicated the program was successful in increasing student retention and interest in CS.", "authors": [{"name": "Ketly Jean-Pierre", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "Legand Burge", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "A. Nicki Washington", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "Qi'Anne Knox", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "Marlon Mejias", "affiliation": "Howard University, Washington, DC, USA"}], "tags": ["googler-in-residence", "undergraduate", "google", "computer science education"]}, {"title": "A Comparative Study of the Acceptability of Signs for the Brazilian Sign Language Created in Person and Remotely", "link": "https://dl.acm.org/doi/10.1145/2676723.2677293", "abstract": "Teaching a programming language to a person who is deaf or hearing impaired (DHI) has, along with other challenges, the lack of signs to convey basic concepts in computing. This shortage of signs makes learning even harder for the DHI.\nThe creation of signs from co-present discussions involving instructors, translators and the DHI can lead to regionalism, which might hinder their acceptance by members of other DHI communities throughout the country. A way to combat regionalism is through the asynchronous collaborative creation of signs, normally supported by web tools.\nBut are the signs created through web discussions inferior in any way to those created via co-present discussions? This article presents a comparative study on the acceptance of signs created by both methods showing that acceptable and legitimate signs can also be produced using web discussions and the users can not distinguish from which method they come from.", "authors": [{"name": "Anibal C. de Oliveira", "affiliation": "State University of Cear\u00e1, Fortaleza, Brazil"}, {"name": "Gerarda N.C. Gomes", "affiliation": "State University of Cear\u00e1, Fortaleza, Brazil"}, {"name": "Lidiane C. Silva", "affiliation": "State University of Cear\u00e1, Fortaleza, Brazil"}, {"name": "Adriano T. de Freitas", "affiliation": "Federal Institute of Cear\u00e1, Maracana\u00fa, Brazil"}, {"name": "Bruno Queiroz", "affiliation": "Distance Education Laboratory for People with Disabilities, Fortaleza, Brazil"}, {"name": "Francisco C. de M.B. Oliveira", "affiliation": "State University of Cear\u00e1, Fortaleza, Brazil"}], "tags": ["sign language", "accessibility", "deaf", "collaborative web forum"]}, {"title": "Session details: Paper Session: Student Engagement: Flipped Classroom", "link": "https://dl.acm.org/doi/10.1145/3251143", "abstract": "No abstract available.", "authors": [{"name": "Madeleine Schep", "affiliation": "Columbia College"}], "tags": []}, {"title": "Beyond the Flipped Classroom: Learning by Doing Through Challenges and Hack-a-thons", "link": "https://dl.acm.org/doi/10.1145/2676723.2677224", "abstract": "Traditionally, the inverted (or flipped) classroom has students complete traditional, passive learning tasks (e.g., watching lectures) while at home and uses class time to actualize what is learned through labs, discussions, and exercises. In this paper, we present an instructional model for teaching computer science (CS) that compounds features of the flipped classroom with components of peer instruction and formative assessment. Outside of class, in lieu of a lecture, students worked collaboratively on learning challenges that introduced content through a series of hands-on exercises. During class time, we used hack-a-thons to create an active classroom environment to promote peer coding and cultivate the growth of relevant real-world technical skills. Class work was digitally synced to Google Drive in real-time to allow instructors the opportunity to customize on-the-spot feedback. Further, we used journals as a formative assessment measure to synthesize student interests and opinions into our continued design of the class. In this paper, we describe our pedagogical model and discuss the results and lessons learned from the class using mined data from Google Drive and student journal responses.", "authors": [{"name": "Tom Yeh", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}, {"name": "Michael Skirpan", "affiliation": "University of Colorado at Boulder, Boulder, CO, USA"}], "tags": ["flipped classroom", "inverted classroom", "formative assessment", "pedagogy", "hack-a-thon", "peer instruction"]}, {"title": "Flipped Classroom Strategies for CS Education", "link": "https://dl.acm.org/doi/10.1145/2676723.2677252", "abstract": "The basic principles of a flipped classroom teaching method are to deliver content outside of the class and to move active learning into the classroom. There are many strategies for delivering the content online, such as having instructors prepare online lectures, wrapping the course around a MOOC, and curating online videos from various sources. There are also many strategies for including active learning in the classroom that go beyond providing programming labs, and can include various forms of peer instruction. In this paper we describe our experiences flipping four different computer science classes across multiple semesters over two years. This breadth of experience with classroom flipping has enabled us to compare strategies and approaches and develop an understanding of which approaches appear to work under which circumstances. We discuss how we structured out-of-class preparatory work, how we created or sourced online videos, how we used active learning activities in-class to scaffold skills development and identify students' misconceptions, and how we structured teams for in class activities. This paper contributes a set of flexible strategies to consider for provision of curricular content out-of-class, structuring students' preparatory work, applying active learning of skills and concepts, and leveraging social interaction and peer instruction for CS education. We present the impact of our approaches based upon leading indicators of course evaluations and student surveys. We discuss lessons learned and students' responses to our strategies.", "authors": [{"name": "Celine Latulipe", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Heather Lipford", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Audrey Rorrer", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Mary Lou Maher", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["strategies for active learning", "flipped classroom", "online video"]}, {"title": "The Effectiveness of Video Quizzes in a Flipped Class", "link": "https://dl.acm.org/doi/10.1145/2676723.2677302", "abstract": "The use of online videos and flipped classrooms is a natural fit for many CS courses, especially in the introductory sequence, and the use of these techniques is growing. However, the benefits of these techniques depend heavily on student preparation before class meetings. This paper presents tests of the effectiveness of basic multiple choice quizzes as gateway checks in a flipped classroom by looking at the impact they have on student grades. Programming aptitude and learning approaches were considered as additional factors. Ignoring aptitude and learning approaches, statistical analysis of the student grades did not support our hypothesis that the gate-check video quizzes would be beneficial. Nor did it support our hypothesis that the benefit of quizzes would be greatest for students who had lower aptitudes entering the class. However, there was some evidence that it might have helped raise the grades of students who have a propensity toward surface learning.", "authors": [{"name": "Mark C. Lewis", "affiliation": "Trinity University, San Antonio, TX, USA"}, {"name": "Lisa L. Lacher", "affiliation": "University of Houston - Clear Lake, Houston, TX, USA"}], "tags": ["video quizzes", "flipped classroom", "cs1"]}, {"title": "Session details: Paper Session: CS1/CS2: Persistance and Attitudes", "link": "https://dl.acm.org/doi/10.1145/3251144", "abstract": "No abstract available.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University"}], "tags": []}, {"title": "Reconsidering the Impact of CS1 on Novice Attitudes", "link": "https://dl.acm.org/doi/10.1145/2676723.2677235", "abstract": "Student success in an introductory programing course is crucial, both because it influences retention and because student attitudes and habits in a first course can have a lasting impact on student success in computer science as a field. In this paper we present results about student attitudes and habits before and after a CS1 class. Statistically significant attitude differences were found in three areas: students were less likely to report they were good at programming, more likely to agree they are challenged by programming problems they can't understand immediately, and are less likely to report that computer science allows them to be creative. Statistically significant differences in female and first-quarter responses were also found.", "authors": [{"name": "John Lalor", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Theresa Steinbach", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Amber Settle", "affiliation": "DePaul University, Chicago, IL, USA"}], "tags": ["python", "engagement", "attitudes", "cs1", "programming", "confidence", "community"]}, {"title": "Drop, Fail, Pass, Continue: Persistence in CS1 and Beyond in Traditional and Inverted Delivery", "link": "https://dl.acm.org/doi/10.1145/2676723.2677273", "abstract": "Much attention has been paid to the failure rate in CS1 and attrition between CS1 and CS2. In our study of 1236 CS1 students, we examine subgroups of students, to find out how characteristics such as prior experience and reason for taking the course influence who drops, fails, or passes, and who continues on to CS2. We also examine whether student characteristics influence outcomes differently in traditional vs. inverted offerings of the course. We find that more students in the inverted offering failed the midterm test, but those who failed were much more likely to either drop the course or recover and ultimately pass the course. While we find no difference between the offerings in the overall drop-fail-pass rates or in the percentage and types of students who go on to take CS2, there is a significant, widely felt, boost in exam grades in the inverted offering.", "authors": [{"name": "Michelle Craig", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Diane Horton", "affiliation": "University of Toronto, Toronto, ON, Canada"}], "tags": ["novice programming", "drop rate", "flipped classroom", "inverted classroom", "cs1", "attrition"]}, {"title": "Towards Incremental Separation of Surmountable and Insurmountable Programming Difficulties", "link": "https://dl.acm.org/doi/10.1145/2676723.2677294", "abstract": "In an offering of CS 1, we monitored the amount of help students in a class received through various means. We found that most students wanted help that went beyond office hours and email, and that for the vast majority of them, their grades correlated positively with the amount of help they received. However, increasing help also requires increasing instructional resources unless techniques can be found to separate the surmountable difficulties from the insurmountable ones. We have developed such a technique that looks at individual interaction logs and classifies difficulties incrementally as they occur. The insight behind the technique is that when students face surmountable difficulties, they tend to repeat certain action sequences, which can be detected to distinguish the surmountable difficulties from the insurmountable ones. A lab study shows that the mechanism gives significantly better results than the baselines.", "authors": [{"name": "Mauro Pichiliani", "affiliation": "Instituto Tecnologico de Aeronautica, S\u00e3o Jos\u00e9 do Campos, Brazil"}, {"name": "Jason Carter", "affiliation": "Cisco Systems, Research Triangle Park, NC, USA"}, {"name": "Prasun Dewan", "affiliation": "University of North Carolina, Chapel Hill, NC, USA"}], "tags": ["recommender systems", "help awareness"]}, {"title": "Session details: Paper Session: Beyond CS2: Algorithms", "link": "https://dl.acm.org/doi/10.1145/3251145", "abstract": "No abstract available.", "authors": [{"name": "Ariel Ortiz", "affiliation": "Tecnolgico de Monterrey, Campus Estado de M\u00e9xico"}], "tags": []}, {"title": "Illustrating the Interaction of Algorithms and Data Structures Using the Matching Problem", "link": "https://dl.acm.org/doi/10.1145/2676723.2677212", "abstract": "A thorough understanding of algorithms and data structures is essential for any student of Computer Science. In this paper we present a sequence of programming projects that elegantly integrate both the study of algorithmic paradigms with an illustration of how the choice of data structure significantly impacts an algorithm. We do this in the context of a single, easily understood problem domain, that of finding a maximum matching in a graph. By focusing on only a single problem, students more fully appreciate the concept that any problem can be solved in a variety of different ways.", "authors": [{"name": "Joan M. Lucas", "affiliation": "The College at Brockport, State Univ. of New York, Brockport, NY, USA"}], "tags": ["matching problem", "data structures", "algorithm design paradigms", "complexity analysis"]}, {"title": "Fibonacci in The Curriculum: Not Just a Bad Recurrence", "link": "https://dl.acm.org/doi/10.1145/2676723.2677215", "abstract": "As an advocate of infusing various algorithmic and mathematical aspects when teaching about programming, I have come to realize that an early such practice is essential for a rounded computer science education. In this paper, I show how this can be done while focusing on one theme: Fibonacci.\nPerhaps the most common use of Fibonacci has been to show the power of recurrence in implementing the Fibonacci sequence, which is often accompanied by a caveat that it is not the best implementation (very slow). Nevertheless, the sequence, with its rabbit story and celebrated golden ratio, is a rather exciting \"gadget\" for many students and it often pays off to introduce it. Therefore, I explore ways to use Fibonacci (the binary word) and the golden ratio for guiding implementation, and to successfully convey an important message of computer science that programming is not just about writing code. This will be done in the context of one dimensional and two dimensional arrays.", "authors": [{"name": "Saad Mneimneh", "affiliation": "Hunter College and the Graduate Center of the City University of New York, New York, NY, USA "}], "tags": ["skolem sequence", "wythoff pairs", "golden ratio", "infinite fibonacci word", "flood filling"]}, {"title": "Randomized Reduction", "link": "https://dl.acm.org/doi/10.1145/2676723.2677251", "abstract": "Despite their power and simplicity, randomized algorithms are often under-emphasized in the classroom (and as a consequence, ultimately in practice) since they can be more challenging to analyze than their deterministic counterparts. In this paper, we describe a simplified framework that streamlines the analysis of dozens of common randomized algorithms and data structures. The key component of this framework, which we call the randomized reduction lemma, builds on intuition that is already commonly held by most students based on their experience with deterministic algorithms, and reduces the necessary prerequisites one must know from probability theory to a minimal subset. For example, one can prove that randomized quicksort runs in O(n log n) time with high probability in two paragraphs, without knowledge of random variables or Chernoff bounds. This paper is intended to be self-contained and written in a sufficiently student-friendly fashion so that it may serve as a classroom handout.", "authors": [{"name": "Brian C. Dean", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Chad G. Waters", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Raghuveer Mohan", "affiliation": "Clemson University, Clemson, SC, USA"}], "tags": ["randomized algorithms", "randomization"]}, {"title": "Curricular Assessment: Tips and Techniques", "link": "https://dl.acm.org/doi/10.1145/2676723.2677319", "abstract": "This session seeks to initiate a discussion regarding simple approaches through which faculty can gain meaningful insights into components of their courses and/or programs with only modest expenditures of time and energy.", "authors": [{"name": "John F. Dooley", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Sue Fitzgerald", "affiliation": "Metropolitan State University, St. Paul, MN, USA"}, {"name": "Henry M. Walker", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["curriculum", "assessment"]}, {"title": "Best Practices for IRB Approval: Four Perspectives", "link": "https://dl.acm.org/doi/10.1145/2676723.2677330", "abstract": "No abstract available.", "authors": [{"name": "Amanda Holland-Minkley", "affiliation": "Washington & Jefferson College, Washington, PA, USA"}, {"name": "Mark Guzdial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Janice E. Cuny", "affiliation": "National Science Foundation, Arlington, VA, USA"}, {"name": "Michael S. Kirkpatrick", "affiliation": "James Madison University, Harrisonburg, VA, USA"}], "tags": ["irb", "ethics", "human subjects research"]}, {"title": "Supporting the Computer Science Learning Process", "link": "https://dl.acm.org/doi/10.1145/2676723.2677334", "abstract": "How do students learn computer science? Successful students climb a ladder of learning and meta-learning. Not only do they learn content, but also they gain proficiency with new processes that aid their learning. Each learner takes her/his own path, of course, but the beginning CS student must clear a number of hurdles that we can identify and help them with. In programming, for example, one might struggle with the leap from visual programming to text programming, or from using well-designed integrated tutorials while learning one language, to the chaos of the Internet when learning another.\nNumerous ongoing efforts in computer science education and professional development [5, 6] have contributed to tremendous increases in the numbers of students studying computer science at all levels. These efforts have included academic innovations as well as partnerships with industry, government, and non-profit organizations [7]. Expanded access means that more students have the opportunity to study computer science, but also that the diverse needs of many new learners need to be understood and addressed.", "authors": [{"name": "Caroline Meeks", "affiliation": "Prospect Hill Academy, Boston, MA, USA"}, {"name": "Amy Briggs", "affiliation": "Middlebury College, Middlebury, VT, USA"}, {"name": "David Bau", "affiliation": "Google, Boston, MA, USA"}, {"name": "Pat Yongpradit", "affiliation": "Code.org, Washington D.C., DC, USA"}], "tags": ["exploring computer science", "k-12 curriculum", "code.org", "cs principles", "professional development", "pencil code", "computer science education"]}, {"title": "Looking Glass", "link": "https://dl.acm.org/doi/10.1145/2676723.2691873", "abstract": "Looking Glass is the successor to Storytelling Alice designed for middle and high school students. By dragging and dropping, users can construct programs that direct the behavior of characters in a 3D scene. The system consists of a downloadable application and an online community.\nLooking Glass is intended to support creative, open-ended programming. To help spark ideas, the Looking Glass community hosts a set of community-created templates and remixes, animations that can be imported into any new world. These templates and remixes can help to inspire a story line. In more formal settings, templates and remixes allow an instructor to provide shared resources for an assignment and for students to collaborate with each other.\nExploring the behavior of existing code examples can be a powerful way to learn new skills. In addition to providing story inspiration, community remixes serve as code examples that students can explore. To support users in learning new skills based on code shared through remixes, Looking Glass includes a play and explore mode in which the environment records an execution history and changes to the 3D scene as a program runs. Users can scroll back in time, see which actions were executing, and replay individual statements.\nA free download is available at lookingglass.wustl.edu for Windows, Mac, and Linux.", "authors": [{"name": "Caitlin Kelleher", "affiliation": "Washington University in St. Louis, St Louis, MO, USA"}], "tags": ["k-12", "interactive program visualization", "block-based programming", "online community"]}, {"title": "EngageCSEdu: CS1 and CS2 Materials for Engaging and Retaining Undergraduate CS Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2691875", "abstract": "How do you engage students in the computer science classroom? In this Demo Session we will examine this question within the context of EngageCSEdu (http://www.engage-csedu.org), a web-based collection of instructional materials for introductory CS classes. Developed by computer scientists, social scientists, and learning scientists from California State University, Long Beach, Carnegie Mellon University, University of Pittsburgh, the National Center for Women & Information Technology (NCWIT), and Google, EngageCSEdu is comprised of ~1500 instructional materials (such as assignments, projects, labs, and assessments) and 17 Engagement Practices (strategies and techniques for engaging and retaining students based on CS education and social science research). During this session we will demonstrate key features of EngageCSEdu, discuss how research-based findings on gender diversity and student engagement were used in its development, and invite participants to contribute their ideas for engaging and retaining students. Attendees will explore EngageCSEdu with members of the original development team and discuss how this focused and comprehensive open collection of instructional materials can be effectively used to support instructors. As a product by and for the CS education community, this demo is an opportunity for potential users to provide valuable feedback and input into the ongoing development and dissemination of materials on EngageCSEdu. By the end of this demonstration participants will be more familiar with the research-based factors shown to increase engagement among undergraduate students, particularly women and underrepresented minorities, and have an opportunity to play an active role in positioning EngageCSEdu within the CS education community.", "authors": [{"name": "Beth A. Quinn", "affiliation": "National Center for Women & Information Technology, Boulder, CO, USA"}, {"name": "Cameron L. Fadjo", "affiliation": "Google, Inc., Mountain View, CA, USA"}, {"name": "Alvaro Monge", "affiliation": "California State University Long Beach, Long Beach, CA, USA"}], "tags": ["student engagement", "curriculum issues", "engagement practice", "instruction", "cs1", "pedagogy", "student retention", "gender diversity", "cs2"]}, {"title": "Session details: Paper Session: Student Engagement: Self Explanation", "link": "https://dl.acm.org/doi/10.1145/3251150", "abstract": "No abstract available.", "authors": [{"name": "Maria Jump", "affiliation": "King's College"}], "tags": []}, {"title": "Expression of Abstraction: Self Explanation in Code Production", "link": "https://dl.acm.org/doi/10.1145/2676723.2677222", "abstract": "Novices struggle with the implementation of algorithms in code. Assessments asking students to describe algorithms in code have shown that use of abstractions in the descriptions have correlated with students' ability to produce algorithms in code. In this study, 24 introductory computer science students were asked to think out loud while writing code involving simple array algorithms in an online system. Student statements were classified based on the level of abstraction used in the statement. An analysis of the statements revealed that students with greater proficiency at writing code were more likely to use multiple levels of abstraction when describing the code they were writing, and moved between levels with higher frequency than less proficient students. The results align with self explanation research and provide insight into the cognitive mechanisms responsible for the transfer between the skills of reading and writing code.", "authors": [{"name": "Leigh Ann Sudol-DeLyser", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["code comprehension", "explain in plain english", "solo", "computer science education research", "novice programmers"]}, {"title": "Generating Practice Questions as a Preparation Strategy for Introductory Programming Exams", "link": "https://dl.acm.org/doi/10.1145/2676723.2677253", "abstract": "Written exams are a common form of assessment in introductory programming courses. Creating exam questions is normally the responsibility of the course instructor, however the process of authoring such questions may be a useful learning activity in itself. We explored this idea with a randomized controlled experiment (n > 700) in which a group of first-year programming students generated practice questions prior to an exam. Even though all questions were available to every student in the course for practice, the group that generated the questions performed significantly better on the exam. The effects were most pronounced when students answered exam questions on topics that were targeted by questions they had generated. We suggest that some existing tools for computer science education may benefit from incorporating related activities.", "authors": [{"name": "Paul Denny", "affiliation": "The University of Auckland, Auckland, New Zealand"}], "tags": ["exams", "multiple-choice", "programming", "peerwise", "student authored questions"]}, {"title": "Benefits of Self-explanation in Introductory Programming", "link": "https://dl.acm.org/doi/10.1145/2676723.2677260", "abstract": "One approach for helping students learn to program is the use of self-explanation assignments. In these assignments, students explain instructional materials using domain knowledge covered in the course. In this work, we describe a randomized experiment where students in an introductory programming course were given two kinds of self-explanation assignments. One randomly selected group worked on self-explanation assignments with supporting questions while the alternate group had the same self-explanation questions but no additional supporting exercises. The combined groups performed better on comparable test questions than students from the previous year, who did not use self-explanation questions. The group with supporting questions performed better than the group with no additional support. Based on our results and previous research on self explanation, we argue that embedding self-explanation questions into programming material is beneficial for students. Moreover, further gains are achieved from supporting questions that help focus their explanations.", "authors": [{"name": "Craig S. Miller", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Amber Settle", "affiliation": "DePaul University, Chicago, IL, USA"}, {"name": "Arto Vihavainen", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["self-explanation questions", "scaffolding", "introductory programming", "cs1", "self-explanation", "programming education"]}, {"title": "Session details: Paper Session: Focus on K-12: Professional Development", "link": "https://dl.acm.org/doi/10.1145/3251158", "abstract": "No abstract available.", "authors": [{"name": "Martha Kosa", "affiliation": "Tennessee Technological University"}], "tags": []}, {"title": "Growing a K-12 Community of Practice", "link": "https://dl.acm.org/doi/10.1145/2676723.2677255", "abstract": "In this experience report, we share our experiences in growing a community of practice for middle and high school teachers focused on teaching introductory computing with Alice. We have offered professional development for over four hundred teachers, teachers who each year provide nearly 2,000 students with an introductory computing experience in courses during the school day. We report on several lessons learned in creating, growing, and supporting a community of practice.", "authors": [{"name": "Madeleine Schep", "affiliation": "Columbia College, Columbia, SC, USA"}, {"name": "RoxAnn H. Stalvey", "affiliation": "College of Charleston, Charleston, SC, USA"}, {"name": "Stephen Cooper", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Wanda Dann", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Susan H. Rodger", "affiliation": "Duke University, Durham, NC, USA"}], "tags": ["introductory computer science", "middle school", "k-12 education", "high school", "alice"]}, {"title": "Computing on the Silicon Prairie: The State of CS in Nebraska Public Schools", "link": "https://dl.acm.org/doi/10.1145/2676723.2677261", "abstract": "Access to high quality K-12 computer science education has garnered considerable public attention in the United States in the wake of Code.org's December 2013 Hour of Code. An increasing number of states are now counting CS coursework towards high school graduation requirements, and teacher certification for computing courses is being revisited across the country. In this work, we explore the current state of computer science education in Nebraska public schools using objective enrollment data from the 2013-2014 academic year. We find limited access to introductory programming courses, while basic computer/IT literacy coursework is commonplace. Lack of CS courses is particularly acute in small schools, which make up a majority of Nebraska's public schools. We also present data illustrating limited pursuit of IT teaching endorsement/certification in the state and highlight current issues for teacher training programs that lead to such certification in Nebraska.", "authors": [{"name": "Cory M. Epler", "affiliation": "Nebraska Department of Education, Lincoln, NE, USA"}, {"name": "Derek Babb", "affiliation": "Omaha North High School, Omaha, NE, USA"}, {"name": "Brian Dorn", "affiliation": "University of Nebraska at Omaha, Omaha, NE, USA"}, {"name": "Dawn M. Nizzi", "affiliation": "Westside High School Career Center, Omaha, NE, USA"}], "tags": ["teacher certification", "k-12 computing"]}, {"title": "Supporting CS10K: A New Computer Science Methods Course for Mathematics Education Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2677274", "abstract": "We describe a new methods of teaching computer science (CS) course tailored for mathematics education majors but also applicable to others interested in teaching CS. Goals of the course are enhancing their ability and confidence in developing and offering CS courses at high schools and starting CS courses at high schools that do not offer them. The course involves a combination of reading, programming, lesson/unit plan development, code reviews, and discussion of the various paradigms for introducing CS at the secondary level. Results indicate the course enhances the students' confidence, ability, and preparation for teaching CS in high schools.", "authors": [{"name": "Scott Vandenberg", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "James Matthews", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Darren Lim", "affiliation": "Siena College, Loudonville, NY, USA"}, {"name": "Robin Flatland", "affiliation": "Siena College, Loudonville, NY, USA"}], "tags": ["advance placement computer science", "cs principles", "snap!", "methods course", "cs10k"]}, {"title": "Session details: Paper Session: Soft Skills: Teamwork & Communication", "link": "https://dl.acm.org/doi/10.1145/3251152", "abstract": "No abstract available.", "authors": [{"name": "Elissa Redmiles", "affiliation": "University of Maryland"}], "tags": []}, {"title": "Using a Message Board as a Teaching Tool in an Introductory Cyber-Security Course", "link": "https://dl.acm.org/doi/10.1145/2676723.2677221", "abstract": "In this work we describe how a message board can be used to teach a number of important concepts in cyber security in a novel and hands-on manner. The message board is used daily in class and serves the routine functions of disseminating information to students, offering a forum for interactive discussions, allowing a convenient method to copy and paste complex expressions, providing a venue for class interaction, permitting archiving of information, and serving as a general blackboard. We use the message board to illustrate and teach important cyber-security concepts and common attacks such as the following: authentication and cookies, cross-site scripting and injection attacks, man-in-the-middle attack on public-key cryptography, password selection, and password-file management. From the student-learning perspective the tool appears to work very well. We hope that others can make use of the message board in their lessons or incorporate parts of it to improve the educational experience of their students. The message board can be integrated seamlessly into a class to enhance hands-on learning.", "authors": [{"name": "Raymond Greenlaw", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}, {"name": "Christopher Brown", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}, {"name": "Zachary Dannelly", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}, {"name": "Andrew Phillips", "affiliation": "United States Naval Academy, Annapolis, MD, USA"}, {"name": "Sarah Standard", "affiliation": "Avian LLC, Lexington Park, MD, USA"}], "tags": ["message board", "teaching tool", "cyber-security"]}, {"title": "Further Evaluations of Industry-Inspired Pair Programming Communication Guidelines with Undergraduate Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2677241", "abstract": "Pair programming has several benefits when it is successfully used by students and experts alike. However, research shows that novice pairs find the necessary pair communication to be one of the main challenges in adopting this process. A set of industry-inspired pair programming guidelines have been derived and evaluated from qualitative examinations of expert pairs, with the aim of helping novice programmers communicate within their pair. This research describes a further evaluation of these guidelines with a number of student pairs, and demonstrates how novice pairs who were exposed to the guidelines became comfortable communicating with their partners.", "authors": [{"name": "Mark Zarb", "affiliation": "Robert Gordon University, Aberdeen, United Kingdom"}, {"name": "Janet Hughes", "affiliation": "University of Dundee, Dundee, United Kingdom"}, {"name": "John Richards", "affiliation": "IBM T.J. Watson Research Center, New York, NY, USA"}], "tags": ["pair programming", "cs ed research study", "communication skills", "students", "software engineering", "collaboration"]}, {"title": "Supporting Programming Assignments with Activity Streams: An Empirical Study", "link": "https://dl.acm.org/doi/10.1145/2676723.2677276", "abstract": "Social learning theory emphasizes the importance of providing learners with opportunities to observe their peers, and to participate actively in a community. Unfortunately, early computing courses tend to emphasize individual programming assignments, which discourage learners from observing and working with their peers. In order to explore the possibility that increased opportunities for social awareness and interaction while working on programming assignments might influence learning outcomes in early computing courses, we are studying the design and use of social networking-style activity streams in such courses. In an empirical study of the use of two types of activity streams in a CS 2 course - one that was part of a learning management system, and one integrated directly into students' programming environment - we found that students who used the integrated stream were twice as socially active; however, social participation in both environments was positively correlated with students' grades. Our results suggest that the use of activity streams as an adjunct to individual programming assignments can positively influence learning; computing instructors would do well to find ways to get their students to participate actively in activity streams during the programming process.", "authors": [{"name": "Adam S. Carter", "affiliation": "Washington State University, Pullman, WA, USA"}, {"name": "Olusola Adesope", "affiliation": "Washington State University, Pullman, WA, USA"}, {"name": "Christopher D. Hundhausen", "affiliation": "Washington State University, Pullman, WA, USA"}], "tags": ["social networking", "cs 2", "programming assignments", "social learning theory", "activity streams"]}, {"title": "Session details: Paper Session: Beyond CS2: Cloud Computing", "link": "https://dl.acm.org/doi/10.1145/3251153", "abstract": "No abstract available.", "authors": [{"name": "Don Goelman", "affiliation": "Villanova University"}], "tags": []}, {"title": "Hands-On Network Programming Projects in the Cloud", "link": "https://dl.acm.org/doi/10.1145/2676723.2677257", "abstract": "Hands-on activities are important for computer science students to achieve their learning objectives. Compared to developing and maintaining on-campus physical or virtual laboratories, using the public cloud to host hands-on activities is a very promising approach because of the scalability, flexibility, security, cost-efficiency, and accessibility of the services offered in the public cloud. This paper presents the design of four cloud-based network programming projects and our experience of using the services and infrastructure in the public cloud for these hands-on projects in our Computer Networks course. Each student was able to use multiple virtual machines in the public cloud together with a local computer to develop and test networking programs. Both the instructor's observation and student surveys demonstrated that our approach has a strong positive impact on the student learning experience. A vast majority of the students favor using the public cloud not only in this course but also in other computer science courses if applicable.", "authors": [{"name": "Weiying Zhu", "affiliation": "Metropolitan State University of Denver, Denver, CO, USA"}], "tags": ["hands-on projects", "network programming", "computer networks", "amazon web services.", "cloud computing"]}, {"title": "Teaching Cybersecurity Analysis Skills in the Cloud", "link": "https://dl.acm.org/doi/10.1145/2676723.2677290", "abstract": "This paper reports on the experience of using the EDURange framework, a cloud-based resource for hosting on-demand interactive cybersecurity scenarios. Our framework is designed especially for the needs of teaching faculty. The scenarios we have implemented each are designed specifically to nurture the development of analysis skills in students as a complement to both theoretical security concepts and specific software tools.\nOur infrastructure has two features that make it unique compared to other cybersecurity educational frameworks. First, EDURange is scalable because it is hosted on a commercial, large-scale cloud environment. Second, EDURange supplies instructors with the ability to dynamically change the parameters and characteristics of exercises so they can be replayed and adapted to multiple classes. Our framework has been used successfully in classes and workshops for students and faculty. We present our experiences building the system, testing it, and using feedback from surveys to improve the system and boost user interest.", "authors": [{"name": "Richard S. Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}, {"name": "Michael E. Locasto", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Erik Nilsen", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "James F. Sullivan", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "Stefan Boesen", "affiliation": "Dartmouth College, Hanover, NH, USA"}], "tags": ["offensive security", "hacker curriculum", "analysis skills", "edurange"]}, {"title": "A Cloud Computing Course: From Systems to Services", "link": "https://dl.acm.org/doi/10.1145/2676723.2677298", "abstract": "We have designed, developed and administered a course on cloud computing that was taught to over 700 students at our institution over two years. The goal of this project-based course is to provide students with foundational systems concepts as well as experience in developing the required skills to design and deploy viable, robust and elastic web-services within performance and budgetary constraints. We present our objectives, learning outcomes, projects, learning model, outcomes and lessons learned. So far, for this demanding course, our student retention rate is above 80% and enrollment is doubling every year.", "authors": [{"name": "Jason Boles", "affiliation": "Carnegie Mellon University in Qatar, Doha, Qatar"}, {"name": "M. Suhail Rehman", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Mohammad Hammoud", "affiliation": "Carnegie Mellon University in Qatar, Doha, Qatar"}, {"name": "Majd F. Sakr", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["cloud computing", "instructional technologies", "distance education", "web-based techniques"]}, {"title": "Budget Beowulfs: A Showcase of Inexpensive Clusters for Teaching PDC", "link": "https://dl.acm.org/doi/10.1145/2676723.2677317", "abstract": "In response to the shift to multicore processors, the ACM-IEEE CS2013 curriculum recommendations [1] include parallel and distributed computing (PDC) as a new core knowledge area. Some of the key concepts in PDC are the distinctions between shared-memory, distributed-memory, and heterogeneous system architectures.\nMost CS educators would agree that providing students with hands-on experience improves their students' learning. Given the ubiquity of multicore processors, it is quite easy to give today's students hands-on experience developing software on shared-memory architectures. By contrast, providing students with hands-on experience developing software for distributed architectures has typically required access to a Beowulf cluster, the price of which was beyond the reach of many institutions. However, hardware manufacturers have recently begun producing a variety of inexpensive --system on a board multiprocessors. Creative CS educators are using these multiprocessors to design and build inexpensive Beowulf clusters, and using them to provide students with hands-on experience with shared-memory, distributed-memory, and heterogeneous computing paradigms.\nIn this special session, several PDC educators will bring, present, and demonstrate their innovative Beowulf clusters; each designed and built using a different inexpensive multiprocessor board.", "authors": [{"name": "David Toth", "affiliation": "Centre College, Danville, KY, USA"}, {"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, MI, USA"}, {"name": "Jacob Caswell", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Charles Peck", "affiliation": "Earlham College, Richmond, IN, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, St. Paul, MN, USA"}], "tags": ["distributed", "parallel", "processes", "teaching", "architecture", "inexpensive", "computing", "education", "hardware", "threads", "beowulf", "clusters", "multicore"]}, {"title": "Using App Inventor in Introductory CS Courses", "link": "https://dl.acm.org/doi/10.1145/2676723.2677335", "abstract": "No abstract available.", "authors": [{"name": "Cate Sheller", "affiliation": "Kirkwood Community College, Cedar Rapids, IA, USA"}, {"name": "Meimei Gao", "affiliation": "Mercer County Community College, West Windsor, NJ, USA"}, {"name": "Franklyn Turbak", "affiliation": "Wellesley College, Wellesley, MA, USA"}, {"name": "Julie Johnson", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Dale Reed", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["cs0", "mobile application programming", "blocks programming", "cs1", "visual programming"]}, {"title": "Research, Resources and Communities: Informal Ed as a Partner in Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/2676723.2677329", "abstract": "Informal computer science (CS) education is currently taking shape within the myriad of social and technological solutions available to a wider audience. Increased access to low-cost mobile devices has led to the proliferation of web-based CS education programs accessible by more and more people. Online social networks further bolster the dissemination of information and help establish connections among individuals knowledgeable about the discipline. The disconnection comes when a solution is created but no strategy is devised to support distribution among the general population. In this overview we will outline the scope of this problem within the context of informal CS education by illustrating the range of programs and issues addressed by the panelists. We will highlight how each program contributes to core challenges within informal CS education and situate them within an approach that has the potential to transform how informal CS education programs are supported, developed, and scaled.", "authors": [{"name": "Karen Peterson", "affiliation": "National Girls Collaborative Project, Lynnwood, WA, USA"}, {"name": "Betsy DiSalvo", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Cameron L. Fadjo", "affiliation": "Google, Inc., Mountain View, CA, USA"}, {"name": "Irene Lee", "affiliation": "Santa Fe Institute, Santa Fe, NM, USA"}], "tags": ["search engine", "out-of-school program", "custom search", "informal cs education", "after school program", "access"]}, {"title": "Recursion vs. Iteration: An Empirical Study of Comprehension Revisited", "link": "https://dl.acm.org/doi/10.1145/2676723.2677227", "abstract": "This study compares differences in students' ability to comprehend recursive and iterative programs by replicating a 1996 study. These studies are interesting for the following reasons: (1) there have been few studies on the comprehension of recursive programs, (2) there have been few studies of recursion that involve the use of data structures, (3) subjects were asked to read and comprehend code that manipulated linked lists recursively. In a 1996 study, subjects found a recursive version of a linked list search function easier to comprehend than an iterative version. The results of this study contradict these earlier findings; subjects in this study were equally likely to correctly describe the purpose of the search algorithm, regardless of iterative or recursive implementation. Consistent with the findings in the 1996 study, subjects in this study were more likely to correctly describe the copy task using the iterative version of this problem rather than the recursive version. Subjects who correctly described the purpose of the copy method wrote abstract summaries. Many of the subjects who did not recognize the purpose of the code, and who answered incorrectly, provided a line-by-line (partial) trace of the code. While revealing some understanding of the execution of the code, these subjects were generally not able to see the forest for the trees.", "authors": [{"name": "Sue Fitzgerald", "affiliation": "Metropolitan State University, St. Paul, USA"}, {"name": "Laurie Murphy", "affiliation": "Pacific Lutheran University, Tacoma, USA"}, {"name": "Brian Hanks", "affiliation": "BFH Educational Consulting, Seattle, USA"}, {"name": "Renee McCauley", "affiliation": "College of Charleston, Charleston, USA"}], "tags": ["recursion", "iteration", "computer science education research", "programming", "linked lists", "cs2"]}, {"title": "Tracking Student Learning from Class to Exam using Isomorphic Questions", "link": "https://dl.acm.org/doi/10.1145/2676723.2677239", "abstract": "Recent computer science education research using isomorphic questions in Peer Instruction (PI) classes demonstrates that students learn from talking to their peers and listening to the instructor's follow-up explanation. These results provide evidence of the effectiveness of the PI process but are limited to what happens in a single class session. The present work extends the use of isomorphic questions to investigate how in-class learning translates to success on the final exam. Despite considerable time between in-class questions and the final exam, we find that students who learn in class are shown to retain that learning and to perform better than students who did not learn in class. In addition, compared to students already understanding the material, those who learned the material in class are almost (87%) as likely to correctly answer isomorphic exam questions. Our results have implications for the value of difficult PI questions and the meaning of in-class response graphs.", "authors": [{"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto Mississauga, Mississauga, ON, Canada"}], "tags": ["final exam", "clickers", "peer instruction"]}, {"title": "The Effectiveness of Visualization for Learning Expression Evaluation", "link": "https://dl.acm.org/doi/10.1145/2676723.2677301", "abstract": "A controlled study was conducted to evaluate the effectiveness of providing visualization as part of feedback in a problem-solving software tutor on arithmetic expression evaluation. Data was collected over six semesters from multiple institutions. ANOVA analysis of the collected data was conducted in three stages. Statistically significant results include that visualization helped students learn more concepts; visualization did not improve the speed of learning; the benefits of visualization accrued primarily to less-prepared students; and visualization may affect different demographic subgroups differently. Incidental results include that there was no difference among demographic groups (male/female, traditional/underrepresented, Computer Science/non-CS) in the number of concepts learned using the software tutor, although some groups (female, underrepresented) were less-prepared before using the tutor than their counterparts, and some groups learned concepts with fewer practice problems (male, traditionally represented) than their counterparts. Concurrence of the results obtained whether the analysis was conducted based on pre-condition (need) or post-condition (benefit) of using the tutor strengthens the claims made as a result of this study.", "authors": [{"name": "Amruth N. Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["visualization", "evaluation"]}, {"title": "Analyzing Year One of a CS Principles PD Project", "link": "https://dl.acm.org/doi/10.1145/2676723.2677265", "abstract": "The Mobile Computer Science Principles (Mobile CSP) project is an NSF-funded CS 10K project. Its goal is to train a new cohort of high school computer science teachers to teach an Advanced Placement (AP) level course based on the emerging Computer Science Principles (CSP) framework. Mobile CSP uses App Inventor, a graphical programming language for Android devices, to engage students in app building as a means to get them interested in computer science. This paper reports on the first year of this effort. In addition to describing the project's Professional Development (PD) course, a 6-week, full-time summer course for teachers, and the Mobile CSP curriculum, the paper provides a preliminary analysis of demographic and performance data obtained from high school students who took the course during the 2013-2014 academic year.", "authors": [{"name": "Lawrence Baldwin", "affiliation": "Baldwin Institutional Research Consulting, Sherborn, MA, USA"}, {"name": "Pauline Lake", "affiliation": "Trinity College, Hartford, CT, USA"}, {"name": "Ralph Morelli", "affiliation": "Trinity College, Hartford, CT, USA"}, {"name": "Chinma Uche", "affiliation": "Connecticut Computer Science Teachers Association, Hartford, CT, USA"}], "tags": ["app inventor", "mobile computing", "cs principles"]}, {"title": "Field Experiences in Teaching Computer Science: Course Organization and Reflections", "link": "https://dl.acm.org/doi/10.1145/2676723.2677286", "abstract": "A major challenge for broadening participation in computing within K-12 settings is the lack of trained teachers. While professional development programs provide opportunities for the development of knowledge, skills, and pedagogy in teaching computing, teachers need ongoing support throughout the academic year. In this paper, we describe a course-based model for partnering undergraduates with teachers and students in a field experience model. We describe the model focusing on learning objectives, curriculum, field component and partnership building. We subsequently report on the products that undergraduates were able to create with their partner teachers. Finally, we investigate the impact of the field experience model on undergraduates' content knowledge, pedagogical skills and career development.", "authors": [{"name": "Chrystalla Mouza", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Lori Pollock", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "Terry Harvey", "affiliation": "University of Delaware, Newark, DE, USA"}, {"name": "James Atlas", "affiliation": "University of Delaware, Newark, DE, USA"}], "tags": ["cs education", "k12", "computational thinking", "cs principles"]}, {"title": "A Mid-Project Report on a Statewide Professional Development Model for CS Principles", "link": "https://dl.acm.org/doi/10.1145/2676723.2677306", "abstract": "This paper summarizes our mid-project results in developing and evaluating a CS Principles (CSP) professional development (PD) model for training several cohorts of teachers across an entire state geography. CS4Alabama is an NSF-funded project that has adopted the successful practices of a national AP training program developed by the National Math and Science Initiative (NMSI) in pursuit of scalable deployment and sustainable persistence of new CSP courses across Alabama. We have created a CSP curriculum and PD program based on year-long in-person training and distance learning collaboration, which also was offered as a national MOOC as part of Google CS4HS. A statewide Teacher Leader (TL) model is used, where those who have previously taught rigorous CS courses serve as mentors in training new peer cohorts as they establish CSP courses in their schools. Teachers in these cohorts collaborate together on content and pedagogical learning experiences, fostered by the TLs. This paper reports on assessment results that are uncovering the facets of our model that are most suitable for building a sustainable network of CSP teachers. The paper summarizes our PD model, offers various lessons learned, and details the findings of the project's external evaluation team.", "authors": [{"name": "Carol Crawford", "affiliation": "A+ College Ready, Birmingham, AL, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Sheryl Packman", "affiliation": "Haynie Research and Evaluation, Skillman, NJ, USA"}, {"name": "Deepa Muralidhar", "affiliation": "Atlanta Girls School, Atlanta, GA, USA"}, {"name": "Kathy Haynie", "affiliation": "Haynie Research and Evaluation, Skillman, NJ, USA"}, {"name": "Mary Boehm", "affiliation": "A+ College Ready, Birmingham, AL, USA"}], "tags": ["professional development", "cs principles"]}, {"title": "Session details: Paper Session: Student Engagement: Active Learning", "link": "https://dl.acm.org/doi/10.1145/3251159", "abstract": "No abstract available.", "authors": [{"name": "Susan Hammond", "affiliation": "Faulkner University"}], "tags": []}, {"title": "Integrating Role-Playing Games into Computer Science Courses as a Pedagogical Tool", "link": "https://dl.acm.org/doi/10.1145/2676723.2677236", "abstract": "Gaming has been identified as a way to increase student engagement in the classroom. This qualitative study explored 78 undergraduate students' experiences with a role-playing game infused into two computer science courses. Open-ended student surveys served as the primary data source to explore, \"In what ways, if any, does role-playing quest based curriculum support student learning and engagement?\" Key curricular innovations are described along with assignments and assessments that were integrated. Three broad themes emerged and identified personalized learning, deepened content understandings, and enhanced collaboration skills as three areas that supported student learning and engagement. Many students felt that the infusion of role-playing aspects into the courses supported their learning and engagement, but some students did not.", "authors": [{"name": "David Toth", "affiliation": "Centre College, Danville, KY, USA"}, {"name": "Mary Kayler", "affiliation": "University of Mary Washington, Fredericksburg, VA, USA"}], "tags": ["engagement", "games", "education"]}, {"title": "Structuring Flipped Classes with Lightweight Teams and Gamification", "link": "https://dl.acm.org/doi/10.1145/2676723.2677240", "abstract": "We present a new approach to help make computer science classes both more social and more effective: \"lightweight teams\". Lightweight teams are class teams in which the team members have little or no direct impact on each other's final grades, yet where there is a significant component of peer teaching, peer learning and long-term socialization built into the curriculum. We explain how lightweight teams have been used in a CS1 class at our institution, and how this approach, combined with a flipped class approach and gamification, has led to high levels of student engagement, despite the difficulty of the material and the frustration that is common to those first learning to program.", "authors": [{"name": "Carlos E. Seminario", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "N. Bruce Long", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}, {"name": "Celine Latulipe", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["lightweight teams", "computing education", "gamification", "team-based learning", "cs1", "cooperative learning", "flipped classes"]}, {"title": "Blending Problem- and Project-Based Learning in Internet of Things Education: Case Greenhouse Maintenance", "link": "https://dl.acm.org/doi/10.1145/2676723.2677262", "abstract": "This article describes an experimental course where students developed Internet of Things device prototypes to improve the upkeep of an urban rooftop greenhouse. With the help of a problem-based learning approach, students were first familiarized with their new learning environment and encouraged to find issues that could be improved as a meaningful personal learning experience. A project-based learning approach was then used to develop innovative solutions while validating their relevance in collaboration with gardeners that were taking care of the greenhouse. As a result, a number of practical applications for monitoring the state of the greenhouse were developed along with new practices for its maintenance. As participants were given the freedom to choose both the topic and technologies to work with, the course provided a learning experience that was tailored to suit personal interests and competences. Having the common background story allowed students to practice teamwork skills and collaborative software engineering in the context of the emerging topic of Internet of Things.", "authors": [{"name": "Samu Varjonen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Arto Vihavainen", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Hanna M\u00e4enp\u00e4\u00e4", "affiliation": "University of Helsinki, Helsinki, Finland"}, {"name": "Sasu Tarkoma", "affiliation": "University of Helsinki, Helsinki, Finland"}], "tags": ["project-based learning", "problem-based learning", "internet of things", "greenhouse"]}, {"title": "Session details: Paper Session: Testing: Improving Quality of Student Testing", "link": "https://dl.acm.org/doi/10.1145/3251160", "abstract": "No abstract available.", "authors": [{"name": "Ahmad Noor", "affiliation": "Northern Virginia Community College"}], "tags": []}, {"title": "Can the Security Mindset Make Students Better Testers?", "link": "https://dl.acm.org/doi/10.1145/2676723.2677268", "abstract": "Writing secure code requires a programmer to think both as a defender and an attacker. One can draw a parallel between this model of thinking and techniques used in test-driven development, where students learn by thinking about how to effectively test their code and anticipate possible bugs. In this study, we analyzed the quality of both attack and defense code that students wrote for an assignment given in an introductory security class of 75 (both graduate and senior undergraduate levels) at NYU. We made several observations regarding students' behaviors and the quality of both their defensive and offensive code. We saw that student defensive programs (i.e., assignments) are highly unique and that their attack programs (i.e., test cases) are also relatively unique. In addition, we examined how student behaviors in writing defense programs correlated with their attack program's effectiveness. We found evidence that students who learn to write good defensive programs can write effective attack programs, but the converse is not true. While further exploration of causality is needed, our results indicate that a greater pedagogical emphasis on defensive security may benefit students more than one that emphasizes offense.", "authors": [{"name": "Justin Cappos", "affiliation": "New York University, Brooklyn, NY, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}, {"name": "Sara Hooshangi", "affiliation": "The George Washington University, Washington, DC, USA"}], "tags": ["testing", "python", "security", "access control"]}, {"title": "An Empirical Study of Iterative Improvement in Programming Assignments", "link": "https://dl.acm.org/doi/10.1145/2676723.2677279", "abstract": "As automated tools for grading programming assignments become more widely used, it is imperative that we better understand how students are utilizing them. Other researchers have provided helpful data on the role automated assessment tools (AATs) have played in the classroom. In order to investigate improved practices in using AATs for student learning, we sought to better understand how students iteratively modify their programs toward a solution by analyzing more than 45,000 student submissions over 7 semesters in an introductory (CS1) programming course. The resulting metrics allowed us to study what steps students took toward solutions for programming assignments. This paper considers the incremental changes students make and the correlating score between sequential submissions, measured by metrics including source lines of code, cyclomatic (McCabe) complexity, state space, and the 6 Halstead measures of complexity of the program. We demonstrate the value of throttling and show that generating software metrics for analysis can serve to help instructors better guide student learning.", "authors": [{"name": "Adam Starbuck", "affiliation": "Abilene Christian University, Abilene, TX, USA"}, {"name": "Susan Mengel", "affiliation": "Texas Tech University, Lubbock, TX, USA"}, {"name": "Roger Gee", "affiliation": "Abilene Christian University, Abilene, TX, USA"}, {"name": "Raymond Pettit", "affiliation": "Abilene Christian University, Abilene, TX, USA"}, {"name": "John Homer", "affiliation": "Abilene Christian University, Abilene, TX, USA"}], "tags": ["automated feedback", "computer science education", "computer aided instruction", "automated assessment tools"]}, {"title": "Reconsidering Automated Feedback: A Test-Driven Approach", "link": "https://dl.acm.org/doi/10.1145/2676723.2677313", "abstract": "Writing meaningful software tests requires students to think critically about a problem and consider a variety of cases that might break the solution code. Consequently, to overcome bugs in their code, it would be beneficial for students to reflect over their work and write robust tests rather than relying on trial-and-error techniques. Automated grading systems provide students with prompt feedback on their programming assignments and may help them identify where their interpretation of requirements do not match the instructor's expectations.\nHowever, when automated grading systems help students identify bugs in their code, the systems may inadvertently discourage students from thinking critically and testing thoroughly and instead encourage dependence on the instructor's tests. In this paper, we explain a framework for identifying whether a student has adequately tested a specific feature of their code that is failing an instructor's tests. Using an implementation of the framework, we analyzed an automated grading system's feedback for programming assignments and found that it often provided hints that may discourage reflective testing.", "authors": [{"name": "Kevin Buffardi", "affiliation": "California State University, Chico, Chico, CA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["test-first", "automated testing", "instructional technology", "unit testing", "web-cat", "software development process", "test-driven development (tdd)"]}, {"title": "Session details: Paper Session: Beyond CS2: OS/Virtualization", "link": "https://dl.acm.org/doi/10.1145/3251161", "abstract": "No abstract available.", "authors": [{"name": "Steven Andrianoff", "affiliation": "St. Bonaventure University"}], "tags": []}, {"title": "MC-Live: A Portable Computing Environment for Computer Science Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2677216", "abstract": "Computer Science departments have special requirements for their computing environments, distinct from the \"normal\" requirements of most other departments. However, shrinking budgets and other factors make it difficult for many of us to provide an adequate computing environment for our students, above and beyond the generic support provided by our school's computing services division. This paper describes the use of bootable, \"live\" USB keys to provide students with a standard, portable environment that they can use on their own computers as well as in our labs.", "authors": [{"name": "Lee Wittenberg", "affiliation": "Maryville College, Maryville, TN, USA"}], "tags": ["linux", "live usb", "live cd"]}, {"title": "Teaching Virtualization by Building a Hypervisor", "link": "https://dl.acm.org/doi/10.1145/2676723.2677254", "abstract": "Virtual machines (VMs) are an increasingly ubiquitous feature of modern computing, yet the interested student or professional has limited resources to learn how VMs work. In particular, there is a lack of \"hands-on\" exercises in constructing a virtual machine monitor (VMM, or hypervisor), which are both simple enough to understand completely but realistic enough to capture the practical challenges in using this technology. This paper describes a set of assignments to extend a small, pedagogical operating system (OS) to form a hypervisor and host itself. This pedagogical hypervisor, called HOSS, adds roughly 1,000 lines of code to the MIT JOS source, and includes a set of guided exercises. Initial results with HOSS in an upper-level virtualization course indicate that students enjoyed the assignments and were able to apply what they learned to solve different virtualization-related problems. HOSS is publicly available.", "authors": [{"name": "Abhinand Palicherla", "affiliation": "Tintri, Inc., Mountain View, CA, USA"}, {"name": "Donald E. Porter", "affiliation": "Stony Brook University, Stony Brook, NY, USA"}, {"name": "Tao Zhang", "affiliation": "Stony Brook University, Stony Brook, NY, USA"}], "tags": ["operating systems", "instructional tools", "virtual machines"]}, {"title": "MiniOS: An Instructional Platform for Teaching Operating Systems Projects", "link": "https://dl.acm.org/doi/10.1145/2676723.2677299", "abstract": "Operating systems is a central subject in computer science curriculum, and teaching it successfully has been a challenge. Effective learning requires carefully designed programming projects that can facilitate deep thinking and enhance hands-on experience. This paper presents MiniOS, an instructional embedded operating system designed to carry out operating systems projects successfully. We explain MiniOS approach, the rationale behind it, and compare it with other similar approaches.", "authors": [{"name": "Rafael Rom\u00e1n Otero", "affiliation": "University of Northern British Columbia, Prince George, BC, Canada"}, {"name": "Alex A. Aravind", "affiliation": "University of Northern British Columbia, Prince George, BC, Canada"}], "tags": ["minios", "operating systems", "teaching", "education"]}, {"title": "Achieving a shared goal with AP Computer Science A and AP Computer Science Principles", "link": "https://dl.acm.org/doi/10.1145/2676723.2677325", "abstract": "College Board has joined national efforts to improve the state of STEM education, in particular to address the challenge of increasing participation with a diverse population of computer scientists to meet the growing demands of the field of computing. The Advanced Placement (AP) Program is pleased to endeavor in enhancing AP Computer Science offerings by maintaining college level integrity and addressing issues of equity and access for students and teachers. In addition to the established AP Computer Science A course, the AP Program is engaged in the development of a forthcoming AP Computer Science Principles course. The additional option for high school students to study college level computing will provide more students with an opportunity to be introduced to important computer science concepts, gain a broader perspective of the field of study, and have access to a larger pathway into computing. This session will review information regarding the AP Computer Science A course and will discuss plans for collecting feedback from college faculty regarding course content and approaches to programming techniques and languages. It will then discuss the new Computer Science Principles course and plans for the development and launch of the course and exam. The session will conclude with a Q&A session addressing questions regarding both courses. The session will be moderated by Lien Diaz from the AP Program at the College Board.", "authors": [{"name": "Lester Wainwright", "affiliation": "Charlottesville High School, Charlottesville, VA, USA"}, {"name": "Fran P. Trees", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Lien Diaz", "affiliation": "College Board, Duluth, GA, USA"}, {"name": "Sandy Czajka", "affiliation": "Riverside Brookfield High School, Riverside, IL, USA"}, {"name": "Andrew Kuemmel", "affiliation": "Madison West High School, Madison, WI, USA"}, {"name": "Paul T. Tymann", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Richard Kick", "affiliation": "Newbury Park High School, Newbury Park, CA, USA"}], "tags": ["cs0", "active learning", "case studies", "computing applications", "cs1"]}, {"title": "Towards Grand Challenges in Computing Education Across Disciplines", "link": "https://dl.acm.org/doi/10.1145/2676723.2677326", "abstract": "No abstract available.", "authors": [{"name": "Jason Thatcher", "affiliation": "Clemson University, Clemson, SC, USA"}, {"name": "Stephen Cooper", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Andrew McGettrick", "affiliation": "University of Strathclyde, Glasgow, United Kingdom"}, {"name": "Lecia J. Barker", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Heikki Topi", "affiliation": "Bentley College, Waltham, MA, USA"}], "tags": ["interdisciplinary", "grand challenges", "computing education research", "information systems education research"]}, {"title": "Exploring Computer Science Topics with Programmable Smartwatches", "link": "https://dl.acm.org/doi/10.1145/2676723.2691874", "abstract": "This demo features smartwatch applications created by junior/senior CS students in a mobile development course. The course featured the Pebble smartwatch, with an e-ink display, vibrating motor, and accelerometer. Smartwatches enhance mobile device use by acting as a secondary display and providing immediate notifications, but designing for them has challenges in memory management, sensor programming, networking issues, and display size. Incorporating Pebble smartwatch development in a mobile app development class allowed students to exercise core computer science concepts to overcome Pebble hardware and software limitations and to develop applications that leverage Pebble affordances. Two sections of the class featured Pebble-focused assignments, including an open-ended homework, a focused homework, and a term design project coordinating smartphone-smartwatch use. The two-semester experience yielded apps in all Pebble-defined categories, including tools and utilities, notifications, remotes, health and fitness, and games. Examples of the students' work from each of the categories will be presented in this demo on topics such as music synthesizing, remote camera operation, course management alerts, and server management. The presented apps reflect student understanding of the sensor functionalities, hardware capabilities and limitations, and interactions of the phone-watch pair. This demo will serve as a valuable resource for those who plan to incorporate smartwatch development into their teaching practice. Based on the educational experience gleaned, future opportunities can explore the role of the smartwatch in mobile development and programming education for college and K-12 students.", "authors": [{"name": "Shuo Niu", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Scott McCrickard", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Andrey Esakia", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["pebble", "mobile", "smartwatch", "development", "mapplication"]}, {"title": "ENGAGE: A Game-based Learning Environment for Middle School Computational Thinking", "link": "https://dl.acm.org/doi/10.1145/2676723.2691876", "abstract": "We present ENGAGE, a game-based learning environment for teaching computational thinking to middle school students. This project has dual aims: introducing computational thinking practices to students at a young age, and improving computational thinking attitudes among underrepresented students. In pursuit of these two goals, the ENGAGE team has mapped the learning objectives of the AP CS Principles course to the middle school level, and then built an immersive game experience upon that foundation. Students choose computer scientist avatars to represent themselves, and then play in pairs as they investigate a data-related mystery in an underwater research station, solving computational thinking challenges along the way. ENGAGE is currently being implemented as part of a quarterly elective in four middle schools in North Carolina. During the elective, students spend a total of ten classroom sessions playing the game, supplemented by \"unplugged\" activities that reinforce concepts learned in the game environment. We plan to expand to more middle schools in the 2015-2016 school year. In this demo, members of the SIGCSE community will be able to experience the ENGAGE game for themselves and learn more about its development and future directions. We will also discuss our success in recruiting and teaching the ENGAGE curriculum to middle school teachers who had no prior computer science experience, and the success of those middle school teachers in implementing ENGAGE within their classrooms.", "authors": [{"name": "Fernando Rodriguez", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Boyer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kirby Culbertson", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Allison Martinez-Arocho", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Megan Frankosky", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Philip Sheridan Buffum", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Bradford Mott", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Wookhee Min", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["middle school", "game-based learning", "computational thinking"]}, {"title": "Correlation of Topic Model and Student Grades Using Comment Data Mining", "link": "https://dl.acm.org/doi/10.1145/2676723.2677259", "abstract": "Assessment of learning progress and learning gain play a pivotal role in education fields. New technologies like comment data mining promote the use of new types of contents; student comments highly reflect student learning attitudes and activities compared to more traditional methods and they can be a powerful source of data for all forms of assessment. A teacher just asks students after every lesson to freely describe and write about their learning situations and behaviors. This paper proposes new methods based on a statistical latent class \"Topics\" for the task of student grade prediction; our methods convert student comments using latent semantic analysis (LSA) and probabilistic latent semantic analysis (PLSA), and generate prediction models using support vector machine (SVM) and artificial neural network (ANN) to predict student final grades. The experimental results show that our methods can accurately predict student grades based on comment data.", "authors": [{"name": "Kazumasa Goda", "affiliation": "Kyushu Institute of Information Science, Fukuoka, Japan"}, {"name": "Shaymaa Sorour", "affiliation": "Kafr Elsheikh University, Egypt & Kyushu University, Fukuoka, Japan"}, {"name": "Tsunenori Mine", "affiliation": "Kyushu University, Fukuoka, Japan"}], "tags": ["lsa", "student grade prediction", "comment data mining", "plsa"]}, {"title": "Bats, Balls, and Lures: Cognitive Style in CS Education", "link": "https://dl.acm.org/doi/10.1145/2676723.2677291", "abstract": "If a bat and a ball cost $1.10 in total and the bat costs $1.00 more than the ball, how much does the ball cost? Many people trained in logical reasoning answer this question incorrectly. Is the kind of logical trap posed by this question similar to the logical traps in computer science? This paper examines the similarity between computer science programming problems with intuitive yet incorrect \"lure\" answers and logical problems from psychology and economics that share this characteristic. We find that there are fundamental similarities between these kinds of problems and that these problems can even be used as predictors of grades in introductory programming courses. Furthermore, we demonstrate that certain cognitive styles identified in recent psychological literature perform better on such problems.", "authors": [{"name": "Barry Wittman", "affiliation": "Elizabethtown College, Elizabethtown, PA, USA"}, {"name": "Jean Pretz", "affiliation": "Elizabethtown College, Elizabethtown, PA, USA"}], "tags": ["cognitive bias", "cognitive style", "intuition"]}, {"title": "SOLO Taxonomy for Assessing Novices' Algorithmic Design", "link": "https://dl.acm.org/doi/10.1145/2676723.2677311", "abstract": "We present the utilization of the educational SOLO taxonomy for assessing algorithmic features of introductory programming. The SOLO taxonomy was recently studied by CS research educators, with respect to code reading and code writing. Most of the studies focused on code reading. In this paper we offer a framework of SOLO utilization for assessing basic algorithmic design features of code writing. Our novelty stems from focusing on: selection, flexible manipulation, and composition of basic design patterns, as well as on capitalization on unfolded task characteristics. We specify SOLO levels with respect to algorithmic design, and relate to common errors. We display our findings of applying the suggested framework in an ordered study with CS1 students.", "authors": [{"name": "David Ginat", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}, {"name": "Eti Menashe", "affiliation": "Tel-Aviv University, Tel-Aviv, Israel"}], "tags": ["algorithmic design", "taxonomy", "assessment"]}, {"title": "Session details: Paper Session: Focus on K-12: Engaging Students", "link": "https://dl.acm.org/doi/10.1145/3251166", "abstract": "No abstract available.", "authors": [{"name": "Ravi Gandham", "affiliation": "Seattle Colleges"}], "tags": []}, {"title": "What Does It Take to Do Computer Programming?: Surveying the K-12 Students' Conceptions", "link": "https://dl.acm.org/doi/10.1145/2676723.2677229", "abstract": "Phenomenographic studies in computing education research have previously focused on learning \"programming thinking\" [3], the act of learning to program [2], and conceptions of learning generally in an engineering context [10]. In the present study we analyze and discuss \"what it takes to do computer programming\" using phenomenography as research approach. This study is based on a large survey dataset gathered in summer outreach courses for K-12 students. The analysis resulted in 12 qualitatively different categories belonging to five separate, emergent themes: Syntax and language features, nature of programming work generally, computational thinking and problem solving, prerequisites, and auxiliary skills. We additionally reviewed whether the students' previous experience explains the categories, and observed that a mechanistic view of programming was prevailing among the inexperienced users, while experienced students more often stressed algorithmic thinking and logical reasoning.\nThis study resembles work done by Eckerdal et al. [3], but gives a K-12 perspective to the question, \"what does it takes to do programming?\"", "authors": [{"name": "Ville Isom\u00f6tt\u00f6nen", "affiliation": "Mathematical Information Technology, University of Jyv\u00e4skyl\u00e4, Jyv\u00e4skyl\u00e4, Finland"}, {"name": "Antti-Jussi Lakanen", "affiliation": "Mathematical Information Technology, University of Jyv\u00e4skyl\u00e4, Jyv\u00e4skyl\u00e4, Finland"}], "tags": ["k-12", "outreach", "phenomenography", "game programming"]}, {"title": "Engaging High School Students in Modeling and Simulation through Educational Media", "link": "https://dl.acm.org/doi/10.1145/2676723.2677237", "abstract": "The new AP CS Principles curriculum has a significant component regarding modeling and simulation, and many teachers will need to figure out how to accomplish this in their classroom. We have developed a new publicly available media-enhanced approach for teaching modeling and simulation, designated as TrafficJam. The approach consists of two core activities, both of which involve students optimizing traffic signals (also known as traffic lights, or stoplights). TrafficJam is likely best distinguished from other classroom simulation exercises in that these activities are introduced, motivated, and demonstrated in a video created by Twin Cities Public Television (TPT). The video uses an inquiry-driven format to feature four high school students who take on the task of improving signal timing in their own neighborhood. A pilot study of TrafficJam in four schools indicates that students find the video engaging, the activities relevant and interesting, and that they gain understanding of modeling and simulation from the experience.", "authors": [{"name": "David Musicant", "affiliation": "Carleton College, Northfield, MN, USA"}, {"name": "S. Selcen Guzey", "affiliation": "Purdue University, West Lafayette, IN, USA"}], "tags": ["simulation", "ap cs principles", "modeling", "media-enhanced"]}, {"title": "An Analysis of User Engagement in Relation to Computing Workshop Activities", "link": "https://dl.acm.org/doi/10.1145/2676723.2677272", "abstract": "Computing is now one of the fastest growing fields of employment, with a large bias placed on developing Science, Technology, Engineering, and Mathematics (STEM) education in schools. However, due to the fast pace of technology development, it is increasingly difficult for schools to keep up with the latest computing methodologies. A possible solution is the use of university outreach programmes, whereby local universities can provide training workshops on areas that can be challenging for schools to implement. This can be problematic, as there is a perceived lack of interest in the methods used to interact with secondary school pupils on a university level.\nThis paper introduces a week long 'Easter Computing School', comprising of five workshop sessions on different topics. These sessions were analysed in terms of user engagement, to better understand aspects that are important to secondary school pupils. It was found that a combination of theory and interactive workshop sessions can provide the highest levels of engagement and their use is encouraged in future workshop design.", "authors": [{"name": "Craig Stewart", "affiliation": "University of Dundee, Dundee, United Kingdom"}, {"name": "Rachel Menzies", "affiliation": "University of Dundee, Dundee, United Kingdom"}, {"name": "Mark Zarb", "affiliation": "Robert Gordon University, Dundee, United Kingdom"}, {"name": "Daniel Herron", "affiliation": "University of Dundee, Dundee, United Kingdom"}, {"name": "Karen Petrie", "affiliation": "University of Dundee, Dundee, United Kingdom"}, {"name": "Michael Crabb", "affiliation": "University of Dundee, Dundee, United Kingdom"}], "tags": ["outreach", "summer school", "user engagement"]}, {"title": "Session details: Paper Session: Testing: Tools & Techniques", "link": "https://dl.acm.org/doi/10.1145/3251167", "abstract": "No abstract available.", "authors": [{"name": "Joan Lucas", "affiliation": "SUNY Brockport"}], "tags": []}, {"title": "Unci: a C++-based Unit-testing Framework for Intro Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2677228", "abstract": "This paper describes Unci, a unit-testing language with a clean and minimal interface suitable for introducing beginning programming students to the ideas of unit testing and test-driven development. We detail why CppUnit, a common C++-based unit-testing framework, is not well-suited for beginners, and present Unci and explain how it addresses the weaknesses of CppUnit. Finally, we present a comparison of CS2 student performance in the two systems, showing that moving from CppUnit to Unci resulted in an approximate doubling in the proportion of students able to write an effective test suite for a lab assignment.", "authors": [{"name": "Don Blaheta", "affiliation": "Longwood University, Farmville, VA, USA"}], "tags": ["unit testing", "test-driven development", "cs1", "cs2"]}, {"title": "Bug Infestation!: A Goal-Plan Analysis of CS2 Students' Recursive Binary Tree Solutions", "link": "https://dl.acm.org/doi/10.1145/2676723.2677232", "abstract": "A goal-plan analysis was conducted to examine the variety of plans students use in writing a recursive method for an operation on a binary search tree. Students were asked to write a recursive method to count the nodes in a binary search tree with exactly one child. The problem incorporated two goals: traversing the tree and counting nodes with one child. Three traversal plans and four counting plans were observed in student solutions. Over half of the students used the arm's-length recursion plan, which involves testing for the base case before it is actually reached in order to avoid making recursive calls. This strategy creates complex and error prone code. Making students aware of arm's-length recursion may help them avoid introducing bugs into their recursive code. Although nearly all of the 18 participants demonstrated viable plans for solving the problem, their solutions contained a variety of errors: 55 total errors of 15 types. Students had particular difficulty with base cases, misplaced calculations, and missing method calls. Knowledge of these errors can be useful for instructors when developing lecture examples, identifying distractors for peer instruction multiple-choice questions and for designing homework exercises. Instructors can counteract these problems by providing a variety of recursive examples.", "authors": [{"name": "Scott Grissom", "affiliation": "Grand Valley State University, Allendale, MI, USA"}, {"name": "Sue Fitzgerald", "affiliation": "Metropolitan State University, St. Paul, MN, USA"}, {"name": "Laurie Murphy", "affiliation": "Pacific Lutheran University, Tacoma, WA, USA"}, {"name": "Ren\u00e9e McCauley", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["arm's-length recursion", "cs2", "data structures", "binary search trees", "bst", "computer science education research", "recursion"]}, {"title": "Ante Up: A Framework to Strengthen Student-Based Testing of Assignments", "link": "https://dl.acm.org/doi/10.1145/2676723.2677247", "abstract": "We introduce the Ante framework to automate the evaluation of student tests in such a way that students will see them as an integral part of the software development process. Our unique approach is to evaluate student testing before students are allowed to submit implementations of the assignment. By evaluating student testing, we can ensure that 1) students understand the assignment before moving on to implementing it and 2) students have a set of tests to aid in implementing their assignment. In this paper we will describe the existing tools and techniques to evaluate student testing, discuss the process of utilizing this framework from both the student and instructor points of view, describe the technical and usability issues in crafting Ante, and report preliminary feedback of student attitudes towards testing in the context of this new paradigm.", "authors": [{"name": "Michael K. Bradshaw", "affiliation": "Centre College, Danville, KY, USA"}], "tags": ["testing", "python", "lms", "education", "moodle", "c++", "java"]}, {"title": "Session details: Paper Session: Soft Skills: Teamwork", "link": "https://dl.acm.org/doi/10.1145/3251168", "abstract": "No abstract available.", "authors": [{"name": "Ruth Anderson", "affiliation": "University of Washington"}], "tags": []}, {"title": "On the Evaluation of Student Team Software Development Projects", "link": "https://dl.acm.org/doi/10.1145/2676723.2677223", "abstract": "Project experience and teamwork have been identified as two of the most important deficiencies of recent graduates, so experiences with team projects are a critical component of computer science and software engineering education. However, evaluating these projects is difficult, as it requires a balance between rewarding the team's effort (and the development of skills that enable the team to work effectively) and recognizing individual contributions. We report on an investigation of the student perspective on evaluation of software development team projects. We find that (1) computer science and software engineering educators hold several misconceptions about students' preferences in teamwork evaluation methods, (2) that students' preferences with regard to evaluation change dramatically as they advance through the program and even in the course of a single term, and (3) that the change in preference occurs early in the term, before they complete any work as a team, with most students shifting their preference towards putting more weight on the team's effort.", "authors": [{"name": "Jennifer Campbell", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Andrew Petersen", "affiliation": "University of Toronto Mississauga, Toronto, ON, Canada"}, {"name": "Anya Tafliovich", "affiliation": "University of Toronto Scarborough, Toronto, ON, Canada"}], "tags": ["students' perspective", "undergraduate software development project", "motivating students", "evaluation", "student teamwork"]}, {"title": "An Experience Report at Teaching a Group Based Agile Software Development Project Course", "link": "https://dl.acm.org/doi/10.1145/2676723.2677284", "abstract": "Teaching group based Agile software development project courses is difficult. There are many aspects that need to be considered for a project to be successful such as a well defined scope, students working effectively together, and engaging with the customer. In this paper we present an experience report at teaching an Agile software development project course that involved teams developing web applications. The resources developed for the course and discussion about our experience will help inform others who also wish to teach group based software development courses.", "authors": [{"name": "Frank Maurer", "affiliation": "University of Calgary, Calgary, AB, Canada"}, {"name": "Craig Anslow", "affiliation": "University of Calgary, Calgary, AB, Canada"}], "tags": ["evaluation", "agile software development", "group work"]}, {"title": "An Experience Report: Using Mobile Development To Teach Software Design", "link": "https://dl.acm.org/doi/10.1145/2676723.2677307", "abstract": "We report on our experience with incorporating Android software development in a second-year software design course. Our primary course goals are twofold: (1) teach principles of object-oriented design, and provide students with an opportunity to apply these principles in designing and developing Java programs, and (2) introduce students to the basics of software engineering with a team project that follows a Scrum-like software development process. In this report, we describe a team-based Android application development project that achieves our teaching goals, helps motivate student learning, and increases student satisfaction with the course. We provide an overview of our approach, outcomes, and student feedback. We also describe lessons learnt by the instructors and identify promising directions for improvements.", "authors": [{"name": "Jennifer Campbell", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Anya Tafliovich", "affiliation": "University of Toronto Scarborough, Toronto, ON, Canada"}], "tags": ["motivating students", "mobile computing", "object-oriented software design"]}, {"title": "Session details: Lightning Talk Session", "link": "https://dl.acm.org/doi/10.1145/3251169", "abstract": "No abstract available.", "authors": [{"name": "Stephen Edwards", "affiliation": "Virginia Tech"}], "tags": []}, {"title": "Montessori Methods + A Living Textbook > Traditional CS Instruction (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691879", "abstract": "When it comes to educating children, we may agree that it makes no sense to teach them to write before they have mastered the alphabet. Yet, it is common for CS instructors to forge ahead with the next topic even though some students have failed to gain the necessary understanding of the current topic. The tightly integrated nature of CS topics often makes this \"forward progress\" turn into no progress at all for those students.\nWe propose an individualized approach to CS instruction where students progress to more advanced concepts only after they have demonstrated proficiency in prerequisite topics. We use a constructivist model of individualized instruction supported by specialized materials and a support system of instructor and peers: core Montessori components. In our case, the specialized materials are realized in a \"living textbook\" which incorporates scaffolded lessons delivered to students at the appropriate time based on their individual progress and also integrates a social communication network between students, peers, and the instructor (guide).\nMaria Montessori said that \"our aim is not only to make the child understand ... but to enthuse them to their innermost core.\" Our prior work focused on giving our students motivating materials and creating a \"Comfort Zone of Proximal Development.\" Combining this with Montessori methods, we believe we can help all students succeed in Computer Science, some at a slower pace and others exploring more concepts than we previously dreamed possible. We will explore the details of this approach in our (en)lightening talk.", "authors": [{"name": "Tim Gegg-Harrison", "affiliation": "Winona State University, Winona, MN, USA"}, {"name": "Nicole Anderson", "affiliation": "Winona State University, Winona, MN, USA"}], "tags": ["living textbook", "montessori", "zone of proximal development", "scaffolded instruction"]}, {"title": "coaster: Teaching Computer Graphics Incrementally (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691880", "abstract": "coaster is a project that teaches a semester-long introductory computer graphics class by means of ten programming assignments. The assignments are incremental - each one building on the previous ones - and ultimately require implementation of most of the course content in the final one: a first-person rollercoaster simulation. Briefly described, the assignments (and their course contents) are:\ncircles (\"warmup\", 2D graphics, applying trigonometry),\nwire track (3D graphics, parametric curves),\nwire car (meshes),\n\"hedgehog\" car (face and vertex normals),\nshaded car (lighting models and vertex shaders),\nshaded track (extrusion, model transforms),\nsurfaces (B\u00e9zier surfaces, height maps),\nfirst person (viewing transforms, animation, splines),\ndynamics (physics-based modeling), and\ntextures (textures, pixel shaders).\nThere is also an eleventh project of the student's own (approved) design. Students are provided with template code for the first ten programming assignments. The languages used are C++ on the CPU and GLSL on the GPU. Students are presumed to have access to OpenGL/GLSL 3.3/3.30 and the GLUT and GLEW libraries.\nBoth undergraduate and graduate students take the class. and it has been presented twice at Washington State University, both times with about half of the students on a remote campus receiving it as a live telecourse. Student response has been very positive.\nThe goal of this lightning talk is to elicit interest from the computer graphics teaching community in making coaster systematically available to other universities by providing source code and training to instructors.", "authors": [{"name": "Robert R. Lewis", "affiliation": "Washington State University, Tri-Cities, Richland, WA, USA"}], "tags": ["incremental project-based learning", "gpu shaders", "programming instruction", "glsl", "opengl"]}, {"title": "Hugging and Bridging: What It Is And Why You Should Be Doing It! (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691881", "abstract": "Computational Thinking (CT), now widely recognized as a necessary skill for today's generation of learners, is typically being introduced to students in middle and high school (and even at the college level) in the context of programming in visual, block-based, drag-drop environments such as Scratch, Alice, Blockly, Tynker, Agentsheets and Kodu. How well are these first experiences preparing students to apply their learning successfully to future computational experiences, which are likely to be in the context of higher-order, text-based programming languages? How can we teach so as to facilitate successful 'transfer of learning' to future contexts? The art of teaching for transfer, or mediating transfer, has been actively studied for decades in education research. Pedagogies such as 'bridging', 'hugging', and 'preparation for future learning' (PFL) have shown promise in the context of education research in STEM domains at the secondary level. This fun lightning talk will shed light on these very pertinent ideas that CS education will benefit from, and share concrete strategies that can be employed in K-12 and college-level introductory programming classrooms to prepare students for better success with future computational experiences. The broader goal is to get CS educators and researchers thinking about an important aspect of teaching introductory programming and get a conversation started.", "authors": [{"name": "Shuchi Grover", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["k-12 computer science", "introductory programming", "transfer of learning", "programming languages"]}, {"title": "Making Computer Science a First-Class Object in the K-12 Next Generation Science Standards (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691882", "abstract": "Researchers, practitioners, and policymakers are (in most states) rallying around the Next Generation Science Standards. First released in 2012, the NGSS address the \"mile wide, inch deep\" science teaching so prevalent in K-12 and instead emphasize disciplinary core ideas, cross-cutting concepts, and practices in science and engineering. The NGSS make a nuanced distinction between science (inquiry) and engineering (design) and include performance standards for engineering design that \"literate citizens\" are expected to know. Early versions of the NGSS caused kerfluffles in the CS community - \"the attention paid to the discipline of computer science does not match its importance in terms of workforce demand.\" Ignoring calls from industry and academia to promote computer science, the authors relegated it, like statistics, to a supporting role. Putting CS in a supporting role means that it becomes a second-class object of study - a tool for investigating other disciplines - instead of a first-class object that is investigated in terms of disciplinary core ideas. Part of the problem is the lack of widely accepted core ideas that are easily explained. In the course of our work on building assessments for the Exploring Computer Science course (including drawing from the AP CS Principles framework) we have identified a manageable set of core ideas and mapped them to the NGSS engineering design standards. In this talk, I will point to materials we have developed that the community can use to show how computer science can replace engineering in the NGSS to teach practices and meet standards.", "authors": [{"name": "Marie Bienkowski", "affiliation": "SRI International, Menlo Park, CA, USA"}], "tags": ["secondary computer science", "national standards", "disciplinary core ideas"]}, {"title": "Launching CROMA: Computational Research On Music & Audio", "link": "https://dl.acm.org/doi/10.1145/2676723.2691883", "abstract": "This lightning talk describes the current effort to create a research group at Lincoln University to conduct Computational Research On Music & Audio (CROMA). A CROMA Team of Interdisciplinary Collaborators (CROMA-TIC) will be assembled to participate in different aspects and applications of computational audio signal processing, drawing from disciplines such as computer science, mathematics, music, psychology, and nursing. This effort is modelled upon the Centre for Interdisciplinary Research in Music Media and Technology (CIRMMT) housed at McGill University, but it will be distinct in its focus on undergraduate research. Further, this research group will be unique among Historically Black Colleges and Universities (HBCUs). A goal of assembling CROMA-TIC and establishing the CROMA-Lab is to inspire participants, especially including minority students, to seek graduate degrees while enriching their undergraduate learning experiences. The initial research aims will focus on sound event separation within musical audio, with the idea that the research conducted by CROMA-TIC will be applicable to a wide array of applications (such as improving the performance of hearing aids in noisy environments or automatic transcription of music recordings, among innumerable possibilities). This effort is just underway; interested faculty and students are invited to attend the presentation and consider participation in CROMA so that it may develop into a truly interdisciplinary, multi-institutional endeavour.", "authors": [{"name": "David Heise", "affiliation": "Lincoln University, Jefferson City, MO, USA"}], "tags": ["croma", "music information retrieval", "undergraduate research", "interdisciplinary research", "audio signal processing"]}, {"title": "Integrating Programming into Physics and Algebra (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691884", "abstract": "We are infusing inquiry-driven programming activities into algebra and physics courses with the objective of strengthening disciplinary understandings and providing all students a meaningful first experience with programming.\nThe majority of students who complete 9th grade algebra fail to connect its syntactic and graphical representations to concepts related to rate of change. These learning deficits contribute to the well documented failure of high school and college physics courses to effectively convey conceptual understandings of the relationships between force, acceleration, velocity and position.\nOur programming activities for algebra and physics classrooms focus student attention towards the principles underlying symbolic and graphical representations of slope. Implementations of these inherently multi-disciplinary activities within math, physics, and even computing classes have previously only been successful when instructors have broad content and pedagogical knowledge. For our most recent implementations within physics lab courses led by inexperienced TAs, instructional modules that introduce and explore the lab course's conventional kinematic experiments were developed.", "authors": [{"name": "Karla Carmona", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}, {"name": "Kien Lim", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}, {"name": "Catherine Tabor", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}, {"name": "Eric A. Freudenthal", "affiliation": "University of Texas at El Paso, El Paso, TX, USA"}], "tags": ["introductory programming", "physics education", "mathematics education", "computer science education"]}, {"title": "HFOSS-Lite in CS2: Incorporating the Ushahidi Crowdmapping Program in a Data Structures and Algorithms Course (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691885", "abstract": "Although undergraduate computer science enrollments are again on the upswing, increased enrollments do not seem to have led to increased diversity -- CS, at least in America, remains a field dominated by white males. A variety of evidence shows that many underrepresented groups, such as women and domestic students of color, are often motivated by course work that includes a clear societal benefit. The Humanitarian Free and Open Source Software (HFOSS) approach suggests that working on FOSS projects that have humanitarian benefits provides such motivation. Unfortunately, adding new themes and topics to courses can be difficult. CS2, in particular, often feels packed enough that it's hard to envision adding something else. And, while HFOSS is attractive, it's sometimes hard for the particular needs of a project to help students develop course-specific knowledge (about data structures and algorithms).\nI've recently experimented with an idea that I call \"HFOSS-lite\". Rather than students contributing directly to an HFOSS project, they use an HFOSS project as a source of data for their data structures and algorithms. The Ushahidi crowdmapping platform has proven especially useful. Students can contribute data to Ushahidi sites and even build their own sites. The data can be used in a variety of exercises, from simple searching to sorting algorithms in which they use different criteria (not just alphabetical or by time, but also by distance from a location and a variety of hybrid approaches) and beyond. And, because they are using the HFOSS software, they think about societal impact.", "authors": [{"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["hfoss", "csed4sg", "free and open-source software", "data structures and algorithms", "cs2"]}, {"title": "A Peer Tutoring Model for Small Schools with Limited Funding and Resources (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691886", "abstract": "Peer tutoring has been used in a variety of contexts and a variety of institutions to both improve learning and retention for the classroom students and to improve the confidence and knowledge base of the peer tutor. Much of the current literature focusses on how to implement peer tutoring with a fairly large program, including at least one graduate TA and multiple undergraduates who have recently taken the course. In addition, these peers were trained outside of the normal classroom hours and/or paid to participate. While useful at larger institutions, or at least those with substantial resources, this model is generally unworkable at a smaller institution without funding to pay students, or a sufficient critical mass of students to enable formal training outside of the classroom. This lightning talk describes a slightly different model that involves the university's academic support center staff for tutoring training, class attendance for technical training, and the giving of credit as opposed to payment for the student. To receive more than one hour of credit the student also works closely with the professor to complete one or more \"learning modules\" that later become resources for the class and provide an additional learning opportunity for the tutor. This method has been used by the author with over 9 peer tutors across a range of 7 classes, with generally good success.", "authors": [{"name": "Dee A.B. Weikle", "affiliation": "Eastern Mennonite University, Harrisonburg, VA, USA"}], "tags": ["cooperative learning", "peer mentoring", "peer-led team learning", "communication skill"]}, {"title": "An Across-Institution Anytime MOOC in Database", "link": "https://dl.acm.org/doi/10.1145/2676723.2691887", "abstract": "In Spring 2015, instructors at participating universities and colleges plan to run their Introduction to Database courses using Jennifer Widom's self-paced online course as an optional or required resource. We call the collective of students and instructors who will be moving through Widom's course in relative synchrony, a (loosely) collaborative, distributed open, online course (CDOOC). This way of exploiting a self-paced course allows an organized cohort (e.g., a campus course) to move through at the cohort's \"own\" pace. If the organized cohort's progress through the self-paced course is open to other learners, outside the a priori organized cohort (as it will be in our case), then this larger population amounts to a MOOC. Because such a MOOC can be convened at anytime, by any instructor, we call it an anytime MOOC.", "authors": [{"name": "Douglas Fisher", "affiliation": "Vanderbilt University, Nashville, TN, USA"}], "tags": ["classroom management", "self-paced open online courses", "experience report", "database education", "web-based technology", "anytime mooc", "online education", "blended learning"]}, {"title": "The Need for Voices in CS to Address the #GamerGate Controversy (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691888", "abstract": "CS faculty are responsible for educating future software developers and thus have a unique responsibility to combat the problem of sexism within the software development industry. Game development is an important subfield in which to address this problem because of its cultural impact, which extends beyond the developers involved, and its incorporation into pedagogy for the purposes of engagement and retention.\nThe recent #GamerGate controversy has brought to public attention the issue of sexism within a white male-dominated gaming subculture as it enters the cultural mainstream, particularly due to anonymous threats of violence being made against women who have criticized the #GamerGate movement. This controversy is particularly important for CS because it centers on software developers. In addition to harming the targeted women, such threats create a chilling effect that threatens not only to silence important voices within gaming, but also to undermine progress toward gender equality in CS and the recruitment and retention of female CS students. It is important for CS faculty to evaluate their responsibility to students and to the field in light of these concerns.\nThis lightning talk will assess the outcome of a round-table to be held with students at Capital University in which this controversy and its broader implications will be discussed. In particular, the talk will focus on outcomes related to CS education and outreach, with the goal that lessons learned through the round-table can inform the efforts of faculty planning to address such issues at their institutions.", "authors": [{"name": "Joseph Kendall-Morwick", "affiliation": "Capital University, Columbus, OH, USA"}], "tags": ["outreach", "underrepresented students", "retention"]}, {"title": "Learning Computer Networking Through Illustration (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691889", "abstract": "When teaching computer networking courses, over the years, the author has used Java applets and other software tools for illustrating standards, protocols, and networking concepts. Although these Java applets and software tools do perform what they are designed to do, they have their limitations. For example, the Java applets that the author used can only illustrate a fixed set of scenarios, and software tools such as Wireshark need devices to generate traces, posing a problem when the teaching resource is limited. In recent years, our school has joined the Cisco Networking Academy and taught computer networking courses offered through the Academy. Cisco Networking Academy provides a networking software program, Packet Tracer, which allows the users to setup and configure various networks which involve routers, switches, and end devices using various wired and wireless cables and protocols in local area networks or wide area networks. There are several nice features about the Packet Tracer. For example, an instructor can use the Packet Tracer to illustrate networking concepts. A student can use the Packet Tracer to iron out networking design issues by first implementing the network using Packet Tracer before implementing it in a physical lab. Additionally, students can closely examine the header information in each layer of the protocol stack as a packet steps from layer to layer and node to node. In this lightning talk, the author will share the experience of using Packet Trace in teaching computer networking courses.", "authors": [{"name": "Wen-Jung Hsin", "affiliation": "Park University, Parkville, MO, USA"}], "tags": ["simulator", "computer networking"]}, {"title": "Special Session: Perspectives on Adopting and Facilitating Guided Inquiry Learning", "link": "https://dl.acm.org/doi/10.1145/2676723.2677324", "abstract": "POGIL (Process Oriented Guided Inquiry Learning) is based on the principle that students learn more when they construct their own understanding. Instead of attending lecture, student teams work through POGIL activities to discover concepts on their own, while instructors circulate and facilitate learning. Students learn the material better, and this constructivist approach also teaches them important process skills, including critical thinking, team work, and leadership. In this special session, SIGCSE attendees will experience a POGIL activity for themselves, learn about the structure of POGIL activities (through a POGIL meta-activity), and hear perspectives from teachers who recently adopted POGIL activities available at http://cspogil.org. We will share classroom-tested guided inquiry activities and discuss how POGIL can transform CS classes at all levels, from high school to graduate-level classes, from small schools to large universities.", "authors": [{"name": "Kristine Nagel", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Clifton Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}, {"name": "Deepa Muralidhar", "affiliation": "Atlanta Girls School, Atlanta, GA, USA"}, {"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}], "tags": ["cooperative learning", "pogil", "active learning", "teams"]}, {"title": "Introduction to AccessCS10K and Accessible Tools for Teaching Programming", "link": "https://dl.acm.org/doi/10.1145/2676723.2677321", "abstract": "This special session is for SIGCSE attendees who are interested in K-12 computing education, especially those who have or are planning to have a NSF CS 10K project. A major goal of CS 10K is broadening participation, which includes providing computing education to students with disabilities. This interactive session will introduce attendees to AccessCS10K, a project to help teachers include students with disabilities in their K-12 computing classes. Furthermore, attendees will have a hands-on experience with the Quorum language, a language designed for youth regardless of disability. It is expected that attendees to the special session will be better prepared to include a student with a disability in their computing classes or to help other teachers do the same.", "authors": [{"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Andreas Stefik", "affiliation": "University of Nevada, Las Vegas, Las Vegas, NV, USA"}], "tags": ["disability", "accessibility", "usability"]}, {"title": "One-Day Activities for K-12 Face-to-Face Outreach", "link": "https://dl.acm.org/doi/10.1145/2676723.2677337", "abstract": "The recent successes of Computer Science Education Week and code.org's Hour of Code have meant that more K-12 students than ever are being given an authentic, engaging and eye-opening exposure to the wonders of computer science. There are resources aplenty to help high school and college faculty with outreach. These range from easy-to-learn, open-ended programming environments (Scratch, Alice, Snap!), to online coding challenges (code.org, Lite-bot), to non-computer activities with live performances (CS Unplugged, cs4fn), to having the entire outreach experience delivered \"in a box\", thanks to NCWIT.\nWe wanted to bring educators together to share experiences with what they've done specifically with a one-day event, given these vast resources. Now that there are so many online coding experiences, it is enough to shuttle young students into a computer room, point their browser at one of these experiences, and answer questions as they come up? Is it important to include hands-on and hands-off (e.g., nifty demos, inspiring talks) components, and if so, in what order? What do different demographics find the most engaging? Is there any chance that we can do \"damage\", since these highlight-reel experiences might over-simplify how hard some of the problems are, and that not every important result has a flashy payoff? Do some of the early experiences leave students with the impression that computer science is only (say) apps, interactive multimedia programs or solving mazes? Finally, when it's over, what follow-up is appropriate? Participants on the panel will share best practices, common pitfalls, and advice.", "authors": [{"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Wei Ding", "affiliation": "University of Massachusetts, Boston, Boston, MA, USA"}, {"name": "Barbara Ericson", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Daniel D. Garcia", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Joseph Cohen", "affiliation": "University of Massachusetts, Boston, Boston, MA, USA"}, {"name": "Dale Reed", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}], "tags": ["k-12", "outreach", "computer science education"]}, {"title": "Session details: Paper Session: Testing: Student Programming Errors", "link": "https://dl.acm.org/doi/10.1145/3251173", "abstract": "No abstract available.", "authors": [{"name": "Sambit Bhattacharya", "affiliation": "Fayetteville State University"}], "tags": []}, {"title": "37 Million Compilations: Investigating Novice Programming Mistakes in Large-Scale Student Data", "link": "https://dl.acm.org/doi/10.1145/2676723.2677258", "abstract": "Previous investigations of student errors have typically focused on samples of hundreds of students at individual institutions. This work uses a year's worth of compilation events from over 250,000 students all over the world, taken from the large Blackbox data set. We analyze the frequency, time-to-fix, and spread of errors among users, showing how these factors inter-relate, in addition to their development over the course of the year. These results can inform the design of courses, textbooks and also tools to target the most frequent (or hardest to fix) errors.", "authors": [{"name": "Amjad Altadmri", "affiliation": "University of Kent, Canterbury, United Kingdom"}, {"name": "Neil C.C. Brown", "affiliation": "University of Kent, Canterbury, United Kingdom"}], "tags": ["programming mistakes", "blackbox"]}, {"title": "Looking Glass: A C++ Library for Testing Student Programs through Reflection", "link": "https://dl.acm.org/doi/10.1145/2676723.2677281", "abstract": "Looking Glass (https://github.com/sturner84/LookingGlass) is a library designed to support the testing of students' C++ code through reflection. Instructors can design tests that compile even if there are mismatches between the instructor's and student's code (like misspelled function names or parameters that do not have the expected types). Using the automatically generated metadata, instructors can search for and call functions or methods in the student code, including the main function, while providing feedback (rather than a compile error) if the required code is not found. Although not suitable for all C++ programs, Looking Glass was designed to support instructors in introductory and intermediate classes and to be transparent to the students.", "authors": [{"name": "Scott Alexander Turner", "affiliation": "UNC Pembroke, Pembroke, NC, USA"}], "tags": ["instructor testing", "reflection", "c++"]}, {"title": "Checked Coverage and Object Branch Coverage: New Alternatives for Assessing Student-Written Tests", "link": "https://dl.acm.org/doi/10.1145/2676723.2677300", "abstract": "Many educators currently use code coverage metrics to assess student-written software tests. While test adequacy criteria such as statement or branch coverage can also be used to measure the thoroughness of a test suite, they have limitations. Coverage metrics assess what percentage of code has been exercised, but do not depend on whether a test suite adequately checks that the expected behavior is achieved. This paper evaluates checked coverage, an alternative measure of test thoroughness aimed at overcoming this limitation, along with object branch coverage, a structure code coverage metric that has received little discussion in educational assessment. Checked coverage works backwards from behavioral assertions in test cases, measuring the dynamic slice of the executed code that actually influences the outcome of each assertion. Object branch coverage (OBC) is a stronger coverage criterion similar to weak variants of modified condition/decision coverage. We experimentally compare checked coverage and OBC against statement coverage, branch coverage, mutation analysis, and all-pairs testing to evaluate which is the best predictor of how likely a test suite is to detect naturally occurring defects. While checked coverage outperformed other coverage measures in our experiment, followed closely by OBC, both were only weakly correlated with a test suite's ability to detect naturally occurring defects produced by students in the final versions of their programs. Still, OBC appears to be an improved and practical alternative to existing statement and branch coverage measures, while achieving nearly the same benefits as checked coverage.", "authors": [{"name": "Zalia Shams", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Stephen H. Edwards", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["test coverage", "automated assessment", "programming assignments", "branch coverage", "modified condition/decision coverage", "test quality", "automated grading", "test metrics", "statement coverage", "software testing", "mutation testing", "checked coverage"]}, {"title": "Session details: Paper Session: Focus on K-12: Elementary", "link": "https://dl.acm.org/doi/10.1145/3251174", "abstract": "No abstract available.", "authors": [{"name": "Joseph Kendall-Morwick", "affiliation": "Capital University"}], "tags": []}, {"title": "Using SOLO to Classify the Programming Responses of Primary Grade Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2677244", "abstract": "This paper presents an assessment designed to measure computational thinking skills of fourth grade students. The students in two public schools were given a set of Scratch programming challenges. The SOLO taxonomy was used to classify student programming responses based on the degree of understanding of the problem structure. The majority of fourth grade students from one school demonstrated the ability to synchronize the costume and motion of a single character sprite, as well as synchronize a basic conversation between multiple sprites. However, they struggled to integrate motion and costume changes into a multi-sprite conversation. The majority of fourth grade students from the second school, where reading and math comprehension scores fall below the state minimum requirements for proficiency, were unable to demonstrate a basic understanding of the programming tasks. The results suggest that fourth grade students who read at grade level are capable of understanding the relationships between multiple concerns within a single script, along with synchronizing a single concern across multiple scripts, but are challenged when synchronizing multiple concerns across multiple scripts.", "authors": [{"name": "Linda Seiter", "affiliation": "John Carroll University, University Heights, OH, USA"}], "tags": ["solo taxonomy", "scratch", "primary grades", "assessment"]}, {"title": "Floors and Flexibility: Designing a Programming Environment for 4th-6th Grade Classrooms", "link": "https://dl.acm.org/doi/10.1145/2676723.2677275", "abstract": "The recent renaissance in early computer science education has provided K-12 teachers with multiple options for introducing children to computer science. However, tools for teaching programming for children with wide-scale adoption have been targeted mostly at pre-readers or middle school and higher grade-levels. This leaves a gap for 4th -- 6th grade students, who differ developmentally from older and younger students.\nIn this paper, we investigate block-based programming languages targeted at elementary and middle school students and demonstrate a gap in existing programming languages appropriate for 4th -- 6th grade classrooms. We analyze the benefits of Scratch, ScratchJr, and Blockly for students and curriculum developers. We describe the design principles we created based on our experiences using block-based programming in 4th -- 6th grade classrooms, and introduce LaPlaya, a language and development environment designed specifically for children in the gap between grades K-3 and middle school students.", "authors": [{"name": "Hilary A. Dwyer", "affiliation": "University of California Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Danielle Harlow", "affiliation": "University of California Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Charlotte Hill", "affiliation": "University of California Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Tim Martinez", "affiliation": "University of California Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Diana Franklin", "affiliation": "University of California Santa Barbara, Santa Barbara, CA, USA"}], "tags": ["middle school", "novice programming environments", "graphical programming", "computer science education", "elementary school"]}, {"title": "Getting Started in Teaching and Researching Computer Science in the Elementary Classroom", "link": "https://dl.acm.org/doi/10.1145/2676723.2677288", "abstract": "The recent growth of interest in computer science has created a movement to more readily introduce computer science in K-12 classrooms. However, little research exists on how to successfully bring computer science to lower grade levels. In this paper, we present advice for researchers and curriculum developers who are getting started working with computer science in elementary schools. Specifically, we focus on practical tips for studies of this nature, developed from our experiences piloting a computational thinking curriculum with 4th-6th grade students. We address issues arising in elementary school classrooms such as recruiting and interfacing with teachers and schools, classroom management strategies, student computer literacy and developmental stages, and curriculum life cycles.", "authors": [{"name": "Ashley Iveland", "affiliation": "University of California at Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Danielle Harlow", "affiliation": "University of California at Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Alexandria Killian", "affiliation": "University of California at Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Hilary Dwyer", "affiliation": "University of California at Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Charlotte Hill", "affiliation": "University of California at Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Diana Franklin", "affiliation": "University of California at Santa Barbara, Santa Barbara, CA, USA"}], "tags": ["k-12", "curriculum", "outreach", "computer science education"]}, {"title": "Improving Non-CS Major Performance in CS1", "link": "https://dl.acm.org/doi/10.1145/2676723.2677214", "abstract": "At our comprehensive liberal arts college, we offer a 2-credit hour CS1 course for engineering majors that includes all of the standard learning objectives of a typical 4-credit hour course. To help the students learn the course material in this compressed time frame, we switched our programming language from C++ to Python, and we replaced weekly homework assignments with labs and online problem sets. All other factors in the course were unchanged, including instructor, course and weekly learning objectives, tests, grading criteria, pedagogical style, and even textbook (the textbook came in two versions -- a C++ version and a Python version). This transition offered a unique opportunity to observe, compare, and measure student learning outcomes across the two semesters. Our measured results show a moderate but statistically significantly improvement from the semester using C++ and homework assignments to the semester using Python and online problem sets.", "authors": [{"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, MI, USA"}, {"name": "Victor T. Norman", "affiliation": "Calvin College, Grand Rapids, MI, USA"}], "tags": ["turingscraft", "c++ curriculum", "codelab", "just-in-time teaching", "cs1 python"]}, {"title": "Can We \"Flip\" Non-Major Programming Courses Yet?", "link": "https://dl.acm.org/doi/10.1145/2676723.2677271", "abstract": "Proponents of \"flipped\" instruction offer a vision of class meetings devoted to active learning, in exchange for students spending time outside of class acquiring basic knowledge from readings or video lectures. The price paid for this vision is the need to create the readings or videos. However, such materials are becoming available as open educational resources, and if they become widely enough available it may be possible to flip classes without requiring each instructor to develop his or her own materials. In the spring of 2014 I flipped an introductory programming course for non-computing majors in an effort to see if freely available video lectures could support it. This paper reports my findings, notably that open resources can support such a course, but just barely.", "authors": [{"name": "Douglas Baldwin", "affiliation": "State University of New York at Geneseo, Geneseo, NY, USA"}], "tags": ["introduction", "inverted classroom", "flipped classroom", "non-majors"]}, {"title": "Evaluating Pair-Programming for Non-Computer Science Major Students", "link": "https://dl.acm.org/doi/10.1145/2676723.2677289", "abstract": "The ubiquitous nature of software has resulted in many non-computer-science (NCS) major students taking courses in computer programming. The appeal of learning computer programming for this cohort may be diminished, given that they do not usually have an initial desire to become expert programmers. This, coupled with the difficulty of learning computer programming, means that efforts to heighten their engagement with/learning of, programming skills are required.\nPaired programming is an approach that has been hypothesized as increasing computer science students' attendance and performance. The study presented here reports on a controlled study investigating the impact of a pair-programming approach to teaching computer programming to NCS majors. The results indicate that pair programming has a positive impact on student attendance, particularly for weaker students. While a comparison of the paired programming cohort and a traditional lab cohort is not statistically significant with respect to performance, there are definite trends which suggest that pair programming may increase the number of weaker students that succeed in the programming module. These trends are re-enforced by qualitative feedback from the participants.", "authors": [{"name": "Jim Buckley", "affiliation": "University of Limerick, Limerick, Ireland"}, {"name": "Abdulhussain Mahdi", "affiliation": "University of Limerick, Limerick, Ireland"}, {"name": "John Nelson", "affiliation": "University of Limerick, Limerick, Ireland"}, {"name": "Clem O'Donnell", "affiliation": "University of Limerick, Limerick, Ireland"}, {"name": "Michael English", "affiliation": "University of Limerick, Limerick, Ireland"}], "tags": ["pair programming", "collaborative environment", "non-computer science students", "empirical study", "computer science education"]}, {"title": "Session details: Paper Session: Focus on K-12: Outreach/Summer Camps", "link": "https://dl.acm.org/doi/10.1145/3251176", "abstract": "No abstract available.", "authors": [{"name": "Christine Moore", "affiliation": "College of Charleston"}], "tags": []}, {"title": "From 9 to 90: Engaging Learners of All Ages", "link": "https://dl.acm.org/doi/10.1145/2676723.2677248", "abstract": "This paper details the creation of a two-day computer science and robotics outreach course aimed at simultaneously engaging youth (children, ages 9-14) and senior (their grandparents, ages 55+) students. Our goal is to encourage enthusiasm for science and technology in students of all ages as well as provide practical instruction regarding common computer science concepts, including variables, loops, and boolean logic. To this end, we ground our course in the emerging field of social robotics, which enables the design of several multidisciplinary hands-on activities for students. We report on a four-year experience in the development of our course, which has been offered twelve times and involved over 210 youth and senior students. Our work presents a discussion regarding the challenges in designing a course for students from diverse ages, guidelines for creating similar courses, and a reflection on how we might improve our own class. The activities and project code developed for our course are available online as open-source resources.", "authors": [{"name": "Allison Saupp\u00e9", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Daniel Szafir", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Bilge Mutlu", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}, {"name": "Chien-Ming Huang", "affiliation": "University of Wisconsin-Madison, Madison, WI, USA"}], "tags": ["social robotics", "education", "intergenerational learning", "curriculum", "outreach", "robots"]}, {"title": "A Socio-Cognitive Analysis of Summer Camp Outcomes and Experiences", "link": "https://dl.acm.org/doi/10.1145/2676723.2677292", "abstract": "In this paper, we describe the first phase of a longitudinal study focusing on young people's attitudes towards computing careers and their computational self-efficacy. Using summer camps as a springboard to pique their interests, we are interested in enhancing their knowledge in computing topics and assessing their views through surveys. Working from the findings of this first phase in the project, we discuss our future plans for an online community learning system that is grounded in a socio-cognitive learning process, and intended to engage young people in continuous engagement with and exposure to computing concepts and skills.", "authors": [{"name": "Joslenne Pena", "affiliation": "The Pennsylvania State University, State College, PA, USA"}, {"name": "Ana Segura", "affiliation": "University of Houston-Downtown, Houston, TX, USA"}, {"name": "Chulakorn Aritajati", "affiliation": "The Pennsylvania State University, State College, PA, USA"}, {"name": "Mary Beth Rosson", "affiliation": "The Pennsylvania State University, State College, PA, USA"}, {"name": "Dana Cinque", "affiliation": "The Pennsylvania State University, State College, PA, USA"}], "tags": ["intrinsic motivation", "career orientation", "introductory programming", "summer camps", "social-cognitive factors", "self-efficacy"]}, {"title": "Computational Bead Design: A Pilot Summer Camp in Computer Aided Design and 3D Printing for Middle School Girls", "link": "https://dl.acm.org/doi/10.1145/2676723.2677303", "abstract": "Computing, together with jewelry design and 3D printing offers an innovative introduction to the possibilities of technology and programming. This combination was presented to participants of a weeklong summer technology day camp focusing on computer-aided design (CAD) using jewelry design and modeling. The participants then saw their design creations built through 3D printing. In this paper we present the design of a weeklong day camp called \"Computing and Jewelry Design\". Initial findings are positive and suggest opportunities for improvement.", "authors": [{"name": "Merry Sleigh", "affiliation": "Winthrop University, Rock Hill, SC, USA"}, {"name": "Chlotia Garrison", "affiliation": "Winthrop University, Rock HIll, SC, USA"}, {"name": "Courtney Starrett", "affiliation": "Winthrop University, Rock Hill, SC, USA"}, {"name": "Marguerite Doman", "affiliation": "Winthrop University, Rock Hill, SC, USA"}], "tags": ["outreach and education", "multi-disciplinary stem-to-steam program", "girls and computers", "broadening participation", "promoting computer science"]}, {"title": "Big Data in Computer Science Education Research", "link": "https://dl.acm.org/doi/10.1145/2676723.2677318", "abstract": "Recent years have seen the emergence of applications and concepts that rely on the involvement of the general public (the \"crowd\") and, consequently, create big data (e.g., MOOCs, search engines, crowdsourcing, crowdfunding, citizen/crowd science, and more). Education in particular is changing dramatically with the use of online resources and courses that generate large streams of data. In this special session, we ask: What research questions in computer science education can be explored using big data? And how can computer science education researchers apply big data analysis to support education in other disciplines? To answer these and related questions, we focus in this special interactive session on how computer science education research can be promoted by integrating big data into the research process.", "authors": [{"name": "Orit Hazzan", "affiliation": "Technion -- Israel Institute of Technology, Haifa, Israel"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, USA"}], "tags": ["big data", "citizen science", "computer science education", "research in computer science education"]}, {"title": "Scaling High School Computer Science: Exploring Computer Science and Computer Science Principles", "link": "https://dl.acm.org/doi/10.1145/2676723.2677322", "abstract": "No abstract available.", "authors": [{"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Gail Chapman", "affiliation": "UCLA, Los Angeles, CA, USA"}, {"name": "Owen Astrachan", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Ralph Morelli", "affiliation": "Trinity College, Hartford, CT, USA"}], "tags": ["exploring computer science", "scaling education", "broadening computer science", "computer science principles"]}, {"title": "SPOCs: What, Why, and How", "link": "https://dl.acm.org/doi/10.1145/2676723.2677331", "abstract": "No abstract available.", "authors": [{"name": "Gerald Roth", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Joe Warren", "affiliation": "Rice University, Houston, TX, USA"}, {"name": "Janet Burge", "affiliation": "Wesleyan University, Middletown, CT, USA"}, {"name": "Armando Fox", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Dan Grossman", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["flipped classroom", "spocs", "online lectures", "moocs", "blended courses"]}, {"title": "Technology We Can't Live Without!", "link": "https://dl.acm.org/doi/10.1145/2676723.2677336", "abstract": "The pace of technology for use in computing education is staggering. In the last five years, the following technologies have completely transformed our teaching: Piazza, Google Docs, PandaGrader (now GradeScope), YouTube, Doodle, Skype, Google Hangout, Khan Academy, etc. Hardware has also played a part; we love our Zoom H2 digital voice recorder (for CD-quality lecture audio), Blue Yeti USB mike (for audio / videoconferences), and iClickers (for engaging students in class).\nThis panel is an outgrowth of the Technology that Educators of Computing Hail (TECH) Birds-Of-a-Feather session that we've held at SIGCSE for seven years. It will provide a chance for seasoned high school and university educators to show you the technologies that have \"bubbled to the top\", what problems they solve, and why they are so valuable. Like concert musicians, presenters will give live demonstrations and reveal the particular configuration options required to make their technology \"sing\". We hope this forum will allow the chance to dive deeply into the common use cases of these technologies, and explain how others can adopt them at their institutions.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Jeff Solin", "affiliation": "Lane Tech College Prep High School, Chicago, IL, USA"}, {"name": "Manuel P\u00e9rez-Qui\u00f1ones", "affiliation": "Virginia Tech, Blackburg, VA, USA"}, {"name": "Eric Allatta", "affiliation": "Academy for Software Engineering, New York, NY, USA"}], "tags": ["computer science education", "technology and teaching"]}, {"title": "JavaTutor: An Intelligent Tutoring System that Adapts to Cognitive and Affective States during Computer Programming", "link": "https://dl.acm.org/doi/10.1145/2676723.2691877", "abstract": "Introductory computer science courses cultivate the next generation of computer scientists. The impressions students take away from these courses are crucial, setting the tone for the rest of the students' computer science education. It is known that students struggle with many concepts central to computer science, struggles that could be alleviated in part through hands-on practice and individualized instruction. However, even the best existing instructional practices do not facilitate individualized hands-on support for students at large. We have built JavaTutor, an intelligent tutoring system for introductory computer science, which works alongside students to support them through both cognitive (skills and knowledge) and affective (emotion-based) feedback. JavaTutor aims to make advances in interactive, scalable student support. JavaTutor's behaviors were developed within a novel framework that leverages machine learning to acquire tutorial strategies from data collected within tutorial sessions between novice students and experienced human tutors. This demo presents an overview of the data-driven development of JavaTutor and shows how JavaTutor assesses and responds to students' contextualized needs. It is hoped that JavaTutor will help to usher in a new generation of tutorial systems for computer science education that adapt to individual students based not only on incoming student knowledge, but on a broad range of other student characteristics.", "authors": [{"name": "Joseph F. Grafsgaard", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Aysu Ezen-Can", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Kristy Elizabeth Boyer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Joseph B. Wiggins", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Christopher M. Mitchell", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric N. Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James C. Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eun Young Ha", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Alok Baikadi", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["intelligent tutoring systems", "cs1", "individualized instruction"]}, {"title": "MIST, The Mathematical Image Synthesis Toolkit", "link": "https://dl.acm.org/doi/10.1145/2676723.2691878", "abstract": "MIST, the Mathematical Image Synthesis Toolkit, is an open-source, Web-based graphics application in which students develop skills in computational thinking and deepen their understanding of mathematical functions through creative play in making images. Using a drag-and-drop interface, students build functions that describe animated abstract images. These functions combine a few basic images (e.g., a horizontal blend, a vertical blend, and a time-based blend) using mathematical operators whose semantics are based on corresponding points in each image (e.g., MIST includes models for adding and multiplying colors). Students develop a variety of skills in computational thinking by using the small set of images and operations to develop complex images, not only images that the system challenges them to make but also images that they find themselves inspired to create and even images that their peers challenge them to build. MIST also incorporates a community of artists/learners. Images created in MIST are available to other MIST users to comment on and remix (provided the designer permits reuse). MIST community members may also create challenges for other community members and can curate \"galleries\" of images they find particularly engaging, interesting, or even useful as challenges for others. Users can also share their images via Facebook or \"tweet\" their recent creations. We find that this additional community further encourages students to develop new and interesting images.", "authors": [{"name": "Earnest Wheeler", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Alexander Mitchell", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Halley Freger", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Daniel Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Victoria Tsou", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Eileen Fordham", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Zoe Wolter", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Amanda Hinchman-Dominguez", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["open source", "social media", "functional programming", "animation", "web software", "computational thinking"]}, {"title": "Session details: Paper Session: Teaching Practices", "link": "https://dl.acm.org/doi/10.1145/3251182", "abstract": "No abstract available.", "authors": [{"name": "John Cigas", "affiliation": "Park University"}], "tags": []}, {"title": "Insights into Teaching and Learning: Reflections on MOOC Experiences", "link": "https://dl.acm.org/doi/10.1145/2676723.2677243", "abstract": "There has been significant interest in MOOCs, both inside and outside the educational community. Some of this interest focuses on how they could be used to replace traditional brick-and-mortar education while others are interested in using them to supplement more traditional courses. Instructors can also use MOOCs to gain new insight into teaching and learning by taking on a student perspective. This paper describes how taking several MOOCs has given me a better understanding of student motivation, time commitment issues, and student perception of grading and describes how I am feeding this knowledge back into my own courses.", "authors": [{"name": "Janet Burge", "affiliation": "Wesleyan University, Middletown, CT, USA"}], "tags": ["flipped classroom", "moocs"]}, {"title": "What Influences CS Faculty to Adopt Teaching Practices?", "link": "https://dl.acm.org/doi/10.1145/2676723.2677282", "abstract": "Despite widespread development, research, and dissemination of teaching and curricular practices that improve student retention and learning, faculty often do not adopt them. This paper describes the first findings of a two-part study to improve understanding of adoption of teaching practices and curriculum by computer science faculty. The paper closes with recommendations for designers and developers of teaching innovations hoping to increase their chance of adoption.", "authors": [{"name": "Jane Gruning", "affiliation": "University of Texas at Austin, Austin, TX, USA"}, {"name": "Christopher Lynnly Hovey", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Lecia Barker", "affiliation": "University of Texas at Austin, Austin, TX, USA"}], "tags": ["adoption of teaching innovations", "dissemination", "retention"]}, {"title": "Personalized Attention @ Scale: Talk Isn't Cheap, But It's Effective", "link": "https://dl.acm.org/doi/10.1145/2676723.2677283", "abstract": "Fostering an effective learning environment in large classes is a challenge: instructors and teaching assistants are stretched thin across many students, students often lack opportunities for personal interaction with course staff, and the size of the classes makes them seem impersonal. Furthermore, students in large classes can often find solutions to their labs and assignments online or copy them from other students, diminishing their impetus to learn and raising plagiarism concerns.\nThis paper describes our experience and evaluation of an assessment method that resolves many of these problems and appears to scale to large classes of 600+ students. Using this method, students are evaluated via a combination of automatic grading mechanisms (or clear objective rubrics) and a 1-on-1 \"grading interview\". The grading interview serves to ensure the provenance of the student's work product and their depth of understanding. This change allows us to make more effective use of peer-instruction and pair-programming in our courses. It also provides the ability to re-use assignments, the insurance of timely feedback to students, and the opportunity for individualized staff attention.\nThis paper describes variations on this method across numerous classes over the past seven years, some of the goals of this method, modifications and adaptations of the method over time, and the student experience of using this method based on survey feedback.", "authors": [{"name": "Judith Stafford", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Rhonda Hoenigman", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Andy Sayler", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Elizabeth Boese", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Dirk Grunwald", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}], "tags": ["face to face", "education", "best practices", "grading", "interviews"]}, {"title": "Session details: Paper Session: Focus on K-12: Miscellaneous topics", "link": "https://dl.acm.org/doi/10.1145/3251183", "abstract": "No abstract available.", "authors": [{"name": "Adrian German", "affiliation": "Indiana University Bloomington"}], "tags": []}, {"title": "Transferring Skills at Solving Word Problems from Computing to Algebra Through Bootstrap", "link": "https://dl.acm.org/doi/10.1145/2676723.2677238", "abstract": "Many educators have tried to leverage computing or programming to help improve students' achievement in mathematics. However, several hopes of performance gains---particularly in algebra---have come up short. In part, these efforts fail to align the computing and mathematical concepts at the level of detail typically required to achieve transfer of learning. This paper describes Bootstrap, an early-programming curriculum that is designed to teach key algebra topics as students build their own videogames. We discuss the curriculum, explain how it aligns with algebra, and present initial data showing student performance gains on standard algebra problems after completing Bootstrap.", "authors": [{"name": "Shriram Krishnamurthi", "affiliation": "Brown University, Providence, RI, USA"}, {"name": "Emmanuel Schanzer", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Matthias Felleisen", "affiliation": "Northeastern University, Boston, MA, USA"}, {"name": "Kathi Fisler", "affiliation": "WPI, Worcester, MA, USA"}], "tags": ["skills transfer", "algebra", "game programming"]}, {"title": "A Practical Guide to Developing and Validating Computer Science Knowledge Assessments with Application to Middle School", "link": "https://dl.acm.org/doi/10.1145/2676723.2677295", "abstract": "Knowledge assessment instruments, or tests, are commonly created by faculty in classroom settings to measure student knowledge and skill. Another crucial role for assessment instruments is in gauging student learning in response to a computer science education research project, or intervention. In an increasingly interdisciplinary landscape, it is crucial to validate knowledge assessment instruments, yet developing and validating these tests for computer science poses substantial challenges. This paper presents a seven-step approach to designing, iteratively refining, and validating knowledge assessment instruments designed not to assign grades but to measure the efficacy or promise of novel interventions. We also detail how this seven-step process is being instantiated within a three-year project to implement a game-based learning environment for middle school computer science. This paper serves as a practical guide for adapting widely accepted psychometric practices to the development and validation of computer science knowledge assessments to support research.", "authors": [{"name": "Kristy Elizabeth Boyer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eleni V. Lobene", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Megan Hardy Frankosky", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Eric N. Wiebe", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "James C. Lester", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Philip Sheridan Buffum", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["middle school", "computer science education", "assessment"]}, {"title": "Reactive Game Engine Programming for STEM Outreach", "link": "https://dl.acm.org/doi/10.1145/2676723.2677312", "abstract": "In this paper we present our experiences using a novel programming style, reactive programming, to deliver a summer camp for students in grades 8 through 12. This software uses a declarative programming approach to allow students without a background in computing to explore a wide variety of subject material within a 3D virtual environment, including computer science, mathematics, physics, and art. This work is based on PyFRP, a reactive programming library written in Python. We describe our camp experience and provide examples of how this style of programming supports a wide variety of educational activities.", "authors": [{"name": "Lucas Vandenbergh", "affiliation": "Western State Colorado University, Gunnison, CO, USA"}, {"name": "Alan Cleary", "affiliation": "Montana State University, Bozeman, MT, USA"}, {"name": "John Peterson", "affiliation": "Western State Colorado University, Gunnison, CO, USA"}], "tags": ["k-12 instruction", "stem", "functional reactive programming", "python", "virtual worlds", "game development"]}, {"title": "Session details: Paper Session: Computers & Society", "link": "https://dl.acm.org/doi/10.1145/3251184", "abstract": "No abstract available.", "authors": [{"name": "Rachelle Hippler", "affiliation": "Bowling Green State University"}], "tags": []}, {"title": "Building CS Research Capacity in sub-Saharan Africa by Implementing a Doctoral Training Program", "link": "https://dl.acm.org/doi/10.1145/2676723.2677242", "abstract": "Sub-Saharan Africa (SSA) needs to transform from an information society that consumes information technologies into a knowledge economy that creates technologies. Key domains for transformation include computer science education, research and development. The lack of research culture and support for research activities often results in low research outcomes, and slows down the development of innovative and independent thinkers and problem solvers. To increase research capacities, we have launched a doctoral level computer science research training program between the College of Business Education (CBE), Dar es Salaam, Tanzania, and the University of Eastern Finland (UEF), School of Computing. This paper discusses the preliminary experiences of planning and setting up that program.", "authors": [{"name": "Mikko Apiola", "affiliation": "University of Eastern Finland, Joensuu, Finland"}, {"name": "Abbi Nangawe", "affiliation": "College of Business Education, Dar es Salaam, Tanzania"}, {"name": "Erkki Sutinen", "affiliation": "University of Eastern Finland, Joensuu, Finland"}, {"name": "Jarkko Suhonen", "affiliation": "University of Eastern Finland, Joensuu, Finland"}], "tags": ["research capacity building", "r&d", "sub-saharan africa"]}, {"title": "Engaging Non-Traditional Students in Computer Science through Socially-Inspired Learning and Sustained Mentoring", "link": "https://dl.acm.org/doi/10.1145/2676723.2677266", "abstract": "This paper describes a new program for attracting non-traditional students into computer science and retaining them through sustained peer and faculty mentoring. The program is centered on socially-inspired learning, - learning in and for a community. It consists of a STEM Incubator course, hands-on projects with real-world applications, a sandbox lab, and a mentoring system that begins in the STEM Incubator course and continues with students who choose to remain involved in projects and courses. Our program is in its second year. Data collected on enrollment and retention and results of student questionnaires show promise for the success and sustainability of the program.", "authors": [{"name": "Samuel S. Cho", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "H. Donald Gage", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Jennifer Burg", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Daniel Ca\u00f1as", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Peter Santago", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "William Turkett", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Errin Fulp", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "V. Pa\u00fal Pauca", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}], "tags": ["active learning", "mentoring", "non-traditional students", "computer science education", "socially-inspired learning"]}, {"title": "How much impact can be made in a week?: Designing Effective International Service Learning Projects for Computing", "link": "https://dl.acm.org/doi/10.1145/2676723.2677267", "abstract": "Service learning has been gaining attention in recent years. It has been established as an effective method to teach students a variety of concepts that are not easily taught in the classroom, and much effort has gone into making service learning accessible and relevant to computer science students. This paper investigates a popular mode of computing-related service learning -- offshore projects that seek to introduce information and computing technologies (ICTs) into a beneficiary population. Based on multiple years of experience working with ICTs in service learning, the authors examine the impact on students and beneficiaries through several critical questions, and draw conclusions and recommendations on good practices for designing offshore service learning projects for computing students.", "authors": [{"name": "Grace Ngai", "affiliation": "Hong Kong Polytechnic University, Kowloon, Hong Kong"}, {"name": "Stephen C.F. Chan", "affiliation": "Hong Kong Polytechnic University and Office of Service Learning, Kowloon, Hong Kong"}], "tags": ["service learning", "international projects"]}, {"title": "Session details: Paper Session: Beyond CS2: Networking/Security", "link": "https://dl.acm.org/doi/10.1145/3251185", "abstract": "No abstract available.", "authors": [{"name": "Faisal Kaleem", "affiliation": "Metropolitan State University"}], "tags": []}, {"title": "Lowering the Barrier to Systems-level Networking Projects", "link": "https://dl.acm.org/doi/10.1145/2676723.2677211", "abstract": "Developing systems-level networking software to implement switches, routers, and middleboxes is challenging, rewarding, and arguably an essential component for developing a deep understanding of modern computer networks. Unfortunately, existing techniques for building networked system software use low-level and error-prone tools and languages, making this task inaccessible for many undergraduates. Moreover, working at such a low-level of abstraction complicates debugging and testing and can make assessment difficult for instructors and TAs. We describe a Python-based environment called Switchyard that is designed to facilitate student projects for building and testing software-based network devices like switches, routers, and middleboxes. Switchyard exposes a networking abstraction similar to a \\textit{raw socket}, which allows a developer to receive and send Ethernet frames on specific network ports, and provides a set of classes to simplify parsing and construction of packets and packet headers. Systems-level software created using Switchyard can be deployed on a standard Linux host or in an emulated environment like Mininet. Perhaps most importantly, Switchyard provides facilities for test-driven development by transparently allowing the underlying network to be replaced with a test harness that is specifically designed to help students through the development and debugging process. We describe experiences with using Switchyard in an undergraduate networking course in which students created an Ethernet learning switch, a fully functional IPv4 router, a firewall with rate limiter, and a deep-packet inspection middlebox device.", "authors": [{"name": "Joel Sommers", "affiliation": "Colgate University, Hamilton, NY, USA"}], "tags": ["test-driven development", "routing", "middleboxes", "switching"]}, {"title": "A Simple Laboratory Environment for Real-World Offensive Security Education", "link": "https://dl.acm.org/doi/10.1145/2676723.2677225", "abstract": "In recent years cybersecurity has gained prominence as a field of expertise and the relevant practical skills are in high demand. To reduce the cost and amount of dedicated hardware required to set up a cybersecurity lab to teach those skills, several virtualization and outsourcing approaches were developed but the resulting setup has often increased in total complexity, hampering adoption. In this paper we present a very simple (and therefore highly scalable) setup that incorporates state-of-the-art industry tools. We also describe a structured set of lab assignments developed for this setup that build one on top of the other to cover the material of a semester-long Cybersecurity course taught at Boston University. We explore alternative lab architectures, discuss other existing sets of lab assignments and present some ideas for further improvement.", "authors": [{"name": "Maxim Timchenko", "affiliation": "Boston University, Boston, MA, USA"}, {"name": "David Starobinski", "affiliation": "Boston University, Boston, MA, USA"}], "tags": ["cybersecurity", "virtualization", "course design", "education"]}, {"title": "An Educational Networking Framework for Full Layer Implementation and Testing", "link": "https://dl.acm.org/doi/10.1145/2676723.2677304", "abstract": "We present the KENSv2 (KAIST Educational Network System) framework for network protocol implementation. The framework is event-driven to guarantee deterministic behaviour and reproducibility, which in turn delivers ease of debugging and evaluation. Our framework consists of four components: the event generator, the virtual host, the TCP driver and the IP driver. The two drivers are what students have to implement, and we offer to the students the drivers in the binary format for paired testing and debugging. We have developed a test suite that covers three categories of test cases: specification, paired, and logic tests. The framework logs packet transmissions in the PCAP format to allow use of widely available packet analysis tools to inspect logical behaviour of student solutions, such as congestion control. We have designed five step-by-step assignments and evaluated student submissions. With our automated test suite, we have cut down the number of TAs by half for the doubled class size compared to the previous semester, in total 3 TAs with 49 students. We plan to continue using KENSv2 in our undergraduate networking course and expand the test suite.", "authors": [{"name": "Keunhong Lee", "affiliation": "KAIST, Daejeon, South Korea"}, {"name": "Sue Moon", "affiliation": "KAIST, Daejeon, South Korea"}, {"name": "Joongi Kim", "affiliation": "KAIST, Daejeon, South Korea"}], "tags": ["full layer implementation", "ip", "automated test suite", "educational networking framework", "tcp", "network protocols"]}, {"title": "The CS Concept Inventory Quiz Show", "link": "https://dl.acm.org/doi/10.1145/2676723.2677315", "abstract": "This session is a chance for researchers studying concept inventories (CIs)--low-cost assessments highlighting student misconceptions in a field--and CS education practitioners to communicate about advances in concept inventories in an engaging and utterly ridiculous way.\nWe use a \"quiz show\" format to present CI items from various authors' work across the computing curriculum. On each question, audience members and volunteer contestants consider their own response and guess students' common responses. Then, they see how authentic student data illustrate the misconceptions these items probe.\nThe session's goal is three-fold: educate practitioners about recent results in concept inventory research that may suggest surprising trends in student learning, popularize concept inventories as a tool in research and practice, and collect the audience's expert responses to concept inventory items.", "authors": [{"name": "Nafeesa Dewji", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Jan Vahrenhold", "affiliation": "Westf\u00e4lische Wilhelms-Universit\u00e4t M\u00fcnster, M\u00fcnster, Germany"}, {"name": "Leo Porter", "affiliation": "University of California, San Diego, La Jolla, CA, USA"}, {"name": "Steven A. Wolfman", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Geoffrey L. Herman", "affiliation": "University of Illinois at Urbana-Champaign, Urbana-Champaign, IL, USA"}, {"name": "Cynthia Taylor", "affiliation": "Oberlin College, Oberlin, OH, USA"}], "tags": ["concept inventory", "misconceptions"]}, {"title": "Bringing Grades K-5 to the Mainstream of Computer Science Education", "link": "https://dl.acm.org/doi/10.1145/2676723.2677332", "abstract": "As awareness of computer science education grows in the general public, it is important to showcase computer science education as accessible for all grades K-12 and beyond. As panelists present the projects and research they've been conducting, we will highlight three overarching topics:\nThe importance of K-5 computer science education to educators of all grade levels,\nThoughts on why K-5 has traditionally been less prominent in the computer science education landscape, and\nStrategies on how we, the computer science education community, can promote K-5 computer science education as worthwhile as 6-12+ computer science education.\nBarriers to why K-5 computer science education is not as prominent as that in grades 6-12, such as scarcity of wide-spread curriculum or scarcity of research, will lead to panelists presenting how their work is rectifying this imbalance.\nThis session's panelists are pioneers and important thought leaders in the K-5 computer science education field. Panelists in this session are either producing research in the K-5 computer science education field or working at a large scale to promote or increase participation of K-5 students in computer science.", "authors": [{"name": "Katie Apone", "affiliation": "Code.org, Seattle, WA, USA"}, {"name": "Diana Franklin", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Maya Israel", "affiliation": "University of Illinois at Urbana-Champaign, Champaign, IL, USA"}, {"name": "Marina Bers", "affiliation": "Tufts University, Medford, MA, USA"}, {"name": "Karen Brennan", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Pat Yongpradit", "affiliation": "Code.org, Seattle, WA, USA"}], "tags": ["computer science education", "code.org", "scratchjr", "professional development", "scratch", "outreach", "elementary school", "k-5 curriculum"]}, {"title": "Nifty Assignments", "link": "https://dl.acm.org/doi/10.1145/2676723.2677327", "abstract": "A great CS assignment is a delight to all, but the path to one can be most roundabout. Many CS students have had their characters built up on assignments that worked better as an idea than as an actual assignment. Assignments are hard to come up with, yet they are the key to student learning. The Nifty Assignments special session is all about promoting and sharing the ideas and ready-to-use materials of successful assignments.\nEach presenter will introduce their assignment, give a quick demo, and describe its niche in the curriculum and its strengths and weaknesses. The presentations (and the descriptions below) merely introduce each assignment. A key part of Nifty Assignments is the mundane but vital role of distributing the materials -- handouts, data files, starter code -- that make each assignment ready to adopt. The Nifty Assignments home page, http://nifty.stanford.edu, gathers all the assignments and makes them and their support materials freely available.\nIf you have an assignment that works well and would be of interest to the CSE community, please consider applying to present at Nifty Assignments. See the nifty.stanford.edu home page for more information.", "authors": [{"name": "Julie Zelenski", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Nick Parlante", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Josh Hug", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Allison Obourn", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Marty Stepp", "affiliation": "Stanford University, Pepperdine, CA, USA"}, {"name": "Peter-Michael Osera", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Luther Tychonievich", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Mark Sherriff", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Stuart Reges", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "David R. Raymond", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Ryan Layer", "affiliation": "University of Virginia, Charlottesville, VA, USA"}], "tags": ["examples", "nifty", "education", "repository", "library", "homeworks", "pedagogy", "assignments"]}, {"title": "Factors Affecting High School Student Engagement in Introductory Computer Science Classes (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691891", "abstract": "Little research exists on factors that affect high school computer science student engagement. The BASICS Study (Barriers and Supports to Implementing Computer Science) brings rigor to this issue by building on instruments developed to measure implementation and factors affecting implementation of math and science programs, and customizing them for use with Exploring Computer Science (ECS). One goal of the 2-\u00bd year BASICS Study is to provide the computer science education community with tools to systematically and rigorously measure computer science program implementation components, like student engagement. Aligning efforts in computer science around data collection and description can support the collective effort to grow and sustain computing education.\nThis poster reports on BASICS Study Year 1 findings about factors related to student engagement in ECS classes. The sample includes 232 students from eight public high schools in Chicago and Washington, DC. Student questionnaire data collected focused on: 1) Student engagement, 2) Teacher instruction, 3) Student attitudes, and 4) Other student characteristics, such as grade, gender, race/ethnicity, and previous computing experience. Analyses included multi-factor confirmatory factor analysis to examine the validity of the measures, and multiple linear regression analysis to estimate the effects of teacher instruction and student attitudes on engagement. Results indicate teacher instruction significantly positively affects student engagement in ECS classes. Some student attitude variables are also significantly related to student engagement, but there was no significant variation in engagement across gender or race/ethnicity categories.", "authors": [{"name": "Dae Kim", "affiliation": "Outlier Research & Evaluation, University of Chicago, Chicago, IL, USA"}, {"name": "Sarah J. Wille", "affiliation": "Outlier Research & Evaluation, University of Chicago, Chicago, IL, USA"}], "tags": ["student engagement", "implementation", "k-12 education", "exploring computer science", "supports and barriers"]}, {"title": "Exploring Computer Science Course and Math Achievement (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691895", "abstract": "This poster presents preliminary data in the field of computing education research, focusing on the relationship between high school student participation in Exploring Computer Science (ECS) and their achievement on the math portion of the California Standard Test (CST). The course uses an inquiry-based approach that is expected to improve students' problem solving skills. Students who enrolled in ECS at ten high schools in San Jose, California were monitored over a three-year period to investigate possible relationships between participation in ECS and scores on standardized math tests. Results show a statistically significant difference between ECS participants and their peers for two of three project years.", "authors": [{"name": "Daniel W. Lewis", "affiliation": "Santa Clara University, Santa Clara, CA, USA"}, {"name": "Lisa Kohne", "affiliation": "SmartStart Evaluation & Research, Irvine, CA, USA"}, {"name": "Timothy Mechlinski", "affiliation": "SmartStart Evaluation & Research, Irvine, CA, USA"}, {"name": "Mariana Schmalstig", "affiliation": "SmartStart Evaluation & Research, Irvine, CA, USA"}], "tags": ["pre-ap", "pre-college", "high school", "math", "curricula"]}, {"title": "Just Enough Programming for Eight-years Olds (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691899", "abstract": "Programmable robots have become a very popular tool to introduce children to technology. However most curricula that emphasize on actual programming typically target kids 10 years and older. This summer, the University of New Hampshire organized an Elementary Program Introducing Computing (EPIC) camp. Children 7-9 years old, with no prior programming experience, were introduced to problem solving and creative program design using Lego EV3 Mindstorms robotics. The program followed a just enough principle, such that just barely enough contents were presented to the children in spite of a wider ranger of available materials. For example, a simple robot model was prebuilt to help children focus on programming rather than construction; program control flow and sensor data processing were introduced early on, but only using a very limited set of visual programming blocks and sensors. These basic structure blocks provide enough functionality to construct a moderately complex program, and help students stay focused on problem solving in a non-overwhelming setting. In order to gauge the learning outcome, a test was given before and after the camp. The comparison of the results showed that our method helped the children retain the programming skills and knowledge of general concepts of computing.", "authors": [{"name": "Gavin Kearns", "affiliation": "Paul Elementary School, Wakefield, NH, USA"}, {"name": "Karen H. Jin", "affiliation": "University of New Hampshire, Durham, NH, USA"}], "tags": ["k-12", "lego mindstorms robotics", "early programming instruction"]}, {"title": "Moving Ahead with Undergraduate Computational Science Programs (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691950", "abstract": "The use of computation alongside the natural sciences is moving research forward at unprecedented rates. Computational scientists are in high demand, and the undergraduate level is a great place to begin training students for work in this area. Furthermore, studies have shown that applied programs such as computational science are attractive to students and aid in retention. Yet, the number of undergraduate computational science programs remains very limited. Throughout informal conversations with colleagues who were interested in combining computing and science, we repeatedly heard 2 reasons why a computational science program was missing from their institution: 1) they lacked counterparts in the natural sciences who were interested in working with them and 2) their department couldn't support the change in personnel or curriculum that they thought was required to introduce and maintain a computational science program. Addressing the first concern, this poster displays some of what was learned from interviews with 20 natural scientists regarding how they currently or might work with a computational counterpart. Our hope is that this information might be used in conversations with reluctant natural scientists. Addressing the second concern, this poster summarizes the content of computational science programs that currently exist for undergraduates, including majors, minors, computational tracks in science majors or science tracks in computational majors, and science or computational courses with complementary material. Our hope is that this summary will encourage colleagues that, given such variety, there is a place for some form of computational science at their institution.", "authors": [{"name": "Lori Carter", "affiliation": "Point Loma Nazarene University, San Diego, CA, USA"}, {"name": "Claire Mathews", "affiliation": "Point Loma Nazarene University, San Diego, CA, USA"}, {"name": "Tim Little", "affiliation": "Point Loma Nazarene University, San Diego, CA, USA"}], "tags": ["computational chemistry", "multidisciplinary computing", "computational biology", "computational science", "computational physics", "interdisciplinary computing", "bioinformatics"]}, {"title": "Computing in the Classroom: A Workshop for Teachers to Infuse Computational Thinking into K-12 Classrooms (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691906", "abstract": "Computational thinking is an essential skill for everyone in today's world. It is a problem solving skill that incorporates problem decomposition, pattern recognition, abstraction, logical and algorithmic thinking. Yet the exposure of students in K-12 curriculum to computational thinking is minimal in most schools. There are various opportunities for computational thinking to be included in almost all content areas in the curriculum. In order for this to be realized, teachers need introduction to the concept of computational thinking and they need to be equipped with tools to provide practices in this concept in the classrooms. Inspired by this idea, we organized a workshop in June 2014 to involve all teachers from all grade levels and all disciplines where we introduced them to the concept of computational thinking and taught them tools such as Scratch, Google Sites, HTML, and AppInventor. The workshop attracted 34 teachers mostly from the Muscogee County School District in Georgia. In this poster we present our recruitment strategy, methodology of our workshop, and results from our pre and post surveys. In particular, we present the influence of our workshop on teachers' views of computational thinking. We also share highlights from the projects that the teachers worked on during the workshop and presented at the end.", "authors": [{"name": "Shamim Khan", "affiliation": "Columbus State University, Columbus, GA, USA"}, {"name": "Lydia Ray", "affiliation": "Columbus State University, Columbus, GA, USA"}, {"name": "Yesem Kurt-Peker", "affiliation": "Columbus State University, Columbus, GA, USA"}, {"name": "Rania Hodhod", "affiliation": "Columbus State University, Columbus, GA, USA"}], "tags": ["computing in k-12", "computing workshop for teachers", "computational thinking"]}, {"title": "Using POGIL Activities to Teach CS Principles to Diverse Students (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691909", "abstract": "As part of the new AAC&U TIDES initiative (TIDES: Teaching to Increase Diversity and Equity in STEM), Westminster College has created a new computer science course for non-majors and paired it with a biology course as a first-year Learning Community. The new CS0 course relies heavily on culturally sensitive POGIL activities to be welcoming of all students, shifting to a more equitable, multicultural approach to CS curriculum and instruction. Process Oriented Guided Inquiry Learning (POGIL) is a student-centered learning approach that 1) assigns students to work in self-managed learning teams, 2) on specially designed guided inquiry materials, 3) while the instructor facilitates the development of process skills [1]. By requiring students to derive CS concepts for themselves while working together in learning teams, POGIL activities allow diverse student voices to be heard. They also provide a framework for instructors to act as \"guides on the side\" rather than \"sage on the stage\" for a large portion of class time. These CS Principles POGIL activities are among the first POGIL activities in any discipline to be deliberately designed to be culturally sensitive. In Fall 2015, CS instructors at four partner institutions will adopt these POGIL activities in their CS0 courses.", "authors": [{"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}], "tags": ["cooperative learning", "teams", "active learning", "pogil"]}, {"title": "A Case Study on Adding Computer Science as a Math Graduation Elective: A Report from the Alabama CS/Mathematics Crosswalk Committee (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691915", "abstract": "This poster describes our experience with the convening of a statewide committee of Mathematics and Computer Science teachers and content specialists to compare the content of the AP Computer Science A Course (AP CS A) and the Computer Science Principles (CSP) course with the Alabama Course of Study-Mathematics. The purpose of the comparison was to identify overlaps in content and to make recommendations to the State Department of Education and the State Board of Education regarding the option of awarding mathematics credit for completion of the Computer Science courses. This crosswalk activity led to the December 2013 decision by the Alabama State Department of Education (ALSDE) to count both CS Principles and CS A as courses satisfying the four-course requirement for high school graduation in Alabama. The poster will describe the crosswalk activity, the results, and the specific strategic approach to involve the ALSDE as collaborators in the activity.", "authors": [{"name": "Carol Crawford", "affiliation": "A+ College Ready, Birmingham, AL, USA"}, {"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Jeff Baker", "affiliation": "Huntsville High School, Huntsville, AL, USA"}, {"name": "Gina McCarley", "affiliation": "Lawrence County High School, Moulton, AL, USA"}, {"name": "Jill Westerlund", "affiliation": "Hoover High School, Hoover, AL, USA"}, {"name": "Kitty Morgan", "affiliation": "A+ College Ready, Birmingham, AL, USA"}, {"name": "Carol Yarbrough", "affiliation": "Alabama School of Fine Arts, Birmingham, AL, USA"}, {"name": "Kelley Rouze", "affiliation": "Montgomery County Schools, Montgomery, AL, USA"}, {"name": "Mary Boehm", "affiliation": "A+ College Ready, Birmingham, AL, USA"}], "tags": ["k-12 graduation elective", "ap cs a", "cs principles"]}, {"title": "Creating New Languages in Blockly: Two Case Studies in Media Computation and Robotics (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691916", "abstract": "Introducing programming concepts to children early in their education can be beneficial because the type of problem solving that encompasses computational thinking is becoming increasingly relevant in our daily lives. A relatively new breed of programming environments has emerged to address this need. Visual programming languages (VPLs) allow programming logic to be represented with diagrams that illustrate its execution flow. Popular VPLs (e.g., Scratch, Snap, Alice, App Inventor) exist as full-featured, stand-alone programming environments with diagrammatic representations of the program instructions. This representation removes the syntactical barrier to entry that may exist with textual languages.\nBlockly, developed by Google, is a type of block language development kit that allows the rapid construction of new block-based visual programming languages to address a specific pedagogical or content focus. This poster provides a brief tutorial on the steps used to create a new Blockly environment, along with two case studies demonstrating the power of Blockly. The two environments introduced are focused on the manipulation of images via operations on pixels (Pixly), and programmatic control of a Sphero robot (Spherly). The construction and specific details of these two environments are described and illustrated with html, xml, and Javascript code examples and some of their potential applications. More information about Pixly and Spherly can be found at: http://outreach.cs.ua.edu/pixly and http://outreach.cs.ua.edu/spherly", "authors": [{"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Jake Trower", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["blockly", "media computation", "robotics programming"]}, {"title": "Automating Software Engineering Best Practices Using an Open Source Continuous Integration Framework (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691921", "abstract": "Ideally, software engineering courses should adequately reflect real-world software development so that students obtain a better understanding and experience with practices and techniques used in industry. Our objective is to improve software engineering courses by incorporating best practices for automated software engineering and facilitating rapid feedback for students using an open source continuous integration framework for evaluating student software development. The open source Jenkins Continuous Integration Server is the core of our framework, which provides a consistent environment for building student projects, executing automated test cases, calculating code coverage, executing static analysis, and generating reports for students. By using continuous integration, a common tool in real-world software development, we can incorporate software engineering best practices, introduce students to continuous integration in practice, and provide formative feedback to students throughout the software development lifecycle. We found that 76% or more of students in each of the classes that deploy our framework reported that using Jenkins increased their productivity, and that 84% or more of students in each of the classes reported that using Jenkins increased their code quality.", "authors": [{"name": "Michael Winters", "affiliation": "North Carolina State University, Raleigh, USA"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Jason King", "affiliation": "North Carolina State University, Raleigh, USA"}], "tags": ["automated evaluation and feedback", "software engineering skills", "continuous integration"]}, {"title": "A Bottom-Up Approach to Teaching Server-Side Web Development Skills (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691922", "abstract": "When dealing with the topic of back-end programming many CS web development courses typically focus on how to use a popular web framework, for example Spring MVC or Ruby on Rails. The problem with this approach is that students will most likely end up using some other different framework or technology if ever they decide to become professional web developers. Our students need to learn concepts and skills that serve as a foundation to learn whatever different technologies are used now or happen to appear in the future. This poster presents the author's experience on using a bottom-up approach to teach the fundamental aspects of how the HTTP protocol works, and how this knowledge can be used to get a deep understanding of the inner workings of the web by building a simple yet complete server-side web framework. Using Node.js as the development platform, students are able to take TCP sockets as the building blocks for higher-level web abstractions. This approach allows covering a variety of specific topics that are essential for a professional web developer: request and response structure and headers, HTTP methods, form processing, cookies and sessions, text encodings, MVC software architectural pattern, database integration using ORM (Object-Relational Mapping), REST (Representational State Transfer) architecture, security issues (HTTPS protocol, common web vulnerabilities), and client-side integration using AJAX (Asynchronous JavaScript and XML). Anecdotal evidence shows that students with this knowledge repertoire are better suited for learning, using and debugging new and existing web technologies.", "authors": [{"name": "Ariel Ortiz", "affiliation": "Tecnol\u00f3gico de Monterrey, Campus Estado de M\u00e9xico, Atizap\u00e1n de Zaragoza, M\u00e9x., Mexico"}], "tags": ["node.js", "web development", "server-side programming", "javascript"]}, {"title": "Teaching Text-based Programming in a Blocks-based World (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691923", "abstract": "This poster presents an environment and set of pedagogical strategies designed to explore how best to use blocks-based programming tools to prepare learners for future, text-based programming languages. Starting with the snap! programming environment, we added the capability to view the JavaScript equivalent of any blocks-based script authored inside the environment. Additionally, when students define behaviors for new blocks, they do so in JavaScript. This makes it possible to compose blocks-based scripts alongside text-based JavaScript programs and have the two run side-by-side. This environment was used during the first 5-weeks of an introductory programming class at the high school level as part of a quasi-experimental study investigating the relationship between programming modality and emerging student understanding. Teachers of the course used the blocks/text hybrid features in various ways to support learners developing an understanding of programming concepts and laying the foundation for future text-based instruction. These strategies included having students compose programs with graphical blocks then view the equivalent JavaScript, prompting class discussion on similarities and differences between the two modalities; having students write pseudocode for their blocks-based programs before comparing the pseudocode to the JavaScript; and finally, having students implement their algorithm directly in JavaScript, using blocks as a resource to reference proper syntax.", "authors": [{"name": "Uri Wilensky", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Daniel Law", "affiliation": "Lane Tech College Prep, Chicago, IL, USA"}, {"name": "David Weintrop", "affiliation": "Northwestern University, Evanston, IL, USA"}, {"name": "Jennifer Roscoe", "affiliation": "Lane Tech College Prep, Chicago, IL, USA"}], "tags": ["introductory programming environments", "blocks-based programming", "high school computer science"]}, {"title": "Summer Programming Boot Camp: A Strategy For Retaining Women In IT (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691924", "abstract": "This project addresses the issue of retaining women in Information Technology (IT) at an open access institution. To meet the goal of retention, we focused on supporting students' learning and mentoring needs. Female IT majors and minors were recruited and participated in a weeklong summer boot camp. At the boot camp they participated in Java programming sessions, various professional development and peer mentoring sessions and a field trip. These activities were aimed to increase not only the participants' knowledge of programming, but they were also designed to increase the participants' confidence, their knowledge of IT careers and fields of research and most importantly to form a community of support. Initial data collection shows that 61% of participants enrolled in a programming course following the boot camp, which is a crucial step in retention of majors and minors. Authors have also experienced an increase in the participants' engagement in an on-campus community building effort. Formal data analysis of pre and post surveys for evaluating changes in computing attitudes and engagement is currently being performed.", "authors": [{"name": "Kristine Nagel", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Nannette Napier", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Sonal Dekhane", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}], "tags": ["women in it", "summer boot camp", "retention"]}, {"title": "Evaluating Scratch Programs to Assess Computational Thinking in a Science Lesson (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691928", "abstract": "In this poster, we describe efforts to assess computational thinking activities that can be easily implemented in any science classroom. Studies have shown that a set of conditions must be met for computational thinking tools to be used in K-12 education and that when they are used, there is a wide spectrum in the level of computational thinking that the tool enables. This study extends this work by examining how middle school students translated their science fair projects into Scratch and what evidence of computational thinking is present. Scrape, a tool designed to analyze Scratch projects was used. Overall, it was found that most students simply created a presentation of their project without much complexity. Eight students created interactive projects that required user participation and used more advanced computational concepts. Finally, recommendations are given for next steps in the creation of a series of activities that would scaffold student learning as they apply to computational thinking concepts of a science concept.", "authors": [{"name": "Jennifer Albert", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Barry Peddycord III", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Tiffany Barnes", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["middle school computer education", "computational science", "next generation science standards", "computational thinking"]}, {"title": "Integrating Cutting Edge Devices to Increase Student Retention in Programming (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691929", "abstract": "Literature has estimated that about 33% of students who start a computer science degree program eventually drop or fail their first programming course. With the decreasing number of college graduates entering the computing industry, the workforce is missing out on the wealth and breadth of innate student ability and skills that are switching to non-STEM fields. This project developed, implemented and researched the effects of an innovative instructional strategy that integrated cutting-edge devices into an intermediate programming curriculum. Assignments were designed with the Java Software Ddevelopment Kkit for Java to strengthen student motivation and engagement by tapping into their creativity, collaborative skills, and critical thinking by using the InterAxon Muse, Oculus Rift, and the LeapMotion devices. Preliminary data indicates that although students may have enough motivation and interest in programming to persevere through the course, the implementation of this teaching methodology positively impacted their views and beliefs about programming skills and their relevance to their education. As well, survey data shows that student self-efficacy increased immediately after this educational intervention. Finally, instructor reflections point to a general shift in class morale and engagement with the inclusion of the assignments where students were required to solve problems without documentation. Future implications are also presented in this poster.", "authors": [{"name": "Robert Lutz", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Evelyn Brannock", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Mai Yin Tsoi", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}], "tags": ["college instruction", "programming instruction", "active learning model", "motivation", "retention", "cutting edge devices", "self-efficacy"]}, {"title": "E-Assess: A Web-Based Tool for Coordinating and Managing Program Assessment (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691930", "abstract": "This poster describes the operation and implementation of the E-Assess web-based program assessment tool. The E-Assess tool provides a centralized management system for generalized program assessment and has been used to support ABET program assessment within the CS/IS department at Coastal Carolina University for the past two years. This system defines multiple roles for several different assessment activities -- allowing individual faculty to operate independently, yet still providing an always up-to-date view of the process to assessment coordinators. Coordinators provide mappings between overall program objectives and specific measurement points across the curriculum. At the conclusion of a class, the instructor enters the assessment measures specific to the course. When all course data has been added, the E-Assess system automatically compiles the overall assessment data into summary reports that are used to evaluate program progress and to inform the continuous improvement process.", "authors": [{"name": "D. Brian Larkins", "affiliation": "Coastal Carolina University, Conway, SC, USA"}, {"name": "Jean H. French", "affiliation": "Coastal Carolina University, Conway, SC, USA"}], "tags": ["accreditation management", "web-based tools", "abet", "assessment"]}, {"title": "CS2013 Assessment Exam (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691931", "abstract": "In the Fall of 2013, the Institute for Certification of Computing Professionals (ICCP) appointed the authors of this paper to the CS2013 Assessment Council. This council created a standardized exam to assess computer programs and identify areas of the curriculum that a school needed to strengthen to meet CS2013: Curriculum Guidelines for Undergraduate Degree Programs in Computer Science. The existing Major Field Test for Computer Science from Educational Testing Service does not provide schools with sufficient guidance to determine what aspects of their computer programs are strong and what aspects need to be strengthened to meet the CS 2013 guidelines. The ICCP exam covers the Core Tier 1 Knowledge Units (KU). CS 2013 indicates that all computer programs should teach these KUs. The ICCP exam selects questions in proportion to the number of hours the CS2013 guidelines indicate are necessary to teach the Core Tier 1 learning objectives for a KU. Choices for multiple choice questions were limited to three per question, since research indicated that student mastery of topics could be assessed more rapidly with fewer distractors without reducing reliability. The exam was alpha tested in 2014 and beta tested in January and February 2015. The exam will be available in Spring of 2015.", "authors": [{"name": "Indira R. Guzman", "affiliation": "Trident University Internationa, Cypress, CA, USA"}, {"name": "Patricia L. Roden", "affiliation": "University of North Alabama, Florence, AL, USA"}, {"name": "Paulette Alexander", "affiliation": "University of North Alabama, Florence, AL, USA"}, {"name": "Terry Linkletter", "affiliation": "Central Washington University, Lynnwood, WA, USA"}, {"name": "Kewal Dhariwal", "affiliation": "Institute for Certification of Computing Professionals, Des Plaines, IL, USA"}, {"name": "E. Kent Palmer", "affiliation": "MacMurray College, Jacksonville, IL, USA"}], "tags": ["cs2013", "standardized exam", "computer science curriculum", "assessment"]}, {"title": "Case Studies of Use: Creating Counselor Champions for Change in K12 Computing Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691932", "abstract": "Counselors for Computing leverages the National Center for Women & Information Technology (NCWIT)'s organizational membership, applies evidence-based approaches for professional development, and monitors and adjusts practices to make inroads into CS education through K12 counselor engagement. This engagement is needed to assure more girls and other underrepresented people are prepared for careers in computing. Colleges and universities, businesses, youth-serving organizations, computer science educators, professional counselor associations and others work to bring C4C to places where reform is underway (e.g., CS Principles, CS10K, Exploring Computer Science initiatives). These new education and teaching initiatives have implications for K12 student computer science guidance, and C4C materials can provide the knowledge necessary to promote counselor and educator engagement with computing. In this poster presentation, the authors: a) illustrate how computer science educators have partnered with NCWIT and incorporated counselor education into multiple elements of their own work, b) direct K12 computer science educators and stakeholders to free resources developed for C4C, c) provide initial evidence of the program's effectiveness, and d) develop future partnerships with poster viewers at SIGCSE 2015 to educate K12 counselors about the opportunities available for their students in the computing fields.", "authors": [{"name": "Jane Krauss", "affiliation": "NCWIT, Boulder, CO, USA"}, {"name": "Sarah Hug", "affiliation": "University of Colorado, Boulder, Boulder, CO, USA"}, {"name": "Catherine Ashcraft", "affiliation": "NCWIT, Boulder, CO, USA"}], "tags": ["K12 counselors", "computer science education policy"]}, {"title": "A Qualitative Analysis of Students' Difficulties with the Quicksort Algorithm Using Arrays (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691933", "abstract": "Undergraduate computer science students can have difficulty understanding quicksort and other divide-and-conquer sorting algorithms. It is important to understand how students think about quicksort in order to find out how to better teach the students, and also for those students to be able to write and analyze these algorithms for their own use. Data was collected from two interviews, each about an hour long, with undergraduate computer science students. The data was then qualitatively analyzed in order to draw conclusions on how the students approached the coding of the quicksort algorithm. Both interview participants were able to quickly and efficiently write quicksort using linked lists. However, both students struggled when asked to rewrite their algorithms using static arrays. From the transcripts and hand-written notes taken from the two interviews, it seems plausible that their issues stem from challenges with their treatment of the pivot in the array implementation. Additionally, the array implementation may have caused the participants to change the visualization of the algorithm to which they had grown accustomed, further accentuating their difficulties. While both students showed obvious proficiency with the linked-list algorithm, they failed to realize key intuitions when attempting to make their algorithms space-efficient by using a single array. Future work may include analysis of other divide-and-conquer algorithms, as well as a closer look into how visualizations of sorting algorithms affect student understanding.", "authors": [{"name": "Amit Maor", "affiliation": "Harvey Mudd College/Claremont McKenna College, Claremont, CA, USA"}], "tags": ["quicksort", "arrays", "divide-and-conquer algorithms", "linked lists"]}, {"title": "STEM Ccareers Inforgaphic Project (SCIP): Teaching Media-Based Computational Thinking Practices (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691934", "abstract": "The STEM Career Infographic Project (SCIP) was a 4-week exploratory project deployed in an 8th grade classroom at Mountain Vista Middle School (MVMS). SCIP was poised to address the growing focus on STEM fields at MVMS and within the school district. We piloted SCIP in Spring 2014 with six science classes or about 180 students. SCIP allowed for students to explore their own STEM interests, while simultaneously engaging in the 6 Computational Thinking Practices (CTP) outlined by the College Board.\nStudents were required to research a STEM career in-depth, then report on their careers using infographics (CTP #2: Creating Computational Artifacts and CTP #3: Abstracting). We used free and online programs to create the infographics; this provided the students the opportunity to learn software they were not previously exposed to and to explore new communication tools (CTP #1: Connecting Computing and CTP #2: Analyzing Problems and Artifacts). SCIP also provided many occasions for the students to work together by sharing career information or helping each other with the software (CTP #6: Collaborating). At the end of the project the students presented their infographics in front of the class and taught their classmates about their career (CTP #5: Communicating).\nThe project was incredibly successful. The students had a positive affect through the duration of the project and many also expressed an extreme level of interest in doing similar projects in the future. We will be repeating this project in Spring 2015, with a few adaptations and formal evaluation scheme.", "authors": [{"name": "Brittany Ann Kos", "affiliation": "University of Colorado, Boulder, CO, USA"}, {"name": "Elizabeth Sims", "affiliation": "St. Vrain Valley School District, Longmont, CO, USA"}], "tags": ["infographics", "computing education", "stem education", "media-based computing", "middle school education", "computational thinking"]}, {"title": "Algorithmic Thinking: Program that Solve Well-defined Visual Problems (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691935", "abstract": "In early 2014 I created and taught an introductory CS course for non-CS students at Mount Holyoke College. I chose to emphasize algorithmic thinking as a way of solving problems on and off the computer, so I needed concrete and appealing problems for the students to solve. Having the students create their own problems was my way of doing so.\nBased on a one week introduction to visual design, each student designed the image or animation that they would later program. As they did so outside class, the students and I collaborated in class solving the problems of implementing a design I had chosen: solving design problems of their own overlapped with algorithmic solution of implementation problems in class. Subsequently, they applied the classroom lessons to their own designs. The result was a collection of programmed images and animations the students were eager to show their families and friends.\nThe dual nature of their practice appealed to the students: they were motivated to do the course-work; they took ownership of their work and of skills they acquired; they formed a cohesive community working together in the lab. Modeling on the classroom work in which they participated was effective in building programming skills. Most important several students expressed unprompted interest in taking a follow-on course.", "authors": [{"name": "Elodie Fourquet", "affiliation": "Colgate University, Hamilton, NY, USA"}], "tags": ["algorithmic thinking", "cs0", "visual art", "education", "problem solving", "computer science", "pedagogy", "processing"]}, {"title": "Culturally Responsive Computing: An In-depth Examination of Outcomes in COMPUGIRLS (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691936", "abstract": "Girls and women continue to be underrepresented in computing, and this results in costly consequences for U.S. innovation and productivity; it also reproduces existing socioeconomic inequities, especially for women of color. This poster session will provide an in-depth look into Compugirls, a culturally responsive technology enrichment program for girls in under-resourced districts. The program ultimately enables girls to design technologies to address social inequities and foster social justice. Girls participate in three courses over the course of a year: 1) learning to use technologies such as iMovie, GarageBand, and iPhoto, 2) designing games with SCRATCH, and 3) programming \"builds\" in a virtual world environment. Throughout all three courses, the girls engage in a research project that connects the technologies they are learning to social justice issues they choose to address in their communities. The poster will also present findings from our three-year, NSF supported mixed-method study of the program. In particular, the session will illustrate how the girls developed their identities and abilities as technosocial change agents. The session also identifies conditions that, at times, limited the power of these possibilities and will report on key \"lessons learned\" in developing large-scale, sustainable computing programs.", "authors": [{"name": "Catherine Ashcraft", "affiliation": "University of Colorado, Boulder, CO, USA"}], "tags": ["k-12 education", "broadening participation in computing", "gender and computing", "diversity"]}, {"title": "Students' (Mis)Understanding of Dictionaries (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691937", "abstract": "This research found that some students conflate Python lists and dictionaries. This confusion could result from the visual similarity between the data-structures in Python print output. The goal of this research was to identify student's misconceptions about Python dictionaries. The data was collected in one-on-one, think-aloud interviews with two participants. When coding, one student treated her dictionary as if it were a literal list of two-element lists and could be accessed as such. Additionally, when asked to draw a visualization of dictionaries, she drew a representation that was identical to Python print output. It is likely that the output she is used to dealing with has shaped this visualization. This may be an example of negative transfer, where people transfer knowledge to a new setting and form an incorrect model. Based upon this research, educators should consider how print output can shape incorrect mental models, as well as emphasize the differences between lists and dictionaries.", "authors": [{"name": "Emily Stansbury", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["mental models", "python", "dictionary", "list", "hash tables.", "misconceptions"]}, {"title": "It's Not Just About Functionality Anymore: Expanding Student Projects with Web Ecosystems (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691942", "abstract": "Student projects play a central role in the CS curriculum and are can be used everywhere, from low-level courses to upper-level capstones. Projects help students tie together ideas from their courses and put them in a \"tangible\" form for which they can feel a sense of pride. Projects also provide a clear way for students to show off their work to others. When we talk about student projects, we often focus on the functionality of the project: \"Build something that does this.\"\nThe modern Web suggests that software (or at least Web-based software) is often defined by more than a core computational task; in addition to the core functionality, modern Web software situates that core functionality in a broader \"ecosystem\" that often includes (a) a community of users that share ideas and comment on each others' work; (b) ways to link the software to and from social media sites, such as Facebook and Twitter; and (c) analytic tools to understand how people use the software; and more.\nI report on an experiment in which I asked students to expand their Web software project (an online drawing application) into a broader ecosystem. The extension from core functionality to broader ecosystem helped students think about different issues in computing, encouraged students to find aspects that most interested them (e.g., some liked analytics, some liked building the functionality, some liked thinking about how to create communities, and some liked designing and testing the interface), and made students think more carefully about their responsibilities as software builders.", "authors": [{"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["web communities", "project-based courses", "web ecosystems", "social media"]}, {"title": "\"Maker Innovators\": A Workshop for Youth Creating Responsive and Wearable Game Interfaces with Tangible and Digital Construction Toolkits (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691943", "abstract": "We describe a workshop for high school youth to create interactive responsive and wearable interfaces for computing and gaming. The tools used in the workshop included tangible construction toolkits (the Lilypad Arduino and the MaKeyMaKey) and visual programming languages (Scratch, a coding and game design environment, and ModKit, a visual programming kit for Arduino devices and similar tangible kits) in addition to various conductive materials such as special fabric and aluminum foil. Past efforts with each of these toolkits have focused on interaction in one direction. This workshop focused on creating bidirectional tangible interfaces for gaming, meaning that interaction would happen on the screen and in the physical artifact or controller simultaneously. A further feature was the focus on creating wearable games. Thirteen students ages 13-15 years participated in the eight-session workshop. After learning the tools during the first four sessions, they started designing their own projects. Student teams created one bidirectional game with a textile interface, three inventive uni-directional wearable games and interfaces, and one half-completed design. Students felt that the workshop provided them with multiple entry points to computing, by capitalizing on different skill sets, and many expressed understanding bidirectional design, though they felt they needed more time. This poster will discuss the affordances and constraints of the workshop activities and toolkits, and how projects created relate to the students' understanding of tangible computing with different kinds of responsiveness. Finally, we offer recommendations for future workshops based on our own redesign of activities.", "authors": [{"name": "Gabriela T. Richard", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}, {"name": "Yasmin B. Kafai", "affiliation": "University of Pennsylvania, Philadelphia, PA, USA"}], "tags": ["collaborative learning", "tangible computing", "game design", "youth informal learning", "wearable computing"]}, {"title": "Using Big Data and BKT to Evaluate Course Resources (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691948", "abstract": "Now finding footing in objective research methodology, MOOCs have made significant strides toward developing into mature platforms for not only offering educational materials but also performing exploratory analysis of educational methods. Bayesian Knowledge Tracing (BKT) has been repeatedly shown to be successful at providing an accurate model of student knowledge in more traditional classroom settings, and recent research has explored the application of BKT to MOOCs with promising results. Using data from several MOOCs run by Stanford university, we propose to extend earlier research into the application of BKT to MOOCS by developing a framework within which the use of course resources and student performance can be leveraged both to increase the predictive accuracy of BKT modeling and to provide an evaluative metric for the utility of those resources. We hope that such a framework can contribute not only to MOOC courses, but traditional classrooms as well.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Zachary MacHardy", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}], "tags": ["course resources", "machine learning", "bkt", "moocs", "student modeling", "prediction"]}, {"title": "Student Board-Writing to Integrate Communication Skills and Content to Enhance Student Learning (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691890", "abstract": "Students frequently use a whiteboard to individually demonstrate understanding or interactively develop understanding in groups. The practice is employed to develop content knowledge; however, an opportunity to intentionally develop communication skills is overlooked. On the other hand, instructors carefully integrate instructional organization and communication to maximize student content learning. Taken together, this presents an opportunity for students to intentionally improve their communication skills in the service of content learning. This poster details a \"work in progress\" project where students follow organizational guidelines for written homework and board-writing to facilitate in-class, problem solution presentation. Problem solution presentations occur during one class period each week. Students are given colored pencils for written homework and colored markers for board-writing. Student work including written homework and board-writing was gathered from the 2013 and 2014 iterations of a sophomore-level computer architecture course. Preliminary analysis of student work shows that students either adopt the guidelines from the start or learn to use them through feedback and practice. On the semester-end survey, students report that adopting guidelines for written homework, board-writing, and color scheme improve presentation, and board-writing improves student learning. Future work includes gathering data from more students including recorded student presentations, developing quantitative scores to analyze student work, and developing measures of student learning.", "authors": [{"name": "Mark E. Hoffman", "affiliation": "Quinnipiac University, Hamden, CT, USA"}], "tags": ["content learning", "student board-writing", "communication skills"]}, {"title": "Correlating ACM Core IT Learning Outcomes with Associate Degree and Certificate Programs (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691892", "abstract": "As directed by the ACM Education Board, the ACM Committee for Computing Education in Community Colleges (CCECC) delivered the final version of its curricular guidance for associate-degree Information Technology (IT) programs. The guidance, An ACM Competency Model of Core Learning Outcomes and Assessment for Associate-Degree Curriculum in Information Technology, includes core IT learning outcomes with associated assessment metrics. Examples of degree and certificate programs that align with the ACM core IT learning outcomes are part of a growing repository at CAPspace.org. These correlations demonstrate the adaptability of this competency-based curriculum approach to a variety of computing courses, certificates, and degree programs. The CCECC invites institutions to highlight their IT degree and certificate programs by submitting correlations at capspace.org/correlation/ using an easy-to-use web form.", "authors": [{"name": "Cindy S. Tucker", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}, {"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}], "tags": ["information technology", "education", "community college", "two-year college"]}, {"title": "Madeup: A Language for Making Things Up (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691893", "abstract": "Madeup is a programming language for making things up. Its speakers walk paths through space to generate printable 3D models. The language is designed to teach computation from a tangible, first-person perspective and help students integrate computation back into the physical world. Madeup is inspired largely by Seymour Papert, whose goal was to provide learners objects to think with. Madeup joins a significant crowd of existing introductory teaching tools. What sets Madeup apart from many of these other projects is its physical product. The model that a programmer creates does not remain virtual. It can be printed, felt, carried in a pocket, and handed to a parent or friend - all of which may make computation more real and relevant in the eyes of the programmer. In this poster we demonstrate the language and how we have used it in outreach with local schools and libraries.", "authors": [{"name": "Peter Bui", "affiliation": "University of Wisconsin, Eau Claire, Eau Claire, WI, USA"}, {"name": "Chris Johnson", "affiliation": "University of Wisconsin, Eau Claire, Eau Claire, WI, USA"}], "tags": ["educational programming languages", "3d printers", "3d modeling"]}, {"title": "Student Discovery of Network Security Ethics (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691894", "abstract": "In this poster we present a new approach to teaching ethics in a Network Security Programming course. Ethics is a crucial component of any network security course. As students learn to protect network services, they necessarily learn to attack network services, disguise their identities, et cetera. While a few colleges have gone as far as giving students background checks before teaching hacking skills, some simple new tactics can motivate students to employ their skills legally and ethically. These tactics lead students to discover what is ethical for themselves, rather than being told what is or is not ethical.", "authors": [{"name": "Michael Snider", "affiliation": "University of Rio Grande and Rio Grande Community College, Rio Grande, OH, USA"}, {"name": "Allen Hudson", "affiliation": "University of Rio Grande and Rio Grande Community College, Rio Grande, OH, USA"}, {"name": "Alisa Neeman", "affiliation": "University of Rio Grande and Rio Grande Community College, Rio Grande, OH, USA"}], "tags": ["ethics", "network security", "education"]}, {"title": "Extending SQL Auto-Grading to DML and DDL Statements (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691896", "abstract": "Automated assessment of computer programs submitted by students serves two main purposes: it may be used to increase grading efficiency and process optimization in large courses on one hand. On the other hand, if integrated properly into a suitable learning context, it may also improve student learning by supporting tutoring capabilities. Both aspects have been important in developing aSQLg, an automated grader for SQL statements ([1]). Unfortunately aSQLg so far only supports SQL queries. In order to provide a comprehensive efficiency and tutoring tool for SQL an extension to statements of the data manipulation (DML) and data definition language (DDL) is required. On this poster we present concepts for auto-grading of the most important DML and DDL statements as well as ideas on how to integrate those into the existing aSQLg grader.", "authors": [{"name": "Carsten Kleiner", "affiliation": "University of Applied Sciences & Arts, Hannover, Germany"}, {"name": "Bastian Fischer", "affiliation": "University of Applied Sciences & Arts, Hannover, Germany"}, {"name": "Felix Heine", "affiliation": "University of Applied Sciences & Arts, Hannover, Germany"}], "tags": ["relational database systems", "tutoring software", "automated grading", "sql", "database systems"]}, {"title": "Conflict-Driven Cooperative-Learning in Computing Courses (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691897", "abstract": "Conflict and cooperation would seem to be ideas that are diametrically opposed to each other. But, in fact, classic work by Piaget on how children and adults learn shows that when learners engage with peers in critical discussion of ideas concerning which they have different understandings, that contributes very effectively to learners developing deep understanding of the concepts involved. At the same time, getting students in undergraduate computing (or other technical/engineering) courses to engage with other students in thoughtful discussion of important concepts is very challenging. It can be especially difficult to get women students and students from other underrepresented groups to participate effectively in such discussions. In our work, we exploit the affordances of mobile and web technologies to address these challenges. Our approach not only helps address these challenges, it has a number of other important advantages over face-to-face discussions. We present the theoretical underpinnings of the approach, some details of our prototype implementation, preliminary results from the use of the prototype in a junior/senior level class on Software Engineering, and the design for the next version of our tool. We also discuss the possibilities and usefulness of applying this approach in a range of computing courses from traditional classrooms to MOOCs.", "authors": [{"name": "Swaroop Joshi", "affiliation": "The Ohio State University, Columbus, OH, USA"}, {"name": "Rajiv Ramnath", "affiliation": "The Ohio State University, Columbus, OH, USA"}, {"name": "Neelam Soundarajan", "affiliation": "The Ohio State University, Columbus, OH, USA"}], "tags": ["cooperative learning", "cognitive conflict"]}, {"title": "A Nearest Neighbors Analysis of Student Academic Performance in Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691898", "abstract": "Students increasingly decide to go to college in order to get better jobs and make more money. However, these advantages are typically thwarted if a student fails to graduate. Although much research has been aimed at predicting college performance using data collected before entering college, this preliminary work focuses on how college-level data could be used to inform student decision making. This work acquired historical class grades, test scores, and degree information for all students who have taken any computer science classes at Appalachian State University. This poster presents a web application that allows users to explore these data by selecting a target activity such as a class, and filtering students based on test scores, degrees, or how they have performed in other classes. The application displays overlaid histograms comparing how students in the subset perform relative to the class as a whole. For example, when a student considers retaking a course they may find it useful to know how other students with similar grades have performed in the major. For example, among the 29 attempts by 22 students with a 'C' in discrete math and CS 1, only 10 earned the required 'C' in CS 2 (35%) and 12 failed the course (41%). Three of these students went on to graduate with a degree in computer science (14%) and six in computer information systems (27%) while five did not graduate from Appalachian (23%).", "authors": [{"name": "R. Mitchell Parry", "affiliation": "Appalachian State University, Boone, NC, USA"}], "tags": ["advising", "interactive visualization", "retention"]}, {"title": "Integrating Mobile Computing and Security into a Computer Science Curriculum (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691902", "abstract": "The poster describes our project of integrating mobile computing and security into the Computer Science program at North Carolina A&T State University. Twelve (12) course modules in mobile computing and security are being developed and integrated into existing Computer Science courses such as computer programming, software development, operating systems, and information assurance courses. Each course module includes learning objectives, a tutorial, presentation slides, hands-on labs and/or case studies, test questions, etc. The course module material we develop and our teaching experiences will be beneficial to computer science educators who are considering including mobile computing and mobile security into their curricula.", "authors": [{"name": "Xiaohong Yuan", "affiliation": "North Carolina A&T State University, Greensboro, NC, USA"}, {"name": "Kelvin S. Bryant", "affiliation": "North Carolina A&T State University, Greensboro, NC, USA"}, {"name": "Kenneth Williams", "affiliation": "North Carolina A&T State University, Greensboro, NC, USA"}, {"name": "Jinsheng Xu", "affiliation": "North Carolina A&T State University, Greensboro, NC, USA"}], "tags": ["mobile security", "mobile computing", "curriculum"]}, {"title": "The Effects of Formal Undergraduate Research Experiences on Student Aspirations for Graduate Study in Computer Science (Abstract Only): Explaining the Relative Influence of Racial Identity Status", "link": "https://dl.acm.org/doi/10.1145/2676723.2691903", "abstract": "This poster explores the differential effects of formal undergraduate research experiences on the graduate degree intentions of underrepresented racial-ethnic minority and racial majority computing majors. Across two studies, it was found that formal undergraduate research experiences in computing have a greater and more positive effect on the educational aspirations of underrepresented racial-ethnic minorities as compared to racial majorities. For underrepresented racial-ethnic minorities, this effect is manifested in the gains in academic and career self-efficacy and gains in knowledge about the graduate admission process they develop as a result of their formal research experience. Together, these findings suggest that psychosocial skills that are strengthened during formal undergraduate research experiences play an important role in influencing the educational intentions of underrepresented racial-ethnic minorities in the field of computer science.", "authors": [{"name": "Ama Nyame-Mensah", "affiliation": "Computing Research Association, Washington, DC, USA"}], "tags": ["computing research pipeline", "underrepresented students", "graduate degree aspirations", "undergraduate research"]}, {"title": "CSteach: Engaging Latino/a Youth in Computer Science with Social Justice and Near Peers (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691904", "abstract": "Latinos are the fastest growing ethnic minority group in the US but are underrepresented in computer science. To increase the numbers of Latinos, we need learning environments that excite them about becoming a computer scientist starting in elementary school. This poster describes CSteach, an afterschool program that aims to move Latino/a students along the path to becoming a computer scientist by fostering capacities, identities, and relationships starting in 5th grade. It is the first known effort to integrate CS and social justice in elementary schools, and it builds off examples of \"computing for the social good\" in college (Goldweber et al., 2011).\nThe poster includes a description of the curriculum, and research findings from over 200 5th graders and 13 high school \"near peer\" educators. It includes a list of tested strategies for how to introduce CS and social justice concepts in a developmentally appropriate way to 5th graders, and how to integrate those concepts to increase motivation and understanding. The poster also describes how to establish an effective \"near peer\" component in a K-12 CS program by selecting high school students who are from the community, excited about computers and want to teach, and also providing them with ongoing training and support. Screenshots of the students' Scratch projects show how they used CS to address a social justice issue at their school. And graphs provide a visual description of the pre-post survey data that were collected. This includes changes in students' knowledge of CS, attitudes toward CS, interest in pursuing CS, and their understanding of how computing can be used to address needs in their community.", "authors": [{"name": "Jill Denner", "affiliation": "ETR, Scotts Valley, CA, USA"}, {"name": "Louise Ann Lyon", "affiliation": "ETR, Scotts Valley, CA, USA"}, {"name": "Jacob Martinez", "affiliation": "DigitalNEST, Watsonville, CA, USA"}], "tags": ["social justice", "latino/as", "k-12", "broadening participation"]}, {"title": "Security Injections 2.0: Using Segmentation, Instant-feedback, and Auto-grading to Enhance Secure Coding Modules for Lower-level Programming Courses (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691905", "abstract": "Learning interventions based on modules are common in computer science education. Traditional learning modules that present a large amount of content in a linear format can induce cognitive overload in learners. We present theoretical support for increasing the effectiveness of learning modules, describe a system that implements these principles, and discuss the results of a pilot study across two sections of CS0. Using the Security Injections @Towson cybersecurity modules that target key secure coding concepts including integer error, buffer overflow, input validation, for CS0, CS1, and CS2, we enhanced select modules by incorporating the e-learning design principles of segmentation and interactivity. The pilot study compares student engagement and knowledge of software security and secure coding between the current (1.0) modules and the enhanced (2.0) modules. The use of the enhanced 2.0 modules significantly increased both secure coding and software security knowledge. In addition, student engagement increased and feedback from instructors indicates higher student and instructor interest. This project is partially supported by NSF through grant DUE-1241738", "authors": [{"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Siddharth Kaza", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Sagar Raina", "affiliation": "Towson University, Towson, MD, USA"}], "tags": ["cs0", "instant-feedback", "learning sciences", "cs1", "auto-grading", "interactive learning", "secure coding", "security injections", "cs2"]}, {"title": "Conceptum: An Online Infrastructure for Concept Inventories (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691907", "abstract": "Concept Inventories (CIs) are short, multiple-choice exams that evaluate a student's understanding of core concepts of a particular course. CIs are especially useful for evaluating the effects of pedagogical techniques and interventions on student learning, as their focus on core concepts means any student should be able to answer the questions, and their use as a pre- and post-test allows them to measure student learning gains. However, CI development requires significant overhead: the current state of the art calls for an intensive, six step process. As a result, there are few CIs available for Computer Science, despite their effectiveness.\nOur research is devoted to solving this problem by implementing an online platform for developing, deploying, and evaluating concept inventories. This open-source software will support any number of collaborators in following the process to develop a CI, including identifying concepts, interviewing both domain experts and students, developing and deploying surveys on concepts, and developing multiple-choice CI questions. Additionally, the tool will be able to manage, administer, and iteratively improve CIs after they are created, including allowing instructors to deploy the CI to their classes, and to compare their results with others who have used the CI. This work is part of a larger project, in which it will be used to develop a CI for CS2.", "authors": [{"name": "David Wurtele", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}, {"name": "Kevin Webb", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}, {"name": "Eli Rosenberg", "affiliation": "Oberlin College, Oberlin, OH, USA"}, {"name": "Benjamin Rempel", "affiliation": "Oberlin College, Oberlin, OH, USA"}, {"name": "Cynthia Taylor", "affiliation": "Oberlin College, Oberlin, OH, USA"}, {"name": "Guatam Mohan", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}], "tags": ["misconceptions", "concept inventory", "assessment"]}, {"title": "Raspberry HadooPI: A Low-Cost, Hands-On Laboratory in Big Data and Analytics (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691908", "abstract": "Educating STEM students in the techniques of massively parallel computing anticipates a growing current and future need for scientists, engineers, and analysts who are facile with Big Data. Using very low cost hardware (Raspberry Pi) and free software (Hadoop) we are exposing students to distributed computing while limiting expense. We anticipate that micro-cluster labs and projects will give students hands on experience necessary so they can be prepared to use these methods in real world applications. A series of lessons and projects were developed to teach Hadoop and MapReduce, and were extended into STAR (Students Tackling Advanced Research) summer competitive research projects.", "authors": [{"name": "Kenneth Fox", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Jeffrey Popyack", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "William Mongan", "affiliation": "Drexel University, Philadelphia, PA, USA"}], "tags": ["micro-cluster", "hadoop", "big data", "inexpensive", "education", "raspberrypi", "mapreduce"]}, {"title": "The State of CS Circles: Open Source and Outreach with an Introductory Python Website (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691910", "abstract": "Computer Science Circles (http://cscircles.cemc.uwaterloo.ca) is a website that teaches Python for beginners, presented at SIGCSE 2013. It includes lessons, automatically-graded exercises, examples and visualizations. One purpose of the website is outreach with real human interaction: anyone who is stuck solving an exercise can privately send a question to the \"CS Circles Assistant\" (the author and two colleagues). As part of this poster, we will show some information about the 2500 student questions we have answered through this system, e.g. the questions where students most often reach out for help. We will also provide feedback from teachers using the site with their own classes.\nThe website was open-sourced in August 2013 thanks to a SIGCSE Special Projects grant, bringing it in line with the great open-source components used to create it. One unique outcome of this open licensing is installing a site mirror in a correctional institute.\nThe website was originally launched in English and French. Since then, we have worked with CS institutes from other countries: versions in German and Dutch have been released, with other translations under way. The poster will highlight some tools and caveats involved in this process.\nUsers of the site submit their solutions for online auto-grading, with about 500000 exercises now completed. This has yielded a large amount of data about the frequency of different error messages. We will include a chart of the most common errors, and an illustration of how we used this to generate clickable hints to give better beginner-level explanations for the most common errors.", "authors": [{"name": "Sandy Graham", "affiliation": "University of Waterloo, Waterloo, ON, Canada"}, {"name": "David Pritchard", "affiliation": "University of Southern California, Los Angeles, CA, USA"}, {"name": "Troy Vasiga", "affiliation": "University of Waterloo, Waterloo, ON, Canada"}], "tags": ["online education", "open source", "browser-based tools"]}, {"title": "Building the Pascaline: Digital Computing Like It's 1642 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691911", "abstract": "The Pascaline was the first working mechanical calculator, created in 1642 by the French polymath Blaise Pascal. Over the next two decades Pascal built 40 of these machines, of which nine survive today. Several good web resources describe the Pascaline, but to properly appreciate the sautoir, Pascal's kinetic energy solution to jam-free ripple carry, building a working replica is invaluable.\nThanks to the growing availability of rapid prototyping tools, it has become relatively easy for CS educators to fabricate physical artifacts to help students explore computational ideas. I've created a Pascaline kit using laser-cut acrylic and standard fasteners that can be assembled with just a screwdriver, pliers, and Loctite. High school or college students with minimal skills can put it together in a few hours and have a functioning calculator. Exploring the Pascaline's design is an engaging way to connect a milestone in the early history of computing with more modern theoretical concepts. Students can investigate questions such as: What makes a device \"digital\"? (Slide rules have numeric scales but are analog devices.) How does nonlinearity produce discrete states in a continuous world? How are nonlinearities induced in the Pascaline vs. in digital electronics? How do the logic design concepts \"half adder\" and \"full adder\" map onto the components of the Pascaline? Is the Pascaline really adding, or merely counting? How does the Pascaline use nines complement arithmetic to perform subtraction, and why isn't it tens complement? The Pascaline kit, designed in SolidWorks, is open source and available at http://www.cs.cmu.edu/~dst/Pascaline.", "authors": [{"name": "David S. Touretzky", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["laser cutter", "mechanical computing", "pascaline"]}, {"title": "Using Workflow Technology to Create Scenario-based Workflows for Information Security Education: Scenario-based Workflows (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691951", "abstract": "Teaching information security courses is technically challenging. In an information security course, students and instructors often end up struggling in low-level and complicated software installation, system setup, service configuration, command operations, and data manipulation while losing concentration in learning the important information security principles. To help students in information security courses learn information security principles more effectively and efficiently, we used the workflow technology to create scenario-based workflows in order to improve the effectiveness of teaching and learning of several key information security principles and techniques. Two case studies simulating real-life scenarios, including one for an online banking system and one for an online grading system, are recreated within a laboratory setting using workflow technology and are then presented in information security classes. Our educational practice shows that the benefits of using workflow technology in information security education have been well received by students.", "authors": [{"name": "Alexander Nwala", "affiliation": "Old Dominion University, Norfolk, VA, USA"}, {"name": "Ashish Kshirsagar", "affiliation": "Old Dominion University, Norfolk, VA, USA"}, {"name": "Yaohang Li", "affiliation": "Old Dominion University, Norfolk, VA, USA"}, {"name": "Wu He", "affiliation": "Old Dominion University, Norfolk, VA, USA"}], "tags": ["case-based instruction", "workflow technology", "information security", "case-based learning", "cyber security", "case study"]}, {"title": "Gender Differences in High School Students' Decisions to Study Computer Science and Related Fields (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691920", "abstract": "Increasing women's participation in Computer Science (CS) is a critical workforce and equity concern. The technology industry has committed to reversing negative trends for women in CS, engineering, and related fields. Building on previous research, we surveyed 1,739 high school students and recent college graduates to understand factors influencing decisions to pursue CS-related college degrees. Results indicate social encouragement, career perception, academic exposure, and self perception are the leading factors for women, while the influence of these factors is different for men. These factors are actionable, and understanding differences in their influence on men and women will inform our approaches to achieving gender parity in tech.", "authors": [{"name": "Mo-Yun Lei Fong", "affiliation": "Google Inc., Mountain View, CA, USA"}, {"name": "Jennifer Wang", "affiliation": "Google Inc., Mountain View, CA, USA"}, {"name": "Jason Ravitz", "affiliation": "Google Inc., Mountain View, CA, USA"}, {"name": "Hai Hong", "affiliation": "Google Inc., Mountain View, CA, USA"}], "tags": ["college", "perceptions", "self-confidence", "encouragement", "k-12 education", "high school", "factors", "gender differences"]}, {"title": "Learning from What Works: Improving an Introductory Computing Course for Architects with Teaching Methods from Media Computation (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691925", "abstract": "This poster describes an ongoing five-year assessment of a new introductory programming course for architecture students at the University of North Carolina at Charlotte. The goal of this course is to teach the fundamentals of computing with an emphasis on their relation to design and aesthetics. Many of the students struggle with the material, as they typically come into the course with no prior programming experience. To improve class performance, the author turned to instructional methods developed for Media Computation, which have been successfully used to teach introductory programming to non-major students for more than a decade. Our data suggest that the same methods -- media-based contextual content, pair programming, and peer instruction -- can have positive effects for students taking an introductory programming course taught by and for disciplines other than computer science. Compared to the first version of the course, which used traditional labs and lectures, the second iteration of the course, updated with the three instructional methods from Media Computation, resulted in higher student retention and an increase in student interest in computing topics. These improvements have remained consistent over the past three years. The data implies that research-based practices from computer science education can be used to improve computing education in other domains.", "authors": [{"name": "Nicholas Senske", "affiliation": "University of North Carolina at Charlotte, Charlotte, NC, USA"}], "tags": ["pair programming", "architecture", "non-majors", "media computation", "education research", "peer instruction"]}, {"title": "MIPSUnit: A Unit Testing Framework for MIPS Assembly (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691926", "abstract": "We present MIPSUnit, a unit test framework for MIPS assembly. MIPSUnit's primary benefit is that it reduces the time needed to grade assembly language assignments. It also provides a time-efficient means for providing students additional testing experience. (We believe that students should be exposed to testing throughout the curriculum --- including their Computer Organization and/or Assembly Language courses.) MIPSUnit is a suite of two tools: MUnit, which allows users to test their assembly code with JUnit tests, and MSpec, which uses RSpec-style unit tests", "authors": [{"name": "Jack Rosenhauer", "affiliation": "Grand Valley State University, Allendale, MI, USA"}, {"name": "Zachary Kurmas", "affiliation": "Grand Valley State University, Allendale, MI, USA"}], "tags": ["assembly language", "digital logic", "testing", "mips", "junit", "mars"]}, {"title": "A Web-based Simulator for Learning Multiprocessor Real-time Scheduling (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691938", "abstract": "CPU scheduling is one of the most important topics discussed in Operating Systems (OS) courses. In recent years, CPU scheduling for multiprocessor and real-time systems has become more and more essential as those systems can be found everywhere. While these topics should be introduced in OS courses, they are much harder to understand than simple uniprocessor scheduling algorithms due to the complexity involved. Particularly in introductory OS courses, only a couple of lectures can be used to cover these topics. To help students understand these complex topics more easily, we introduce a web-based simulator for learning multiprocessor real-time scheduling that is easy-to-use and self-explanatory. With this simulator, students can get visualized step-by-step instructions of how the algorithms work. They can also run the simulators interactively, and explore the algorithms in an empirical setting. The initial feedback from our students indicates that the tool is very useful in learning these complex algorithms. A demo will be shown in the poster session.", "authors": [{"name": "Xin Shan", "affiliation": "Boston University Metropolitan College, Boston, MA, USA"}, {"name": "Yuting Zhang", "affiliation": "Boston University Metropolitan College, Boston, MA, USA"}, {"name": "Juejie Wang", "affiliation": "Boston University Metropolitan College, Boston, MA, USA"}, {"name": "Yingyuan Zhang", "affiliation": "Boston University Metropolitan College, Boston, MA, USA"}], "tags": ["simulator", "multiprocessor real-time scheduling"]}, {"title": "Teaching Debugging Skills in Shader-Based Computer Graphics Programming (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691939", "abstract": "We present a set of online materials that teach debugging skills in college level computer graphics courses. Almost all the computer graphics textbooks use OpenGL and OpenGL Shading Language (GLSL). Most of the college level computer graphics courses are also taught using OpenGL/GLSL. Most students find OpenGL/GLSL programming very challenging. One of the reasons is that debugging is particularly difficult for computer graphics programming because many traditional debugging techniques can no longer be used. Debugging graphics programs requires a good understanding of OpenGL's error reporting mechanisms and different debugging techniques. Students also need to learn special GPU debugging tools. However, debugging is rarely covered in computer graphics textbooks and courses. Online resources on debugging OpenGL/GLSL programs are also scarce. To address this issue, we have developed online materials that teach students how to systematically debug shader-based OpenGL programs. This web site [1] provides error classification, debugging techniques, a list of common bugs, description of the OpenGL error reporting mechanisms, description of GPU debugging tools, symptom checker, code samples, and tutorials. This online resource fills an important gap in the current computer graphics curriculum. Students can use it to learn OpenGL/GLSL debugging skills. Instructors can use it as a supplement to their existing teaching materials.", "authors": [{"name": "G. Scott Owen", "affiliation": "Georgia State University, Atlanta, GA, USA"}, {"name": "Ying Zhu", "affiliation": "Georgia State University, Atlanta, GA, USA"}], "tags": ["debugging", "computer graphics", "education materials", "opengl", "shader"]}, {"title": "Developing Computational Thinking Through Image Making and Constructionist Learning (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691940", "abstract": "Consider the following scenario: A student is browsing Facebook and sees a strangely compelling image on her friend's page. She follows the \"how I made this link\" to learn more. She finds herself on a page with a gallery of animations that she browses. Then she sees a \"Create\" button and clicks it. She skims the instructions and decides that this is not a \"standard\" graphics program - rather than using a timeline and \"tools\", it has just a few basic images (e.g., a horizontal blend, a vertical blend, some time-blends) and a few operations that you use to build new images from existing images. She plays a bit. And she finds that she can create some strange and interesting images, but not necessarily the ones she wants to make, and certainly not anything like her friend made. So she looks further. She learns that there are \"challenges\" that help you learn the system (and, as importantly, that help you consider and master different aspects of computational thinking), and tries to figure out how to make images as seemingly simple as a triangle or a circle using the limited selection of basic images and operations. It's not easy, but she finds it fun to try (and sometimes more fun to fail -- failures also create interesting images). You've just read a sample encounter with the Mathematical Image Synthesis Toolkit, or MIST. MIST is an open-source, Web-based graphics application that takes a constructionist approach in which open experimentation in image making helps students develop skills in computational thinking and deepen their understanding of mathematical functions. MIST is available at http://glimmer.grinnell.edu.", "authors": [{"name": "Earnest Wheeler", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Samuel A. Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Alexander Mitchell", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Halley Freger", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Daniel Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Victoria Tsou", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Eileen Fordham", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Zoe Wolter", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Amanda Hinchman-Dominguez", "affiliation": "Grinnell College, Grinnell, IA, USA"}], "tags": ["open source", "social media", "constructionism", "functional programming", "animation", "web software", "computational thinking"]}, {"title": "Smartwatches For Junior/Senior Level CS Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691941", "abstract": "Incorporating smartwatch app development into mobile app development classes has educational benefits. However, choice of a smartwatch platform imposes constraints on eligibility of students that can take the class because some of the platforms (ex. Pebble, Samsung Gear2, AGENTWATCH) use proprietary SDKs with programing environment very different from the smartphone's. This makes such classes too difficult for CS1/CS2 level students.\nThis poster shows how newer smartwatches (Android Wear OS and Watch OS based) can make such classes accessible to CS1/CS2 students and how these newer smartwatches can broaden the CS topics that can be learned. For example, the hardware of Android Wear devices coupled with similar programing approach with Android OS, make a friendly platform for integrating smartwatch development into an Android app development class. These smartwatches offer new levels of information affordance with instantly obtainable interactive information on the wrist. It is possible to use such smartwatches as a tool for exploration of the fundamentals of Human Computer Interaction. Students can identify problems in existing interactive systems and design solutions with smartwatch capabilities in mind. Problems can be identified through exploratory studies of existing systems. Prototypes can be designed and implemented followed by evaluations. Students can also exercise concepts of Usability Engineering as there is need to address the ergonomic constraints of smartwatches, such as, small screen, poor visibility and fixed position on the body. In addition, Designing Android apps with Android Wear extensibility in mind can reinforce fundamental modularity concepts from Software Engineering in a natural setting.", "authors": [{"name": "Andrey Esakia", "affiliation": "Virginia Tech, Blacksburg, USA"}], "tags": ["android", "mobile", "usability engineering", "HCI", "software engineering", "android wear", "smartwatch", "apple watch"]}, {"title": "A Gateway Game to Make Computational Problem Solving Accessible and Engaging (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691949", "abstract": "In this work, we seek to better understand how game design principles impact the effectiveness of a video game learning environment for computational problem solving. Video games naturally encourage problem solving and incremental learning of their game play systems, but it remains unclear how well that transfers to learning the structures and processes of computing. We are building a gateway game that establishes familiar problem solving game play, then expands player affordances to include the use of automation and abstraction. Programming in-game entities is presented to players as a constrained selection and refinement process, which they explore and master in order to achieve in-game goals. We are exploring whether computational problem solving can be cast as accessible, intrinsically engaging game play, by following principles of good game design: exploratory player-controlled pace and direction, encouraging trial and low-cost failure, immediate formative feedback, level-appropriate challenge, non-intrusive assessment and expanding affordances. The game we are building to evaluate these factors will be positioned as a bridge for middle- and early high-school students to engage with computational problem solving.", "authors": [{"name": "Emmett Tomai", "affiliation": "University of Texas - Pan American, Edinburg, TX, USA"}, {"name": "Julio Oliva", "affiliation": "University of Texas - Pan American, Edinburg, TX, USA"}, {"name": "Casey Richardson", "affiliation": "University of Texas - Pan American, Edinburg, TX, USA"}, {"name": "Roberto Flores", "affiliation": "University of Texas - Pan American, Edinburg, TX, USA"}, {"name": "German Zuniga", "affiliation": "University of Texas - Pan American, Edinburg, TX, USA"}, {"name": "Jose Rojas", "affiliation": "University of Texas - Pan American, Edinburg, TX, USA"}], "tags": ["computational problem solving", "game design", "computational thinking", "introduction to programming", "educational games"]}, {"title": "Oh, Snap! Enabling and Encouraging Success in CS1 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691947", "abstract": "CS10, is UC Berkeley's CS0 course. Each semester we have between 40% and 50% of our students continue on to CS61A, our CS1 course. Meanwhile an average of 25% more students express interest in continuing learning computer science through other means. CS10 is taught in a visual language called Snap! and CS61A in Python. This poster explores some of the trends we have seen between CS10 and CS61A enrollment, and our new \"Besides Blocks\" curriculum which helps transition students from a visual to text based language. Besides Block is approximately one fourth of the CS10 curriculum which introduces Python in the context of the Turtle Graphics system, and a tool called Codification which is a way of translating Snap! blocks to Python.", "authors": [{"name": "Jonathan McKinsey", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Michael Ball", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Lauren Mock", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Zachary Machardy", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Daniel Garcia", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Brian Harvey", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}, {"name": "Nathaniel Titterton", "affiliation": "University of California Berkeley, Berkeley, CA, USA"}], "tags": ["visual programming", "curriculum", "cs0", "cs1"]}, {"title": "Universal Access to Computing Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691834", "abstract": "Approximately 10% of computer science and engineering majors have a disability of some kind. Students with disabilities are more likely to drop out of the major than those without disabilities. This BOF will bring together individuals who are interested in increasing the representation of students with disabilities in computing and improving their success. Participants will share strategies and promising practices to help each other do a better job of including these students in our classes and research projects. Resources, including those produced by AccessComputing (uw.edu/accesscomputing), will be shared.", "authors": [{"name": "Daniela Marghitu", "affiliation": "Auburn University, Auburn, AL, USA"}, {"name": "Richard E. Ladner", "affiliation": "University of Washington, Seattle, WA, USA"}, {"name": "Brianna Blaser", "affiliation": "University of Washington, Seattle, WA, USA"}], "tags": ["disability", "broadening participation", "universal design"]}, {"title": "Birds of a Feather: Mapping Alice Curriculum to Standards (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691838", "abstract": "This session is for anyone currently using Alice 2 and / or Alice 3, or those exploring the possibility of using Alice in their curriculum. The session will focus on a mapping of an Alice curriculum and instructional materials to CSTA, code.org and ACM curriculum standards and guidelines for a wide range of age/grade levels. The discussion leaders and attendees will share teaching strategies, tips, and techniques for implementing these standards. This is an opportunity to share assignments and pointers to web sites to access instructional materials, such as syllabi, student projects, exams, and other resources with experienced Alice instructors and those new to Alice.\nGoals for this session include:\nReview a course mapping of the Alice curriculum to well-known introductory curricula and pedagogy learning standards.\nDiscuss learning standards and objectives encountered in the use of Alice in different environments and educational contexts.\nAllow educators using Alice to share exemplary assignments and teaching strategies.\nProvide an opportunity for those thinking about using Alice to ask questions as they determine how it may be most useful in their particular situation.\nFoster the development of community by allowing Alice teachers to connect and become resources for each other throughout the year.\nAllow educators to interact with Alice team members to learn more about the latest features of Alice 3 and Alice 2.", "authors": [{"name": "Donald Slater", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}, {"name": "Steohen Cooper", "affiliation": "Stanford University, Stanford, CA, USA"}, {"name": "Wanda Dann", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["pedagogy", "instructional materials", "curriculum standards", "alice"]}, {"title": "Brainstorming How to Use Lego Mindstorms EV3 in the Classroom (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691840", "abstract": "Many people know that Lego Mindstorms are great for teaching a wide range of different computer concepts to students. Some use them to teach programming, engineering, and of course robotics. In September of 2013, Lego released the latest generation of Mindstorms called EV3. This workshop focused on introducing participants on how to use Mindstorms EV3 and what many of the new features of the system are. At the workshop it was mentioned how some people are using this generation of Mindstorms for architecture classes, assembler coding projects, CS0 or CS1 courses, and conducting kids camps for k-12 students. This BOF is designed for people currently using any generation of Mindstorms and for those who are interested in finding out how they might start using Mindstorms in the classroom. The focus of this session will be to encourage people to use Mindstorms EV3 in a variety of different settings. During the BOF, people will have an opportunity to brainstorm new ways to use these tools to help students learn important CS concepts.", "authors": [{"name": "Greg Kawell", "affiliation": "Samford University, Birmingham, AL, USA"}, {"name": "Benjamin Schafer", "affiliation": "University of Northern Iowa, Cedar Falls, IA, USA"}], "tags": ["cs0", "mindstorms", "ev3", "cs1", "lego", "educational robotics"]}, {"title": "What Math is the Right Math for Computing? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691841", "abstract": "\"... we note that undergraduate CS students need enough mathematical maturity to have the basis on which to then build CS-specific mathematics (for example, as specified in the Discrete Structures Knowledge Area), which, importantly, does not explicitly require any significant college-level coursework in calculus, differential equations, or linear algebra.\" [Computer Science Curricula 2013].\nIs this true? Perhaps we are finally acknowledging what critics have claimed for many years; namely, that the math traditionally studied by other engineers is the wrong math for computer science. But perhaps the even longer history of organizing college-level math curricula around continuous mathematics recognizes some important source of \"mathematical maturity.\" This session will debate Curricula 2013's claim in order to explore what topics in mathematics, and perhaps logic, statistics, and other related disciplines, a computer science program should include in order to develop appropriate \"mathematical maturity\" in its students.", "authors": [{"name": "John P. Dougherty", "affiliation": "Haverford College, Haverford, PA, USA"}, {"name": "Doug Baldwin", "affiliation": "SUNY Geneseo, Geneseo, PA, USA"}], "tags": ["mathematics to support computing", "curriculum"]}, {"title": "K12 CS Teaching Methods Courses (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691842", "abstract": "CS teacher development has become a major effort for the SIGCSE community in part due to NSF's CS10K efforts and expanding CSTA involvement. However there are few examples of university courses explicitly designed to train CS teachers. We do not yet have clarity on the topics CS education methods courses should cover and how best to prepare teachers to teach learners new to computational problem solving and programming. As an interdisciplinary field of study, CS education must necessarily draw on domain knowledge in CS, research in computing education, as well as research in education and the learning sciences about how students learn, both generally and in computing. At the same time, a methods course must provide prospective teachers with practical, hands-on experiences wherein they integrate research-based best practices with age-appropriate content for their target student population.\nBOF attendees are asked to bring materials from their classes and be ready to discuss multiple viewpoints about topics, pedagogical strategies and readings from a rich history of research in computing education and the learning sciences. Such a session will also afford attendees an opportunity to start an important conversation, connect with others who are currently developing and/or teaching CS methods courses, and form a community to share ideas, literature, and syllabi on an ongoing basis. Materials will be shared with the SIGCSE community.", "authors": [{"name": "Brian Dorn", "affiliation": "University of Nebraska Omaha, Omaha, NE, USA"}, {"name": "Shuchi Grover", "affiliation": "SRI International, Palo Alto, CA, USA"}, {"name": "R. Benjamin Shapiro", "affiliation": "Tufts University, Somerville, MA, USA"}], "tags": ["teacher training", "k12"]}, {"title": "Process Oriented Guided Inquiry Learning (POGIL) in Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691846", "abstract": "Process-Oriented Guided Inquiry Learning (POGIL) is a research-based instructional strategy with a proven history across STEM disciplines. In a POGIL classroom, teams of students work on activities that are specifically designed to guide them to construct their own understanding of key concepts. At the same time, students develop key process skills such as communication, teamwork, problem solving, and critical thinking. For example, an activity might start with a simple game, and questions would guide teams to identify, analyze, and compare algorithms to play the game, leading them to develop techniques and identify issues and tradeoffs. POGIL incorporates practices shown to be particularly helpful for students from underrepresented populations. In a POGIL classroom, teachers are facilitators, not lecturers. Multiple studies have shown the students in POGIL classes do better on common exams and in subsequent courses.\nThis BOF will enable people unfamiliar with POGIL to ask questions and learn more, and enable experienced POGIL practitioners to share experiences, concerns, ideas, and insights. As in a POGIL classroom, we will discuss topics in small teams and report out to the larger group. The CS-POGIL community has grown rapidly in the last few years. Our discuss forum has over 40 members, and http://cspogil.org has over 100 activities shared publicly or within the community. For more information, see http://cspogil.org and http://pogil.org.", "authors": [{"name": "Chris Mayfield", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Clif Kussmaul", "affiliation": "Muhlenberg College, Allentown, PA, USA"}, {"name": "Helen H. Hu", "affiliation": "Westminster College, Salt Lake City, UT, USA"}], "tags": ["active learning", "pogil", "communication", "teamwork", "inquiry learning"]}, {"title": "A Town Meeting: SIGCSE Committee on Expanding the Women-in-Computing Community (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691847", "abstract": "In January 2004, we organized the second SIGCSE Committee (\"Expanding the Women-in-Computing Community\"). Our annual Town Meeting provides dissemination of information concerning successful gender issues projects, along with group discussion and brainstorming, in order to create committee goals for the coming year. We select projects to highlight through listserv communication and through our connections with NCWIT, ABI, ACM-W, CRA-W, etc. This year we will highlight ACM-W Chapters and ACM-W Regional Celebrations.", "authors": [{"name": "Gloria Childress Townsend", "affiliation": "DePauw University, Greencastle, IN, USA"}], "tags": ["gender issues", "underrepresentation"]}, {"title": "Resources and Strategies for Flipped Classrooms (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691848", "abstract": "With interest in \"flipped classrooms\" rapidly growing, CS faculty are looking for ways to \"flip\" with a reasonable amount of effort and good results, There is no lack of resources or advice; videos and video-recording apps are proliferating, as are articles and web sites devoted to flipping. Only a small fraction of this is specifically targeted at CS, so it is a daunting task to sort through the available material to find what works well in computing. This BoF will bring together educators who have used, and can recommend, resources for flipping to their colleagues.", "authors": [{"name": "Edward Gehringer", "affiliation": "North Carolina State University, Raleigh, NC, USA"}, {"name": "Mark S. Hall", "affiliation": "University of Wisconsin-Marathon Co., Wausau, WI, USA"}], "tags": ["inverted lecture model", "\"flipped\" classroom"]}, {"title": "The Great Objective-C Swift Migration of 2015 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691849", "abstract": "Apple recently announced Swift, a new development language for iOS and OSX. While designed with developers in mind, it is also a boon to those who teach programming topics. Its relatively simple and familiar syntax; its integration in a scripting environment, Playgrounds, complete with built-in visualization tools; and the ability to incorporate live code in textbook form means that Swift is far better suited for teaching mobile app development than Objective-C. Indeed, the tools are so learner-friendly and the language so inviting that Swift might even find a place in a CS1 course. The language itself and the migration from Objective-C raise both logistical and pedagogical issues that will be addressed in this Birds of a Feather session.", "authors": [{"name": "William Siever", "affiliation": "Western Illinois University, Macomb, IL, USA"}, {"name": "Michael P. Rogers", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}], "tags": ["ios development"]}, {"title": "Teaching Track Faculty in CS (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691852", "abstract": "Many computer science departments have chosen to hire faculty to teach in a teaching-track position that parallels the standard tenure-track position. These teaching-track positions include the possibility for promotion, longer-term contracts and greater pay as demonstrated by excellence in teaching, educational material development, and service. Since this type of position is relatively new in CS departments, the expectations and responsibilities for such faculty varies from one university to another, but they certainly differ from the traditional tenure-track positions. This birds-of-a-feather is designed to gather educators who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information. In past sessions, we have laid the groundwork for keeping this community together through online discussions and consolidating information about teaching-track positions at various universities together into an online database.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Daniel Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}], "tags": ["non-tenure track faculty", "teaching faculty"]}, {"title": "Juggling the Jigsaw: Enabling CS1 Growing Enrollment and Diversity at Undergraduate Institutions (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691855", "abstract": "The enrollment in introductory computer science courses has been growing steadily for the last couple of years. Interest in the field is exploding across the nation. Colleges and universities of all shapes and sizes have seen enrollment in introductory computer science courses and to some extent in upper-division electives explode as well. Most R1 institutions handle such growth through the use of graduate TAs to teach CS1 courses. Many primarily undergraduate and/or liberal arts institutions don't have these resources, however. Complicating the scenario further, students coming to these non-research institutions expect personal interaction, are from a growingly diverse set of high-school graduates and seem to be less prepared for college than ever. Given the current funding climate for higher education, it is difficult to imagine how most universities and colleges will be able to negotiate this scenario. This BOF will provide a platform to discuss how to handle the growing, diverse, and uninitiated CS1 enrollment from many perspectives - individual, departmental, and institutional. What creative solutions can be brought to improve institutional motivation and how do we ensure that traditionally under-represented groups don't get left behind in the onslaught?", "authors": [{"name": "Farzana Rahman", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Dee Weikle", "affiliation": "Eastern Mennonite University, Harrisonburg, VA, USA"}], "tags": ["enrollment growth", "institutional readiness", "diversity", "cs1"]}, {"title": "Interactive Ebooks and Course Materials: A BOF for Authors and Instructors (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691856", "abstract": "Interactive activities in textbooks and online courses are no longer just decorative, but have become compelling tools for engaging students. This BOF, lead by professors and authors with experience in designing complex interactive tutoring materials, invites interested instructors and authors to discuss best practices in designing activities, integrating them into courses, and measuring outcomes.", "authors": [{"name": "Smita Bakshi", "affiliation": "Zyante, Inc., Los Gatos, CA, USA"}, {"name": "Cay Horstmann", "affiliation": "San Jos\u00e9 State University, San Jos\u00e9, CA, USA"}, {"name": "Frank Vahid", "affiliation": "University of California, Riverside, CA, USA"}, {"name": "Amruth Kumar", "affiliation": "Ramapo College of New Jersey, Mahwah, NJ, USA"}], "tags": ["interactive activities", "ebooks"]}, {"title": "Updating the ACM/IEEE 2008 Curriculum in Information Technology (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691857", "abstract": "At the direction of the ACM Education Board, the IT2017 Task Group was formed with the charge of updating the joint ACM and IEEE Computer Society Curriculum Guidelines for Undergraduate Degree Programs in Information Technology, known as IT2008. The revised document, called IT2017, should be appropriately forward looking given the significant advances in information technology that have occurred since 2008. Participants attending the BOF will contribute their insights and assist with the revision process to update IT2008. Discussions will center on delineating knowledge areas and learning outcomes specific to IT; exploring the current and future roles of IT in computing disciplines; recommending changes to improve the usefulness of the report; and planning further communications to fully engage the academic and professional community in the revision process. The objective is to ensure that the updated document is a forward-looking curriculum framework of the disciplinary content and practices in the field of information technology and remains relevant into 2020 and beyond for incoming students, computing departments with IT programs, accreditation bodies, and employers in the U.S. and anywhere else in the world.", "authors": [{"name": "Svetlana Peltsverger", "affiliation": "Southern Polytechnic State University, Marietta, GA, USA"}, {"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Mihaela Sabin", "affiliation": "University of New Hampshire, Manchester, NH, USA"}], "tags": ["curriculum guidelines", "it2017", "it2008", "information technology"]}, {"title": "Teaching Algebra and Computing through Bootstrap and Program by Design (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691860", "abstract": "Bootstrap teaches students to create their own videogames using a programming approach that directly reinforces state and national algebra standards. Used in classrooms across the country, Bootstrap is proving successful at transferring skills from programming to algebra word problems in 8th and 9th grade students. Due to the algebraic foundation for both content and pedagogy, math teachers with limited programming experience find the curriculum highly approachable; many offer it as a module within an algebra course. Bootstrap is a prefix to a higher-level computer science curriculum called Program by Design that emphasizes data-driven design and testing (with or without the videogame focus). In this BOF, current and potential users of these curricula will discuss the connections between introductory computing education and algebra education, share best practices for teaching and moving beyond these curricula, and generate ideas for future evolution of both curricula. The two facilitators will adapt the format as needed to support the interests of the participants.", "authors": [{"name": "Emmanuel Schanzer", "affiliation": "Harvard University, Cambridge, MA, USA"}, {"name": "Kathi Fisler", "affiliation": "WPI, Worcester, MA, USA"}], "tags": ["integrating math and computing", "k-12 instruction", "skill transfer", "game programming"]}, {"title": "Teaching Security Using Hands-on Exercises in 2015 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691862", "abstract": "We see teaching cybersecurity through hands-on, interactive exercises as a way to engage students. Some of the exercises that we have seen require significant preparation on the part of the instructor. Having a community makes it easier to share exercises, knowing what works and what problems students and instructors have encountered. The purpose of this BOF is to bring together instructors who have developed hands-on exercises, those who have used them and those who would like to. We recognize that few CS programs can afford new required courses, so we will discuss ways to integrate security-related exercises into existing ones. This could include networking, OS, computer architecture, programming languages, software engineering, algorithms and programming. The questions we will ask are, \"What exercises have you tried? What are your experiences? What are you looking for?\"\nRecent hiring forecasts indicate that there is still a tremendous need for skilled information security experts. Security is one of the core areas in the ACM/IEEE COMPUTER SCIENCE 2013 Curricula. It is particularly important to share stories from the classroom (what worked and what didn't), discuss ethical hacking, and discuss how to teach analytical skills. We plan to share experiences, practices and ongoing efforts, including our own (e.g., our teaching experiences, the SISMAT program, Security Injections, the Seattle Platform, the Security Knitting Kit project, EDURange and the dissemination of infosec interactive exercises).", "authors": [{"name": "Elizabeth Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}, {"name": "Justin Cappos", "affiliation": "New York University, New York, NY, USA"}, {"name": "Jens Mache", "affiliation": "Lewis & Clark College, Portland, OR, USA"}, {"name": "Michael Locasto", "affiliation": "The University of Calgary, Calgary, AB, Canada"}, {"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Ambereen Siraj", "affiliation": "Tennessee Technical University, Cookeville, TN, USA"}, {"name": "Richard Weiss", "affiliation": "The Evergreen State College, Olympia, WA, USA"}], "tags": ["laboratory exercises", "hacker curriculum", "security", "secure coding"]}, {"title": "Creating Assessment Tools for Cybersecurity Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691863", "abstract": "Recent large-scale data breaches such as the credit card scandals of Target and Home Depot have significantly raised the public awareness of the importance of the security of their data and personal information. These incidents highlight a growing need and urgency to develop the cybersecurity infrastructure of our country and in the world. The development of ACM's Computer Science Curriculum 2013 and the National Initiative for Cybersecurity Education framework further highlight the growing importance of cybersecurity in computing education. Critically, recent studies predict that there will be a significant demand for cybersecurity professionals in the coming years, yet there is a lack of rigorous evidence-based infrastructure to advise educators on how best to engage, inform, educate, nurture, and retain cybersecurity students and how best to structure cybersecurity curricula to prepare new professionals for careers in this field. The development of validated assessment tools of student learning provide one means for increasing the rigor with which we make pedagogical and curricular decisions. During this Birds of a Feather session, participants will engage in a structured dialogue to identify what assessment tools are needed to improve cybersecurity education. Further, participants will provide feedback on initial efforts to identify a core set of concepts and skills that will be essential for students' success in cybersecurity fields.", "authors": [{"name": "Ronald Dodge", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Geoffrey L. Herman", "affiliation": "University of Illinois, Urbana-Champaign, Urbana, IL, USA"}], "tags": ["cybersecurity", "computer science education", "concept inventories", "assessment"]}, {"title": "Automatically Generated Feedback for CS student Work: Best Practices (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691865", "abstract": "This session invites educators interested in sharing and/or learning about experiences with tools for automatic feedback on technical work: the \"if\", \"why\" and \"how\". This includes experiences with program testing, problem-solving exercises, or quizzes, generated or checked with engines with expert-level technical capabilities, to scale up feedback to cope with burgeoning enrollment in CS courses while maintaining or improving student learning outcomes. Commercial, free and open-source tools now exist to assist in this endeavor.\nThe benefits of providing timely, detailed, and insightful feedback for student effort are well known. Yet as enrollment in CS courses increases, many are hard pressed to find the human resources to scale up their feedback efforts. TAs and instructors may struggle to deal with the increased evaluation load, resulting in inconsistent, untimely, or lessened insight in feedback.\nAutomatic grading and feedback offer a way to scale detailed and individualized feedback and for instructors to write materials with enhanced shelf-life, but with additional courseware engineering and administrative cost. It raises pedagogical questions about good ways for machine-based feedback to be blended with other types of learning activities, both conventional and novel. It has significance and relevance to departments facing the \"scaling up\" situation when it is understood if, how and why it can help address the problem.", "authors": [{"name": "Jeremy Johnson", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Jeffrey Popyack", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "William Mongan", "affiliation": "Drexel University, Philadelphia, PA, USA"}, {"name": "Bruce Char", "affiliation": "Drexel University, Philadelphia, PA, USA"}], "tags": ["automatic feedback", "autograding", "scaling instruction"]}, {"title": "Handling Very Large Lecture Courses: Keeping the Wheels on the Bus (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691867", "abstract": "As classes grow beyond hundreds or even a thousand students, instructors must come to grapple with handling course logistics at scale. Otherwise mundane tasks can no longer be handled in an ad hoc way, and standard course design challenges become more acute. Just to name a few issues, the instructor might have to contend with: Exam scheduling, recruiting and managing a teaching staff that consists of dozens of people, ensuring consistency of grading, identifying and providing interventions for struggling students, providing a consistent policy for makeup work, and creating diverse course content (e.g. lab, HW, discussion section) that allows for an efficient path to mastery for each student regardless of diverse backgrounds and ability. If you have good ideas for handling these issues you'd like to share, or just want to learn what others are doing, come join us! Discussion will ideally include staffing techniques, technologies (including automated assessments), and ways of developing course content.", "authors": [{"name": "Daniel D. Garcia", "affiliation": "University of California Berkeley, Berkeley, USA"}, {"name": "Josh Hug", "affiliation": "University of California Berkeley, Berkeley, USA"}], "tags": ["large lecture courses", "course logistics", "instructional technologies", "automated assessments"]}, {"title": "Computer Science Principles: Expanding the Community (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691868", "abstract": "Computer Science Principles will become an Advanced Placement course in AY 2016-2017, with the launch of the first APCSP exam in May of 2017, with through-course assessments/performance tasks being completed by students starting at the beginning of that academic year. In this BOF we will hear from participants about their questions and concerns in anticipation of the launch of the course and exam. The BOF will be part of launching a community of practice for teachers and educators who are not part of a formal NSF project, Project Lead the Way, or Code.org whose participants may have a community of practice.", "authors": [{"name": "Amy Briggs", "affiliation": "Middlebury College, Middlebury, VT, USA"}, {"name": "Fran Trees", "affiliation": "Rutgers University, New Brunswick, NJ, USA"}, {"name": "Owen Astrachan", "affiliation": "Duke University, Durham, NC, USA"}, {"name": "Lien Diaz", "affiliation": "College Board, Atlanta, GA, USA"}, {"name": "Richard Kick", "affiliation": "Newbury Park High School, Newbury Park, CA, USA"}], "tags": ["k-12 education", "computer science principles", "broadening participation"]}, {"title": "Proposed ABET Computer Science Criteria and the CS2013 Curriculum (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691831", "abstract": "The ACM/IEEE CS2013 Curriculum provides a somewhat rigid identification of topics to be covered by a model computer science curriculum. It was developed with significant input from industry, educators and other stakeholders and represents best practices in terms of Computer Science education. ABET is the accreditation body accrediting computer science programs in the US, and it also accredits a number of international programs. ABET's goal is to allow programs to identify their own outcomes and measure their success in delivering programs that achieve this, while also ensuring that all students receive a solid core education including key areas of the discipline without being excessively prescriptive. Both documents address excellence in computer science education. Changes to the Computer Science program criteria are being recommended which will more closely align the two documents in terms of identifying key areas to be covered by programs. This session provides participants with the opportunity to hear about the proposed changes and the rationale behind them and to offer feedback and input into the process.", "authors": [{"name": "Michael Oudshoorn", "affiliation": "Wentworth Institute of Technology, Boston, MA, USA"}, {"name": "Stan Thomas", "affiliation": "Wake Forest University, Winston-Salem, NC, USA"}, {"name": "Mary-Jane Willshire", "affiliation": "Capella University, Colorado Springs, CO, USA"}, {"name": "Barbara Boucher Owens", "affiliation": "Southwestern University, Georgetown, TX, USA"}, {"name": "Deborah Trytten", "affiliation": "University of Oklahoma, Norman, OK, USA"}], "tags": ["curriculum", "accreditation"]}, {"title": "AP CS A: Sharing Teching Strategies and Curricular Ideas (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691832", "abstract": "This BOF will provide an opportunity for high school and college faculty to discuss the AP CS A curriculum and to explore possibilities for collaborations and outreach activities between high schools and colleges.", "authors": [{"name": "Lester Wainright", "affiliation": "Charlottesville High School, Charlottesville, VA, USA"}, {"name": "Sandy Czajka", "affiliation": "Riverside Brookfield High School, Riverside, IL, USA"}, {"name": "Paul Tymann", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["teaching strategies", "ap cs a", "curricular ideas"]}, {"title": "Perspectives on How Computer Science Curricula 2013 Influences Two-Year College Programs (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691833", "abstract": "The ACM Computer Science Curricula 2013 (CS2013) guidance for undergraduate degrees was released in December 2013. This BOF will provide a platform for two-year and four-year computer science faculty and academic administrators to discuss CS2013 and its influence on associate-degree computer science curricula. The session will include a brief overview of the Core Tier-1 and Core Tier-2 CS2013 topics and attendees will primarily engage in an open dialog about which CS2013 topics and learning outcomes are most relevant to be included in a transfer curriculum. This CS2013 discussion will help inform the forthcoming update to Computing Curricular 2009: Guidelines for Associate-Degree Transfer Curriculum in Computer Science (www.capspace.org).", "authors": [{"name": "Cindy S. Tucker", "affiliation": "Bluegrass Community and Technical College, Lexington, KY, USA"}, {"name": "Cara Tang", "affiliation": "Portland Community College, Portland, OR, USA"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}], "tags": ["education", "computer science", "community college", "two-year college"]}, {"title": "New Concepts in Database System Education: Experiences and Ideas (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691835", "abstract": "Compared to their fundamental part of computer science curricula the small number of papers on database system education comes as a surprise. The apparent draught in new ideas in database system education is even more surprising given the fact that this area of computer science has arguably undergone its most significant changes for more than 30 years within the last 5 to 10 years. Many new database system paradigms (most of them appearing under the NoSQL label) have been introduced for various reasons. Some of these massively distributed database systems facilitate unprecedented data processing capabilities often labeled as BigData. In order to offer a sustainable and practical CS education, at least some of those new paradigms and methodologies should be included into database education. The BoF is meant to continue the discussion from the 2014 BoF about which of those deserve inclusion into a typical CS curriculum and (even more interestingly) at what time in the curriculum and by replacing what other topics. It shall offer participants a forum to share their opinions and ideas on recent and future changes in database system education as well as to present practical experiences with new concepts picked up at last year's BoF or elsewhere.", "authors": [{"name": "Carsten Kleiner", "affiliation": "University of Applied Sciences & Arts, Hannover, Germany"}], "tags": ["database courses", "nosql", "big data", "curriculum", "database paradigms", "database systems"]}, {"title": "Addressing Professional Development Needs for K-12 CS: Working with Your Local CSTA Chapter (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691836", "abstract": "One of the greatest challenges for K-12 computer science educators is finding the opportunities and resources to stay up-to-date with the field and its pedagogical practices. Teachers often lack CS colleagues at their school, which makes the lack of professional development opportunities even more significant. As part of its commitment to developing a strong community of computer science educators, the Computer Science Teachers Association (CSTA) supports the development of regional CSTA chapters. A CSTA chapter is a local branch of CSTA designed to facilitate discussion of local issues and to help connect teachers with professional development resources. This BOF will discuss existing professional development resources available to K-12 teachers, as well as providing a community building forum between high school teachers and college faculty. Attendees will be asked to share their professional development needs and desires, which will then guide the CSTA Professional Development committee in future efforts.", "authors": [{"name": "David Reed", "affiliation": "Creighton University, Omaha, NE, USA"}, {"name": "Frances P. Trees", "affiliation": "Rutgers University, Piscataway, NJ, USA"}], "tags": ["k-12 computer science education", "csta", "professional development", "computer science teachers association"]}, {"title": "Study Abroad Experiences in Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691837", "abstract": "This BoF is to gather computer science educators interested in helping to create successful study abroad experiences for computer science students. While study abroad consistency places number one as the most impactful experience an undergraduate can have, computer science students have some of the lowest study abroad participation rates. While some of the reasons for this are financial, it is believed that the primary reason is the lack of meaningful study abroad opportunities.\nIn the world of study abroad programs, it is a basic axiom that a study abroad program, to be successful, has to have a reason for being in its chosen location. Simply transplanting a course to an exotic location is considered educational tourism. The most successful study abroad programs leverage being present in a foreign location to provide some value added to the course over its back home-based counterpart. We define meaningful study abroad opportunities as ones where students can make forward progress in their major, but avoid becoming exercises in educational tourism. Furthermore, at all but the largest of institutions, discipline-specific study abroad programs, due to enrollment sizes need to be inter-institutional.\nHow to create a meaningful study abroad experience in computer science is a difficult open question. The purpose of this BoF is to gather interested colleagues to brainstorm ideas and to begin a community-wide dialog on developing successful and meaningful study abroad programs for computer science students.", "authors": [{"name": "Michael Goldweber", "affiliation": "Xavier University, Cincinnati, OH, USA"}], "tags": ["study abroad"]}, {"title": "Sharing Best Practices for Alumni Engagement (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691839", "abstract": "Alumni make contributions to a Computer Science program in three interconnected ways, all of which relate to the interplay between the academic environment and the \"real world.\" For students who aim to enter the job market upon graduation, alumni provide a friendly way to receive mentoring and advice and develop a professional network. When faculty are looking for real-world projects and experiences for students, alumni provide an avenue for entrance into industry. Finally, alumni can provide assessment data about the performance of students in the workplace after graduation.\nIn this BoF session, we will consider how individual faculty members or a department can engage alumni in meaningful ways. Small groups will consider each of the three ways to partner with alumni, with particular emphasis on sharing past experiences. Participants will be encouraged to consider ways to collaborate with their alumni office, development office, career center and student groups to leverage the potential of their alumni.", "authors": [{"name": "Diane Horton", "affiliation": "University of Toronto, Toronto, ON, Canada"}, {"name": "Meghan Allen", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Ben Coleman", "affiliation": "Moravian College, Bethlehem, PA, USA"}, {"name": "Michele Ng", "affiliation": "University of British Columbia, Vancouver, BC, Canada"}, {"name": "Lynn Lambert", "affiliation": "Christopher Newport University, Newport News, VA, USA"}], "tags": ["alumni engagement", "computer science education"]}, {"title": "Assessments for Computational Thinking in K-12 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691843", "abstract": "As computer science (CS) and computational thinking (CT) make their way into all levels of K-12 education, valid assessments aligned with new curricula can assist in measuring student learning, easing the way for adoption of new computing courses, and evaluation of pedagogical approaches for teaching computing ideas and concepts. Without attention to rigorous assessment, CT can have little hope of making its way successfully into K-12 school education settings at scale. This BoF session will involve discussion around ongoing work at SRI International (under several NSF-funded projects) on the design and development of formative and summative assessments for the ECS curriculum. Additionally, various forms of assessment (including free response and multiple-choice questions, and computational artifacts), and insights from past research on their use will be discussed. BOF attendees will be able to discuss multiple viewpoints, connect with others who care about assessment of CT, and share resources and ideas.", "authors": [{"name": "Shuchi Grover", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Eric Snow", "affiliation": "SRI International, Menlo Park, CA, USA"}, {"name": "Marie Bienkowski", "affiliation": "SRI International, Menlo Park, CA, USA"}], "tags": ["evidence-centered design", "assessment", "computational thinking"]}, {"title": "Student Contributions to Humanitarian Free and Open Source Software (HFOSS) (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691844", "abstract": "Can students contribute to HFOSS projects as part of their computing curriculum? How and at what level can HFOSS be integrated? What are the success stories and challenges? This BOF will be led by a diverse group of faculty who have incorporated HFOSS into their classes. They will lead a discussion on the various approaches, successes and challenges they have encountered. Their experiences will provide a backdrop for this BOF session, which should lead to a lively discussion of how and why to use HFOSS in computing courses. Faculty who are interested in HFOSS, but who are novices, will learn about potential projects and classroom materials as well as make connections with more experienced faculty in this area.", "authors": [{"name": "Lori Postner", "affiliation": "Nassau Community College, Garden City, NY, USA"}, {"name": "Samuel Rebelsky", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Suzanne Mello-Stark", "affiliation": "University of Rhode Island, Kingston, RI, USA"}, {"name": "Ben Coleman", "affiliation": "Moravian College, Bethlehem, PA, USA"}, {"name": "Stoney Jackson", "affiliation": "Western New England University, Springfield, MA, USA"}], "tags": ["humanitarian free and open source software"]}, {"title": "Partnering to Promote State-by-State Computing Education Reform (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691845", "abstract": "We are all excited to see an increasing number of national efforts to reform computing education. Persistent and sustainable change in a state, its higher education institutions, and its K12 districts requires the active participation of individuals and local organizations to engage policy makers, higher education, school districts and communities. U.S. education is highly distributed, with critical decisions pushed more to the community level and less at the national (or even state) level. The system is organized along K20 pathways and a reform process to improve these pathways will take place at multiple levels and state by state.\nThis BOF will bring together emerging leaders at the state level with representatives from national initiatives to share best practices for implementing change. The NSF BPC Expanding Computing Education Pathways (ECEP) Alliance will present its 4-step model for state change: identify leaders, assess the CS education landscape, organize the statewide stakeholders, and find resources to enable change. We will moderate a discussion of how the ECEP model, its services and federal/foundation resources might be adapted to enhance state-based initiatives and partnerships. ECEP provides experts for state policy events, teacher professional development, and 2-4-year transfer summits. It provides training and funding to help start computing summer camps. ECEP trial interventions are helping more African American students pass the AP-CS-A exam.", "authors": [{"name": "Mark Gudial", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "W. Richards Adrion", "affiliation": "University of Massachusetts Amherst, Amherst, MA, USA"}, {"name": "Barbara Ericson", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["diversity and inclusion", "outreach", "computing education reform", "advocacy"]}, {"title": "Open Educational Resources: What Next? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691850", "abstract": "Open educational resources - assignments, labs, course notes, and other types of materials made available for anyone interested in using them - have the potential to have a significant positive impact on courses and students at many institutions. Distribution and use of course materials is also an important factor in encouraging the adoption and use of innovative teaching practices. However, the use of open resources is still somewhat uncommon, with most instructors preferring to use their own materials.\nThis BoF will bring together providers and users of open educational resources to pose the following questions: Who is using open resources? Who isn't using open resources? How could open resources, and the repositories where they are made available, better meet the needs of potential users? What is necessary to make sharing of educational resources easier and more effective? Are there inherent barriers to sharing and reuse, and how can they be overcome?", "authors": [{"name": "Cliff Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Lillian (Boots) Cassel", "affiliation": "Villanova University, Villanova, PA, USA"}, {"name": "Darina Dicheva", "affiliation": "Winston-Salem State University, Winston-Salem, NC, USA"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["open educational resources"]}, {"title": "Computer Science: Small Department Initiative (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691851", "abstract": "Faculty members in a small department (5 FTE or less) face special challenges and strengths because of their size. This BOF is a time for faculty to meet and discuss ways to meet the shared challenges and take advantage of their strengths. The actual topics covered will be based on those attending. Possible topics might include: sharing classes, increasing enrollment, general education, and specialized courses.", "authors": [{"name": "Catherine Bareiss", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}], "tags": ["small department"]}, {"title": "Empirical Research in CS Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691853", "abstract": "Over the past several years, there has been a marked increase in empirical validation in research papers presented at the SIGCSE Symposium. This birds-of-a-feather session intends to bring together faculty interested in empirical research in computer science education to share methodologies and techniques, while also continuing the conversation about how to move empirical computer science education research forward. The computer science education (CSEd) research community consists of a large group of passionate CS educators who often contribute to other disciplines of CS research. There has been a trend in other disciplines toward more rigorous and empirical evaluation of various hypotheses. Prior meta-analyses of the then-current state of CSEd research showed a distinct lack of rigor in the top CSEd publication venues, with most papers falling in the general category of experience reports. Our goal is to engage the SIGCSE community in a discussion as to how we can move empirical research in CSEd forward. We hope to help researchers establish connections that will allow them to share research methodologies and challenges.", "authors": [{"name": "Mark Sherriff", "affiliation": "University of Virginia, Charlottesville, VA, USA"}, {"name": "Sarah Heckman", "affiliation": "North Carolina State University, Raleigh, NC, USA"}], "tags": ["empirical research", "scholarship of teaching and learning"]}, {"title": "CS 4 Everyone: Diversifying the K-12 Pipeline for CS at College and High School Level (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691913", "abstract": "It is widely known that computer science students do not reflect the diversity of the population at large. Studies have shown that effective outreach programs can educate the public, increase student interest, help recruit and retain majors in computing disciplines. Traditionally the outreach events are organized by higher education institutions or nonprofit organizations. It will be highly effective if high school teachers are provided with the right tools so they can organize outreach events in their school or local community. Outreach programs can vary widely in terms of target audience, duration and objective. And it might seem daunting to design and deploy outreach events to make it sustainable. Our goal in this BOF is to discuss effective outreach activities to recruit and retain diverse students in CS K-12 pipeline. In particular, each facilitator will address the objective of the activity, the target audience, a description of the activity, and key aspects for successful deployment. This BOF will also provide an effective model for high school teachers to design and implement computing outreach activities in their schools. We will share techniques to increase students and parents interest in computer related discipline and provide them with appropriate tools to pursue their interest more. Facilitators will also share information about various funding agencies that can sponsor CS outreach programs. It will provide an opportunity for high school and college faculty to explore possibilities for collaborations and outreach between high schools and colleges.", "authors": [{"name": "Sharon Simmons", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Farzana Rahman", "affiliation": "James Madison University, Harrisonburg, VA, USA"}, {"name": "Jennifer Stevens", "affiliation": "Virginia Advanced Study Strategies, Inc., South Boston, VA, USA"}], "tags": ["k-12 pipeline", "diversity", "outreach", "recruitment and retention in cs"]}, {"title": "Preparing Undergraduates to Make the Most of Attending CS Conferences (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691858", "abstract": "Students who attend academic conferences can broaden their horizons, increase their commitment to the discipline, find role models and mentors, and gain concrete opportunities for work and study. However, attending one's first conference can be an overwhelming experience. We often focus on the procurement of funding to send students to conferences, and do not spend as much time considering what will happen once they get there. In this BoF, we will share strategies for guiding and supporting undergraduates to take full advantage of attending a CS conference.\nThis session will be led by two faculty members and two young alumni. We will draw on our collective experience helping our students/classmates make the most of attending the Grace Hopper Celebration of Women in Computing, SIGCSE, and other CS research conferences. We invite discussion of any and all conferences participants have experience with, as similar strategies may apply. Specifically, we may consider how to help students: act with confidence in a professional setting; rehearse an \"elevator pitch\"; navigate career fairs and exhibit halls; choose wisely among parallel sessions and the \"hallway track\"; network effectively with potential mentors, advisers, and employers; present their own work in talks or poster sessions; reflect on their experiences; and share what they learn at their home institution.", "authors": [{"name": "Jennelle Nystrom", "affiliation": "Yahoo!, Sunnyvale, CA, USA"}, {"name": "Janet Davis", "affiliation": "Grinnell College, Grinnell, IA, USA"}, {"name": "Miranda C. Parker", "affiliation": "Georgia Tech, Atlanta, GA, USA"}, {"name": "Christine Alvarado", "affiliation": "University of California San Diego, San Diego, CA, USA"}], "tags": ["communication", "undergraduate", "careers", "conferences"]}, {"title": "Can Programming Boot Camp Help Under-represented College Students Succeed in Computing Degrees? (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691859", "abstract": "Programming Boot Camp is one strategy to overcome the perceived and actual difficulties undergraduate students encounter in an introductory programming course. It is estimated that of the over two million students starting computer science studies in universities and colleges all over the world in 1999, 33% dropped or failed their first programming course. Consequently, undergraduate students delay enrolling in programming courses, which interrupts progress toward their degree and decreases confidence in their ability to succeed in college and computing careers. Programming Boot Camp provides a combination of intense programming labs with professional development and community building activities to help increase confidence, create awareness of opportunities, and build a supporting peer network. How does this strategy work on different campuses with different demographics? Attendees will be able to connect with people who have implemented boot camp, are interested in sharing resources, and discussing how appropriate a boot camp would be for their students. Those who have already implemented a boot camp will be encouraged to share their curriculum, workshop strategies, and how effective they were in goals like: increasing the programming skills of the participants and their confidence in it, inspiring participants to persist in computing, and building a network of mentors and peers to support persistence in computing. Participants who seek to increase success in programming courses will be encouraged to discuss campus specific needs to gather input from those who have implemented boot camps and how they adapted the concept to their population and institutional culture.", "authors": [{"name": "Nannette Napier", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Kristine Nagel", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Sonal Dekhane", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}], "tags": ["women in it", "summer boot camp", "retention"]}, {"title": "SIGCSE Reads: Time for Book Discussion (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691861", "abstract": "Did you read any of the common reads for SIGCSE 2015? Now's your chance to talk about them! Three books: I, Robot by Isaac Asimov (Bantam Spectra, 1950), Bellwether by Connie Willis (Bantam Spectra, 1997) and Ready Player One by Ernest Cline (Broadway Books, 2012) were proposed at the end of the 2014 conference. If you're interested in science fiction, whether on a personal, academic, or pedagogical level, come join us in this BoF and discuss one or more of the three suggested books. We'll provide potential topics and discussion questions targeting how to incorporate these books into a CS course, but the discussion will be open. The BoF will close with a discussion of potential books for the 2016 conference.", "authors": [{"name": "Judy Goldsmith", "affiliation": "University of Kentucky, Lexington, KY, USA"}, {"name": "Rebecca Bates", "affiliation": "Minnesota State University, Mankato, Mankato, MN, USA"}, {"name": "Valerie Summet", "affiliation": "Emory University, Atlanta, GA, USA"}], "tags": ["computer science education", "computer science", "science fiction"]}, {"title": "Working with Undergraduate Teaching Assistants: Best Practices and Lessons Learned (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691864", "abstract": "Instructors struggling to support their ever-growing undergraduate population may be interested in starting, expanding, or improving an undergraduate teaching assistant (TA) program. This session seeks to connect individuals interested brainstorming and sharing strategies for improving the impact of undergraduate TAs. We will break into small groups to discuss tips for (0) structuring funded and unfunded undergraduate TA programs, (1) training undergraduate TAs, and (2) recruiting and selecting undergraduate TAs. All tips will be posted on CSTeachingTips.org for dissemination to other CS educators. This BoF welcomes instructors already supporting undergraduate TAs and instructors who are interested in build an undergraduate TA program.", "authors": [{"name": "Chris Gregg", "affiliation": "Tufts University, Medford, MA, USA"}, {"name": "Colleen M. Lewis", "affiliation": "Harvey Mudd College, Claremont, CA, USA"}], "tags": ["classroom management", "instruction", "undergraduate", "teaching assistants", "pedagogy"]}, {"title": "Blended CS Courses using Massive, Open, Online Courses (and other Online Resources) (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2691866", "abstract": "Computer science instructors are incorporating Massive Open Online Courses (MOOCs), and MOOC material, into their campus courses. The closed instance is the dominant model being followed, in which MOOC material (e.g., in AI, in Programming Languages, in Software Engineering) is ported to a protected LMS so that campus students can use the MOOC video and other material (e.g., assessments) and infrastructure (e.g., autograders) in a \"private\" manner. In an embedded instance, campus students take a live MOOC as one component of their on-campus course. Another model, albeit nascent, is to exploit self-paced open online courses so that campus cohorts can move through a course when a campus instructor wants, and at a pace the instructor wants, but still availing campus students to the advantages of interacting with global students (and vice versa). The BoF session will allow participants to talk about MOOC-based blended models, form a group interested to archiving experience, synthesizing best practices, creating shared learning-object repositories (e.g., of active learning, in-class activities), and to discuss issues of policy (e.g., FERPA).", "authors": [{"name": "Douglas H. Fisher", "affiliation": "Vanderbilt University, Nashville, TN, USA"}, {"name": "Janet Burge", "affiliation": "Wesleyan University, Middletown, CT, USA"}, {"name": "Mary Lou Maher", "affiliation": "University of North Carolina, Charlotte, NC, USA"}, {"name": "Jerry Roth", "affiliation": "Vanderbilt University, Nashville, TN, USA"}], "tags": ["classroom management", "active learning", "spocs", "embedded courses", "moocs", "closed courses", "self-paced courses", "small private online courses", "massive open online courses", "blended learning"]}, {"title": "Teaching Computing Foundations to Non-Majors (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678283", "abstract": "This workshop shows participants about a new way to teach non-computing majors about computing fundamentals. This involves teaching computing concepts (such as sources of error, algorithm analysis, data storage, and simulations) that students encounter when they use computers to do work in their own disciplines. While this new way of teaching can use any discipline, the workshop will use the sciences as the working example. It will focus on how scientists use computers in their work but will also introduce ways to expand this to other disciplines. The course that will be presented presents different modules of computer science interspersed with different science modules that apply the computing knowledge. More details can be found at http://cf4s.olivet.edu. Participants are highly encouraged to bring a laptop. Handouts associated with the entire course will be provided.", "authors": [{"name": "Catherine Bareiss", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}, {"name": "Larry Vail", "affiliation": "Olivet Nazarene University, Bourbonnais, IL, USA"}], "tags": ["non-majors", "computational science"]}, {"title": "Teaching Parallel & Distributed Computing with MPI (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678285", "abstract": "CS2013 brings parallel and distributed computing (PDC) into the CS curricular mainstream. The Message Passing Interface (MPI) is a platform independent, industry-standard PDC library that includes support for C, C++, and Fortran; third parties have created implementations for Python and Java. This hands-on workshop introduces MPI basics using parallel patterns, including the single program multiple data (SPMD), send-receive message passing, master-worker, parallel loop, broadcast, reduction, scatter, gather, and barrier patterns. Participants will explore 12 short programs designed to help students understand MPI and PDC basics, plus longer programs that use MPI to solve significant problems. The intended audience is CS educators who want to learn about how message passing can be used to teach PDC. No prior experience with PDC or MPI is required; familiarity with a C-family language and the command-line are helpful but not required. The workshop includes: (i) self-paced hands-on experimentation with the working MPI programs, and (ii) a discussion of how these may be used to achieve the goals of CS2013. Participants will work on a remote Beowulf cluster accessed via SSH, and will need a laptop or a tablet with an SSH client (e.g., BitVise, iSSH), or a laptop with both a recent C/C++ compiler and MPI (e.g., OpenMPI or MPICH) installed. See http://csinparallel.org.", "authors": [{"name": "Joel C. Adams", "affiliation": "Calvin College, Grand Rapids, MI, USA"}, {"name": "Richard A. Brown", "affiliation": "St. Olaf College, Northfield, MN, USA"}, {"name": "Elizabeth Shoop", "affiliation": "Macalester College, Minneapolis, MN, USA"}], "tags": ["distributed", "parallel", "message passing", "patterns", "design", "software", "computer science", "mpi", "curriculum", "memory"]}, {"title": "Teaching Computer Science Soft Skills (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678289", "abstract": "This workshop addresses the teaching of computer science soft skills, such as teamwork, diversity, presentation and communication skills, and ethical behaviors. It is based on the assumption that the people involved in software development processes deserve more attention, and therefore, their soft skills should also be addressed, beyond their scientific and engineering skills. In the workshop, we will highlight such soft skills using activities that aim to analyze them from a social and cognitive perspective. We will also present and discuss a course outline dealing with soft skills of computer science, including suggestions for specific activities and tasks.", "authors": [{"name": "Gadi Har-Shai", "affiliation": "Technion -- Israel Institute of Technology, Haifa, Israel"}, {"name": "Orit Hazzan", "affiliation": "Technion -- Israel Institute of Technology, Haifa, Israel"}], "tags": ["soft skills", "diversity", "presentation and communication skills", "teamwork", "social perspective", "cognitive perspective", "ethics"]}, {"title": "SEED Labs: Using Hands-on Lab Exercises for Computer Security Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678290", "abstract": "Security courses have been integrated into many mainstream undergraduate and graduate computer science curricula. To achieve effective education, learning security principles must be grounded in experience. Over the last 12 years, we have developed 30 hands-on lab exercises for computer security education. These labs, called SEED labs (SEcurity EDucation), cover a variety of security topics, including vulnerabilities, attacks, software security, system security, network security, web security, access control, authentication, cryptography, etc. These labs are built upon a Linux virtual machine, the image of which can be downloaded from our web site. Students just need to use a single computer (can be their own laptop) to work on these labs, so there is no need for a dedicated physical laboratory. All software used in the labs is open-source and free. The SEED project has been funded by 3 NSF grants with a total budget of 1.3 million dollars. So far, SEED labs have been used by over 250 institutes in 30 countries. In this workshop, we will select some of the most popular SEED labs, demonstrate how they work. We will then select three labs, and guide the participants to work on these labs in the workshop. Participants are expected to bring their own laptops. Participants who want to gain experiences with more SEED labs can apply to attend our free 3-day workshop in June.", "authors": [{"name": "Wenliang Du", "affiliation": "Syracuse University, Syracuse, NY, USA"}], "tags": ["hands-on exercises", "computer security education"]}, {"title": "Teaching Introductory Computer Science for a Diverse Student Body: Girls Who Code Style (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678291", "abstract": "At a time when less than twenty percent of AP Computer Science test-takers are female, Girls Who Code [GWC] has developed a unique teaching philosophy and effective curriculum to engage young women in CS early in their careers. This curriculum is built around cultivating exposure, interest, community and support, and technical skills. More than 500 young women have participated in GWC's Summer Immersion Programs, a seven-week, full-time computer science program for high school students. Ninety-five percent of participants said they are definitely or more likely to consider a major / minor in computer science after participation.\nThis workshop shares GWC's best practices with educators looking for new ways to effectively teach computer science. At the end of this workshop, participants will have concrete examples of how to effectively teach students who are underrepresented in computer science. Participants will also have the opportunity to practice teaching in the style and spirit of the GWC Summer Immersion Program, with the goal of engaging young women, and expanding this knowledge to reach minorities and other diverse populations.", "authors": [{"name": "Jeff Stern", "affiliation": "University of Michigan, Ann Arbor, MI, USA"}, {"name": "Kari Bancroft", "affiliation": "Girls Who Code, New York, NY, USA"}, {"name": "Emily Reid", "affiliation": "Girls Who Code, New York, NY, USA"}], "tags": ["underrepresented groups", "computing principles", "broadening participation", "women in computing", "cs education"]}, {"title": "Making Music with Computers: Creative Programming in Python (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678295", "abstract": "This is an introduction to creative software development and music making in Python. This material is intended for CS0/CS1 courses and for courses at the intersection of computing and the arts. The workshop will introduce music making activities for teaching traditional CS1 topics, GUIs, event-driven programming, and connecting to external devices (e.g., smartphones, digital pianos) via MIDI and OSC (Open Sound Control). Participants will be introduced to Jython Music (http://jythonMusic.org), a library of Python modules for creative programming and music making, and will be making their own music artifacts a few minutes later. Intended audience: Computer science educators interested in teaching creative programming and computational thinking for CS0, CS1, introductory courses in the intersection of computing and the arts, and courses intended to attract and retain new CS majors. Each participant will receive a copy of (1) handouts to be used during the workshop, (2) sample student assignments and projects, (3) API documentation, (4) all required software, and (5) numerous sample programs. Laptop required (with Java JDK 7 or higher). All other software will be provided. Headphones are recommended.", "authors": [{"name": "Andrew R. Brown", "affiliation": "Griffith University, Brisbane, Australia"}, {"name": "Tobias Kohn", "affiliation": "ETH Z\u00fcrich, Z\u00fcrich, Switzerland"}, {"name": "Bill Manaris", "affiliation": "College of Charleston, Charleston, SC, USA"}], "tags": ["computing and the arts.", "midi", "event-driven programming", "python", "cs0/cs1", "audio", "image manipulation", "osc (open sound control)", "graphical user interfaces", "creative programming", "music"]}, {"title": "Intellectual Property Law Basics for Computer Science Instructors (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678298", "abstract": "Increasingly the practice of computing involves legal issues. Patenting algorithms, domain name poaching, downloading music, and \"re-using\" HTML and graphics from web sites all raise questions of intellectual property (IP) law (which includes patents, copyrights, trade secrets, and trademarks). In the classroom, computer science educators often confront questions that have legal ramifications. The presenter, who is both a computer scientist and a lawyer, will introduce the basics of intellectual property law to give instructors a framework for recognizing the issues, answering students' questions, debunking the most egregious misconceptions about IP, and understanding generally how the law and computing interact. All CS educators are welcome; no computer is required.", "authors": [{"name": "David G. Kay", "affiliation": "University of California, Irvine, Irvine, CA, USA"}], "tags": ["intellectual property", "legal system", "teaching professionalism and ethics", "law"]}, {"title": "A Swift Introduction to Swift App Development (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678281", "abstract": "Swift is a new programming language recently introduced by Apple as a replacement for Objective-C. Considering that Objective-C ranks third on the Tiobe Index and is the progenitor of virtually all the 1.2 million apps in the App Store, Swift is likely to become the dominant language for creating both iOS and OS X apps. While Swift is aimed at application developers, the language and the tools that accompany it are also a boon for CS educators. Many of the features in Swift that aid commercial development, such as type-safety, clean syntax, closures, and named parameters, are also beneficial when learning programming. In addition to the language itself, Apple has introduced a remarkable feature called Playgrounds. As the name suggests, Playgrounds allow students to \"play\", that is, to interactively experiment, with code. They also provide a convenient visualization tool to graphically depict the impact of iteration, providing crucial insights for novice programmers. It is also possible to use Playgrounds to write tutorials or even entire textbooks with embedded, live code for students to experiment with. The workshop will introduce Swift through the use of Playgrounds. Participants will work through a variety of hands-on, active learning exercises to learn Swift's syntax and semantics. More importantly, they will experience a sample of active learning exercises that can be used in to introduce students to programming with Swift.", "authors": [{"name": "William M. Siever", "affiliation": "Western Illinois University, Macomb, IL, USA"}, {"name": "Michael P. Rogers", "affiliation": "Northwest Missouri State University, Maryville, MO, USA"}], "tags": ["objective-c", "swift", "introductory programming languages"]}, {"title": "Conducting Educational Research in the Computer Science Classroom: Choosing the Appropriate Research Design to Address your Research Questions (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678284", "abstract": "This workshop will provide CS educators with tools to conduct educational research. Primary objectives of this workshop are: (1) learn basic principles of research design; (2) learn about various types of research designs: qualitative vs. quantitative; experimental vs. quasi-experimental; case studies, survey; and (3) to practice designing research. This workshop will help participants make informed decisions when faced with limitations of educational research and collect empirical evidence about what works in the classroom. In addition, we will also discuss how to develop robust student outcome measures, such as surveys and tests. The workshop will be beneficial to participants who have not yet done all of these activities as well as those who have some background in educational research. Participants will be provided with material on research designs.", "authors": [{"name": "Aman Yadav", "affiliation": "Michigan State University, East Lansing, MI, USA"}], "tags": ["educational research", "research design"]}, {"title": "Using Pencil Code to Bridge the Gap between Visual and Text-Based Coding (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678293", "abstract": "This workshop introduces a new educational programming environment Pencil Code, which helps bridge the learning gap between visual programming and text-based coding. The free open-source online tool allows students to work with programs using either blocks or Coffeescript or Javascript text code. Students can switch between visual and text modes at any time.\nThe workshop will begin with a collaborative discussion of the opportunities, challenges, and differences presented when learning with block code and moving to text code. Then we will give a short presentation of how Pencil Code is used in classrooms, with some preliminary findings.\nThe main part of the workshop is a hands-on activity where participants gain experience with Pencil Code. Participants will use the tool with lessons in a curriculum framework, for teaching functions and interactivity using both text code and block code. Finally, there will be a discussion of best practices for teaching students in the transition, and an opportunity to create your own lessons using Pencil Code or other tools.\nAttendees will come away with an understanding the issues faced by students transitioning to text code for the first time, and they will gain practical experience with teaching lessons with Pencil Code. Participants will receive curriculum material appropriate for middle-school and high-school classrooms. The tool is open-source and free to use at http://pencilcode.net/.", "authors": [{"name": "Matthew Dawson", "affiliation": "Google, Moncks Corner, SC, USA"}, {"name": "Anthony Bau", "affiliation": "Phillips Exeter Academy, Exeter, NH, USA"}, {"name": "David Bau", "affiliation": "Google, Cambridge, MA, USA"}], "tags": ["coffeescript", "k-12", "visual programming", "pencil code", "curriculum", "computer science education", "javascript"]}, {"title": "Teaching Cryptography and Access Control Hands-On (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678296", "abstract": "Cryptography and access control are perhaps the two most fundamental mechanisms for data protection. This workshop presents hands-on methods for teaching cryptography and access control that leverage software tools developed with funding from the NSF. The workshop will proceed in two sessions. The first session will address teaching well-known ciphers (including Vigen\u00e8re, DES, AES, RSA, and SHA) and elliptic-curve cryptography using tools from the cryptoVisual software suite. These tools step students through an algorithm with either the system or the student computing the result of each step. The second session will address access control and the Multilevel Security, Role Based Access Control, and Domain Type Enforcement models using tools from the acVisual software suite. These tools support graphical policy development and analysis. The presenters have used this material in undergraduate courses in Cryptography and Computer Security. The tools have been used and evaluated favorably at multiple institutions. Participants will install and use the software on their own laptops running Linux, Windows, or MacOS. The acVisual software runs natively on Linux and MacOS and through a Linux virtual machine under Windows. The cryptoVisual software suite is available at http://www.cs.mtu.edu/~shene/NSF-4/. The acVisual software suite is available at http://acv.cs.mtu.edu.", "authors": [{"name": "Melissa Keranen", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Jean Mayo", "affiliation": "Michigan Technological University, Houghton, MI, USA"}, {"name": "Steve Carr", "affiliation": "Western Michigan University, Kalamazoo, MI, USA"}], "tags": ["access control", "security education", "cryptography"]}, {"title": "Bridging the Divide: Developing Culturally-Responsive Curriculum for K-12 Computer Science Education (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678297", "abstract": "In order to increase the computer science pipeline, emphasis must be placed on not only who is taught, but also how they are taught. Traditional computer science pedagogy has been unsuccessful in attracting, engaging, instructing, and retaining underrepresented students. Culturally-responsive pedagogy must be leveraged to successfully instruct a diverse range of computer science students. With the onset of technologies such as Facebook, iPods, Xbox, smart phones, mobile applications, and more, underrepresented students are already actively engaged in utilizing computer technology. However, in order to transition them from consumers to creators of this technology, culturally-responsive curriculum must teach fundamental concepts such as algorithms, problem solving, and abstraction in the context of issues that affect their daily lives. This workshop is designed to help K-16 computer science educators, professionals, and others understand and identify activities and assignments that infuse culturally-responsive content throughout. By the end of the workshop, participants will have a clear understanding of culturally-responsive pedagogy, its importance in computer science, and how to begin infusing more of it into lessons and activities. Laptops are recommended.", "authors": [{"name": "Ketly Jean-Pierre", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "Legand Burge", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "A. Nicki Washington", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "Qi'Anne Knox", "affiliation": "Howard University, Washington, DC, USA"}, {"name": "Marlon Mejias", "affiliation": "Howard University, Washington, DC, USA"}], "tags": ["computer science education", "culturally-responsive teaching", "cultural relevance"]}, {"title": "On Beyond Sudoku: Pencil Puzzles for Introductory Computer Science (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678299", "abstract": "Problem solving is a powerful teaching methodology for computer science -- giving students a real problem to solve instead of simply discussing abstract concepts can motivate them and give them a path to better understanding. However, it is challenging to create novel example problems that are meaningful and engaging yet can be easily understood by all students. In this workshop, we will introduce participants to the vibrant world of pencil puzzles and show how many different types of puzzles can be used for a variety of topics throughout the introductory CS curriculum. Pencil puzzles are those designed to be solved by hand with pencil and paper (such as Sudoku, but including dozens of new types!) that have clear rules and are made to be solved deductively. As such, they are explicitly designed to be easy to understand and intriguing and naturally inspire algorithmic thought. We will explore a variety of on-line resources, including our own curated repository, to see how assignments throughout the introductory CS curriculum can be easily kept fresh. Participants will also experience a sample problem-solving session and collaboratively develop a new assignment for a topic of the group's choice. This workshop is intended for all teachers (late secondary and post-secondary) of introductory programming courses. Laptops are recommended.", "authors": [{"name": "Zack Butler", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Ivona Bezakova", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}], "tags": ["problem solving", "introductory computing", "puzzles"]}, {"title": "How to Plan and Run Summer Computing Camps: Logistics (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678302", "abstract": "This workshop will provide details on how to plan and run non-residential computing summer camps for 4th -- 12th grade students. Georgia Tech has been offering computing summer camps since 2004. These camps are financially self-sustaining and effective. Items used in past camps include: CS Unplugged, LightBot, Scratch, Alice, LEGO robots (WeDo, NXT, EV3, and Tetrix), EarSketch, and App Inventor. Georgia Tech helped start or expand other computing camps at eleven other colleges and universities in Georgia from 2007 to 2010 as part of Georgia Computes!. This last year as part of the Expanding Computing Education Pathways (ECEP) NSF grant we have also helped institutions start or expand summer computing camps in South Carolina, Massachusetts, and California.\nThe workshop will distribute a link to forms, a timeline, sample agendas, sample flyers, budget plans, a planning checklist, suggested projects, surveys, pre and post-tests, evaluation results, lessons learned, and more. Laptops Recommended", "authors": [{"name": "Barbara J. Ericson", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Krishnendu Roy", "affiliation": "Valdosta State University, Valdosta, GA, USA"}, {"name": "Kristine S. Nagel", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Nannette P. Napier", "affiliation": "Georgia Gwinnett College, Lawrenceville, GA, USA"}, {"name": "Marguerite A. Doman", "affiliation": "Winthrop University, Rock Hill, SC, USA"}], "tags": ["underrepresented minorities", "k-12", "diversity", "summer camps"]}, {"title": "Small or Liberal Arts Colleges Adapting to CS2013: Making It Work (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678303", "abstract": "Roughly once per decade, the ACM and IEEE-Computer Society form a joint task force to produce curricular guidelines for undergraduate computer science programs. The latest guidelines document, Computer Science Curricula 2013 (CS2013), was released in December 2013. CS faculty at many institutions are interested in understanding CS2013, evaluating their curricula against it, and adopting some or all of the recommendations. This task is non-trivial at any institution, but it can be particularly challenging at small or liberal arts institutions. For instance, small schools with few faculty are limited in the number of courses they can offer, and many liberal arts colleges place limits on the number of courses that can be required for a major. How might a department with limited resources trade off covering the core while still providing electives to students? A meta-issue involves mapping CS2013 at all: Given the demands on a small department, are there ways to improve and update a curriculum without having to go through a complete CS2013 mapping? In this workshop we will: (1) give a brief overview of CS2013, (2) describe experiences mapping individual courses or an entire curriculum to CS2013, (4) split participants into working groups for course or curricular mapping based on starting points and goals, (4) re-group to share lessons learned from the mapping experience. Laptop Strongly Recommended.", "authors": [{"name": "David Reed", "affiliation": "Creighton University, Omaha, NE, USA"}, {"name": "Michael Jipping", "affiliation": "Hope College, Holland, MI, USA"}, {"name": "Rhys Price Jones", "affiliation": "Wellesley College, Wellesley, MA, USA"}, {"name": "Brad Richards", "affiliation": "University of Puget Sound, Tacoma, WA, USA"}, {"name": "Richard Wicentowski", "affiliation": "Swarthmore College, Swarthmore, PA, USA"}, {"name": "Andrea Danyluk", "affiliation": "Williams College, Williamstown, MA, USA"}], "tags": ["curriculum planning", "cs2013", "curriculum review"]}, {"title": "Steal This Courseware: FOSS, Github, Python, and OpenShift (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678305", "abstract": "This workshop introduces participants to the pedagogy and practice of using Free/Open Source Software development practices into their curriculum, and then guides them through deployment of a turnkey courseware framework to be used for their own courses. The framework supports automatic blog checking, automatically generated student profile pages, Gravatar integration for profile pictures, Travis-CI continuous Integration tests, and repository changes reported via Github webhooks to IRC. Participants will learn how to use Github in the Classroom, the basics of Flask, a python web framework, and how to deploy their courseware to Red Hat's OpenShift Cloud, a free Platform-as-a-Service to host courseware and/or other web sites.", "authors": [{"name": "Remy DeCausemaker", "affiliation": "Rochester Institute of Technology, Rochester, NY, USA"}, {"name": "Stephen Jacobs", "affiliation": "Rochester Institute of Technology, Rochester , NY, USA"}], "tags": ["free content", "python", "openshift", "flask", "github", "open source software", "web blocks", "free software"]}, {"title": "The Internet, Creativity and Global Impact: Curriculum Modules for the New AP Computer Science Principles Course (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678306", "abstract": "This workshop focuses on content in two curriculum modules for AP Computer Science Principles (CSP) developed by the College Board. They highlight instructional approaches for teaching concepts about 1) the Internet and 2) the interplay between creative aspects of computing and impact of computing on society. The Internet module activities allow students to construct their own solutions to problems similar to some that the builders of the Internet faced. The topics in the Creativity and Global Impact module were chosen because they have rich potential for increasing interest with students, especially those from underrepresented demographics, and because they present instructional challenges for instructors new to AP CSP. Participants will learn detailed concepts addressed in the AP CSP course and will receive classroom materials from in each of the curriculum modules. These modules serve as exemplary resources for teachers.", "authors": [{"name": "Lien Diaz", "affiliation": "College Board, Duluth, GA, USA"}, {"name": "Andrew Kuemmel", "affiliation": "Madison West High School, Madison, WI, USA"}, {"name": "Richard Kick", "affiliation": "Newbury Park High School, Newbury Park, CA, USA"}], "tags": ["active learning", "broadening participation", "computing applications", "high school computer science instruction", "teaching and learning"]}, {"title": "Augmenting introductory Computer Science Classes with GameMaker and Mobile Apps (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678307", "abstract": "Students often take computing classes because they are eager to create games, to learn to create meaningful and useful software, or both. Connecting computing to real, cutting-edge applications has been shown to increase engagement of women and minorities. The new CS Principles curriculum, a pilot Advanced Placement course, seeks to broaden the participation in computing to a larger and more diverse audience. This curriculum emphasizes that computing is a creative activity where people work together to solve relevant problems. In this workshop, we introduce free software and curricula to enable novice high school and college students in a first computing course to learn basic game and mobile phone development. We discuss how these activities facilitate teaching high school and non-major (CS0) course topics, but they can also be used to illustrate more advanced topics. Participants will learn GameMaker and mobile phone programming using AppInventor, and/or Touch Develop. These tools allow students to create and have fun with computing while teaching object-oriented and event-driven programming and game architectures. We will provide links to curricular modules for the CS Principles: Beauty and Joy of Computing course, as well as links to the GameMaker, AppInventor, and Touch Develop platforms and tutorials. Participants must bring a network-connected laptop with a modern browser, and the latest version of Java, and may optionally bring an Android, Windows, or iPhone.", "authors": [{"name": "Tiffany Barnes", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Barry Peddycord", "affiliation": "NC State University, Raleigh, NC, USA"}, {"name": "Veronica Catete", "affiliation": "NC State University, Raleigh, NC, USA"}], "tags": ["introductory course", "mobile applications", "broadening participation", "game development"]}, {"title": "Infusing Cooperative Learning into Early Computer Science Courses to Support Improved Engagement (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678310", "abstract": "Many new curricula and tools have been developed recently to promote the exciting opportunities available in computer science. However, curriculum and supporting tools alone do not drive engagement -- the most interesting and innovative curriculum can still be taught in a disengaged manner, leading to lost opportunities for broadening the appeal and interest in computing across a diverse student population. The learning science literature on Cooperative Learning (CL) has been shown to increase class participation and student learning, while also promoting diversity in a manner that supports the differentiated instruction needed to engage students who have mixed abilities. This workshop will demonstrate how the best practices of CL can be applied in early CS courses (e.g., CS Principles, AP CS A, or CS1). Workshop participants will first be introduced to the CL structures that have been used in many different disciplines across multiple age/grade levels. These structures will then be used to demonstrate specific application toward computer science concepts. The workshop itself will be taught in a cooperative learning style so that participants can understand the dynamics and structure of a CL classroom. This workshop is for two categories of educations: 1) K-12 teachers who have experience with either AP CS A or CS Principles, or 2) university faculty who teach CS1 or other early courses.", "authors": [{"name": "Jeff Gray", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}, {"name": "Fran Trees", "affiliation": "Rutgers University, Piscataway, NJ, USA"}, {"name": "Owen Astrachan", "affiliation": "Duke University, Durham, NC, USA"}], "tags": ["cooperative learning", "student engagement", "broadening participation"]}, {"title": "Computer Science Principles With EarSketch (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678282", "abstract": "EarSketch (http://earsketch.gatech.edu) is an integrated curriculum, software toolset, audio loop library, and social sharing site that teaches computing principles through digital music composition and remixing. Attendees will learn to code in Python and/or JavaScript to place audio clips, create rhythms, and add and control effects within a multi-track digital audio workstation (DAW) environment while learning computing concepts such as variables, iteration, conditionals, strings, lists, functions, and recursion. Participants write code to make music, with a focus on popular genres such as hip hop. The agenda outlines the pedagogy of connecting musical expression to computation to broaden participation and engagement in computing; the underlying concept of thickly authentic STEAM that drives this approach; the alignment of the curriculum and learning environment with CS Principles; and basic musical concepts underlying EarSketch. The intended audience for this workshop is secondary and early post secondary CS educators. The course is of particular relevance to CS Principles teachers but also applicable to any introductory programming or computing course. No prior musical knowledge or experience is expected and no prior programming experience with Python or JavaScript is required.", "authors": [{"name": "Jason Freeman", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Regis Verdin", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}, {"name": "Brian Magerko", "affiliation": "Georgia Institute of Technology, Atlanta, GA, USA"}], "tags": ["music composition", "steam.", "broadening participation", "education", "music production", "remixing", "computer science principles"]}, {"title": "Teaching Computing with Processing, the Bridge Between High School and College (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678286", "abstract": "This workshop showcases an engaging way to attract students who typically avoid a traditional introductory Computer Science course (CS1), with fully developed, classroom-tested course materials. This workshop has been successful at SIGCSE and other venues in the past. This year we highlight our successful approach in pre-AP courses, as well as continued refinement of curriculum for college-level CS1. Our courses focus on essential CS1 principles, but show applications of these principles with contemporary, diverse examples of computing in a modern context, including advanced areas typically not accessible in CS1 such as: physics-based simulations, fractals and L-systems, image processing, emergent systems, cellular automata and data visualization. Students produce dynamic visual work using the programming language Processing, which is fully compatible with Java. We aim to inspire the Computer Science community to use innovative and creative approaches to attract a broader audience to their classes.\nParticipants will be introduced to the Processing language as well as its lightweight IDE through a series of on-the-fly coding examples. Additionally, course materials and handouts detailing the software, curricula and teaching resources will be given to the participants. Instructors of all levels are welcome; high school computer science teachers are particularly encouraged to attend. All participants will need to bring their own laptops.", "authors": [{"name": "Aaron Cadle", "affiliation": "James Martin High School, Arlington, TX, USA"}, {"name": "Darby Thompson", "affiliation": "Sidwell Friends School, Washington, DC, DC, USA"}, {"name": "Ursula Wolz", "affiliation": "RiverSound Solutions, Montclair, NJ, USA"}, {"name": "Ira Greenberg", "affiliation": "Southern Methodist University, Dallas, TX, USA"}, {"name": "Deepak Kumar", "affiliation": "Bryn Mawr College, Bryn Mawr, PA, USA"}, {"name": "Dianna Xu", "affiliation": "Bryn Mawr College, Bryn Mawr, PA, USA"}], "tags": ["cs1", "high school", "curriculum", "graphics", "ap"]}, {"title": "Supporting New Adopters to Peer Instruction in Computing (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678287", "abstract": "Recent work in computing has converged on a collection of complementary findings suggesting the value of the Peer Instruction (PI) pedagogy. Compared to lecture, PI has been shown to decrease fail rates, increase final exam grades, and increase engagement and enjoyment. In PI, students work together to exchange perspectives and use clickers to answer challenging conceptual questions in the presence of a knowledgeable instructor.\nIn our efforts to mentor potential PI adopters, we note difficulties bootstrapping PI uptake at new institutions and new departments. In this workshop, our main goal is to support potential adopters in the process of shifting from lectures to PI. In recent months, we have contributed materials for many freely-available PI courses, and led a successful 3-day NSF-funded PI workshop. We will work with participants and their existing lecture-based resources to begin considering the ways that PI might be effective in new contexts.\nInstructors interested in increasing engagement in any CS course may attend. Participants are encouraged to bring current lecture materials. Laptop optional.", "authors": [{"name": "Leo Porter", "affiliation": "University of California San Diego, La Jolla, CA, USA"}, {"name": "John Glick", "affiliation": "University of San Diego, San Diego, CA, USA"}, {"name": "Joe Hummel", "affiliation": "University of Illinois at Chicago, Chicago, IL, USA"}, {"name": "Jaime Spacco", "affiliation": "Knox College, Galesburg, IL, USA"}, {"name": "Quintin Cutts", "affiliation": "University of Glasgow, Glasgow, Scotland Uk"}, {"name": "Daniel Zingaro", "affiliation": "University of Toronto Mississauga, Toronto, ON, Canada"}, {"name": "Cynthia Lee", "affiliation": "Stanford University, Stanford, CA, USA"}], "tags": ["adoption", "clickers", "peer instruction"]}, {"title": "Reviewing NSF Proposals: Learn about Effective Proposal Writing via the Review Process (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678288", "abstract": "This workshop focuses on the NSF proposal review process. Via close examination of the review process, participants gain an understanding of how to write good reviews and how to improve their own proposal writing. The workshop covers the following topic areas: the proposal review process from submission of a proposal to award or decline; elements of a good review; NSF merit criteria (intellectual merit and broader impacts); elements of a good proposal; and how to volunteer to review proposals.\nThe workshop uses a structured guided-interactive methodology to lead participants through each topic by introducing related issues, engaging participants in group exercises designed to explore and share their understanding of the issues, and then providing some \"expert\" opinion on these issues. Good and bad examples and a Top Ten List of Do's and Don'ts will be provided.", "authors": [{"name": "Michael Erlinger", "affiliation": "National Science Foundation, Arlington, VA, USA"}, {"name": "Paul Tymann", "affiliation": "National Science Foundation, Arlington, VA, USA"}], "tags": ["grant writing", "proposal review"]}, {"title": "Creating Stimulating, Relevant, and Manageable Introductory Computer Science Projects that Utilize Real-Time, Large, Web-Based Datasets (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678292", "abstract": "This workshop introduces participants to CORGIS, a technology developed under the auspices of an NSF-funded project at Virginia Tech. The CORGIS Datasets Project comprises a software architecture framework and carefully engineered client libraries through which students can access either large datasets or those generated by real-time web services from domains, including weather reports, stocks, earthquakes, and news updates. The CORGIS technical scaffolding gradually introduces students to some of the most vexing complexities of distributed computing. To support the diverse needs of computing educators when teaching introductory CS classes, each CORGIS dataset is available in Python, Java, and Racket, with compatibility on key platforms. The dataset libraries are available through an online curated gallery, designed to be easily adapted to instructors' specific academic needs, including the ability to rapidly prototype new CORGIS libraries. With CORGIS, computing educators can introduce important big data or real-time distributed computing concepts without overwhelming students with the low-level details that working with such data typically requires.\nThis workshop introduces CORGIS via a hands-on approach, familiarizing participants with the core functionality of our architectural framework and client libraries. We will proceed in three parts: (1) present CORGIS by working through a case study of creating a programming project in a typical CS 2 course; (2) demonstrate how the framework can be used to rapidly prototype a new library of the participants' choice; and (3) critically discuss the technology in small and large groups. This presentation improves on our offering from SIGCSE 2014. Further information is at: http://think.cs.vt.edu/corgis.", "authors": [{"name": "Austin Cory Bart", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Eli Tilevich", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}, {"name": "Clifford A. Shaffer", "affiliation": "Virginia Tech, Blacksburg, VA, USA"}], "tags": ["projects", "introductory courses", "distributed computing"]}, {"title": "Building Code Magnet Labs for Tablets and Other Devices (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678294", "abstract": "Code magnet labs are 5-10 minute activities where students are asked to construct a method, function or rule to complete a specific task. The programming languages Java, C/C++, Python and Prolog are supported. In a code magnet lab the student is presented with a sequence of possible code magnets that can be arranged using drag-and-drop to create the desired method. Magnets for control statements can nest other magnets, including nested control statements. The completed method is compiled and subject to unit testing. Test results guide students towards a correct solution; multiple submissions are allowed. Since there is no keyboard entry when using code magnet labs, the labs can be completed using laptops, desktops, tablets and other mobile devices. This workshop is a shorter version of the half-day workshop presented with support from three NSF grants. Participants will experience using existing labs and learn to build their own code magnet lab for Java, Python, C or Prolog (participant's choice). Significant stipends averaging about $1000 will be available for after-workshop activities where the participant develops and tests multiple code magnet labs for his/her own courses in the 2014-2015 academic year. All participants will need a laptop to complete lab activities; teams will only require one laptop per team.", "authors": [{"name": "Rahman Tashakkori", "affiliation": "Appalachian State University, Boone, NC, USA"}, {"name": "Ahmad Esmaili", "affiliation": "Stony Brook University, Stony Brook, NY, USA"}, {"name": "Barry L. Kurtz", "affiliation": "Appalachian State University, Boone, NC, USA"}], "tags": ["code magnets", "active learning", "tablets"]}, {"title": "Introducing Secure Coding in CS0, CS1, and CS2. (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678300", "abstract": "The CS 2013 curriculum includes Information Assurance and Security as a pervasive knowledge area. However, introducing security in lower level courses is challenging because of lack of appropriate teaching resources and training. This workshop will provide a well-tested strategy for introducing secure coding concepts in CS0, CS1, and CS2. We will introduce attendees to secure coding through hands-on exercises, and provide self-contained, lab-based modules designed to be injected into CS0-CS2 with minimal impact on the course (www.towson.edu/securityinjections). Participants will be encouraged to bring in their own syllabus and labs to modify to include secure coding concepts. The first 15 participants will be reimbursed for the workshop cost on attendance. Laptop recommended.", "authors": [{"name": "Blair Taylor", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Siddharth Kaza", "affiliation": "Towson University, Towson, MD, USA"}, {"name": "Elizabeth K. Hawthorne", "affiliation": "Union County College, Cranford, NJ, USA"}], "tags": ["cs0", "cs1", "secure coding", "security injections", "cs2"]}, {"title": "Puzzle-Based Learning: Introducing Creative Thinking and Problem Solving for Computer Science and Engineering (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678301", "abstract": "Puzzle-based learning (PBL) is an emerging model of teaching critical thinking and problem solving used in Universities and schools. Today's market place needs skilled graduates capable of solving real problems of innovation in a changing environment. A learning goal of PBL is to distill domain independent transferable heuristics for tackling problems. While solving puzzles is innately fun, companies also use puzzles to assess the creative problem solving skills of potential employees. In this interactive workshop we will examine a range of puzzles and games. What general problem solving strategies can we learn from the way we solve these examples? Participants will emerge with the needed pedagogical foundation to offer a full course on PBL or to include it as part of another course.", "authors": [{"name": "Ed Meyer", "affiliation": "Baldwin Wallace University, Berea, OH, USA"}, {"name": "Zbigniew Michalewicz", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Nickolas Falkner", "affiliation": "University of Adelaide, Adelaide, Australia"}, {"name": "Raja Sooriamurthi", "affiliation": "Carnegie Mellon University, Pittsburgh, PA, USA"}], "tags": ["problem solving", "critical thinking", "puzzle-based learning"]}, {"title": "KELP CS and LaPlaya: A Computational Thinking Curriculum and Development Environment for 4th - 6th Grade (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678304", "abstract": "This workshop introduces our elementary school programming curriculum, KELP-CS, and the corresponding programming environment LaPlaya. KELP-CS (Kids Engaged in Learning Programming) is an innovative, modular computational thinking curriculum for 4th-6th grade students. Off-computer activities connect computer science concepts to students' every day experiences. On-computer activities in LaPlaya develop students' computational thinking and programming skills. Finally, an engineering design project allows students to apply these new skills through an open-ended, creative project (e.g. digital storytelling in Module 1, and virtual game in Module 2). LaPlaya is a modified Scratch programming environment tailored to the developmental needs of 4th-6th grade students. In this workshop, we begin by introducing the KELP-CS curriculum; LaPlaya, the development environment used in the on-computer activities; and the resources for teachers embedded in both. Workshop participants will do sample on- and off- computer activities from Module 1 (4th grade) and discuss tips and strategies for teaching computational thinking with this age group. For the second part of the workshop, we provide additional background for participants interested in creating their own curriculum with LaPlaya. This includes how to create projects and their analysis.", "authors": [{"name": "Hilary A. Dwyer", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}, {"name": "Diana Franklin", "affiliation": "UC Santa Barbara, Santa Barbara, CA, USA"}], "tags": ["novice programming environments", "elementary school", "computer science education"]}, {"title": "Teaching Privacy: What Every Student Needs to Know (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678308", "abstract": "Although frequent stories in the popular media have raised awareness about online privacy, most young people do not have a very good handle on what the specific issues are, nor the practical steps they can take to manage them. Teachers recognize that all their students' from future engineers to those totally bored by science need a realistic understanding of how online privacy works, so they can protect themselves online. In fact, the latest CS curricular recommendations include privacy but there is no comprehensive set of field-tested teaching materials. To address this, we are developing TROPE (Teachers' Resources for Online Privacy Education), a set of classroom-ready teaching materials (teachingprivacy.org). TROPE will provide educators with lesson modules, interactive demonstrations, and a teachers' guide, so they can readily integrate privacy into high school and college classes. Our goal for this workshop is twofold. First, we will introduce educators to TROPE and provide guidance on how they can cover privacy-related topics in their classrooms without being subject-matter experts. Second, we will solicit feedback and on-the-ground stories; by gaining a better understanding of specific problems faced by educators and students, we can increase TROPE's utility to teachers. We will provide teachers with up-to-date technical information about online privacy, including relevant highlights from our research; hands-on activities illustrating principles of online privacy; and an overview of the materials we are creating for TROPE. This will be an interactive workshop, driven by participants' questions, experiences, and interests. For CS educators at all levels; laptop or tablet recommended.", "authors": [{"name": "Serge Egelman", "affiliation": "International Computer Science Institute, Berkeley, CA, USA"}, {"name": "Daniel Garcia", "affiliation": "University of California, Berkeley, Berkeley, CA, USA"}, {"name": "Gerald Friedland", "affiliation": "International Computer Science Institute, Berkeley, CA, USA"}], "tags": ["teachers", "undergraduate", "computer science", "high school", "privacy education"]}, {"title": "Decoding CS Principles: A Curriculum from Code.org (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2678309", "abstract": "Code.org is developing a complete curriculum and professional development program for the new (AP) Computer Science Principles course. In this hands-on workshop, modeled after the professional development program, participants will get access to, and interact with the new curricular materials for this course: daily lesson plans, instructional guides, assessments, and custom-built software tools woven throughout. Code.org's CS Principles curriculum engages students by having them invent and create their own solutions to some of the great problems in computing upon which many CS principles are based. For example, the course begins by asking students to invent their own bit-sending device to send a single bit of information from one place to another. The curriculum employs a variety of instructional strategies, plugged and unplugged, to build a classroom experience that is engaging and emphasizes accessibility for both the students and instructors. The curriculum also emphasizes student preparation for the AP Performance Tasks by including model tasks at the conclusion of each unit of study. Participants will experience a snapshot of the professional development program, engaging with lessons from the curriculum as they would in a realistic classroom context (i.e. diving into the materials and planning to teach the lesson rather than just talking about it). Participants will hear from high school teachers who have taught the lessons in their classrooms during the 2014-15 field-testing year. Code.org's partner schools will pilot the course in the 2015-16 school year, but the course and its materials will be open and free for all to use.", "authors": [{"name": "Baker Franke", "affiliation": "Code.org, Chicago, IL, USA"}, {"name": "Brook Osborne", "affiliation": "Code.org, Durham, NC, USA"}], "tags": ["k-12", "curriculum", "ap", "cs principles"]}, {"title": "Improvement of Robot Mapping and Localization Using Combined Sensory Data (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693623", "abstract": "Robotic mapping and localization are two large areas in robotics research that focus on how robots know and navigate within an environment. The current methods used to complete these tasks are not extremely accurate due to errors that are compounded as the robot moves. Since robots are often used in situations where precise navigation is a necessity, there is a strong motivation for the mapping and localization processes to be as accurate as possible.\nThis project hopes to reduce the accumulated error which occurs during the mapping and localization processes through the integration of a Kinect sensor, which provides both visual and depth data about objects in front of a mobile robot and a sonar sensor which provides depth information about objects on the sides of the robot.\nThe Kinect's images and depth information will be used to form an occupancy grid map of the environment, while the sonar data will track the walls as the robot moves throughout the environment in order to assist in keeping track of both position and orientation of the robot. These two sensors will allow the robot to reduce the errors accumulated during localization and navigation within the map being created and in navigating the subsequently completed map.\nWhen the occupancy grid map is completed, the cells in it will be combined into a topological map, which will hold information about the rooms such as doorway locations. The topological map will then be used as the robot plans a path to its goal.", "authors": [{"name": "Deanna Biesan", "affiliation": "Baldwin Wallace University, Berea, OH, USA"}], "tags": ["mapping", "localization", "robotics"]}, {"title": "Speed Estimation Using Computer Vision (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693624", "abstract": "With recent advancements in smartphone digital camera technology, the opportunity to integrate computer vision into daily activities has become possible. A unique application of computer vision is ESPN's use of K-Zone during Major League Baseball broadcasts, which uses a combination of three cameras and multiple computers running sophisticated algorithms, to track a thrown baseball to within 2/5ths of an inch. While the sophistication of the K-Zone hardware and software allows for a high degree of accuracy, there is the potential for obtaining similar results using only a smartphone. The Mobile Video Velocity Estimation (MoVVE) project investigated the application of computer vision in the development of a speed-tracking app on a smartphone. This presentation will describe the design of the MoVVE software which uses OpenCV computer vision library functions to track the velocity and location of objects such as a thrown baseball using video obtained from a mobile digital camera. MoVVE was shown to successfully detect and track the baseball with a success rate greater than 90%. Baseball velocity estimates obtained with MoVVE were compared to those measured using a professional grade radar gun. For a test population of 112 pitches, 84% of the program's estimated velocities agreed to within 10% of the radar gun measurement, and 43% agreed to within 5%. Test pitch velocities varied from 30 mph to 60 mph with the program showing equal accuracy throughout the full range.", "authors": [{"name": "Matthew Bowen", "affiliation": "University of Alabama, Tuscaloosa, AL, USA"}], "tags": ["object recognition", "object tracking", "computer vision", "speed estimation"]}, {"title": "Developing a Robotics Education Platform using Android Based Cellbots (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693625", "abstract": "Robotics education is one of the most important subjects now and for the foreseeable future. Our project focuses on designing a robotics education platform, which includes extensive libraries of code that allows any student from high school to college level to study robotics. We also have significantly addressed two of the major problems in robotics, usability and affordability. Using a Cellbot, a robot that uses an Arduino microcontroller and an Android smartphone, enables us to quickly and affordably add new sensors or features to the entire robotics system. By combining a Cellbot with the advance software we developed, we have designed a system, which is easy to learn and allows the robot to perform numerous high performance tasks. As students advance in their programming abilities more complex algorithms and sensors can be easily added to the system. Effectively making the robot \"grow\" with the students.", "authors": [{"name": "Donald D. Buhl-Brown", "affiliation": "Austin Peay State University, Clarksville, TN, USA"}], "tags": ["android", "education", "mobile development", "arduino", "computer vision", "robotics"]}, {"title": "ACEit!: Assist Children in English-language (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693626", "abstract": "Reading is an integral part of our lives. Most of us learned to read while we were young and never thought about how we learned to read. \"ACEit!\" (Assist Children in English-language) is an Android app developed to facilitate children in learning to read English. The app consists of a subset of the Dolch words (a set of 220 sight words that are proven to improve reading skill when they are learned) and uses a fading image strategy to support children in the early stages of learning to read and/or in special education. It gradually transitions the user from depending on pictures clues to recognize words, to recognizing words by themselves. This app is geared towards visual learners and provides them a more succinct yet entertaining way to learn using mobile devices.", "authors": [{"name": "Jae Hyun Choe", "affiliation": "Kalamazoo College, Kalamazoo, MI, USA"}], "tags": ["sight words", "mobile application", "dolch list", "fading", "game"]}, {"title": "Computational Creativity in the Culinary Arts (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693627", "abstract": "The goal of our research project was to create an artificial chef program that produces novel salad recipes with limited human assistance. Our program was designed in two steps: first, we constructed a statistical model to rank recipes. Then, we experimented with various search algorithms to explore the salad recipe space for novel ingredient combinations. Surprisingly, we discovered that the top ranked recipes from a randomly generated population, as determined by our model, were already of high quality. To validate the quality of our automatically generated salads, we conducted a blind taste test with three computer designed and three human designed salads. The best performing computer salad was competitive with the human salads, but received a lower rating.", "authors": [{"name": "Erol Cromwell", "affiliation": "Davidson College, Davidson, NC, USA"}], "tags": ["computational creativity", "salad recipes", "artificial chef", "search algorithm", "artificial intelligence"]}, {"title": "Data Mining: Building Better Bug Messages (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693628", "abstract": "An important and challenging part of the computer science curriculum is learning to program. A source of aggravation when learning this skill is finding syntactic mistakes in the code commonly referred to as bugs. This learning process is frustrating for new programmers because bug messages given by the compiler are incomprehensible and dominantly occupied by jargon. A group in the UK has started a data logging project called Blackbox to record novice programmers' source code and the related bug messages. In this project, we intend to build better bug messages through the utilization of Blackbox's logged data to anticipate student errors. In the second part of the project, we will test these improved bug messages in a plugin for BlueJ, a popular IDE for instructors to use in CS1 classes.", "authors": [{"name": "Mindy DeWaal", "affiliation": "Southern Utah University, Cedar City, UT, USA"}], "tags": ["data mining", "bluej", "bug messages", "blackbox"]}, {"title": "Using CABECTPortal as a Case Study to Extend the Capabilities of Penetration Testing Tools (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693629", "abstract": "This project presents an approach to web application security that modifies general penetration testing tools to test for advanced vulnerabilities. As a proof of concept, the ZAP (Zed Attack Proxy) security tool was extended with functionality to find vulnerabilities such as server-side security misconfiguration, to test CABECTPortal (a website housing collaborations between multiple disciplines). By combining the general vulnerability checks built into tools like ZAP and the server-side maintenance checks that are normally conducted manually by system administrators and programmers, this project provides a more tailored approach to security testing that can be applied to any web application, making testing easier and more precise.", "authors": [{"name": "Derek M. Duchesne", "affiliation": "The College of New Jersey, Ewing, USA"}], "tags": ["web application security", "penetration testing", "fuzzing", "vulnerabilities"]}, {"title": "Focused Mining of University Course Descriptions from Highly Variable Sources (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693630", "abstract": "Finding topically relevant content from disparate sources on the Web requires robust techniques due to the variability of sites. A focused web crawler is a type of crawler that attempts to make predictions about page relevance and traverse the web efficiently. In this work, we attempt to design a novel system of focused crawling tailored to identifying and extracting semantically similar topical information from disparate but known seed domains with highly variable structure that do not reference each other. We first extract rich predictive features from web pages. We then utilize Weakly-Supervised Machine Learning techniques to predict the link distance of current pages to target pages by employing two separate Random Forest classifiers that rank the current page and potential relevance gain of hyper-links. We use these page representations and rankings to efficiently tunnel through irrelevant pages and reach target pages with more optimal path traversals.", "authors": [{"name": "Thomas D. Effland", "affiliation": "State University of New York at Buffalo, Buffalo, NY, USA"}], "tags": ["relevance prediction", "information extraction", "focused web traversal", "weakly-supervised learning", "hyper-text classification"]}, {"title": "Real Time Occupancy Notification: A Comparison Between Passive Infrared and iBeacon Implementations (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693631", "abstract": "iBeacon technology has the potential to evolve occupancy detection over the traditional passive infrared motion sensor approach due to portability, relatively low cost, and capabilities beyond motion detection alone. This project implements study room occupancy detection in the TCNJ Library using a Raspberry Pi with a PIR sensor and an Estimote Beacon. The scalability of each approach is directly compared by cost, ease of setup and maintenance, and accuracy. Prototype occupancy detection systems that are set up in study room environments provide end-users with a listing of available rooms in real-time through new functionality in the TCNJ Library iOS app. Using iBeacon sensors can bring extra functionality to existing systems and new environments where portability is essential.", "authors": [{"name": "Brandon Gottlob", "affiliation": "The College of New Jersey, Ewing, NJ, USA"}], "tags": ["occupancy detection", "passive infrared", "sensors", "ibeacon"]}, {"title": "Automation of Layer 7 DDoS Attacks and Post Forensic Analysis of Server Logs", "link": "https://dl.acm.org/doi/10.1145/2676723.2693632", "abstract": "Application layer (L7) Distributed Denial of Service attacks are becoming more common and an emerging threat to legitimate sites. The goal of these attacks is to prevent legitimate users from accessing a website. Due to the nature of the attacks, the low rate, and the sophisticated imitation of user behavior from automated bots, it is difficult to diagnose these on time. There is an evolving 'industry' of blackmailing and using these attacks for illegal profit [1]. Even though L7 DDoS attacks are a serious threat, studying and experimenting with them is challenging. Organizations do not share server logs because of privacy concerns. Furthermore, implementing these attacks requires instrumentation and real testbeds in order to produce realistic attacks for analysis. Therefore, it is difficult to evaluate mitigation and detection techniques. Our contribution is twofold. First, we have developed a set of testbeds on the GENI (Global Environment for Network Infrastructure) cloud infrastructure [2] to facilitate research and development of detection and mitigation techniques of L7 DDoS attacks. Second, we have used a library of attacks to perform post forensic analysis and classify L7 DDoS attacks based on their individual characteristics. Our work automates and simplifies log generation of L7 DDoS attacks for research and experimentation, as well as provides criteria to detect abnormal requests using a library of attacks.", "authors": [{"name": "Barry Hamilton", "affiliation": "Jacksonville University, Jacksonville, FL, USA"}], "tags": ["application layer ddos", "layer 7 denial of service", "ddos"]}, {"title": "NeuroSoccer: Neural Network Q-Learning (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693633", "abstract": "Q-Learning is a type of reinforcement learning which learns how to optimize an agent's choice of actions in a given environment based on experience. Typically, Q-Learning is implemented using a lookup table indexed by state/action tuples. For many applications, this approach can be difficult or impossible, as their state space is too large or cannot accurately be captured in a table. A neural network can act as a function approximator for the Q-Learning Table. This reduces learning time and allows for generalization on unvisited states The neural network can be trained using the Back propagation algorithm with the state/action tuple as input and the output of the update rule as the new target value. The weights of the network are updated to produce the correct output value for inputs in the training set. We have implemented this technique in a 2-D simulation of soccer, where agents learn how to maneuver the ball in order to score a goal.", "authors": [{"name": "Andrew Keenan", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["q-learning", "neural network", "machine learning"]}, {"title": "Parallel Author Verification of E-mail (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693634", "abstract": "Cyber-crime is becoming alarmingly common through the use of anonymous e-mails. Author attribution helps digital forensics investigators filter through a large set of possible authors and focus traditional investigative techniques on the most probable culprits. A recent promising technique is to construct a write-print for each known author, and compare it to the write-print extracted from the anonymous message(s). A write-print is a unique digital fingerprint created by mining frequent patterns from a particular author's writing style. However, the process for generating a write-print is very slow, making it a poor choice for author attribution situations of a time-sensitive nature such as anonymous threats of attack, exposure, or ongoing harassment.\nWe develop the Parallel Author Verification of E-mail (PAVE) algorithm for determining author write-prints. Our goal is to create a parallel approach that enables the analysis of large collections of e-mail. PAVE employs the Phoenix++ MapReduce framework hybridized with MPI, allowing us to exploit multiple nodes and cores. Our approach is significant because it drastically reduces the run-time complexity required to produce write-prints, and may expedite the process of author identification in time-sensitive situations. Our preliminary results suggest that our algorithm will enable the fast analysis of larger e-mail datasets and may be a potential asset to future investigations.", "authors": [{"name": "Suzanne J. Matthews", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Leo St. Amour", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Andreas Kellas", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Alexander Molnar", "affiliation": "United States Military Academy, West Point, NY, USA"}, {"name": "Frederick Ulrich", "affiliation": "United States Military Academy, West Point, NY, USA"}], "tags": ["pave", "mapreduce", "write-print", "author attribution"]}, {"title": "Development of an Offset Detection Task for MIREX 2015 (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693635", "abstract": "Analysis of musical audio is of interest for a variety of tasks within the field of music information retrieval (MIR). One component of MIR is audio event detection, of which onset detection is one component. Audio offset detection is a complementary task to audio onset detection, but this task has received scant attention in the literature. This research will develop an offset detection task that can be included in the Music Information Retrieval Evaluation Exchange (MIREX) 2015 suite of evaluation tasks. The development of this task will provide a tool for researchers to evaluate performance of offset detection algorithms while establishing a baseline of performance for the current state-of-the-art. An existing offset detection algorithm will be utilized for testing prior to public release of the task in Summer 2015. Results of the public evaluation will be presented during the MIREX session at the 2015 International Society for Music Information Retrieval (ISMIR) conference, to be held 26-30 October 2015 in Malaga, Spain.", "authors": [{"name": "David Heise", "affiliation": "Lincoln University, Jefferson City, MO, USA"}, {"name": "Darrion Jarrell Long", "affiliation": "Lincoln University, Jefferson City, MO, USA"}], "tags": ["audio onset detection", "mirex", "music information retrieval", "audio offset detection", "sound event detection"]}, {"title": "Automatic Fall Detection Using Mobile Devices (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693636", "abstract": "Mobile devices are becoming an integrated part of every person's life regardless of age. Several studies have shown that falls account for over sixty percent of injuries in adults older than 65. These falls can leave permanent scars and limit the everyday lives of those people. Since people that fall are instructed not to move, it is crucial to provide them with a means to call for help. Systems like LifeAlert\u00a9 have provided means for their clients to call for assistance by pressing a button they wear around their neck. However, if a person who has fallen is rendered unconscious, they are unable to do anything to obtain the assistance they need. This project focuses on developing a mobile application and related algorithms to allow mobile devices to determine if a person has fallen. The algorithms developed in this project takes in real-time data from a smartphone's accelerator and determines whether the sequential readings satisfy the three stages of falling (the free fall stage, collision with the floor stage, and remaining at rest stage). The results of the experiments demonstrate promising hands-free responses to the smartphone user falling. By using a smartphone or similar device, it is possible to autonomously call for assistance without the user having to manually press a button.", "authors": [{"name": "Melissa Katherine Mulcahy", "affiliation": "Central Connecticut State University, New Britain, CT, USA"}], "tags": ["mobile devices", "android", "fall detection", "accelerometer"]}, {"title": "Web-based Application for Virtual Exercise Regimen (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693637", "abstract": "The WAVER (Web-based Application for Virtual Exercise Regimen) project takes advantage of available 3D motion technology to provide stroke patients with an inexpensive and more accessible alternative to conventional rehabilitation. Specifically, WAVER uses the LEAP device to assist patients who have mobility and dexterity limitations due to a stroke, disability, or even sports-related injury. Patients may face physical adversity in pursuing rehabilitation. Not all patients are conveniently distanced from a medical facility and may find that commuting daily worsens their pain, lightens their wallets, and forces them from the comfort of their homes as they deal with pain and circumstances affected by their disability. The WAVER solution to these problems is a web-based application that utilizes the 3D LEAP Motion sensory controller, which is an affordable and compact device that can be used by any home computer or laptop. WAVER presents exercises to a patient that can be performed by the patient in their own 3D space, which is then tracked by WAVER for on-screen feedback to the patient, as well as the potential to share the results remotely with a therapist.", "authors": [{"name": "Christina Noe", "affiliation": "The University of Alabama in Tuscaloosa, Tuscaloosa, AL, USA"}], "tags": ["web-based rehabilitation", "home-based rehabilitation", "medical applications of software", "motion tracking"]}, {"title": "Selection in 3D Graphics Enviornments (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693638", "abstract": "The level of detail portrayed in graphics environments is steadily increasing, and so does the challenge to enable users to accurately select 3D objects from a graphics scene in real time [2]. From a gaming perspective, complexity in computer graphics has increased drastically because thousands of users can now participate together in games that involve a high frequency of selecting objects. This poses a challenge because each three-dimensional object exists in a native, local coordinate system which will eventually be realistically displayed on a two-dimensional screen and then selected by users. Our project is broken down into two phases -- phase one will focus on the theory and mathematics behind these operations and phase two will evaluate the more efficient picking algorithm, ray casting [3] or color picking [4]. Our criteria for determining the better algorithm is to discover which algorithm is faster and more accurate in complex graphics scenes, with the ultimate goal of minimizing delay responses associated with selection.", "authors": [{"name": "Lindsey Press", "affiliation": "Villanova University, Villanova, PA, USA"}], "tags": ["graphics scenes", "picking algorithms", "ray casting", "color picking", "selection"]}, {"title": "Jumping Implementation in Video Games (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693639", "abstract": "Jumping has been a prevalent and versatile game mechanic from the early days of games like Donkey Kong to our own sophisticated era of smartphone games like Temple Run and entertainment industry giants like the Call of Duty series. While the physical activity of jumping itself seems simple, a lot can change in the translation of this action to its game counterpart. Jumping must serve to make the game playable and enjoyable, and so realism is sacrificed in order to facilitate the particular \"feel\" that the game developers desire for the physics of their game. This project is a study of jumping as a game mechanic and its implementation in video games, and includes a playable simulation program that allows for hands-on experience of different jump implementations that were studied.", "authors": [{"name": "James Vanderhyde", "affiliation": "Benedictine College, Atchison, KS, USA"}, {"name": "Joseph Rioux", "affiliation": "Benedictine College, Atchison, KS, USA"}], "tags": ["game mechanics", "video games", "platformer", "simulator", "jumping"]}, {"title": "The Backbone Project (Abstract Only)", "link": "https://dl.acm.org/doi/10.1145/2676723.2693640", "abstract": "It is well-known that software maintenance is an arduous task. It is particularly so because of poor design decisions made by software engineers during the development phase. Past research has shown that there are smells in the code that can be used to gauge the quality of the project. Nevertheless, code maintenance due to these research tools is still costly because they are focused on curative solutions rather than preventive measures.\nMajority of the past research techniques detect code smells after the fact; and the classification of code changes rely on the commit messages written by the developers. However, developers do not always mention the necessary meta-data to determine the changes. The goal of my research is to find a set of design and implementation change categories using abstract syntax trees from the code rather than the commit messages. The categories will help classify the common changes in software projects and identify the resulting unstable regions. A rule-based system will be developed using these regions to recommend the potential improvements required to stabilize the code-base.\nThe result of my research will contribute a toolset that will be used from the start of the development phase to evaluate the stability of the system using software metrics and recommend improvements. This will help project managers mitigate the design and implementation flaws early on during the product life-cycle and reduce the cost during the maintenance phase. Hence, the toolset will have the potential to change the software maintenance paradigm from corrective to preventative measures.", "authors": [{"name": "Dharmin Shah", "affiliation": "Rose-Hulman Institute of Technology, Terre Haute, IN, USA"}], "tags": ["software metrics", "software maintenance"]}]